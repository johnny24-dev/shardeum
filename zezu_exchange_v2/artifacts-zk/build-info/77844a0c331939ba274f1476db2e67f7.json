{"id":"77844a0c331939ba274f1476db2e67f7","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/beacon/BeaconProxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../Proxy.sol\";\nimport \"../ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n *\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n * conflict with the storage layout of the implementation behind the proxy.\n *\n * _Available since v3.4._\n */\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     */\n    constructor(address beacon, bytes memory data) payable {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n\n    /**\n     * @dev Returns the current beacon address.\n     */\n    function _beacon() internal view virtual returns (address) {\n        return _getBeacon();\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract.\n     * - The implementation returned by `beacon` must be a contract.\n     */\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/UpgradeableBeacon.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../../access/Ownable.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n * implementation contract, which is where they will delegate all function calls.\n *\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\n */\ncontract UpgradeableBeacon is IBeacon, Ownable {\n    address private _implementation;\n\n    /**\n     * @dev Emitted when the implementation returned by the beacon is changed.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n     * beacon.\n     */\n    constructor(address implementation_) {\n        _setImplementation(implementation_);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function implementation() public view virtual override returns (address) {\n        return _implementation;\n    }\n\n    /**\n     * @dev Upgrades the beacon to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * Requirements:\n     *\n     * - msg.sender must be the owner of the contract.\n     * - `newImplementation` must be a contract.\n     */\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Sets the implementation contract address for this beacon\n     *\n     * Requirements:\n     *\n     * - `newImplementation` must be a contract.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"UpgradeableBeacon: implementation is not a contract\");\n        _implementation = newImplementation;\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Proxy.sol\";\nimport \"./ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.3) (proxy/transparent/ProxyAdmin.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./TransparentUpgradeableProxy.sol\";\nimport \"../../access/Ownable.sol\";\n\n/**\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\n */\ncontract ProxyAdmin is Ownable {\n    /**\n     * @dev Returns the current implementation of `proxy`.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function getProxyImplementation(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\n        // We need to manually run the static call since the getter cannot be flagged as view\n        // bytes4(keccak256(\"implementation()\")) == 0x5c60da1b\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\"5c60da1b\");\n        require(success);\n        return abi.decode(returndata, (address));\n    }\n\n    /**\n     * @dev Returns the current admin of `proxy`.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function getProxyAdmin(ITransparentUpgradeableProxy proxy) public view virtual returns (address) {\n        // We need to manually run the static call since the getter cannot be flagged as view\n        // bytes4(keccak256(\"admin()\")) == 0xf851a440\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\"f851a440\");\n        require(success);\n        return abi.decode(returndata, (address));\n    }\n\n    /**\n     * @dev Changes the admin of `proxy` to `newAdmin`.\n     *\n     * Requirements:\n     *\n     * - This contract must be the current admin of `proxy`.\n     */\n    function changeProxyAdmin(ITransparentUpgradeableProxy proxy, address newAdmin) public virtual onlyOwner {\n        proxy.changeAdmin(newAdmin);\n    }\n\n    /**\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function upgrade(ITransparentUpgradeableProxy proxy, address implementation) public virtual onlyOwner {\n        proxy.upgradeTo(implementation);\n    }\n\n    /**\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function upgradeAndCall(\n        ITransparentUpgradeableProxy proxy,\n        address implementation,\n        bytes memory data\n    ) public payable virtual onlyOwner {\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\n    }\n}\n"},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1967/ERC1967Proxy.sol\";\n\n/**\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n * include them in the ABI so this interface must be used to interact with it.\n */\ninterface ITransparentUpgradeableProxy is IERC1967 {\n    function admin() external view returns (address);\n\n    function implementation() external view returns (address);\n\n    function changeAdmin(address) external;\n\n    function upgradeTo(address) external;\n\n    function upgradeToAndCall(address, bytes memory) external payable;\n}\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches one of the admin functions exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n * \"admin cannot fallback to proxy target\".\n *\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n * to sudden errors when trying to call a function from the proxy implementation.\n *\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n *\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n * implementation.\n *\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    /**\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\n     */\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\n        _changeAdmin(admin_);\n    }\n\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     *\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\n     * implementation provides a function with the same selector.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _getAdmin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\n     */\n    function _fallback() internal virtual override {\n        if (msg.sender == _getAdmin()) {\n            bytes memory ret;\n            bytes4 selector = msg.sig;\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\n                ret = _dispatchUpgradeTo();\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\n                ret = _dispatchUpgradeToAndCall();\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\n                ret = _dispatchChangeAdmin();\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\n                ret = _dispatchAdmin();\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\n                ret = _dispatchImplementation();\n            } else {\n                revert(\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\");\n            }\n            assembly {\n                return(add(ret, 0x20), mload(ret))\n            }\n        } else {\n            super._fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function _dispatchAdmin() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address admin = _getAdmin();\n        return abi.encode(admin);\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _dispatchImplementation() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address implementation = _implementation();\n        return abi.encode(implementation);\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _dispatchChangeAdmin() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address newAdmin = abi.decode(msg.data[4:], (address));\n        _changeAdmin(newAdmin);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     */\n    function _dispatchUpgradeTo() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address newImplementation = abi.decode(msg.data[4:], (address));\n        _upgradeToAndCall(newImplementation, bytes(\"\"), false);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     */\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n        _upgradeToAndCall(newImplementation, data, true);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\n     */\n    function _admin() internal view virtual returns (address) {\n        return _getAdmin();\n    }\n\n    /**\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\n     */\n    function _requireZeroValue() private {\n        require(msg.value == 0);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.2) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/Executor.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {Validation} from \"./Validation.sol\";\nimport \"./lib/Constants.sol\";\nimport {Order, Exchange, FungibleTransfers, StateUpdate, AtomicExecution, AssetType, Fees, FeeRate, Listing, Taker, Transfer, OrderType} from \"./lib/Structs.sol\";\nimport {IDelegate} from \"./interfaces/IDelegate.sol\";\nimport {IExecutor} from \"./interfaces/IExecutor.sol\";\n\nabstract contract Executor is IExecutor, Validation {\n    address private immutable _DELEGATE;\n    address private immutable _POOL;\n\n    constructor(\n        address delegate,\n        address pool\n    )\n        // address proxy\n        Validation()\n    {\n        _DELEGATE = delegate;\n        _POOL = pool;\n    }\n\n    receive() external payable {\n        if (msg.sender != _POOL) {\n            revert Unauthorized();\n        }\n    }\n\n    /**\n     * @notice Insert a validated ask listing into the batch if there's sufficient ETH to fulfill\n     * @param executionBatch Execution batch\n     * @param fungibleTransfers Fungible transfers\n     * @param order Order of the listing to insert\n     * @param exchange Exchange containing the listing to insert\n     * @param fees Protocol and taker fees\n     * @param remainingETH Available ETH remaining\n     * @return Available ETH remaining after insertion; if the listing was inserted in the batch\n     */\n    function _insertExecutionAsk(\n        bytes memory executionBatch,\n        FungibleTransfers memory fungibleTransfers,\n        Order memory order,\n        Exchange memory exchange,\n        Fees memory fees,\n        uint256 remainingETH\n    ) internal pure returns (uint256, bool) {\n        uint256 takerAmount = exchange.taker.amount;\n\n        (\n            uint256 totalPrice,\n            uint256 protocolFeeAmount,\n            uint256 makerFeeAmount,\n            uint256 takerFeeAmount\n        ) = _computeFees(\n                exchange.listing.price,\n                takerAmount,\n                order.makerFee,\n                fees\n            );\n\n        /* Only insert the executions if there are sufficient funds to execute. */\n        if (remainingETH >= totalPrice + takerFeeAmount) {\n            unchecked {\n                remainingETH = remainingETH - totalPrice - takerFeeAmount;\n            }\n\n            _setAddresses(fungibleTransfers, order);\n\n            uint256 index = _insertNonfungibleTransfer(\n                executionBatch,\n                order,\n                exchange.listing.tokenId,\n                takerAmount\n            );\n\n            _insertFungibleTransfers(\n                fungibleTransfers,\n                takerAmount,\n                exchange.listing,\n                bytes32(order.salt),\n                index,\n                totalPrice,\n                protocolFeeAmount,\n                makerFeeAmount,\n                takerFeeAmount,\n                true\n            );\n\n            return (remainingETH, true);\n        } else {\n            return (remainingETH, false);\n        }\n    }\n\n    /**\n     * @notice Insert a validated bid listing into the batch\n     * @param executionBatch Execution batch\n     * @param fungibleTransfers Fungible transfers\n     * @param order Order of the listing to insert\n     * @param exchange Exchange containing listing to insert\n     * @param fees Protocol and taker fees\n     */\n    function _insertExecutionBid(\n        bytes memory executionBatch,\n        FungibleTransfers memory fungibleTransfers,\n        Order memory order,\n        Exchange memory exchange,\n        Fees memory fees\n    ) internal pure {\n        uint256 takerAmount = exchange.taker.amount;\n\n        (\n            uint256 totalPrice,\n            uint256 protocolFeeAmount,\n            uint256 makerFeeAmount,\n            uint256 takerFeeAmount\n        ) = _computeFees(\n                exchange.listing.price,\n                takerAmount,\n                order.makerFee,\n                fees\n            );\n\n        _setAddresses(fungibleTransfers, order);\n\n        uint256 index = _insertNonfungibleTransfer(\n            executionBatch,\n            order,\n            exchange.taker.tokenId,\n            takerAmount\n        );\n\n        _insertFungibleTransfers(\n            fungibleTransfers,\n            takerAmount,\n            exchange.listing,\n            bytes32(order.salt),\n            index,\n            totalPrice,\n            protocolFeeAmount,\n            makerFeeAmount,\n            takerFeeAmount,\n            false\n        );\n    }\n\n    /**\n     * @notice Insert the nonfungible transfer into the batch\n     * @param executionBatch Execution batch\n     * @param order Order\n     * @param tokenId Token id\n     * @param amount Number of token units\n     * @return transferIndex Index of the transfer\n     */\n    function _insertNonfungibleTransfer(\n        bytes memory executionBatch,\n        Order memory order,\n        uint256 tokenId,\n        uint256 amount\n    ) internal pure returns (uint256 transferIndex) {\n        assembly {\n            let calldataPointer := add(\n                executionBatch,\n                ExecutionBatch_calldata_offset\n            )\n            transferIndex := mload(\n                add(calldataPointer, ExecutionBatch_length_offset)\n            )\n\n            let transfersOffset := mload(\n                add(calldataPointer, ExecutionBatch_transfers_pointer_offset)\n            )\n            let transferPointer := add(\n                add(calldataPointer, add(transfersOffset, One_word)),\n                mul(transferIndex, Transfer_size)\n            )\n            mstore(\n                add(transferPointer, Transfer_trader_offset),\n                mload(add(order, Order_trader_offset))\n            ) // set the trader\n            mstore(add(transferPointer, Transfer_id_offset), tokenId) // set the token id\n            mstore(\n                add(transferPointer, Transfer_collection_offset),\n                mload(add(order, Order_collection_offset))\n            ) // set the collection\n            mstore(\n                add(transferPointer, Transfer_assetType_offset),\n                mload(add(order, Order_assetType_offset))\n            ) // set the asset type\n            mstore(\n                add(calldataPointer, ExecutionBatch_length_offset),\n                add(transferIndex, 1)\n            ) // increment the batch length\n\n            if eq(\n                mload(add(order, Order_assetType_offset)),\n                AssetType_ERC1155\n            ) {\n                mstore(add(transferPointer, Transfer_amount_offset), amount) // set the amount (don't need to set for ERC721's)\n            }\n        }\n    }\n\n    /**\n     * @notice Insert the fungible transfers that need to be executed atomically\n     * @param fungibleTransfers Fungible transfers struct\n     * @param takerAmount Amount of the listing being taken\n     * @param listing Listing to execute\n     * @param orderHash Order hash\n     * @param index Execution index\n     * @param totalPrice Total price of the purchased tokens\n     * @param protocolFeeAmount Computed protocol fee\n     * @param makerFeeAmount Computed maker fee\n     * @param takerFeeAmount Computed taker fee\n     * @param makerIsSeller Is the order maker the seller\n     */\n    function _insertFungibleTransfers(\n        FungibleTransfers memory fungibleTransfers,\n        uint256 takerAmount,\n        Listing memory listing,\n        bytes32 orderHash,\n        uint256 index,\n        uint256 totalPrice,\n        uint256 protocolFeeAmount,\n        uint256 makerFeeAmount,\n        uint256 takerFeeAmount,\n        bool makerIsSeller\n    ) internal pure {\n        uint256 makerId = fungibleTransfers.makerId;\n        fungibleTransfers.executions[index].makerId = makerId;\n        fungibleTransfers\n            .executions[index]\n            .makerFeeRecipientId = fungibleTransfers.feeRecipientId;\n        fungibleTransfers.executions[index].stateUpdate = StateUpdate({\n            trader: fungibleTransfers.makers[makerId],\n            hash: orderHash,\n            index: listing.index,\n            value: takerAmount,\n            maxAmount: listing.amount\n        });\n        if (makerIsSeller) {\n            unchecked {\n                fungibleTransfers.executions[index].sellerAmount =\n                    totalPrice -\n                    protocolFeeAmount -\n                    makerFeeAmount;\n            }\n        } else {\n            unchecked {\n                fungibleTransfers.executions[index].sellerAmount =\n                    totalPrice -\n                    protocolFeeAmount -\n                    takerFeeAmount;\n            }\n        }\n        fungibleTransfers.executions[index].makerFeeAmount = makerFeeAmount;\n        fungibleTransfers.executions[index].takerFeeAmount = takerFeeAmount;\n        fungibleTransfers\n            .executions[index]\n            .protocolFeeAmount = protocolFeeAmount;\n    }\n\n    /**\n     * @notice Set the addresses of the maker fee recipient and order maker if different than currently being batched\n     * @param fungibleTransfers Fungible transfers struct\n     * @param order Parent order of listing being added to the batch\n     */\n    function _setAddresses(\n        FungibleTransfers memory fungibleTransfers,\n        Order memory order\n    ) internal pure {\n        address feeRecipient = order.makerFee.recipient;\n        uint256 feeRecipientId = fungibleTransfers.feeRecipientId;\n        address currentFeeRecipient = fungibleTransfers.feeRecipients[\n            feeRecipientId\n        ];\n        if (feeRecipient != currentFeeRecipient) {\n            if (currentFeeRecipient == address(0)) {\n                fungibleTransfers.feeRecipients[feeRecipientId] = feeRecipient;\n            } else {\n                unchecked {\n                    fungibleTransfers.feeRecipients[\n                        ++feeRecipientId\n                    ] = feeRecipient;\n                }\n                fungibleTransfers.feeRecipientId = feeRecipientId;\n            }\n        }\n        address trader = order.trader;\n        uint256 makerId = fungibleTransfers.makerId;\n        address currentTrader = fungibleTransfers.makers[makerId];\n        if (trader != currentTrader) {\n            if (currentTrader == address(0)) {\n                fungibleTransfers.makers[makerId] = trader;\n            } else {\n                unchecked {\n                    fungibleTransfers.makers[++makerId] = trader;\n                }\n                fungibleTransfers.makerId = makerId;\n            }\n        }\n    }\n\n    /**\n     * @notice Compute all necessary fees to be taken\n     * @param pricePerToken Price per token unit\n     * @param takerAmount Number of token units taken (should only be greater than 1 for ERC1155)\n     * @param fees Protocol and taker fee set by the transaction\n     */\n    function _computeFees(\n        uint256 pricePerToken,\n        uint256 takerAmount,\n        FeeRate memory makerFee,\n        Fees memory fees\n    )\n        internal\n        pure\n        returns (\n            uint256 totalPrice,\n            uint256 protocolFeeAmount,\n            uint256 makerFeeAmount,\n            uint256 takerFeeAmount\n        )\n    {\n        totalPrice = pricePerToken * takerAmount;\n        makerFeeAmount = (totalPrice * makerFee.rate) / _BASIS_POINTS;\n        takerFeeAmount = (totalPrice * fees.takerFee.rate) / _BASIS_POINTS;\n        protocolFeeAmount =\n            (totalPrice * fees.protocolFee.rate) /\n            _BASIS_POINTS;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        EXECUTION FUNCTIONS\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Execute the transfers by first attempting the nonfungible transfers, for the successful transfers sum the fungible transfers by the recipients and execute\n     * @param executionBatch Execution batch struct\n     * @param fungibleTransfers Fungible transfers struct\n     * @param fees Protocol, maker, taker fees (note: makerFee will be inaccurate at this point in execution)\n     * @param orderType Order type\n     */\n    function _executeBatchTransfer(\n        bytes memory executionBatch,\n        FungibleTransfers memory fungibleTransfers,\n        Fees memory fees,\n        OrderType orderType\n    ) internal {\n        uint256 batchLength;\n        assembly {\n            let calldataPointer := add(\n                executionBatch,\n                ExecutionBatch_calldata_offset\n            )\n            batchLength := mload(\n                add(calldataPointer, ExecutionBatch_length_offset)\n            )\n        }\n        if (batchLength > 0) {\n            bool[] memory successfulTransfers = _executeNonfungibleTransfers(\n                executionBatch,\n                batchLength\n            );\n\n            uint256 transfersLength = successfulTransfers.length;\n            for (uint256 i; i < transfersLength; ) {\n                if (successfulTransfers[i]) {\n                    AtomicExecution memory execution = fungibleTransfers\n                        .executions[i];\n                    FeeRate memory makerFee;\n                    uint256 price;\n                    unchecked {\n                        if (orderType == OrderType.ASK) {\n                            fungibleTransfers.makerTransfers[\n                                execution.makerId\n                            ] += execution.sellerAmount; // amount that needs to be sent *to* the order maker\n                            price =\n                                execution.sellerAmount +\n                                execution.protocolFeeAmount +\n                                execution.makerFeeAmount;\n                        } else {\n                            fungibleTransfers.makerTransfers[\n                                execution.makerId\n                            ] +=\n                                execution.protocolFeeAmount +\n                                execution.makerFeeAmount +\n                                execution.takerFeeAmount +\n                                execution.sellerAmount; // amount that needs to be taken *from* the order maker\n                            price =\n                                execution.sellerAmount +\n                                execution.protocolFeeAmount +\n                                execution.takerFeeAmount;\n                        }\n                        fungibleTransfers.totalSellerTransfer += execution\n                            .sellerAmount; // only for bids\n                        fungibleTransfers.totalProtocolFee += execution\n                            .protocolFeeAmount;\n                        fungibleTransfers.totalTakerFee += execution\n                            .takerFeeAmount;\n                        fungibleTransfers.feeTransfers[\n                            execution.makerFeeRecipientId\n                        ] += execution.makerFeeAmount;\n                        makerFee = FeeRate(\n                            fungibleTransfers.feeRecipients[\n                                execution.makerFeeRecipientId\n                            ],\n                            uint16(\n                                (execution.makerFeeAmount * _BASIS_POINTS) /\n                                    price\n                            )\n                        );\n                    }\n\n                    /* Commit state updates. */\n                    StateUpdate memory stateUpdate = fungibleTransfers\n                        .executions[i]\n                        .stateUpdate;\n                    {\n                        address trader = stateUpdate.trader;\n                        bytes32 hash = stateUpdate.hash;\n                        uint256 index = stateUpdate.index;\n                        uint256 _amountTaken = amountTaken[trader][hash][index];\n                        uint256 newAmountTaken = _amountTaken +\n                            stateUpdate.value;\n\n                        /* Overfulfilled Listings should be caught prior to inserting into the batch, but this check prevents any misuse. */\n                        if (newAmountTaken <= stateUpdate.maxAmount) {\n                            amountTaken[trader][hash][index] = newAmountTaken;\n                        } else {\n                            revert OrderFulfilled();\n                        }\n                    }\n\n                    _emitExecutionEventFromBatch(\n                        executionBatch,\n                        price,\n                        makerFee,\n                        fees,\n                        stateUpdate,\n                        orderType,\n                        i\n                    );\n                }\n\n                unchecked {\n                    ++i;\n                }\n            }\n\n            if (orderType == OrderType.ASK) {\n                /* Transfer the payments to the sellers. */\n                uint256 makersLength = fungibleTransfers.makerId + 1;\n                for (uint256 i; i < makersLength; ) {\n                    _transferETH(\n                        fungibleTransfers.makers[i],\n                        fungibleTransfers.makerTransfers[i]\n                    );\n                    unchecked {\n                        ++i;\n                    }\n                }\n\n                /* Transfer the fees to the fee recipients. */\n                uint256 feesLength = fungibleTransfers.feeRecipientId + 1;\n                for (uint256 i; i < feesLength; ) {\n                    _transferETH(\n                        fungibleTransfers.feeRecipients[i],\n                        fungibleTransfers.feeTransfers[i]\n                    );\n                    unchecked {\n                        ++i;\n                    }\n                }\n\n                /* Transfer the protocol fees. */\n                _transferETH(\n                    fees.protocolFee.recipient,\n                    fungibleTransfers.totalProtocolFee\n                );\n\n                /* Transfer the taker fees. */\n                _transferETH(\n                    fees.takerFee.recipient,\n                    fungibleTransfers.totalTakerFee\n                );\n            } else {\n                /* Take the pool funds from the buyers. */\n                uint256 makersLength = fungibleTransfers.makerId + 1;\n                for (uint256 i; i < makersLength; ) {\n                    _transferPool(\n                        fungibleTransfers.makers[i],\n                        address(this),\n                        fungibleTransfers.makerTransfers[i]\n                    );\n                    unchecked {\n                        ++i;\n                    }\n                }\n\n                /* Transfer the payment to the seller. */\n                _transferPool(\n                    address(this),\n                    msg.sender,\n                    fungibleTransfers.totalSellerTransfer\n                );\n\n                /* Transfer the fees to the fee recipients. */\n                uint256 feesLength = fungibleTransfers.feeRecipientId + 1;\n                for (uint256 i; i < feesLength; ) {\n                    _transferPool(\n                        address(this),\n                        fungibleTransfers.feeRecipients[i],\n                        fungibleTransfers.feeTransfers[i]\n                    );\n                    unchecked {\n                        ++i;\n                    }\n                }\n\n                /* Transfer the protocol fees. */\n                _transferPool(\n                    address(this),\n                    fees.protocolFee.recipient,\n                    fungibleTransfers.totalProtocolFee\n                );\n\n                /* Transfer the taker fees. */\n                _transferPool(\n                    address(this),\n                    fees.takerFee.recipient,\n                    fungibleTransfers.totalTakerFee\n                );\n            }\n        }\n    }\n\n    /**\n     * @notice Attempt to execute a series of nonfungible transfers through the delegate; reverts will be skipped\n     * @param executionBatch Execution batch struct\n     * @param batchIndex Current available transfer slot in the batch\n     * @return Array indicating which transfers were successful\n     */\n    function _executeNonfungibleTransfers(\n        bytes memory executionBatch,\n        uint256 batchIndex\n    ) internal returns (bool[] memory) {\n        address delegate = _DELEGATE;\n\n        /* Initialize the memory space for the successful transfers array returned from the Delegate call. */\n        uint256 successfulTransfersPointer;\n        assembly {\n            successfulTransfersPointer := mload(Memory_pointer)\n            /* Need to shift the free memory pointer ahead one word to account for the array pointer returned from the call. */\n            mstore(Memory_pointer, add(successfulTransfersPointer, One_word))\n        }\n\n        bool[] memory successfulTransfers = new bool[](batchIndex);\n        assembly {\n            let size := mload(executionBatch)\n            let selectorPointer := add(\n                executionBatch,\n                ExecutionBatch_selector_offset\n            )\n            mstore(\n                selectorPointer,\n                shr(Bytes4_shift, Delegate_transfer_selector)\n            )\n            let success := call(\n                gas(),\n                delegate,\n                0,\n                add(selectorPointer, Delegate_transfer_calldata_offset),\n                sub(size, Delegate_transfer_calldata_offset),\n                successfulTransfersPointer,\n                add(0x40, mul(batchIndex, One_word))\n            )\n        }\n        return successfulTransfers;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        TRANSFER FUNCTIONS\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Transfer ETH\n     * @param to Recipient address\n     * @param amount Amount of ETH to send\n     */\n    function _transferETH(address to, uint256 amount) internal {\n        if (amount > 0) {\n            bool success;\n            assembly {\n                success := call(gas(), to, amount, 0, 0, 0, 0)\n            }\n            if (!success) {\n                revert ETHTransferFailed();\n            }\n        }\n    }\n\n    /**\n     * @notice Transfer pool funds on behalf of a user\n     * @param from Sender address\n     * @param to Recipient address\n     * @param amount Amount to send\n     */\n    function _transferPool(address from, address to, uint256 amount) internal {\n        if (amount > 0) {\n            bool success;\n            address pool = _POOL;\n            assembly {\n                let x := mload(Memory_pointer)\n                mstore(x, ERC20_transferFrom_selector)\n                mstore(add(x, ERC20_transferFrom_from_offset), from)\n                mstore(add(x, ERC20_transferFrom_to_offset), to)\n                mstore(add(x, ERC20_transferFrom_amount_offset), amount)\n                success := call(\n                    gas(),\n                    pool,\n                    0,\n                    x,\n                    ERC20_transferFrom_size,\n                    0,\n                    0\n                )\n            }\n            if (!success) {\n                revert PoolTransferFailed();\n            }\n        }\n    }\n\n    /**\n     * @notice Deposit ETH to user's pool funds\n     * @param to Recipient address\n     * @param amount Amount of ETH to deposit\n     */\n    function _depositPool(address to, uint256 amount) internal {\n        bool success;\n        address pool = _POOL;\n        assembly {\n            let x := mload(Memory_pointer)\n            mstore(x, Pool_deposit_selector)\n            mstore(add(x, Pool_deposit_user_offset), to)\n            success := call(gas(), pool, amount, x, Pool_deposit_size, 0, 0)\n        }\n        if (!success) {\n            revert PoolDepositFailed();\n        }\n    }\n\n    /**\n     * @notice Withdraw ETH from user's pool funds\n     * @param from Address to withdraw from\n     * @param amount Amount of ETH to withdraw\n     */\n    function _withdrawFromPool(address from, uint256 amount) internal {\n        bool success;\n        address pool = _POOL;\n        assembly {\n            let x := mload(Memory_pointer)\n            mstore(x, Pool_withdrawFrom_selector)\n            mstore(add(x, Pool_withdrawFrom_from_offset), from)\n            mstore(add(x, Pool_withdrawFrom_to_offset), address())\n            mstore(add(x, Pool_withdrawFrom_amount_offset), amount)\n            success := call(gas(), pool, 0, x, Pool_withdrawFrom_size, 0, 0)\n        }\n        if (!success) {\n            revert PoolWithdrawFromFailed();\n        }\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                          EVENT EMITTERS\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Emit Execution event from a single execution\n     * @param executionBatch Execution batch struct\n     * @param price Price of the token purchased\n     * @param fees Protocol, maker, and taker fees taken\n     * @param stateUpdate Fulfillment to be recorded with a successful execution\n     * @param orderType Order type\n     * @param transferIndex Index of the transfer corresponding to the execution\n     */\n    function _emitExecutionEventFromBatch(\n        bytes memory executionBatch,\n        uint256 price,\n        FeeRate memory makerFee,\n        Fees memory fees,\n        StateUpdate memory stateUpdate,\n        OrderType orderType,\n        uint256 transferIndex\n    ) internal {\n        Transfer memory transfer;\n        assembly {\n            let calldataPointer := add(\n                executionBatch,\n                ExecutionBatch_calldata_offset\n            )\n            let transfersOffset := mload(\n                add(calldataPointer, ExecutionBatch_transfers_pointer_offset)\n            )\n            transfer := add(\n                add(calldataPointer, add(transfersOffset, One_word)),\n                mul(transferIndex, Transfer_size)\n            )\n        }\n\n        _emitOptimalExecutionEvent(\n            transfer,\n            stateUpdate.hash,\n            stateUpdate.index,\n            price,\n            makerFee,\n            fees,\n            orderType\n        );\n    }\n\n    /**\n     * @notice Emit the Execution event that minimizes the number of bytes in the log\n     * @param transfer The nft transfer\n     * @param orderHash Order hash\n     * @param listingIndex Index of the listing being fulfilled within the order\n     * @param price Price of the token purchased\n     * @param makerFee Maker fees taken\n     * @param fees Protocol, and taker fees taken\n     * @param orderType Order type\n     */\n    function _emitOptimalExecutionEvent(\n        Transfer memory transfer,\n        bytes32 orderHash,\n        uint256 listingIndex,\n        uint256 price,\n        FeeRate memory makerFee,\n        Fees memory fees,\n        OrderType orderType\n    ) internal {\n        if (\n            // see _insertNonfungibleTransfer; ERC721 transfers don't set the transfer amount,\n            // so we can assume the transfer amount and not check it\n            transfer.assetType == AssetType.ERC721 &&\n            fees.protocolFee.rate == 0 &&\n            transfer.id < 1 << (11 * 8) &&\n            listingIndex < 1 << (1 * 8) &&\n            price < 1 << (11 * 8)\n        ) {\n            if (makerFee.rate == 0 && fees.takerFee.rate == 0) {\n                emit Execution721Packed(\n                    orderHash,\n                    packTokenIdListingIndexTrader(\n                        transfer.id,\n                        listingIndex,\n                        transfer.trader\n                    ),\n                    packTypePriceCollection(\n                        orderType,\n                        price,\n                        transfer.collection\n                    )\n                );\n                return;\n            } else if (makerFee.rate == 0) {\n                emit Execution721TakerFeePacked(\n                    orderHash,\n                    packTokenIdListingIndexTrader(\n                        transfer.id,\n                        listingIndex,\n                        transfer.trader\n                    ),\n                    packTypePriceCollection(\n                        orderType,\n                        price,\n                        transfer.collection\n                    ),\n                    packFee(fees.takerFee)\n                );\n                return;\n            } else if (fees.takerFee.rate == 0) {\n                emit Execution721MakerFeePacked(\n                    orderHash,\n                    packTokenIdListingIndexTrader(\n                        transfer.id,\n                        listingIndex,\n                        transfer.trader\n                    ),\n                    packTypePriceCollection(\n                        orderType,\n                        price,\n                        transfer.collection\n                    ),\n                    packFee(makerFee)\n                );\n                return;\n            }\n        }\n\n        emit Execution({\n            transfer: transfer,\n            orderHash: orderHash,\n            listingIndex: listingIndex,\n            price: price,\n            makerFee: makerFee,\n            fees: fees,\n            orderType: orderType\n        });\n    }\n\n    /**\n     * @notice Emit Execution event from a single execution\n     * @param executionBatch Execution batch struct\n     * @param order Order being fulfilled\n     * @param listingIndex Index of the listing being fulfilled within the order\n     * @param price Price of the token purchased\n     * @param fees Protocol, and taker fees taken\n     * @param orderType Order type\n     */\n    function _emitExecutionEvent(\n        bytes memory executionBatch,\n        Order memory order,\n        uint256 listingIndex,\n        uint256 price,\n        Fees memory fees,\n        OrderType orderType\n    ) internal {\n        Transfer memory transfer;\n        assembly {\n            let calldataPointer := add(\n                executionBatch,\n                ExecutionBatch_calldata_offset\n            )\n            let transfersOffset := mload(\n                add(calldataPointer, ExecutionBatch_transfers_pointer_offset)\n            )\n            transfer := add(calldataPointer, add(transfersOffset, One_word))\n        }\n\n        _emitOptimalExecutionEvent(\n            transfer,\n            bytes32(order.salt),\n            listingIndex,\n            price,\n            order.makerFee,\n            fees,\n            orderType\n        );\n    }\n\n    function packTokenIdListingIndexTrader(\n        uint256 tokenId,\n        uint256 listingIndex,\n        address trader\n    ) private pure returns (uint256) {\n        return\n            (tokenId << (21 * 8)) |\n            (listingIndex << (20 * 8)) |\n            uint160(trader);\n    }\n\n    function packTypePriceCollection(\n        OrderType orderType,\n        uint256 price,\n        address collection\n    ) private pure returns (uint256) {\n        return\n            (uint256(orderType) << (31 * 8)) |\n            (price << (20 * 8)) |\n            uint160(collection);\n    }\n\n    function packFee(FeeRate memory fee) private pure returns (uint256) {\n        return (uint256(fee.rate) << (20 * 8)) | uint160(fee.recipient);\n    }\n\n    function _emitExecutionAcceptCollectionOffer(\n        bytes32 offerCollectionHash,\n        address accepter,\n        address bidder,\n        Listing memory listing,\n        uint256 remaining\n    ) internal {\n        emit ExecutionAcceptCollectionOffer(\n            offerCollectionHash,\n            accepter,\n            bidder,\n            listing.tokenId,\n            listing.amount,\n            listing.price,\n            remaining\n        );\n    }\n\n    uint256[50] private __gap;\n}\n"},"contracts/interfaces/IDelegate.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport { AssetType, OrderType, Transfer } from \"../lib/Structs.sol\";\n\ninterface IDelegate {\n    function transfer(\n        address caller,\n        OrderType orderType,\n        Transfer[] calldata transfers,\n        uint256 length\n    ) external returns (bool[] memory successful);\n}\n"},"contracts/interfaces/IExecutor.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {\n    Fees,\n    FeeRate,\n    Transfer,\n    OrderType\n} from \"../lib/Structs.sol\";\n\ninterface IExecutor {\n    error ETHTransferFailed();\n    error PoolTransferFailed();\n    error PoolWithdrawFromFailed();\n    error PoolDepositFailed();\n    error OrderFulfilled();\n\n    event Execution(\n        Transfer transfer,\n        bytes32 orderHash,\n        uint256 listingIndex,\n        uint256 price,\n        FeeRate makerFee,\n        Fees fees,\n        OrderType orderType\n    );\n\n    event ExecutionAcceptCollectionOffer(\n        bytes32 offerCollectionHash,\n        address accepter,\n        address bidder,\n        uint256 tokenId,\n        uint256 amount,\n        uint256 pricePerItem,\n        uint256 remaining\n    );\n\n    event Execution721Packed(\n        bytes32 orderHash,\n        uint256 tokenIdListingIndexTrader,\n        uint256 collectionPriceSide\n    );\n\n    event Execution721TakerFeePacked(\n        bytes32 orderHash,\n        uint256 tokenIdListingIndexTrader,\n        uint256 collectionPriceSide,\n        uint256 takerFeeRecipientRate\n    );\n\n    event Execution721MakerFeePacked(\n        bytes32 orderHash,\n        uint256 tokenIdListingIndexTrader,\n        uint256 collectionPriceSide,\n        uint256 makerFeeRecipientRate\n    );\n}\n"},"contracts/interfaces/ISignatures.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {TakeAsk, TakeBid, TakeAskSingle, TakeBidSingle, Order, OrderType, Listing} from \"../lib/Structs.sol\";\n\ninterface ISignatures {\n    error Unauthorized();\n    error ExpiredOracleSignature();\n    error UnauthorizedOracle();\n    error InvalidOracleSignature();\n    error InvalidDomain();\n\n    function oracles(address oracle) external view returns (uint256);\n\n    function nonces(address user) external view returns (uint256);\n\n    function blockRange() external view returns (uint256);\n\n    function verifyDomain() external view;\n\n    function information()\n        external\n        view\n        returns (string memory version, bytes32 domainSeparator);\n\n    function hashListing(\n        Listing memory listing\n    ) external pure returns (bytes32);\n\n    function hashOrder(\n        Order memory order,\n        OrderType orderType\n    ) external view returns (bytes32);\n\n    function hashOfferCollection(\n        Order memory order,\n        OrderType orderType,\n        uint256 pricePerItem\n    ) external view returns (bytes32);\n    // function hashTakeAsk(TakeAsk memory inputs, address _caller) external pure returns (bytes32);\n    // function hashTakeBid(TakeBid memory inputs, address _caller) external pure returns (bytes32);\n    // function hashTakeAskSingle(TakeAskSingle memory inputs, address _caller) external pure returns (bytes32);\n    // function hashTakeBidSingle(TakeBidSingle memory inputs, address _caller) external pure returns (bytes32);\n}\n"},"contracts/interfaces/IValidation.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport { FeeRate } from \"../lib/Structs.sol\";\n\ninterface IValidation {\n    function protocolFee() external view returns (address, uint16);\n\n    function amountTaken(address user, bytes32 hash, uint256 listingIndex) external view returns (uint256);\n}\n"},"contracts/interfaces/IZeZuExchange.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {TakeAsk, TakeBid, TakeAskSingle, TakeBidSingle, Order, Exchange, Fees, FeeRate, AssetType, OrderType, Transfer, FungibleTransfers, StateUpdate, Cancel, Listing, TakeCollectionOffer} from \"../lib/Structs.sol\";\n\ninterface IZeZuExchange {\n    error InsufficientFunds();\n    error TokenTransferFailed();\n    error InvalidOrder();\n    error ProtocolFeeTooHigh();\n\n    event NewProtocolFee(address indexed recipient, uint16 indexed rate);\n    event NewGovernor(address indexed governor);\n    event NewBlockRange(uint256 blockRange);\n    event CancelTrade(\n        address indexed user,\n        bytes32 hash,\n        uint256 index,\n        uint256 amount\n    );\n    event NonceIncremented(address indexed user, uint256 newNonce);\n    event SetOracle(address indexed user, bool approved);\n\n    // function initialize() external;\n\n    function setProtocolFee(address recipient, uint16 rate) external;\n\n    function setGovernor(address _governor) external;\n\n    // function setOracle(address oracle, bool approved) external;\n\n    // function setBlockRange(uint256 _blockRange) external;\n\n    function cancelTrades(Cancel[] memory cancels) external;\n\n    function incrementNonce() external;\n\n    /*//////////////////////////////////////////////////////////////\n                          EXECUTION WRAPPERS\n    //////////////////////////////////////////////////////////////*/\n\n    function takeAsk(TakeAsk memory inputs) external payable;\n\n    function takeBid(TakeBid memory inputs) external;\n\n    function takeAskSingle(TakeAskSingle memory inputs) external payable;\n\n    function takeBidSingle(TakeBidSingle memory inputs) external;\n\n    function takeCollectionOffer(TakeCollectionOffer memory input) external;\n\n    /*//////////////////////////////////////////////////////////////\n                        EXECUTION POOL WRAPPERS\n    //////////////////////////////////////////////////////////////*/\n\n    function takeAskSinglePool(\n        TakeAskSingle memory inputs,\n        uint256 amountToWithdraw\n    ) external payable;\n\n    function takeAskPool(\n        TakeAsk memory inputs,\n        uint256 amountToWithdraw\n    ) external payable;\n}\n"},"contracts/lib/Constants.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nuint256 constant Bytes1_shift = 0xf8;\nuint256 constant Bytes4_shift = 0xe0;\nuint256 constant Bytes20_shift = 0x60;\nuint256 constant One_word = 0x20;\n\nuint256 constant Memory_pointer = 0x40;\n\nuint256 constant AssetType_ERC721 = 0;\nuint256 constant AssetType_ERC1155 = 1;\n\nuint256 constant OrderType_ASK = 0;\nuint256 constant OrderType_BID = 1;\n\nuint256 constant Pool_withdrawFrom_selector = 0x9555a94200000000000000000000000000000000000000000000000000000000;\nuint256 constant Pool_withdrawFrom_from_offset = 0x04;\nuint256 constant Pool_withdrawFrom_to_offset = 0x24;\nuint256 constant Pool_withdrawFrom_amount_offset = 0x44;\nuint256 constant Pool_withdrawFrom_size = 0x64;\n\nuint256 constant Pool_deposit_selector = 0xf340fa0100000000000000000000000000000000000000000000000000000000;\nuint256 constant Pool_deposit_user_offset = 0x04;\nuint256 constant Pool_deposit_size = 0x24;\n\nuint256 constant ERC20_transferFrom_selector = 0x23b872dd00000000000000000000000000000000000000000000000000000000;\nuint256 constant ERC721_safeTransferFrom_selector = 0x42842e0e00000000000000000000000000000000000000000000000000000000;\nuint256 constant ERC1155_safeTransferFrom_selector = 0xf242432a00000000000000000000000000000000000000000000000000000000;\nuint256 constant ERC20_transferFrom_size = 0x64;\nuint256 constant ERC721_safeTransferFrom_size = 0x64;\nuint256 constant ERC1155_safeTransferFrom_size = 0xc4;\n\nuint256 constant OracleSignatures_size = 0x59;\nuint256 constant OracleSignatures_s_offset = 0x20;\nuint256 constant OracleSignatures_v_offset = 0x40;\nuint256 constant OracleSignatures_blockNumber_offset = 0x41;\nuint256 constant OracleSignatures_oracle_offset = 0x45;\n\nuint256 constant Signatures_size = 0x41;\nuint256 constant Signatures_s_offset = 0x20;\nuint256 constant Signatures_v_offset = 0x40;\n\nuint256 constant ERC20_transferFrom_from_offset = 0x4;\nuint256 constant ERC20_transferFrom_to_offset = 0x24;\nuint256 constant ERC20_transferFrom_amount_offset = 0x44;\n\nuint256 constant ERC721_safeTransferFrom_from_offset = 0x4;\nuint256 constant ERC721_safeTransferFrom_to_offset = 0x24;\nuint256 constant ERC721_safeTransferFrom_id_offset = 0x44;\n\nuint256 constant ERC1155_safeTransferFrom_from_offset = 0x4;\nuint256 constant ERC1155_safeTransferFrom_to_offset = 0x24;\nuint256 constant ERC1155_safeTransferFrom_id_offset = 0x44;\nuint256 constant ERC1155_safeTransferFrom_amount_offset = 0x64;\nuint256 constant ERC1155_safeTransferFrom_data_pointer_offset = 0x84;\nuint256 constant ERC1155_safeTransferFrom_data_offset = 0xa4;\n\nuint256 constant Delegate_transfer_selector = 0xa1ccb98e00000000000000000000000000000000000000000000000000000000;\nuint256 constant Delegate_transfer_calldata_offset = 0x1c;\n\nuint256 constant Order_size = 0x100;\nuint256 constant Order_trader_offset = 0x00;\nuint256 constant Order_collection_offset = 0x20;\nuint256 constant Order_listingsRoot_offset = 0x40;\nuint256 constant Order_numberOfListings_offset = 0x60;\nuint256 constant Order_expirationTime_offset = 0x80;\nuint256 constant Order_assetType_offset = 0xa0;\nuint256 constant Order_makerFee_offset = 0xc0;\nuint256 constant Order_salt_offset = 0xe0;\n\nuint256 constant Exchange_size = 0x80;\nuint256 constant Exchange_askIndex_offset = 0x00;\nuint256 constant Exchange_proof_offset = 0x20;\nuint256 constant Exchange_maker_offset = 0x40;\nuint256 constant Exchange_taker_offset = 0x60;\n\nuint256 constant BidExchange_size = 0x80;\nuint256 constant BidExchange_askIndex_offset = 0x00;\nuint256 constant BidExchange_proof_offset = 0x20;\nuint256 constant BidExchange_maker_offset = 0x40;\nuint256 constant BidExchange_taker_offset = 0x60;\n\nuint256 constant Listing_size = 0x80;\nuint256 constant Listing_index_offset = 0x00;\nuint256 constant Listing_tokenId_offset = 0x20;\nuint256 constant Listing_amount_offset = 0x40;\nuint256 constant Listing_price_offset = 0x60;\n\nuint256 constant Taker_size = 0x40;\nuint256 constant Taker_tokenId_offset = 0x00;\nuint256 constant Taker_amount_offset = 0x20;\n\nuint256 constant StateUpdate_size = 0x80;\nuint256 constant StateUpdate_salt_offset = 0x20;\nuint256 constant StateUpdate_leaf_offset = 0x40;\nuint256 constant StateUpdate_value_offset = 0x60;\n\nuint256 constant Transfer_size = 0xa0;\nuint256 constant Transfer_trader_offset = 0x00;\nuint256 constant Transfer_id_offset = 0x20;\nuint256 constant Transfer_amount_offset = 0x40;\nuint256 constant Transfer_collection_offset = 0x60;\nuint256 constant Transfer_assetType_offset = 0x80;\n\nuint256 constant ExecutionBatch_selector_offset = 0x20;\nuint256 constant ExecutionBatch_calldata_offset = 0x40;\nuint256 constant ExecutionBatch_base_size = 0xa0; // size of the executionBatch without the flattened dynamic elements\nuint256 constant ExecutionBatch_taker_offset = 0x00;\nuint256 constant ExecutionBatch_orderType_offset = 0x20;\nuint256 constant ExecutionBatch_transfers_pointer_offset = 0x40;\nuint256 constant ExecutionBatch_length_offset = 0x60;\nuint256 constant ExecutionBatch_transfers_offset = 0x80;\n"},"contracts/lib/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.17;\n\n/// @notice Upgradeable gas optimized reentrancy protection for smart contracts.\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/ReentrancyGuard.sol)\nabstract contract ReentrancyGuardUpgradeable {\n    uint256 private locked;\n\n    function __Reentrancy_init() internal {\n        locked = 1;\n    }\n\n    modifier nonReentrant() virtual {\n        require(locked == 1, \"REENTRANCY\");\n\n        locked = 2;\n\n        _;\n\n        locked = 1;\n    }\n\n    uint256[49] private __gap;\n}\n"},"contracts/lib/Structs.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nstruct TakeAsk {\n    Order[] orders;\n    Exchange[] exchanges;\n    FeeRate takerFee;\n    bytes signatures;\n    address tokenRecipient;\n}\n\nstruct TakeAskSingle {\n    Order order;\n    Exchange exchange;\n    FeeRate takerFee;\n    bytes signature;\n    address tokenRecipient;\n}\n\nstruct TakeBid {\n    Order[] orders;\n    Exchange[] exchanges;\n    FeeRate takerFee;\n    bytes signatures;\n}\n\n\nstruct TakeCollectionOffer {\n    Order order;\n    Listing listing;\n    FeeRate takerFee;\n    bytes signature;\n}\n\nstruct TakeBidSingle {\n    Order order;\n    Exchange exchange;\n    FeeRate takerFee;\n    bytes signature;\n}\n\nenum AssetType {\n    ERC721,\n    ERC1155\n}\n\nenum OrderType {\n    ASK,\n    BID,\n    OFFER_COLLECTION\n}\n\nstruct Exchange { // Size: 0x80\n    uint256 index; // 0x00\n    bytes32[] proof; // 0x20\n    Listing listing; // 0x40\n    Taker taker; // 0x60\n}\n\nstruct Listing { // Size: 0x80\n    uint256 index; // 0x00\n    uint256 tokenId; // 0x20\n    uint256 amount; // 0x40\n    uint256 price; // 0x60\n}\n\nstruct Taker { // Size: 0x40\n    uint256 tokenId; // 0x00\n    uint256 amount; // 0x20\n}\n\nstruct Order { // Size: 0x100\n    address trader; // 0x00\n    address collection; // 0x20\n    bytes32 listingsRoot; // 0x40\n    uint256 numberOfListings; // 0x60\n    uint256 expirationTime; // 0x80\n    AssetType assetType; // 0xa0\n    FeeRate makerFee; // 0xc0\n    uint256 salt; // 0xe0\n}\n\n/*\nReference only; struct is composed manually using calldata formatting in execution\nstruct ExecutionBatch { // Size: 0x80\n    address taker; // 0x00\n    OrderType orderType; // 0x20\n    Transfer[] transfers; // 0x40\n    uint256 length; // 0x60\n}\n*/\n\nstruct Transfer { // Size: 0xa0\n    address trader; // 0x00\n    uint256 id; // 0x20\n    uint256 amount; // 0x40\n    address collection; // 0x60\n    AssetType assetType; // 0x80\n}\n\nstruct FungibleTransfers {\n    uint256 totalProtocolFee;\n    uint256 totalSellerTransfer;\n    uint256 totalTakerFee;\n    uint256 feeRecipientId;\n    uint256 makerId;\n    address[] feeRecipients;\n    address[] makers;\n    uint256[] makerTransfers;\n    uint256[] feeTransfers;\n    AtomicExecution[] executions;\n}\n\nstruct AtomicExecution { // Size: 0xe0\n    uint256 makerId; // 0x00\n    uint256 sellerAmount; // 0x20\n    uint256 makerFeeRecipientId; // 0x40\n    uint256 makerFeeAmount; // 0x60\n    uint256 takerFeeAmount; // 0x80\n    uint256 protocolFeeAmount; // 0xa0\n    StateUpdate stateUpdate; // 0xc0\n}\n\nstruct StateUpdate { // Size: 0xa0\n    address trader; // 0x00\n    bytes32 hash; // 0x20\n    uint256 index; // 0x40\n    uint256 value; // 0x60\n    uint256 maxAmount; // 0x80\n}\n\nstruct Fees { // Size: 0x40\n    FeeRate protocolFee; // 0x00\n    FeeRate takerFee; // 0x20\n}\n\nstruct FeeRate { // Size: 0x40\n    address recipient; // 0x00\n    uint16 rate; // 0x20\n}\n\nstruct Cancel {\n    bytes32 hash;\n    uint256 index;\n    uint256 amount;\n}\n"},"contracts/Signatures.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport \"./lib/Constants.sol\";\nimport {TakeAsk, TakeBid, TakeAskSingle, TakeBidSingle, FeeRate, Order, OrderType, AssetType, Listing} from \"./lib/Structs.sol\";\nimport {ISignatures} from \"./interfaces/ISignatures.sol\";\n\nabstract contract Signatures is ISignatures {\n    string private constant _NAME = \"ZeZu Exchange\";\n    string private constant _VERSION = \"1.0\";\n\n    bytes32 private immutable _FEE_RATE_TYPEHASH;\n    bytes32 private immutable _ORDER_TYPEHASH;\n    bytes32 private immutable _OFFER_COLLECTION_TYPEHASH;\n    bytes32 public immutable _DOMAIN_SEPARATOR;\n\n    mapping(address => uint256) public oracles;\n    mapping(address => uint256) public nonces;\n    uint256 public blockRange;\n\n    constructor() {\n        (\n            _FEE_RATE_TYPEHASH,\n            _ORDER_TYPEHASH,\n            _OFFER_COLLECTION_TYPEHASH,\n            _DOMAIN_SEPARATOR\n        ) = _createTypehashes();\n    }\n\n    /**\n     * @notice Verify the domain separator produced during deployment of the implementation matches that of the proxy\n     */\n    function verifyDomain() public view {\n        bytes32 eip712DomainTypehash = keccak256(\n            bytes.concat(\n                \"EIP712Domain(\",\n                \"string name,\",\n                \"string version,\",\n                \"uint256 chainId,\",\n                \"address verifyingContract\",\n                \")\"\n            )\n        );\n\n        bytes32 domainSeparator = _hashDomain(\n            eip712DomainTypehash,\n            keccak256(bytes(_NAME)),\n            keccak256(bytes(_VERSION)),\n            address(this)\n        );\n        if (_DOMAIN_SEPARATOR != domainSeparator) {\n            revert InvalidDomain();\n        }\n    }\n\n    /**\n     * @notice Return version and domain separator\n     */\n    function information()\n        external\n        view\n        returns (string memory version, bytes32 domainSeparator)\n    {\n        version = _VERSION;\n        domainSeparator = _DOMAIN_SEPARATOR;\n    }\n\n    /**\n     * @notice Create a hash of TakeAsk calldata with an approved caller\n   \n     * @param _caller Address approved to execute the calldata\n     * @return Calldata hash\n     */\n    function hashTakeAsk(address _caller) external pure returns (bytes32) {\n        return _hashCalldata(_caller);\n    }\n\n    /**\n     * @notice Create a hash of TakeBid calldata with an approved caller\n     * @param _caller Address approved to execute the calldata\n     * @return Calldata hash\n     */\n    function hashTakeBid(address _caller) external pure returns (bytes32) {\n        return _hashCalldata(_caller);\n    }\n\n    /**\n     * @notice Create a hash of TakeAskSingle calldata with an approved caller\n     * @param _caller Address approved to execute the calldata\n     * @return Calldata hash\n     */\n    function hashTakeAskSingle(\n        address _caller\n    ) external pure returns (bytes32) {\n        return _hashCalldata(_caller);\n    }\n\n    /**\n     * @notice Create a hash of TakeBidSingle calldata with an approved caller\n     * @param _caller Address approved to execute the calldata\n     * @return Calldata hash\n     */\n    function hashTakeBidSingle(\n        address _caller\n    ) external pure returns (bytes32) {\n        return _hashCalldata(_caller);\n    }\n\n    /**\n     * @notice Create an EIP712 hash of an Order\n     * @dev Includes two additional parameters not in the struct (orderType, nonce)\n     * @param order Order to hash\n     * @param orderType OrderType of the Order\n     * @return Order EIP712 hash\n     */\n    function hashOrder(\n        Order memory order,\n        OrderType orderType\n    ) public view returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    _ORDER_TYPEHASH,\n                    order.trader,\n                    order.collection,\n                    order.listingsRoot,\n                    order.numberOfListings,\n                    order.expirationTime,\n                    order.assetType,\n                    _hashFeeRate(order.makerFee),\n                    order.salt,\n                    orderType,\n                    nonces[order.trader]\n                )\n            );\n    }\n\n\n    function hashOfferCollection(\n        Order memory order,\n        OrderType orderType,\n        uint256 pricePerItem\n    ) public view returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    _OFFER_COLLECTION_TYPEHASH,\n                    order.trader,\n                    order.collection,\n                    order.listingsRoot,\n                    order.numberOfListings,\n                    order.expirationTime,\n                    order.assetType,\n                    _hashFeeRate(order.makerFee),\n                    order.salt,\n                    orderType,\n                    nonces[order.trader],\n                    pricePerItem\n                )\n            );\n    }\n\n    /**\n     * @notice Create a hash of a Listing struct\n     * @param listing Listing to hash\n     * @return Listing hash\n     */\n    function hashListing(Listing memory listing) public pure returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    listing.index,\n                    listing.tokenId,\n                    listing.amount,\n                    listing.price\n                )\n            );\n    }\n\n    /**\n     * @notice Create a hash of calldata with an approved caller\n     * @param _caller Address approved to execute the calldata\n     * @return hash Calldata hash\n     */\n    function _hashCalldata(\n        address _caller\n    ) internal pure returns (bytes32 hash) {\n        assembly {\n            let nextPointer := mload(0x40)\n            let size := add(sub(nextPointer, 0x80), 0x20)\n            mstore(nextPointer, _caller)\n            hash := keccak256(0x80, size)\n        }\n    }\n\n    /**\n     * @notice Create an EIP712 hash of a FeeRate struct\n     * @param feeRate FeeRate to hash\n     * @return FeeRate EIP712 hash\n     */\n    function _hashFeeRate(\n        FeeRate memory feeRate\n    ) private view returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(_FEE_RATE_TYPEHASH, feeRate.recipient, feeRate.rate)\n            );\n    }\n\n    /**\n     * @notice Create an EIP712 hash to sign\n     * @param hash Primary EIP712 object hash\n     * @return EIP712 hash\n     */\n    function _hashToSign(bytes32 hash) public view returns (bytes32) {\n        return keccak256(bytes.concat(bytes2(0x1901), _DOMAIN_SEPARATOR, hash));\n    }\n\n    /**\n     * @notice Generate all EIP712 Typehashes\n     */\n    function _createTypehashes()\n        private\n        view\n        returns (\n            bytes32 feeRateTypehash,\n            bytes32 orderTypehash,\n            bytes32 offerCollectionTypehash,\n            bytes32 domainSeparator\n        )\n    {\n        bytes32 eip712DomainTypehash = keccak256(\n            bytes.concat(\n                \"EIP712Domain(\",\n                \"string name,\",\n                \"string version,\",\n                \"uint256 chainId,\",\n                \"address verifyingContract\",\n                \")\"\n            )\n        );\n\n        bytes\n            memory feeRateTypestring = \"FeeRate(address recipient,uint16 rate)\";\n\n        orderTypehash = keccak256(\n            bytes.concat(\n                \"Order(\",\n                \"address trader,\",\n                \"address collection,\",\n                \"bytes32 listingsRoot,\",\n                \"uint256 numberOfListings,\",\n                \"uint256 expirationTime,\",\n                \"uint8 assetType,\",\n                \"FeeRate makerFee,\",\n                \"uint256 salt,\",\n                \"uint8 orderType,\",\n                \"uint256 nonce\",\n                \")\",\n                feeRateTypestring\n            )\n        );\n\n        offerCollectionTypehash = keccak256(\n          bytes.concat(\n            \"OfferColection(\",\n                \"address trader,\",\n                \"address collection,\",\n                \"bytes32 listingsRoot,\",\n                \"uint256 numberOfListings,\",\n                \"uint256 expirationTime,\",\n                \"uint8 assetType,\",\n                \"FeeRate makerFee,\",\n                \"uint256 salt,\",\n                \"uint8 orderType,\",\n                \"uint256 nonce,\",\n                \"uint256 pricePerItem\",\n                \")\",\n                feeRateTypestring\n          )  \n        );\n\n        feeRateTypehash = keccak256(feeRateTypestring);\n\n        domainSeparator = _hashDomain(\n            eip712DomainTypehash,\n            keccak256(bytes(_NAME)),\n            keccak256(bytes(_VERSION)),\n            address(this)\n        );\n    }\n\n    /**\n     * @notice Create an EIP712 domain separator\n     * @param eip712DomainTypehash Typehash of the EIP712Domain struct\n     * @param nameHash Hash of the contract name\n     * @param versionHash Hash of the version string\n     * @param proxy Address of the proxy this implementation will be behind\n     * @return EIP712Domain hash\n     */\n    function _hashDomain(\n        bytes32 eip712DomainTypehash,\n        bytes32 nameHash,\n        bytes32 versionHash,\n        address proxy\n    ) private view returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    eip712DomainTypehash,\n                    nameHash,\n                    versionHash,\n                    block.chainid,\n                    proxy\n                )\n            );\n    }\n\n    /**\n     * @notice Verify EIP712 signature\n     * @param signer Address of the alleged signer\n     * @param hash EIP712 hash\n     * @param signatures Packed bytes array of order signatures\n     * @param index Index of the signature to verify\n     * @return authorized Validity of the signature\n     */\n    function verifyAuthorizationPublic(\n        address signer,\n        bytes32 hash,\n        bytes memory signatures,\n        uint256 index\n    ) public view returns (bool authorized, bytes32 r, bytes32 s, uint8 v) {\n        bytes32 hashToSign = _hashToSign(hash);\n        assembly {\n            let signatureOffset := add(\n                add(signatures, One_word),\n                mul(Signatures_size, index)\n            )\n            r := mload(signatureOffset)\n            s := mload(add(signatureOffset, Signatures_s_offset))\n            v := shr(\n                Bytes1_shift,\n                mload(add(signatureOffset, Signatures_v_offset))\n            )\n        }\n        authorized = _verify(signer, hashToSign, v, r, s);\n    }\n\n    function _verifyAuthorization(\n        address signer,\n        bytes32 hash,\n        bytes memory signatures,\n        uint256 index\n    ) internal view returns (bool authorized) {\n        bytes32 hashToSign = _hashToSign(hash);\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n        assembly {\n            let signatureOffset := add(\n                add(signatures, One_word),\n                mul(Signatures_size, index)\n            )\n            r := mload(signatureOffset)\n            s := mload(add(signatureOffset, Signatures_s_offset))\n            v := shr(\n                Bytes1_shift,\n                mload(add(signatureOffset, Signatures_v_offset))\n            )\n        }\n        authorized = _verify(signer, hashToSign, v, r, s);\n    }\n\n    modifier verifyOracleSignature(\n        bytes32 hash,\n        bytes calldata oracleSignature\n    ) {\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n        uint32 blockNumber;\n        address oracle;\n        assembly {\n            let signatureOffset := oracleSignature.offset\n            r := calldataload(signatureOffset)\n            s := calldataload(add(signatureOffset, OracleSignatures_s_offset))\n            v := shr(\n                Bytes1_shift,\n                calldataload(add(signatureOffset, OracleSignatures_v_offset))\n            )\n            blockNumber := shr(\n                Bytes4_shift,\n                calldataload(\n                    add(signatureOffset, OracleSignatures_blockNumber_offset)\n                )\n            )\n            oracle := shr(\n                Bytes20_shift,\n                calldataload(\n                    add(signatureOffset, OracleSignatures_oracle_offset)\n                )\n            )\n        }\n        if (blockNumber + blockRange < block.number) {\n            revert ExpiredOracleSignature();\n        }\n        if (oracles[oracle] == 0) {\n            revert UnauthorizedOracle();\n        }\n        if (\n            !_verify(\n                oracle,\n                keccak256(abi.encodePacked(hash, blockNumber)),\n                v,\n                r,\n                s\n            )\n        ) {\n            revert InvalidOracleSignature();\n        }\n        _;\n    }\n\n    /**\n     * @notice Verify signature of digest\n     * @param signer Address of expected signer\n     * @param digest Signature digest\n     * @param v v parameter\n     * @param r r parameter\n     * @param s s parameter\n     */\n    function _verify(\n        address signer,\n        bytes32 digest,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) private pure returns (bool valid) {\n        address recoveredSigner = ecrecover(digest, v, r, s);\n        if (recoveredSigner != address(0) && recoveredSigner == signer) {\n            valid = true;\n        }\n    }\n\n    uint256[47] private __gap;\n}\n"},"contracts/Validation.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport { MerkleProof } from \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\nimport { Signatures } from \"./Signatures.sol\";\nimport { AssetType, Order, Exchange, Listing, OrderType, FeeRate, Fees, Taker } from \"./lib/Structs.sol\";\nimport { IValidation } from \"./interfaces/IValidation.sol\";\n\nabstract contract Validation is IValidation, Signatures {\n    uint256 internal constant _BASIS_POINTS = 10_000;\n    uint256 internal constant _MAX_PROTOCOL_FEE_RATE = 500;\n\n    FeeRate public protocolFee;\n\n    /* amountTaken[user][orderHash][listingIndex] */\n    mapping(address => mapping(bytes32 => mapping(uint256 => uint256))) public amountTaken;\n\n    constructor() Signatures() {}\n\n    /**\n     * @notice Check if an order has expired\n     * @param order Order to check liveness\n     * @return Order is live\n     */\n    function _checkLiveness(Order memory order) private view returns (bool) {\n        return (order.expirationTime > block.timestamp);\n    }\n\n    /**\n     * @notice Check that the fees to be taken will not overflow the purchase price\n     * @param makerFee Maker fee amount\n     * @param fees Protocol and taker fee rates\n     * @return Fees are valid\n     */\n    function _checkFee(FeeRate memory makerFee, Fees memory fees) private pure returns (bool) {\n        return makerFee.rate + fees.takerFee.rate + fees.protocolFee.rate <= _BASIS_POINTS;\n    }\n\n    /**\n     * @notice Validate a list of orders and prepare arrays for recording pending fulfillments\n     * @param orders List of orders\n     * @param orderType Order type for all orders\n     * @param signatures Bytes array of the order signatures\n     * @param fees Protocol and taker fee rates\n     */\n    function _validateOrders(\n        Order[] memory orders,\n        OrderType orderType,\n        bytes memory signatures,\n        Fees memory fees\n    ) internal view returns (bool[] memory validOrders, uint256[][] memory pendingAmountTaken) {\n        uint256 ordersLength = orders.length;\n        validOrders = new bool[](ordersLength);\n        pendingAmountTaken = new uint256[][](ordersLength);\n        for (uint256 i; i < ordersLength; ) {\n            pendingAmountTaken[i] = new uint256[](orders[i].numberOfListings);\n            validOrders[i] = _validateOrder(orders[i], orderType, signatures, fees, i);\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @notice Validate an order\n     * @param order Order to validate\n     * @param orderType Order type\n     * @param signatures Bytes array of order signatures\n     * @param fees Protocol and taker fee rates\n     * @param signatureIndex Index of the order signature\n     * @return Validity of the order\n     */\n    function _validateOrder(\n        Order memory order,\n        OrderType orderType,\n        bytes memory signatures,\n        Fees memory fees,\n        uint256 signatureIndex\n    ) internal view returns (bool) {\n        bytes32 orderHash = hashOrder(order, orderType);\n\n        /* After hashing, the salt is no longer needed so we can store the order hash here. */\n        order.salt = uint256(orderHash);\n\n        return _verifyAuthorization(\n            order.trader,\n            orderHash,\n            signatures,\n            signatureIndex\n        ) &&\n            _checkLiveness(order) &&\n            _checkFee(order.makerFee, fees);\n    }\n\n\n    function _validateOfferCollection(\n        Order memory order,\n        OrderType orderType,\n        uint256 pricePerItem,\n        Listing memory listing,\n        bytes memory signatures,\n        Fees memory fees\n    ) internal view returns (bool) {\n        bytes32 orderHash = hashOfferCollection(order, orderType, pricePerItem);\n\n        /* After hashing, the salt is no longer needed so we can store the order hash here. */\n        order.salt = uint256(orderHash);\n\n        return _verifyAuthorization(\n            order.trader,\n            orderHash,\n            signatures,\n            0\n        ) &&\n            _checkLiveness(order) &&\n            _checkFee(order.makerFee, fees) && \n            amountTaken[order.trader][bytes32(order.salt)][0] + listing.amount <=\n            order.numberOfListings;\n    }\n\n    /**\n     * @notice Validate a listing (only valid if the order has be prevalidated)\n     * @dev Validation can be manipulated by inputting the same order twice in the orders array,\n     * which will effectively bypass the `pendingAmountTaken` check. There is a safety check at the\n     * execution phase that will revert the transaction if this manipulation overdraws an order.\n     * @param order Order of the listing\n     * @param orderType Order type\n     * @param exchange Exchange containing the listing\n     * @param validOrders List indicated which orders were validated\n     * @param pendingAmountTaken Pending fulfillments from the current batch\n     * @return validListing Validity of the listing\n     */\n    function _validateListingFromBatch(\n        Order memory order,\n        OrderType orderType,\n        Exchange memory exchange,\n        bool[] memory validOrders,\n        uint256[][] memory pendingAmountTaken\n    ) internal view returns (bool validListing) {\n        Listing memory listing = exchange.listing;\n        uint256 listingIndex = listing.index;\n        uint256 amountTaken = amountTaken[order.trader][bytes32(order.salt)][listingIndex];\n        uint256 pendingAmountTaken = pendingAmountTaken[exchange.index][listingIndex];\n        uint256 takerAmount = exchange.taker.amount;\n        unchecked {\n            validListing =\n                validOrders[exchange.index] &&\n                _validateListing(order, orderType, exchange) &&\n                pendingAmountTaken + takerAmount <= type(uint256).max - amountTaken &&\n                amountTaken + pendingAmountTaken + takerAmount <= listing.amount;\n        }\n    }\n\n    /**\n     * @notice Validate a listing and its proposed exchange\n     * @param order Order of the listing\n     * @param orderType Order type\n     * @param exchange Exchange containing the listing\n     * @return validListing Validity of the listing and its proposed exchange\n     */\n    function _validateListing(\n        Order memory order,\n        OrderType orderType,\n        Exchange memory exchange\n    ) private pure returns (bool validListing) {\n        Listing memory listing = exchange.listing;\n        validListing = MerkleProof.verify(exchange.proof, order.listingsRoot, hashListing(listing));\n        Taker memory taker = exchange.taker;\n        if (orderType == OrderType.ASK) {\n            if (order.assetType == AssetType.ERC721) {\n                validListing = validListing && taker.amount == 1 && listing.amount == 1;\n            }\n            validListing = validListing && listing.tokenId == taker.tokenId;\n        } else {\n            if (order.assetType == AssetType.ERC721) {\n                validListing = validListing && taker.amount == 1;\n            } else {\n                validListing = validListing && listing.tokenId == taker.tokenId;\n            }\n        }\n    }\n\n\n   \n\n    /**\n     * @notice Validate both the listing and it's parent order (only for single executions)\n     * @param order Order of the listing\n     * @param orderType Order type\n     * @param exchange Exchange containing the listing\n     * @param signature Order signature\n     * @param fees Protocol and taker fee rates\n     * @return Validity of the order and listing\n     */\n    function _validateOrderAndListing(\n        Order memory order,\n        OrderType orderType,\n        Exchange memory exchange,\n        bytes memory signature,\n        Fees memory fees\n    ) internal view returns (bool) {\n        Listing memory listing = exchange.listing;\n        uint256 listingIndex = listing.index;\n        return\n            _validateOrder(order, orderType, signature, fees, 0) &&\n            _validateListing(order, orderType, exchange) &&\n            amountTaken[order.trader][bytes32(order.salt)][listingIndex] + exchange.taker.amount <=\n            listing.amount;\n    }\n\n\n    uint256[49] private __gap;\n}\n"},"contracts/ZeZuExchange.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\n// import {Ownable2StepUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\";\n// import {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\nimport {Executor} from \"./Executor.sol\";\nimport \"./lib/Constants.sol\";\nimport {TakeAsk, TakeBid, TakeAskSingle, TakeBidSingle, Order, Exchange, Fees, FeeRate, AssetType, OrderType, Transfer, FungibleTransfers, StateUpdate, AtomicExecution, Cancel, Listing, TakeCollectionOffer} from \"./lib/Structs.sol\";\nimport {IZeZuExchange} from \"./interfaces/IZeZuExchange.sol\";\n// import {ReentrancyGuardUpgradeable} from \"./lib/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {\n    address public governor;\n\n    // // required by the OZ UUPS module\n    // function _authorizeUpgrade(address) internal override onlyOwner {}\n\n    constructor(\n        address delegate,\n        address pool\n    )\n        // address proxy\n        Executor(delegate, pool)\n    {\n        governor = msg.sender;\n        // _disableInitializers();\n    }\n\n    // function initialize() external initializer {\n    //     __UUPSUpgradeable_init();\n    //     __Ownable_init();\n    //     __Reentrancy_init();\n    //     verifyDomain();\n    // }\n\n    modifier onlyGovernor() {\n        if (msg.sender != governor) {\n            revert Unauthorized();\n        }\n        _;\n    }\n\n    /**\n     * @notice Governor only function to set the protocol fee rate and recipient\n     * @param recipient Protocol fee recipient\n     * @param rate Protocol fee rate\n     */\n    function setProtocolFee(\n        address recipient,\n        uint16 rate\n    ) external onlyGovernor {\n        if (rate > _MAX_PROTOCOL_FEE_RATE) {\n            revert ProtocolFeeTooHigh();\n        }\n        protocolFee = FeeRate(recipient, rate);\n        emit NewProtocolFee(recipient, rate);\n    }\n\n    /**\n     * @notice Admin only function to set the governor of the exchange\n     * @param _governor Address of governor to set\n     */\n    function setGovernor(address _governor) external {\n        require(governor == msg.sender, \"Invalid Owner\");\n        governor = _governor;\n        emit NewGovernor(_governor);\n    }\n\n    /**\n     * @notice Admin only function to grant or revoke the approval of an oracle\n     * @param oracle Address to set approval of\n     * @param approved If the oracle should be approved or not\n     */\n    // function setOracle(address oracle, bool approved) external  {\n    //     require(governor == msg.sender, \"Invalid Owner\");\n    //     if (approved) {\n    //         oracles[oracle] = 1;\n    //     } else {\n    //         oracles[oracle] = 0;\n    //     }\n    //     emit SetOracle(oracle, approved);\n    // }\n\n    /**\n     * @notice Admin only function to set the block range\n     * @param _blockRange Block range that oracle signatures are valid for\n     */\n    // function setBlockRange(uint256 _blockRange) external  {\n    //     require(governor == msg.sender, \"Invalid Owner\");\n    //     blockRange = _blockRange;\n    //     emit NewBlockRange(_blockRange);\n    // }\n\n    /**\n     * @notice Cancel listings by recording their fulfillment\n     * @param cancels List of cancels to execute\n     */\n    function cancelTrades(Cancel[] memory cancels) external {\n        uint256 cancelsLength = cancels.length;\n        for (uint256 i; i < cancelsLength; ) {\n            Cancel memory cancel = cancels[i];\n            amountTaken[msg.sender][cancel.hash][cancel.index] += cancel.amount;\n            emit CancelTrade(\n                msg.sender,\n                cancel.hash,\n                cancel.index,\n                cancel.amount\n            );\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @notice Cancels all orders by incrementing caller nonce\n     */\n    function incrementNonce() external {\n        emit NonceIncremented(msg.sender, ++nonces[msg.sender]);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                          EXECUTION WRAPPERS\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Wrapper of _takeAsk that verifies an oracle signature of the calldata before executing\n     * @param inputs Inputs for _takeAsk\n     */\n    function takeAsk(TakeAsk memory inputs) public payable nonReentrant {\n        _takeAsk(\n            inputs.orders,\n            inputs.exchanges,\n            inputs.takerFee,\n            inputs.signatures,\n            inputs.tokenRecipient\n        );\n    }\n\n    /**\n     * @notice Wrapper of _takeBid that verifies an oracle signature of the calldata before executing\n     * @param inputs Inputs for _takeBid\n     */\n    function takeBid(TakeBid memory inputs) public {\n        _takeBid(\n            inputs.orders,\n            inputs.exchanges,\n            inputs.takerFee,\n            inputs.signatures\n        );\n    }\n\n    /**\n     * @notice Wrapper of _takeAskSingle that verifies an oracle signature of the calldata before executing\n     * @param inputs Inputs for _takeAskSingle\n     */\n    function takeAskSingle(\n        TakeAskSingle memory inputs\n    ) public payable nonReentrant {\n        _takeAskSingle(\n            inputs.order,\n            inputs.exchange,\n            inputs.takerFee,\n            inputs.signature,\n            inputs.tokenRecipient\n        );\n    }\n\n    /**\n     * @notice Wrapper of _takeBidSingle that verifies an oracle signature of the calldata before executing\n     * @param inputs Inputs for _takeBidSingle\n     */\n    function takeBidSingle(TakeBidSingle memory inputs) external {\n        _takeBidSingle(\n            inputs.order,\n            inputs.exchange,\n            inputs.takerFee,\n            inputs.signature\n        );\n    }\n\n    function takeCollectionOffer(TakeCollectionOffer memory input) public {\n        _takeCollectionOffer(\n            input.order,\n            input.listing,\n            input.takerFee,\n            input.signature\n        );\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        EXECUTION POOL WRAPPERS\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Wrapper of takeAskSingle that withdraws ETH from the caller's pool balance prior to executing\n     * @param inputs Inputs for takeAskSingle\n     * @param amountToWithdraw Amount of ETH to withdraw from the pool\n     */\n    function takeAskSinglePool(\n        TakeAskSingle memory inputs,\n        uint256 amountToWithdraw\n    ) external payable {\n        _withdrawFromPool(msg.sender, amountToWithdraw);\n\n        takeAskSingle(inputs);\n    }\n\n    /**\n     * @notice Wrapper of takeAsk that withdraws ETH from the caller's pool balance prior to executing\n     * @param inputs Inputs for takeAsk\n     * @param amountToWithdraw Amount of ETH to withdraw from the pool\n     */\n    function takeAskPool(\n        TakeAsk memory inputs,\n        uint256 amountToWithdraw\n    ) external payable {\n        _withdrawFromPool(msg.sender, amountToWithdraw);\n\n        takeAsk(inputs);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                          EXECUTION FUNCTIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function _takeCollectionOffer(\n        Order memory order,\n        Listing memory listing,\n        FeeRate memory takerFee,\n        bytes memory signature\n    ) internal {\n        Fees memory fees = Fees(protocolFee, takerFee);\n        uint256 takerAmount = listing.amount;\n\n        /* Validate the order and listing, revert if not. */\n        if (\n            !_validateOfferCollection(\n                order,\n                OrderType.OFFER_COLLECTION,\n                listing.price,\n                listing,\n                signature,\n                fees\n            )\n        ) {\n            revert InvalidOrder();\n        }\n\n        /* Create single execution batch and insert the transfer. */\n        bytes memory executionBatch = _initializeSingleExecution(\n            order,\n            OrderType.BID,\n            listing.tokenId,\n            takerAmount,\n            msg.sender\n        );\n\n        /* Execute the token transfers, revert if not successful. */\n        {\n            bool[] memory successfulTransfers = _executeNonfungibleTransfers(\n                executionBatch,\n                1\n            );\n            if (!successfulTransfers[0]) {\n                revert TokenTransferFailed();\n            }\n        }\n\n        (\n            uint256 totalPrice,\n            uint256 protocolFeeAmount,\n            uint256 makerFeeAmount,\n            uint256 takerFeeAmount\n        ) = _computeFees(listing.price, takerAmount, order.makerFee, fees);\n\n        /* Execute pool transfers and set the fulfillment of the order. */\n        address trader = order.trader;\n        _transferPool(trader, order.makerFee.recipient, makerFeeAmount);\n        _transferPool(trader, fees.takerFee.recipient, takerFeeAmount);\n        _transferPool(trader, fees.protocolFee.recipient, protocolFeeAmount);\n\n        uint256 remaining = 0;\n\n        unchecked {\n            _transferPool(\n                trader,\n                msg.sender,\n                totalPrice - takerFeeAmount - protocolFeeAmount\n            );\n\n            amountTaken[trader][bytes32(order.salt)][0] += takerAmount;\n\n            remaining =\n                order.numberOfListings -\n                amountTaken[trader][bytes32(order.salt)][0];\n        }\n\n        _emitExecutionAcceptCollectionOffer(\n            bytes32(order.salt),\n            msg.sender,\n            order.trader,\n            listing,\n            remaining\n        );\n    }\n\n    /**\n     * @notice Take a single ask\n     * @param order Order of listing to fulfill\n     * @param exchange Exchange struct indicating the listing to take and the parameters to match it with\n     * @param takerFee Taker fee to be taken\n     * @param signature Order signature\n     * @param tokenRecipient Address to receive the token transfer\n     */\n    function _takeAskSingle(\n        Order memory order,\n        Exchange memory exchange,\n        FeeRate memory takerFee,\n        bytes memory signature,\n        address tokenRecipient\n    ) internal {\n        Fees memory fees = Fees(protocolFee, takerFee);\n        Listing memory listing = exchange.listing;\n        uint256 takerAmount = exchange.taker.amount;\n\n        /* Validate the order and listing, revert if not. */\n        if (\n            !_validateOrderAndListing(\n                order,\n                OrderType.ASK,\n                exchange,\n                signature,\n                fees\n            )\n        ) {\n            revert InvalidOrder();\n        }\n\n        /* Create single execution batch and insert the transfer. */\n        bytes memory executionBatch = _initializeSingleExecution(\n            order,\n            OrderType.ASK,\n            listing.tokenId,\n            takerAmount,\n            tokenRecipient\n        );\n\n        /* Set the fulfillment of the order. */\n        unchecked {\n            amountTaken[order.trader][bytes32(order.salt)][\n                listing.index\n            ] += takerAmount;\n        }\n\n        /* Execute the token transfers, revert if not successful. */\n        {\n            bool[] memory successfulTransfers = _executeNonfungibleTransfers(\n                executionBatch,\n                1\n            );\n            if (!successfulTransfers[0]) {\n                revert TokenTransferFailed();\n            }\n        }\n\n        (\n            uint256 totalPrice,\n            uint256 protocolFeeAmount,\n            uint256 makerFeeAmount,\n            uint256 takerFeeAmount\n        ) = _computeFees(listing.price, takerAmount, order.makerFee, fees);\n\n        /* If there are insufficient funds to cover the price with the fees, revert. */\n        unchecked {\n            if (address(this).balance < totalPrice + takerFeeAmount) {\n                revert InsufficientFunds();\n            }\n        }\n\n        /* Execute ETH transfers. */\n        _transferETH(fees.protocolFee.recipient, protocolFeeAmount);\n        _transferETH(fees.takerFee.recipient, takerFeeAmount);\n        _transferETH(order.makerFee.recipient, makerFeeAmount);\n        unchecked {\n            _transferETH(\n                order.trader,\n                totalPrice - makerFeeAmount - protocolFeeAmount\n            );\n        }\n\n        _emitExecutionEvent(\n            executionBatch,\n            order,\n            listing.index,\n            totalPrice,\n            fees,\n            OrderType.ASK\n        );\n\n        /* Return dust. */\n        _transferETH(msg.sender, address(this).balance);\n    }\n\n    /**\n     * @notice Take a single bid\n     * @param order Order of listing to fulfill\n     * @param exchange Exchange struct indicating the listing to take and the parameters to match it with\n     * @param takerFee Taker fee to be taken\n     * @param signature Order signature\n     */\n    function _takeBidSingle(\n        Order memory order,\n        Exchange memory exchange,\n        FeeRate memory takerFee,\n        bytes memory signature\n    ) internal {\n        Fees memory fees = Fees(protocolFee, takerFee);\n        Listing memory listing = exchange.listing;\n        uint256 takerAmount = exchange.taker.amount;\n\n        /* Validate the order and listing, revert if not. */\n        if (\n            !_validateOrderAndListing(\n                order,\n                OrderType.BID,\n                exchange,\n                signature,\n                fees\n            )\n        ) {\n            revert InvalidOrder();\n        }\n\n        /* Create single execution batch and insert the transfer. */\n        bytes memory executionBatch = _initializeSingleExecution(\n            order,\n            OrderType.BID,\n            exchange.taker.tokenId,\n            takerAmount,\n            msg.sender\n        );\n\n        /* Execute the token transfers, revert if not successful. */\n        {\n            bool[] memory successfulTransfers = _executeNonfungibleTransfers(\n                executionBatch,\n                1\n            );\n            if (!successfulTransfers[0]) {\n                revert TokenTransferFailed();\n            }\n        }\n\n        (\n            uint256 totalPrice,\n            uint256 protocolFeeAmount,\n            uint256 makerFeeAmount,\n            uint256 takerFeeAmount\n        ) = _computeFees(listing.price, takerAmount, order.makerFee, fees);\n\n        /* Execute pool transfers and set the fulfillment of the order. */\n        address trader = order.trader;\n        _transferPool(trader, order.makerFee.recipient, makerFeeAmount);\n        _transferPool(trader, fees.takerFee.recipient, takerFeeAmount);\n        _transferPool(trader, fees.protocolFee.recipient, protocolFeeAmount);\n        unchecked {\n            _transferPool(\n                trader,\n                msg.sender,\n                totalPrice - takerFeeAmount - protocolFeeAmount\n            );\n\n            amountTaken[trader][bytes32(order.salt)][listing.index] += exchange\n                .taker\n                .amount;\n        }\n\n        _emitExecutionEvent(\n            executionBatch,\n            order,\n            listing.index,\n            totalPrice,\n            fees,\n            OrderType.BID\n        );\n    }\n\n    /**\n     * @notice Take multiple asks; efficiently verifying and executing the transfers in bulk\n     * @param orders List of orders\n     * @param exchanges List of exchanges indicating the listing to take and the parameters to match it with\n     * @param takerFee Taker fee to be taken on each exchange\n     * @param signatures Bytes array of order signatures\n     * @param tokenRecipient Address to receive the tokens purchased\n     */\n    function _takeAsk(\n        Order[] memory orders,\n        Exchange[] memory exchanges,\n        FeeRate memory takerFee,\n        bytes memory signatures,\n        address tokenRecipient\n    ) internal {\n        Fees memory fees = Fees(protocolFee, takerFee);\n\n        /**\n         * Validate all the orders potentially used in the execution and\n         * initialize the arrays for pending fulfillments.\n         */\n        (\n            bool[] memory validOrders,\n            uint256[][] memory pendingAmountTaken\n        ) = _validateOrders(orders, OrderType.ASK, signatures, fees);\n\n        uint256 exchangesLength = exchanges.length;\n\n        /* Initialize the execution batch structs. */\n        (\n            bytes memory executionBatch,\n            FungibleTransfers memory fungibleTransfers\n        ) = _initializeBatch(exchangesLength, OrderType.ASK, tokenRecipient);\n\n        Order memory order;\n        Exchange memory exchange;\n\n        uint256 remainingETH = address(this).balance;\n        for (uint256 i; i < exchangesLength; ) {\n            exchange = exchanges[i];\n            order = orders[exchange.index];\n\n            /* Check the listing and exchange is valid and its parent order has already been validated. */\n            if (\n                _validateListingFromBatch(\n                    order,\n                    OrderType.ASK,\n                    exchange,\n                    validOrders,\n                    pendingAmountTaken\n                )\n            ) {\n                /* Insert the transfers into the batch. */\n                bool inserted;\n                (remainingETH, inserted) = _insertExecutionAsk(\n                    executionBatch,\n                    fungibleTransfers,\n                    order,\n                    exchange,\n                    fees,\n                    remainingETH\n                );\n                if (inserted) {\n                    unchecked {\n                        pendingAmountTaken[exchange.index][\n                            exchange.listing.index\n                        ] += exchange.taker.amount;\n                    }\n                }\n            }\n\n            unchecked {\n                ++i;\n            }\n        }\n\n        /* Execute all transfers. */\n        _executeBatchTransfer(\n            executionBatch,\n            fungibleTransfers,\n            fees,\n            OrderType.ASK\n        );\n\n        /* Return dust. */\n        _transferETH(msg.sender, address(this).balance);\n    }\n\n    /**\n     * @notice Take multiple bids; efficiently verifying and executing the transfers in bulk\n     * @param orders List of orders\n     * @param exchanges List of exchanges indicating the listing to take and the parameters to match it with\n     * @param takerFee Taker fee to be taken on each exchange\n     * @param signatures Bytes array of order signatures\n     */\n    function _takeBid(\n        Order[] memory orders,\n        Exchange[] memory exchanges,\n        FeeRate memory takerFee,\n        bytes memory signatures\n    ) internal {\n        Fees memory fees = Fees(protocolFee, takerFee);\n\n        /**\n         * Validate all the orders potentially used in the execution and\n         * initialize the arrays for pending fulfillments.\n         */\n        (\n            bool[] memory validOrders,\n            uint256[][] memory pendingAmountTaken\n        ) = _validateOrders(orders, OrderType.BID, signatures, fees);\n\n        uint256 exchangesLength = exchanges.length;\n\n        /* Initialize the execution batch structs. */\n        (\n            bytes memory executionBatch,\n            FungibleTransfers memory fungibleTransfers\n        ) = _initializeBatch(exchangesLength, OrderType.BID, msg.sender);\n\n        Order memory order;\n        Exchange memory exchange;\n\n        for (uint256 i; i < exchangesLength; ) {\n            exchange = exchanges[i];\n            order = orders[exchange.index];\n\n            /* Check the listing and exchange is valid and its parent order has already been validated. */\n            if (\n                _validateListingFromBatch(\n                    order,\n                    OrderType.BID,\n                    exchange,\n                    validOrders,\n                    pendingAmountTaken\n                )\n            ) {\n                /* Insert the transfers into the batch. */\n                _insertExecutionBid(\n                    executionBatch,\n                    fungibleTransfers,\n                    order,\n                    exchange,\n                    fees\n                );\n\n                /* Record the pending fulfillment. */\n                unchecked {\n                    pendingAmountTaken[exchange.index][\n                        exchange.listing.index\n                    ] += exchange.taker.amount;\n                }\n            }\n\n            unchecked {\n                ++i;\n            }\n        }\n\n        /* Execute all transfers. */\n        _executeBatchTransfer(\n            executionBatch,\n            fungibleTransfers,\n            fees,\n            OrderType.BID\n        );\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                          EXECUTION HELPERS\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Initialize the ExecutionBatch and FungibleTransfers objects for bulk execution\n     * @param exchangesLength Number of exchanges\n     * @param orderType Order type\n     * @param taker Order taker address\n     */\n    function _initializeBatch(\n        uint256 exchangesLength,\n        OrderType orderType,\n        address taker\n    )\n        internal\n        pure\n        returns (\n            bytes memory executionBatch,\n            FungibleTransfers memory fungibleTransfers\n        )\n    {\n        /* Initialize the batch. Constructing it manually in calldata packing allows for cheaper delegate execution. */\n        uint256 arrayLength = Transfer_size * exchangesLength + One_word;\n        uint256 executionBatchLength = ExecutionBatch_base_size + arrayLength;\n        executionBatch = new bytes(executionBatchLength);\n        assembly {\n            let calldataPointer := add(\n                executionBatch,\n                ExecutionBatch_calldata_offset\n            )\n            mstore(add(calldataPointer, ExecutionBatch_taker_offset), taker)\n            mstore(\n                add(calldataPointer, ExecutionBatch_orderType_offset),\n                orderType\n            )\n            mstore(\n                add(calldataPointer, ExecutionBatch_transfers_pointer_offset),\n                ExecutionBatch_transfers_offset\n            ) // set the transfers pointer\n            mstore(\n                add(calldataPointer, ExecutionBatch_transfers_offset),\n                exchangesLength\n            ) // set the length of the transfers array\n        }\n\n        /* Initialize the fungible transfers object. */\n        AtomicExecution[] memory executions = new AtomicExecution[](\n            exchangesLength\n        );\n        address[] memory feeRecipients = new address[](exchangesLength);\n        address[] memory makers = new address[](exchangesLength);\n        uint256[] memory makerTransfers = new uint256[](exchangesLength);\n        uint256[] memory feeTransfers = new uint256[](exchangesLength);\n        fungibleTransfers = FungibleTransfers({\n            totalProtocolFee: 0,\n            totalSellerTransfer: 0,\n            totalTakerFee: 0,\n            feeRecipientId: 0,\n            feeRecipients: feeRecipients,\n            makerId: 0,\n            makers: makers,\n            feeTransfers: feeTransfers,\n            makerTransfers: makerTransfers,\n            executions: executions\n        });\n    }\n\n    /**\n     * @notice Initialize the ExecutionBatch object for a single execution\n     * @param order Order to take a Listing from\n     * @param orderType Order type\n     * @param tokenId Token id\n     * @param amount ERC721/ERC1155 amount\n     * @param taker Order taker address\n     */\n    function _initializeSingleExecution(\n        Order memory order,\n        OrderType orderType,\n        uint256 tokenId,\n        uint256 amount,\n        address taker\n    ) internal pure returns (bytes memory executionBatch) {\n        /* Initialize the batch. Constructing it manually in calldata packing allows for cheaper delegate execution. */\n        uint256 arrayLength = Transfer_size + One_word;\n        uint256 executionBatchLength = ExecutionBatch_base_size + arrayLength;\n        executionBatch = new bytes(executionBatchLength);\n        assembly {\n            let calldataPointer := add(\n                executionBatch,\n                ExecutionBatch_calldata_offset\n            )\n            mstore(add(calldataPointer, ExecutionBatch_taker_offset), taker)\n            mstore(\n                add(calldataPointer, ExecutionBatch_orderType_offset),\n                orderType\n            )\n            mstore(\n                add(calldataPointer, ExecutionBatch_transfers_pointer_offset),\n                ExecutionBatch_transfers_offset\n            ) // set the transfers pointer\n            mstore(add(calldataPointer, ExecutionBatch_transfers_offset), 1) // set the length of the transfers array\n        }\n\n        /* Insert the transfer into the batch. */\n        _insertNonfungibleTransfer(executionBatch, order, tokenId, amount);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/Validation.sol:143:9:\n    |\n143 |         uint256 amountTaken = amountTaken[order.trader][bytes32(order.salt)][listingIndex];\n    |         ^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/Validation.sol:17:5:\n   |\n17 |     mapping(address => mapping(bytes32 => mapping(uint256 => uint256))) public amountTaken;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","severity":"warning","sourceLocation":{"file":"contracts/Validation.sol","start":5307,"end":5326},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/Validation.sol:144:9:\n    |\n144 |         uint256 pendingAmountTaken = pendingAmountTaken[exchange.index][listingIndex];\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/Validation.sol:139:9:\n    |\n139 |         uint256[][] memory pendingAmountTaken\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","severity":"warning","sourceLocation":{"file":"contracts/Validation.sol","start":5399,"end":5425},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/Signatures.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.number' in your code which we are planning to change in the near   │\n│ future. 'block.number' currently returns the number of the L1 batch. After the changes it will   │\n│ be returning the number of the L2 block.                                                         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"17","start":12269,"end":12281},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/Signatures.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"17","start":13133,"end":13159},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.timestamp' in your code, which might lead to unexpected behaviour. │\n│ 'block.timestamp' actually refers to the timestamp of the whole batch that will be sent to L1.   │\n│ We are planning to change this in the near future so that it returns the timestamp of the L2     │\n│ block. A separate method will be introduced for accessing the timestamp of the L1 batch.         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/Validation.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are using 'block.timestamp' in your code, which might lead to unexpected behaviour. │\n│ 'block.timestamp' actually refers to the timestamp of the whole batch that will be sent to L1.   │\n│ We are planning to change this in the near future so that it returns the timestamp of the L2     │\n│ block. A separate method will be introduced for accessing the timestamp of the L1 batch.         │\n│ More information here:                                                                           │\n│ https://github.com/zkSync-Community-Hub/zkync-developers/discussions/32                          │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"18","start":1000,"end":1015},"type":"Warning"}],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Darwin.appleclang","zk_version":"1.3.14","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1563],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1564,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1563,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1563],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[133]},"id":134,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"132:133:1","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":133,"linearizedBaseContracts":[133],"name":"IERC1967","nameLocation":"276:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"291:68:1","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":120,"name":"Upgraded","nameLocation":"370:8:1","nodeType":"EventDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"395:14:1","nodeType":"VariableDeclaration","scope":120,"src":"379:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"379:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"378:32:1"},"src":"364:47:1"},{"anonymous":false,"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"417:67:1","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":127,"name":"AdminChanged","nameLocation":"495:12:1","nodeType":"EventDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"516:13:1","nodeType":"VariableDeclaration","scope":127,"src":"508:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":125,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"539:8:1","nodeType":"VariableDeclaration","scope":127,"src":"531:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"531:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"507:41:1"},"src":"489:60:1"},{"anonymous":false,"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"555:59:1","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":132,"name":"BeaconUpgraded","nameLocation":"625:14:1","nodeType":"EventDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"656:6:1","nodeType":"VariableDeclaration","scope":132,"src":"640:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"639:24:1"},"src":"619:45:1"}],"scope":134,"src":"266:400:1","usedErrors":[]}],"src":"107:560:1"}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[143]},"id":144,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":135,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"138:203:2","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":143,"linearizedBaseContracts":[143],"name":"IERC1822Proxiable","nameLocation":"352:17:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"376:438:2","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":142,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"828:13:2","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"841:2:2"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":142,"src":"867:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"867:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"866:9:2"},"scope":143,"src":"819:57:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":144,"src":"342:536:2","usedErrors":[]}],"src":"113:766:2"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","exportedSymbols":{"Address":[1541],"ERC1967Proxy":[180],"ERC1967Upgrade":[484],"IBeacon":[612],"IERC1822Proxiable":[143],"IERC1967":[133],"Proxy":[536],"StorageSlot":[1673]},"id":181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":145,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:3"},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":181,"sourceUnit":537,"src":"139:22:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","file":"./ERC1967Upgrade.sol","id":147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":181,"sourceUnit":485,"src":"162:30:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":149,"name":"Proxy","nameLocations":["592:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":536,"src":"592:5:3"},"id":150,"nodeType":"InheritanceSpecifier","src":"592:5:3"},{"baseName":{"id":151,"name":"ERC1967Upgrade","nameLocations":["599:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":484,"src":"599:14:3"},"id":152,"nodeType":"InheritanceSpecifier","src":"599:14:3"}],"canonicalName":"ERC1967Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"194:372:3","text":" @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."},"fullyImplemented":true,"id":180,"linearizedBaseContracts":[180,484,133,536],"name":"ERC1967Proxy","nameLocation":"576:12:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":166,"nodeType":"Block","src":"1014:56:3","statements":[{"expression":{"arguments":[{"id":161,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"1042:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":162,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"1050:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1057:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":160,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"1024:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":165,"nodeType":"ExpressionStatement","src":"1024:39:3"}]},"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"620:333:3","text":" @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializing the storage of the proxy like a Solidity constructor."},"id":167,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"_logic","nameLocation":"978:6:3","nodeType":"VariableDeclaration","scope":167,"src":"970:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"_data","nameLocation":"999:5:3","nodeType":"VariableDeclaration","scope":167,"src":"986:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":156,"name":"bytes","nodeType":"ElementaryTypeName","src":"986:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"969:36:3"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"1014:0:3"},"scope":180,"src":"958:112:3","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[501],"body":{"id":178,"nodeType":"Block","src":"1229:59:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":174,"name":"ERC1967Upgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"1246:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Upgrade_$484_$","typeString":"type(contract ERC1967Upgrade)"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1261:18:3","memberName":"_getImplementation","nodeType":"MemberAccess","referencedDeclaration":210,"src":"1246:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1246:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":173,"id":177,"nodeType":"Return","src":"1239:42:3"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1076:67:3","text":" @dev Returns the current implementation address."},"id":179,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1157:15:3","nodeType":"FunctionDefinition","overrides":{"id":170,"nodeType":"OverrideSpecifier","overrides":[],"src":"1197:8:3"},"parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"1172:2:3"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"impl","nameLocation":"1223:4:3","nodeType":"VariableDeclaration","scope":179,"src":"1215:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1215:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1214:14:3"},"scope":180,"src":"1148:140:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":181,"src":"567:723:3","usedErrors":[]}],"src":"114:1177:3"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","exportedSymbols":{"Address":[1541],"ERC1967Upgrade":[484],"IBeacon":[612],"IERC1822Proxiable":[143],"IERC1967":[133],"StorageSlot":[1673]},"id":485,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":182,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:4"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":485,"sourceUnit":613,"src":"141:31:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":485,"sourceUnit":134,"src":"173:39:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":485,"sourceUnit":144,"src":"213:45:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":485,"sourceUnit":1542,"src":"259:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":485,"sourceUnit":1674,"src":"293:37:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":189,"name":"IERC1967","nameLocations":["553:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":133,"src":"553:8:4"},"id":190,"nodeType":"InheritanceSpecifier","src":"553:8:4"}],"canonicalName":"ERC1967Upgrade","contractDependencies":[],"contractKind":"contract","documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"332:184:4","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":484,"linearizedBaseContracts":[484,133],"name":"ERC1967Upgrade","nameLocation":"535:14:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":193,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"672:14:4","nodeType":"VariableDeclaration","scope":484,"src":"647:108:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"647:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"689:66:4","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"762:214:4","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":197,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1007:20:4","nodeType":"VariableDeclaration","scope":484,"src":"981:115:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"981:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1030:66:4","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":209,"nodeType":"Block","src":"1237:78:4","statements":[{"expression":{"expression":{"arguments":[{"id":205,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"1281:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":203,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1254:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1673_$","typeString":"type(library StorageSlot)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1266:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1595,"src":"1254:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1569_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1254:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1569_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1303:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1568,"src":"1254:54:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":202,"id":208,"nodeType":"Return","src":"1247:61:4"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"1103:67:4","text":" @dev Returns the current implementation address."},"id":210,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1184:18:4","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"1202:2:4"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":210,"src":"1228:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:9:4"},"scope":484,"src":"1175:140:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":233,"nodeType":"Block","src":"1469:196:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":219,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1506:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":217,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"1487:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1541_$","typeString":"type(library Address)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1229,"src":"1487:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1487:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1526:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1479:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1479:95:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"ExpressionStatement","src":"1479:95:4"},{"expression":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":227,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"1611:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":224,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1584:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1673_$","typeString":"type(library StorageSlot)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1596:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1595,"src":"1584:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1569_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1584:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1569_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1633:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1568,"src":"1584:54:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":230,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1641:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1584:74:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":232,"nodeType":"ExpressionStatement","src":"1584:74:4"}]},"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"1321:80:4","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":234,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1415:18:4","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"newImplementation","nameLocation":"1442:17:4","nodeType":"VariableDeclaration","scope":234,"src":"1434:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"1434:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1433:27:4"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"1469:0:4"},"scope":484,"src":"1406:259:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":248,"nodeType":"Block","src":"1827:96:4","statements":[{"expression":{"arguments":[{"id":241,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1856:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":240,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"1837:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":243,"nodeType":"ExpressionStatement","src":"1837:37:4"},{"eventCall":{"arguments":[{"id":245,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1898:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":244,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"1889:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1889:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"1884:32:4"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"1671:95:4","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":249,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"1780:10:4","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"newImplementation","nameLocation":"1799:17:4","nodeType":"VariableDeclaration","scope":249,"src":"1791:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"1791:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1790:27:4"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"1827:0:4"},"scope":484,"src":"1771:152:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":278,"nodeType":"Block","src":"2155:167:4","statements":[{"expression":{"arguments":[{"id":260,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2176:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"2165:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2165:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":262,"nodeType":"ExpressionStatement","src":"2165:29:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":263,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"2208:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2213:6:4","memberName":"length","nodeType":"MemberAccess","src":"2208:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2222:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2208:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":267,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2227:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":277,"nodeType":"IfStatement","src":"2204:112:4","trueBody":{"id":276,"nodeType":"Block","src":"2238:78:4","statements":[{"expression":{"arguments":[{"id":272,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2281:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":273,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"2300:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":269,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2252:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1541_$","typeString":"type(library Address)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:20:4","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1428,"src":"2252:28:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2252:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":275,"nodeType":"ExpressionStatement","src":"2252:53:4"}]}}]},"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"1929:123:4","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":279,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2066:17:4","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"newImplementation","nameLocation":"2092:17:4","nodeType":"VariableDeclaration","scope":279,"src":"2084:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"2084:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"data","nameLocation":"2124:4:4","nodeType":"VariableDeclaration","scope":279,"src":"2111:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":253,"name":"bytes","nodeType":"ElementaryTypeName","src":"2111:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"forceCall","nameLocation":"2135:9:4","nodeType":"VariableDeclaration","scope":279,"src":"2130:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":255,"name":"bool","nodeType":"ElementaryTypeName","src":"2130:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2083:62:4"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"2155:0:4"},"scope":484,"src":"2057:265:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":331,"nodeType":"Block","src":"2596:820:4","statements":[{"condition":{"expression":{"arguments":[{"id":291,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2937:14:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":289,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"2910:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1673_$","typeString":"type(library StorageSlot)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2922:14:4","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1606,"src":"2910:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1572_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2910:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1572_storage_ptr","typeString":"struct StorageSlot.BooleanSlot storage pointer"}},"id":293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2953:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1571,"src":"2910:48:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":329,"nodeType":"Block","src":"3028:382:4","statements":[{"clauses":[{"block":{"id":314,"nodeType":"Block","src":"3122:115:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":308,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3148:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":309,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3156:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3148:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3178:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3140:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3140:82:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"ExpressionStatement","src":"3140:82:4"}]},"errorName":"","id":315,"nodeType":"TryCatchClause","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"slot","nameLocation":"3116:4:4","nodeType":"VariableDeclaration","scope":315,"src":"3108:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:14:4"},"src":"3099:138:4"},{"block":{"id":320,"nodeType":"Block","src":"3244:89:4","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3269:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":316,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3262:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3262:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":319,"nodeType":"ExpressionStatement","src":"3262:56:4"}]},"errorName":"","id":321,"nodeType":"TryCatchClause","src":"3238:95:4"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":300,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"3064:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":299,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"3046:17:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$143_$","typeString":"type(contract IERC1822Proxiable)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$143","typeString":"contract IERC1822Proxiable"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3083:13:4","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":142,"src":"3046:50:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:52:4","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":322,"nodeType":"TryStatement","src":"3042:291:4"},{"expression":{"arguments":[{"id":324,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"3364:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":325,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3383:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":326,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3389:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":323,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3346:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3346:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"3346:53:4"}]},"id":330,"nodeType":"IfStatement","src":"2906:504:4","trueBody":{"id":298,"nodeType":"Block","src":"2960:62:4","statements":[{"expression":{"arguments":[{"id":295,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"2993:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":294,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2974:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2974:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":297,"nodeType":"ExpressionStatement","src":"2974:37:4"}]}}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"2328:161:4","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":332,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2503:21:4","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"newImplementation","nameLocation":"2533:17:4","nodeType":"VariableDeclaration","scope":332,"src":"2525:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"data","nameLocation":"2565:4:4","nodeType":"VariableDeclaration","scope":332,"src":"2552:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":283,"name":"bytes","nodeType":"ElementaryTypeName","src":"2552:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"forceCall","nameLocation":"2576:9:4","nodeType":"VariableDeclaration","scope":332,"src":"2571:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"2571:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2524:62:4"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"2596:0:4"},"scope":484,"src":"2494:922:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"3422:189:4","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":336,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3642:11:4","nodeType":"VariableDeclaration","scope":484,"src":"3616:106:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3616:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:66:4","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"3837:69:4","statements":[{"expression":{"expression":{"arguments":[{"id":344,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3881:11:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":342,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"3854:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1673_$","typeString":"type(library StorageSlot)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3866:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1595,"src":"3854:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1569_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1569_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3894:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1568,"src":"3854:45:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":341,"id":347,"nodeType":"Return","src":"3847:52:4"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"3729:50:4","text":" @dev Returns the current admin."},"id":349,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"3793:9:4","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"3802:2:4"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":349,"src":"3828:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"3828:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3827:9:4"},"scope":484,"src":"3784:122:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":374,"nodeType":"Block","src":"4033:156:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4051:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4071:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4063:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"4063:7:4","typeDescriptions":{}}},"id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4063:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4051:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4075:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4043:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":364,"nodeType":"ExpressionStatement","src":"4043:73:4"},{"expression":{"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":368,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4153:11:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":365,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"4126:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1673_$","typeString":"type(library StorageSlot)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4138:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1595,"src":"4126:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1569_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4126:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1569_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4166:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1568,"src":"4126:45:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":371,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4174:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4126:56:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":373,"nodeType":"ExpressionStatement","src":"4126:56:4"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"3912:71:4","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":375,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3997:9:4","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"newAdmin","nameLocation":"4015:8:4","nodeType":"VariableDeclaration","scope":375,"src":"4007:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4006:18:4"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"4033:0:4"},"scope":484,"src":"3988:201:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":391,"nodeType":"Block","src":"4349:86:4","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4377:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4377:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":384,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4390:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":381,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"4364:12:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4364:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"EmitStatement","src":"4359:40:4"},{"expression":{"arguments":[{"id":388,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4419:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":387,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4409:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4409:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"4409:19:4"}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"4195:100:4","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":392,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4309:12:4","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"newAdmin","nameLocation":"4330:8:4","nodeType":"VariableDeclaration","scope":392,"src":"4322:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":377,"name":"address","nodeType":"ElementaryTypeName","src":"4322:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4321:18:4"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"4349:0:4"},"scope":484,"src":"4300:135:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"4441:232:4","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":396,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"4704:12:4","nodeType":"VariableDeclaration","scope":484,"src":"4678:107:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4678:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4719:66:4","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":408,"nodeType":"Block","src":"4902:70:4","statements":[{"expression":{"expression":{"arguments":[{"id":404,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4946:12:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":402,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"4919:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1673_$","typeString":"type(library StorageSlot)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4931:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1595,"src":"4919:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1569_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1569_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4960:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1568,"src":"4919:46:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":401,"id":407,"nodeType":"Return","src":"4912:53:4"}]},"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"4792:51:4","text":" @dev Returns the current beacon."},"id":409,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"4857:10:4","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"4867:2:4"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"4893:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"4893:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4892:9:4"},"scope":484,"src":"4848:124:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":444,"nodeType":"Block","src":"5101:324:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":418,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5138:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":416,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"5119:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1541_$","typeString":"type(library Address)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5127:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1229,"src":"5119:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5119:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5150:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5111:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5111:79:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"5111:79:4"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":427,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5248:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":426,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"5240:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$612_$","typeString":"type(contract IBeacon)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5240:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$612","typeString":"contract IBeacon"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5259:14:4","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":611,"src":"5240:33:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5240:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":424,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"5221:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1541_$","typeString":"type(library Address)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5229:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1229,"src":"5221:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5221:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5290:50:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5200:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5200:150:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"5200:150:4"},{"expression":{"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":438,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"5387:12:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":435,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"5360:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1673_$","typeString":"type(library StorageSlot)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5372:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1595,"src":"5360:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1569_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5360:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1569_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5401:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1568,"src":"5360:46:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":441,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5409:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5360:58:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":443,"nodeType":"ExpressionStatement","src":"5360:58:4"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"4978:71:4","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":445,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5063:10:4","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"newBeacon","nameLocation":"5082:9:4","nodeType":"VariableDeclaration","scope":445,"src":"5074:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"5074:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5073:19:4"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"5101:0:4"},"scope":484,"src":"5054:371:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":482,"nodeType":"Block","src":"5824:217:4","statements":[{"expression":{"arguments":[{"id":456,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5845:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"5834:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":458,"nodeType":"ExpressionStatement","src":"5834:21:4"},{"eventCall":{"arguments":[{"id":460,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5885:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":459,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"5870:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5870:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"EmitStatement","src":"5865:30:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":463,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"5909:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5914:6:4","memberName":"length","nodeType":"MemberAccess","src":"5909:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5923:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5909:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":467,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"5928:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5909:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":481,"nodeType":"IfStatement","src":"5905:130:4","trueBody":{"id":480,"nodeType":"Block","src":"5939:96:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":473,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5990:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"5982:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$612_$","typeString":"type(contract IBeacon)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$612","typeString":"contract IBeacon"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:14:4","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":611,"src":"5982:33:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":477,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6019:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":469,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"5953:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1541_$","typeString":"type(library Address)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5961:20:4","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1428,"src":"5953:28:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5953:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":479,"nodeType":"ExpressionStatement","src":"5953:71:4"}]}}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"5431:292:4","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":483,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"5737:23:4","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"newBeacon","nameLocation":"5769:9:4","nodeType":"VariableDeclaration","scope":483,"src":"5761:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"5761:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"data","nameLocation":"5793:4:4","nodeType":"VariableDeclaration","scope":483,"src":"5780:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":449,"name":"bytes","nodeType":"ElementaryTypeName","src":"5780:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"forceCall","nameLocation":"5804:9:4","nodeType":"VariableDeclaration","scope":483,"src":"5799:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":451,"name":"bool","nodeType":"ElementaryTypeName","src":"5799:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5760:54:4"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"5824:0:4"},"scope":484,"src":"5728:313:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":485,"src":"517:5526:4","usedErrors":[]}],"src":"116:5928:4"}},"@openzeppelin/contracts/proxy/Proxy.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[536]},"id":537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":486,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"124:598:5","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":536,"linearizedBaseContracts":[536],"name":"Proxy","nameLocation":"741:5:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":494,"nodeType":"Block","src":"1008:835:5","statements":[{"AST":{"nodeType":"YulBlock","src":"1027:810:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1280:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1283:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1286:12:5"},"nodeType":"YulFunctionCall","src":"1286:14:5"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1267:12:5"},"nodeType":"YulFunctionCall","src":"1267:34:5"},"nodeType":"YulExpressionStatement","src":"1267:34:5"},{"nodeType":"YulVariableDeclaration","src":"1428:74:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1455:3:5"},"nodeType":"YulFunctionCall","src":"1455:5:5"},{"name":"implementation","nodeType":"YulIdentifier","src":"1462:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"1478:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1481:12:5"},"nodeType":"YulFunctionCall","src":"1481:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"1497:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1500:1:5","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1442:12:5"},"nodeType":"YulFunctionCall","src":"1442:60:5"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"1432:6:5","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1570:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1573:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1576:14:5"},"nodeType":"YulFunctionCall","src":"1576:16:5"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1555:14:5"},"nodeType":"YulFunctionCall","src":"1555:38:5"},"nodeType":"YulExpressionStatement","src":"1555:38:5"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1688:59:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1713:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1716:14:5"},"nodeType":"YulFunctionCall","src":"1716:16:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1706:6:5"},"nodeType":"YulFunctionCall","src":"1706:27:5"},"nodeType":"YulExpressionStatement","src":"1706:27:5"}]},"nodeType":"YulCase","src":"1681:66:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1686:1:5","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1768:59:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1793:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1796:14:5"},"nodeType":"YulFunctionCall","src":"1796:16:5"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1786:6:5"},"nodeType":"YulFunctionCall","src":"1786:27:5"},"nodeType":"YulExpressionStatement","src":"1786:27:5"}]},"nodeType":"YulCase","src":"1760:67:5","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"1614:6:5"},"nodeType":"YulSwitch","src":"1607:220:5"}]},"evmVersion":"london","externalReferences":[{"declaration":490,"isOffset":false,"isSlot":false,"src":"1462:14:5","valueSize":1}],"id":493,"nodeType":"InlineAssembly","src":"1018:819:5"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"753:190:5","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":495,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"957:9:5","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"implementation","nameLocation":"975:14:5","nodeType":"VariableDeclaration","scope":495,"src":"967:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"966:24:5"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[],"src":"1008:0:5"},"scope":536,"src":"948:895:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":496,"nodeType":"StructuredDocumentation","src":"1849:173:5","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."},"id":501,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2036:15:5","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2051:2:5"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":501,"src":"2085:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2084:9:5"},"scope":536,"src":"2027:67:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":513,"nodeType":"Block","src":"2360:72:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":505,"name":"_beforeFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2370:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"ExpressionStatement","src":"2370:17:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":509,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"2407:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":508,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2397:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"ExpressionStatement","src":"2397:28:5"}]},"documentation":{"id":502,"nodeType":"StructuredDocumentation","src":"2100:217:5","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":514,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2331:9:5","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"2340:2:5"},"returnParameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"2360:0:5"},"scope":536,"src":"2322:110:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":521,"nodeType":"Block","src":"2665:28:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":518,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2675:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"2675:11:5"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"2438:186:5","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":522,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"2637:2:5"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"2665:0:5"},"scope":536,"src":"2629:64:5","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":529,"nodeType":"Block","src":"2888:28:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":526,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2898:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2898:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"ExpressionStatement","src":"2898:11:5"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"2699:149:5","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."},"id":530,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"2860:2:5"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[],"src":"2888:0:5"},"scope":536,"src":"2853:63:5","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":534,"nodeType":"Block","src":"3242:2:5","statements":[]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"2922:271:5","text":" @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeFallback","nameLocation":"3207:15:5","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[],"src":"3222:2:5"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"3242:0:5"},"scope":536,"src":"3198:46:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":537,"src":"723:2523:5","usedErrors":[]}],"src":"99:3148:5"}},"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol","exportedSymbols":{"Address":[1541],"BeaconProxy":[602],"ERC1967Upgrade":[484],"IBeacon":[612],"IERC1822Proxiable":[143],"IERC1967":[133],"Proxy":[536],"StorageSlot":[1673]},"id":603,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":538,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:6"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"./IBeacon.sol","id":539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":603,"sourceUnit":613,"src":"137:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":603,"sourceUnit":537,"src":"161:22:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","file":"../ERC1967/ERC1967Upgrade.sol","id":541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":603,"sourceUnit":485,"src":"184:39:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":543,"name":"Proxy","nameLocations":["604:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":536,"src":"604:5:6"},"id":544,"nodeType":"InheritanceSpecifier","src":"604:5:6"},{"baseName":{"id":545,"name":"ERC1967Upgrade","nameLocations":["611:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":484,"src":"611:14:6"},"id":546,"nodeType":"InheritanceSpecifier","src":"611:14:6"}],"canonicalName":"BeaconProxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"225:354:6","text":" @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n conflict with the storage layout of the implementation behind the proxy.\n _Available since v3.4._"},"fullyImplemented":true,"id":602,"linearizedBaseContracts":[602,484,133,536],"name":"BeaconProxy","nameLocation":"589:11:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":560,"nodeType":"Block","src":"1115:61:6","statements":[{"expression":{"arguments":[{"id":555,"name":"beacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"1149:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":556,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"1157:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1163:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":554,"name":"_upgradeBeaconToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"1125:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"1125:44:6"}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"632:423:6","text":" @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}."},"id":561,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"beacon","nameLocation":"1080:6:6","nodeType":"VariableDeclaration","scope":561,"src":"1072:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"1072:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"data","nameLocation":"1101:4:6","nodeType":"VariableDeclaration","scope":561,"src":"1088:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":550,"name":"bytes","nodeType":"ElementaryTypeName","src":"1088:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1071:35:6"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"1115:0:6"},"scope":602,"src":"1060:116:6","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":570,"nodeType":"Block","src":"1305:36:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":567,"name":"_getBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"1322:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":566,"id":569,"nodeType":"Return","src":"1315:19:6"}]},"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"1182:59:6","text":" @dev Returns the current beacon address."},"id":571,"implemented":true,"kind":"function","modifiers":[],"name":"_beacon","nameLocation":"1255:7:6","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"1262:2:6"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":571,"src":"1296:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1295:9:6"},"scope":602,"src":"1246:95:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[501],"body":{"id":585,"nodeType":"Block","src":"1520:62:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":579,"name":"_getBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"1545:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1545:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":578,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"1537:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$612_$","typeString":"type(contract IBeacon)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1537:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$612","typeString":"contract IBeacon"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":611,"src":"1537:36:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1537:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":577,"id":584,"nodeType":"Return","src":"1530:45:6"}]},"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"1347:92:6","text":" @dev Returns the current implementation address of the associated beacon."},"id":586,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1453:15:6","nodeType":"FunctionDefinition","overrides":{"id":574,"nodeType":"OverrideSpecifier","overrides":[],"src":"1493:8:6"},"parameters":{"id":573,"nodeType":"ParameterList","parameters":[],"src":"1468:2:6"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":586,"src":"1511:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1510:9:6"},"scope":602,"src":"1444:138:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":600,"nodeType":"Block","src":"2032:61:6","statements":[{"expression":{"arguments":[{"id":595,"name":"beacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2066:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"2074:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2080:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":594,"name":"_upgradeBeaconToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2042:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2042:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":599,"nodeType":"ExpressionStatement","src":"2042:44:6"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"1588:367:6","text":" @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n Requirements:\n - `beacon` must be a contract.\n - The implementation returned by `beacon` must be a contract."},"id":601,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"1969:10:6","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"beacon","nameLocation":"1988:6:6","nodeType":"VariableDeclaration","scope":601,"src":"1980:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"1980:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"data","nameLocation":"2009:4:6","nodeType":"VariableDeclaration","scope":601,"src":"1996:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":590,"name":"bytes","nodeType":"ElementaryTypeName","src":"1996:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1979:35:6"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"2032:0:6"},"scope":602,"src":"1960:133:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":603,"src":"580:1515:6","usedErrors":[]}],"src":"112:1984:6"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[612]},"id":613,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":604,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"118:79:7","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":612,"linearizedBaseContracts":[612],"name":"IBeacon","nameLocation":"208:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"222:162:7","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":611,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"398:14:7","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[],"src":"412:2:7"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":611,"src":"438:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:9:7"},"scope":612,"src":"389:58:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":613,"src":"198:251:7","usedErrors":[]}],"src":"93:357:7"}},"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol","exportedSymbols":{"Address":[1541],"Context":[1563],"IBeacon":[612],"Ownable":[112],"UpgradeableBeacon":[687]},"id":688,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":614,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:8"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"./IBeacon.sol","id":615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":688,"sourceUnit":613,"src":"128:23:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"../../access/Ownable.sol","id":616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":688,"sourceUnit":113,"src":"152:34:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":688,"sourceUnit":1542,"src":"187:33:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":619,"name":"IBeacon","nameLocations":["573:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":612,"src":"573:7:8"},"id":620,"nodeType":"InheritanceSpecifier","src":"573:7:8"},{"baseName":{"id":621,"name":"Ownable","nameLocations":["582:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"582:7:8"},"id":622,"nodeType":"InheritanceSpecifier","src":"582:7:8"}],"canonicalName":"UpgradeableBeacon","contractDependencies":[],"contractKind":"contract","documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"222:320:8","text":" @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."},"fullyImplemented":true,"id":687,"linearizedBaseContracts":[687,112,1563,612],"name":"UpgradeableBeacon","nameLocation":"552:17:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":624,"mutability":"mutable","name":"_implementation","nameLocation":"612:15:8","nodeType":"VariableDeclaration","scope":687,"src":"596:31:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"634:90:8","text":" @dev Emitted when the implementation returned by the beacon is changed."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":629,"name":"Upgraded","nameLocation":"735:8:8","nodeType":"EventDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"760:14:8","nodeType":"VariableDeclaration","scope":629,"src":"744:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"744:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"743:32:8"},"src":"729:47:8"},{"body":{"id":639,"nodeType":"Block","src":"968:52:8","statements":[{"expression":{"arguments":[{"id":636,"name":"implementation_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"997:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":635,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"978:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"978:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"ExpressionStatement","src":"978:35:8"}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"782:144:8","text":" @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n beacon."},"id":640,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"implementation_","nameLocation":"951:15:8","nodeType":"VariableDeclaration","scope":640,"src":"943:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"943:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"942:25:8"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[],"src":"968:0:8"},"scope":687,"src":"931:89:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[611],"body":{"id":649,"nodeType":"Block","src":"1171:39:8","statements":[{"expression":{"id":647,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"1188:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":646,"id":648,"nodeType":"Return","src":"1181:22:8"}]},"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"1026:67:8","text":" @dev Returns the current implementation address."},"functionSelector":"5c60da1b","id":650,"implemented":true,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"1107:14:8","nodeType":"FunctionDefinition","overrides":{"id":643,"nodeType":"OverrideSpecifier","overrides":[],"src":"1144:8:8"},"parameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"1121:2:8"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":650,"src":"1162:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"1162:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1161:9:8"},"scope":687,"src":"1098:112:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":666,"nodeType":"Block","src":"1540:96:8","statements":[{"expression":{"arguments":[{"id":659,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"1569:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":658,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1550:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1550:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"1550:37:8"},{"eventCall":{"arguments":[{"id":663,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"1611:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":662,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"1602:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1602:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":665,"nodeType":"EmitStatement","src":"1597:32:8"}]},"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"1216:248:8","text":" @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."},"functionSelector":"3659cfe6","id":667,"implemented":true,"kind":"function","modifiers":[{"id":656,"kind":"modifierInvocation","modifierName":{"id":655,"name":"onlyOwner","nameLocations":["1530:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1530:9:8"},"nodeType":"ModifierInvocation","src":"1530:9:8"}],"name":"upgradeTo","nameLocation":"1478:9:8","nodeType":"FunctionDefinition","parameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"newImplementation","nameLocation":"1496:17:8","nodeType":"VariableDeclaration","scope":667,"src":"1488:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1487:27:8"},"returnParameters":{"id":657,"nodeType":"ParameterList","parameters":[],"src":"1540:0:8"},"scope":687,"src":"1469:167:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":685,"nodeType":"Block","src":"1874:163:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":676,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"1911:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":674,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"1892:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1541_$","typeString":"type(library Address)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1900:10:8","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1229,"src":"1892:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1931:53:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6","typeString":"literal_string \"UpgradeableBeacon: implementation is not a contract\""},"value":"UpgradeableBeacon: implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6","typeString":"literal_string \"UpgradeableBeacon: implementation is not a contract\""}],"id":673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1884:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1884:101:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"ExpressionStatement","src":"1884:101:8"},{"expression":{"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":681,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"1995:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":682,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"2013:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1995:35:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":684,"nodeType":"ExpressionStatement","src":"1995:35:8"}]},"documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"1642:164:8","text":" @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."},"id":686,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1820:18:8","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"newImplementation","nameLocation":"1847:17:8","nodeType":"VariableDeclaration","scope":686,"src":"1839:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"1839:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:27:8"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"1874:0:8"},"scope":687,"src":"1811:226:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":688,"src":"543:1496:8","usedErrors":[]}],"src":"103:1937:8"}},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","exportedSymbols":{"Address":[1541],"Context":[1563],"ERC1967Proxy":[180],"ERC1967Upgrade":[484],"IBeacon":[612],"IERC1822Proxiable":[143],"IERC1967":[133],"ITransparentUpgradeableProxy":[857],"Ownable":[112],"Proxy":[536],"ProxyAdmin":[823],"StorageSlot":[1673],"TransparentUpgradeableProxy":[1146]},"id":824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":689,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:9"},{"absolutePath":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","file":"./TransparentUpgradeableProxy.sol","id":690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":824,"sourceUnit":1147,"src":"141:43:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"../../access/Ownable.sol","id":691,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":824,"sourceUnit":113,"src":"185:34:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":693,"name":"Ownable","nameLocations":["473:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"473:7:9"},"id":694,"nodeType":"InheritanceSpecifier","src":"473:7:9"}],"canonicalName":"ProxyAdmin","contractDependencies":[],"contractKind":"contract","documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"221:228:9","text":" @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."},"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823,112,1563],"name":"ProxyAdmin","nameLocation":"459:10:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":727,"nodeType":"Block","src":"756:332:9","statements":[{"assignments":[704,706],"declarations":[{"constant":false,"id":704,"mutability":"mutable","name":"success","nameLocation":"929:7:9","nodeType":"VariableDeclaration","scope":727,"src":"924:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":703,"name":"bool","nodeType":"ElementaryTypeName","src":"924:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"returndata","nameLocation":"951:10:9","nodeType":"VariableDeclaration","scope":727,"src":"938:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":705,"name":"bytes","nodeType":"ElementaryTypeName","src":"938:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":714,"initialValue":{"arguments":[{"hexValue":"5c60da1b","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"991:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","typeString":"literal_string hex\"5c60da1b\""}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","typeString":"literal_string hex\"5c60da1b\""}],"expression":{"arguments":[{"id":709,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"973:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"}],"id":708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"965:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:9","typeDescriptions":{}}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"965:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"980:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"965:25:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"965:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"923:82:9"},{"expression":{"arguments":[{"id":716,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"1023:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1015:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1015:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":718,"nodeType":"ExpressionStatement","src":"1015:16:9"},{"expression":{"arguments":[{"id":721,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"1059:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1072:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"1072:7:9","typeDescriptions":{}}}],"id":724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1071:9:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":719,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1048:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1052:6:9","memberName":"decode","nodeType":"MemberAccess","src":"1048:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1048:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":702,"id":726,"nodeType":"Return","src":"1041:40:9"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"487:158:9","text":" @dev Returns the current implementation of `proxy`.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"204e1c7a","id":728,"implemented":true,"kind":"function","modifiers":[],"name":"getProxyImplementation","nameLocation":"659:22:9","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"proxy","nameLocation":"711:5:9","nodeType":"VariableDeclaration","scope":728,"src":"682:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":697,"nodeType":"UserDefinedTypeName","pathNode":{"id":696,"name":"ITransparentUpgradeableProxy","nameLocations":["682:28:9"],"nodeType":"IdentifierPath","referencedDeclaration":857,"src":"682:28:9"},"referencedDeclaration":857,"src":"682:28:9","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"}],"src":"681:36:9"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"747:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"746:9:9"},"scope":823,"src":"650:438:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":761,"nodeType":"Block","src":"1345:323:9","statements":[{"assignments":[738,740],"declarations":[{"constant":false,"id":738,"mutability":"mutable","name":"success","nameLocation":"1509:7:9","nodeType":"VariableDeclaration","scope":761,"src":"1504:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":737,"name":"bool","nodeType":"ElementaryTypeName","src":"1504:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"returndata","nameLocation":"1531:10:9","nodeType":"VariableDeclaration","scope":761,"src":"1518:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":739,"name":"bytes","nodeType":"ElementaryTypeName","src":"1518:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":748,"initialValue":{"arguments":[{"hexValue":"f851a440","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1571:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","typeString":"literal_string hex\"f851a440\""}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","typeString":"literal_string hex\"f851a440\""}],"expression":{"arguments":[{"id":743,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"1553:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"}],"id":742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1545:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"1545:7:9","typeDescriptions":{}}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1545:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1560:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"1545:25:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1545:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1503:82:9"},{"expression":{"arguments":[{"id":750,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"1603:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1595:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1595:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":752,"nodeType":"ExpressionStatement","src":"1595:16:9"},{"expression":{"arguments":[{"id":755,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"1639:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1652:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"1652:7:9","typeDescriptions":{}}}],"id":758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1651:9:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":753,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1628:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1632:6:9","memberName":"decode","nodeType":"MemberAccess","src":"1628:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1628:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":736,"id":760,"nodeType":"Return","src":"1621:40:9"}]},"documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"1094:149:9","text":" @dev Returns the current admin of `proxy`.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"f3b7dead","id":762,"implemented":true,"kind":"function","modifiers":[],"name":"getProxyAdmin","nameLocation":"1257:13:9","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"proxy","nameLocation":"1300:5:9","nodeType":"VariableDeclaration","scope":762,"src":"1271:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":731,"nodeType":"UserDefinedTypeName","pathNode":{"id":730,"name":"ITransparentUpgradeableProxy","nameLocations":["1271:28:9"],"nodeType":"IdentifierPath","referencedDeclaration":857,"src":"1271:28:9"},"referencedDeclaration":857,"src":"1271:28:9","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"}],"src":"1270:36:9"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":762,"src":"1336:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1335:9:9"},"scope":823,"src":"1248:420:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":779,"nodeType":"Block","src":"1947:44:9","statements":[{"expression":{"arguments":[{"id":776,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"1975:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":773,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"1957:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1963:11:9","memberName":"changeAdmin","nodeType":"MemberAccess","referencedDeclaration":844,"src":"1957:17:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"1957:27:9"}]},"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"1674:163:9","text":" @dev Changes the admin of `proxy` to `newAdmin`.\n Requirements:\n - This contract must be the current admin of `proxy`."},"functionSelector":"7eff275e","id":780,"implemented":true,"kind":"function","modifiers":[{"id":771,"kind":"modifierInvocation","modifierName":{"id":770,"name":"onlyOwner","nameLocations":["1937:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1937:9:9"},"nodeType":"ModifierInvocation","src":"1937:9:9"}],"name":"changeProxyAdmin","nameLocation":"1851:16:9","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"proxy","nameLocation":"1897:5:9","nodeType":"VariableDeclaration","scope":780,"src":"1868:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":765,"nodeType":"UserDefinedTypeName","pathNode":{"id":764,"name":"ITransparentUpgradeableProxy","nameLocations":["1868:28:9"],"nodeType":"IdentifierPath","referencedDeclaration":857,"src":"1868:28:9"},"referencedDeclaration":857,"src":"1868:28:9","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"newAdmin","nameLocation":"1912:8:9","nodeType":"VariableDeclaration","scope":780,"src":"1904:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"1904:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1867:54:9"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"1947:0:9"},"scope":823,"src":"1842:149:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":797,"nodeType":"Block","src":"2298:48:9","statements":[{"expression":{"arguments":[{"id":794,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"2324:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":791,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"2308:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2314:9:9","memberName":"upgradeTo","nodeType":"MemberAccess","referencedDeclaration":849,"src":"2308:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"ExpressionStatement","src":"2308:31:9"}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"1997:194:9","text":" @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"99a88ec4","id":798,"implemented":true,"kind":"function","modifiers":[{"id":789,"kind":"modifierInvocation","modifierName":{"id":788,"name":"onlyOwner","nameLocations":["2288:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2288:9:9"},"nodeType":"ModifierInvocation","src":"2288:9:9"}],"name":"upgrade","nameLocation":"2205:7:9","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"proxy","nameLocation":"2242:5:9","nodeType":"VariableDeclaration","scope":798,"src":"2213:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":783,"nodeType":"UserDefinedTypeName","pathNode":{"id":782,"name":"ITransparentUpgradeableProxy","nameLocations":["2213:28:9"],"nodeType":"IdentifierPath","referencedDeclaration":857,"src":"2213:28:9"},"referencedDeclaration":857,"src":"2213:28:9","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"implementation","nameLocation":"2257:14:9","nodeType":"VariableDeclaration","scope":798,"src":"2249:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2212:60:9"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"2298:0:9"},"scope":823,"src":"2196:150:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":821,"nodeType":"Block","src":"2778:79:9","statements":[{"expression":{"arguments":[{"id":817,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"2829:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2845:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":811,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"2788:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2794:16:9","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":856,"src":"2788:22:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory) payable external"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":814,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2818:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2822:5:9","memberName":"value","nodeType":"MemberAccess","src":"2818:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2788:40:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (address,bytes memory) payable external"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"ExpressionStatement","src":"2788:62:9"}]},"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"2352:255:9","text":" @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\n {TransparentUpgradeableProxy-upgradeToAndCall}.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"9623609d","id":822,"implemented":true,"kind":"function","modifiers":[{"id":809,"kind":"modifierInvocation","modifierName":{"id":808,"name":"onlyOwner","nameLocations":["2768:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2768:9:9"},"nodeType":"ModifierInvocation","src":"2768:9:9"}],"name":"upgradeAndCall","nameLocation":"2621:14:9","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"proxy","nameLocation":"2674:5:9","nodeType":"VariableDeclaration","scope":822,"src":"2645:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"},"typeName":{"id":801,"nodeType":"UserDefinedTypeName","pathNode":{"id":800,"name":"ITransparentUpgradeableProxy","nameLocations":["2645:28:9"],"nodeType":"IdentifierPath","referencedDeclaration":857,"src":"2645:28:9"},"referencedDeclaration":857,"src":"2645:28:9","typeDescriptions":{"typeIdentifier":"t_contract$_ITransparentUpgradeableProxy_$857","typeString":"contract ITransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"implementation","nameLocation":"2697:14:9","nodeType":"VariableDeclaration","scope":822,"src":"2689:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"data","nameLocation":"2734:4:9","nodeType":"VariableDeclaration","scope":822,"src":"2721:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":805,"name":"bytes","nodeType":"ElementaryTypeName","src":"2721:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2635:109:9"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[],"src":"2778:0:9"},"scope":823,"src":"2612:245:9","stateMutability":"payable","virtual":true,"visibility":"public"}],"scope":824,"src":"450:2409:9","usedErrors":[]}],"src":"116:2744:9"}},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","exportedSymbols":{"Address":[1541],"ERC1967Proxy":[180],"ERC1967Upgrade":[484],"IBeacon":[612],"IERC1822Proxiable":[143],"IERC1967":[133],"ITransparentUpgradeableProxy":[857],"Proxy":[536],"StorageSlot":[1673],"TransparentUpgradeableProxy":[1146]},"id":1147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":825,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"133:23:10"},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","file":"../ERC1967/ERC1967Proxy.sol","id":826,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":181,"src":"158:37:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":828,"name":"IERC1967","nameLocations":["679:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":133,"src":"679:8:10"},"id":829,"nodeType":"InheritanceSpecifier","src":"679:8:10"}],"canonicalName":"ITransparentUpgradeableProxy","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"197:439:10","text":" @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n does not implement this interface directly, and some of its functions are implemented by an internal dispatch\n mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n include them in the ABI so this interface must be used to interact with it."},"fullyImplemented":false,"id":857,"linearizedBaseContracts":[857,133],"name":"ITransparentUpgradeableProxy","nameLocation":"647:28:10","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f851a440","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"admin","nameLocation":"703:5:10","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[],"src":"708:2:10"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"734:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"733:9:10"},"scope":857,"src":"694:49:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5c60da1b","id":839,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"758:14:10","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"772:2:10"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":839,"src":"798:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"798:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"797:9:10"},"scope":857,"src":"749:58:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8f283970","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"822:11:10","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"834:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"834:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"833:9:10"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"851:0:10"},"scope":857,"src":"813:39:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3659cfe6","id":849,"implemented":false,"kind":"function","modifiers":[],"name":"upgradeTo","nameLocation":"867:9:10","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"877:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:9:10"},"returnParameters":{"id":848,"nodeType":"ParameterList","parameters":[],"src":"894:0:10"},"scope":857,"src":"858:37:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4f1ef286","id":856,"implemented":false,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"910:16:10","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":856,"src":"927:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"927:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":856,"src":"936:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":852,"name":"bytes","nodeType":"ElementaryTypeName","src":"936:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"926:23:10"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"966:0:10"},"scope":857,"src":"901:66:10","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1147,"src":"637:332:10","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":859,"name":"ERC1967Proxy","nameLocations":["3429:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":180,"src":"3429:12:10"},"id":860,"nodeType":"InheritanceSpecifier","src":"3429:12:10"}],"canonicalName":"TransparentUpgradeableProxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":858,"nodeType":"StructuredDocumentation","src":"971:2417:10","text":" @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\n mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n implementation.\n WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\n will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\n and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\n render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised."},"fullyImplemented":true,"id":1146,"linearizedBaseContracts":[1146,180,484,133,536],"name":"TransparentUpgradeableProxy","nameLocation":"3398:27:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":878,"nodeType":"Block","src":"3763:37:10","statements":[{"expression":{"arguments":[{"id":875,"name":"admin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3786:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":874,"name":"_changeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"3773:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3773:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":877,"nodeType":"ExpressionStatement","src":"3773:20:10"}]},"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"3448:210:10","text":" @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."},"id":879,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":870,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"3748:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":871,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"3756:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":872,"kind":"baseConstructorSpecifier","modifierName":{"id":869,"name":"ERC1967Proxy","nameLocations":["3735:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":180,"src":"3735:12:10"},"nodeType":"ModifierInvocation","src":"3735:27:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"_logic","nameLocation":"3683:6:10","nodeType":"VariableDeclaration","scope":879,"src":"3675:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"3675:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"admin_","nameLocation":"3699:6:10","nodeType":"VariableDeclaration","scope":879,"src":"3691:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"_data","nameLocation":"3720:5:10","nodeType":"VariableDeclaration","scope":879,"src":"3707:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":866,"name":"bytes","nodeType":"ElementaryTypeName","src":"3707:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3674:52:10"},"returnParameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"3763:0:10"},"scope":1146,"src":"3663:137:10","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":894,"nodeType":"Block","src":"4151:115:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":882,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4165:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4169:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4165:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":884,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4179:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4179:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4165:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":892,"nodeType":"Block","src":"4224:36:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":889,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[988],"referencedDeclaration":988,"src":"4238:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4238:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"ExpressionStatement","src":"4238:11:10"}]},"id":893,"nodeType":"IfStatement","src":"4161:99:10","trueBody":{"id":888,"nodeType":"Block","src":"4192:26:10","statements":[{"id":887,"nodeType":"PlaceholderStatement","src":"4206:1:10"}]}}]},"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"3806:321:10","text":" @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\n implementation provides a function with the same selector."},"id":895,"name":"ifAdmin","nameLocation":"4141:7:10","nodeType":"ModifierDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[],"src":"4148:2:10"},"src":"4132:134:10","virtual":false,"visibility":"internal"},{"baseFunctions":[514],"body":{"id":987,"nodeType":"Block","src":"4454:1055:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":900,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4468:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4472:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4468:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":902,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4482:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4482:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4468:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":985,"nodeType":"Block","src":"5461:42:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":980,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5475:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TransparentUpgradeableProxy_$1146_$","typeString":"type(contract super TransparentUpgradeableProxy)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5481:9:10","memberName":"_fallback","nodeType":"MemberAccess","referencedDeclaration":514,"src":"5475:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5475:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":984,"nodeType":"ExpressionStatement","src":"5475:17:10"}]},"id":986,"nodeType":"IfStatement","src":"4464:1039:10","trueBody":{"id":979,"nodeType":"Block","src":"4495:960:10","statements":[{"assignments":[906],"declarations":[{"constant":false,"id":906,"mutability":"mutable","name":"ret","nameLocation":"4522:3:10","nodeType":"VariableDeclaration","scope":979,"src":"4509:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4509:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":907,"nodeType":"VariableDeclarationStatement","src":"4509:16:10"},{"assignments":[909],"declarations":[{"constant":false,"id":909,"mutability":"mutable","name":"selector","nameLocation":"4546:8:10","nodeType":"VariableDeclaration","scope":979,"src":"4539:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":908,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4539:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":912,"initialValue":{"expression":{"id":910,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4557:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4561:3:10","memberName":"sig","nodeType":"MemberAccess","src":"4557:7:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"4539:25:10"},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":913,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"4582:8:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":914,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"4594:28:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$857_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4623:9:10","memberName":"upgradeTo","nodeType":"MemberAccess","referencedDeclaration":849,"src":"4594:38:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function ITransparentUpgradeableProxy.upgradeTo(address)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4633:8:10","memberName":"selector","nodeType":"MemberAccess","src":"4594:47:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4582:59:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"4712:8:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":925,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"4724:28:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$857_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4753:16:10","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":856,"src":"4724:45:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function ITransparentUpgradeableProxy.upgradeToAndCall(address,bytes memory) payable"}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4770:8:10","memberName":"selector","nodeType":"MemberAccess","src":"4724:54:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4712:66:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":935,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"4856:8:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":936,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"4868:28:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$857_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4897:11:10","memberName":"changeAdmin","nodeType":"MemberAccess","referencedDeclaration":844,"src":"4868:40:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function ITransparentUpgradeableProxy.changeAdmin(address)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4909:8:10","memberName":"selector","nodeType":"MemberAccess","src":"4868:49:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4856:61:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":946,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"4990:8:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":947,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"5002:28:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$857_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5031:5:10","memberName":"admin","nodeType":"MemberAccess","referencedDeclaration":834,"src":"5002:34:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_address_$","typeString":"function ITransparentUpgradeableProxy.admin() view returns (address)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5037:8:10","memberName":"selector","nodeType":"MemberAccess","src":"5002:43:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4990:55:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":957,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"5112:8:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":958,"name":"ITransparentUpgradeableProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"5124:28:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransparentUpgradeableProxy_$857_$","typeString":"type(contract ITransparentUpgradeableProxy)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5153:14:10","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":839,"src":"5124:43:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_address_$","typeString":"function ITransparentUpgradeableProxy.implementation() view returns (address)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5168:8:10","memberName":"selector","nodeType":"MemberAccess","src":"5124:52:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5112:64:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":972,"nodeType":"Block","src":"5248:109:10","statements":[{"expression":{"arguments":[{"hexValue":"5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5273:68:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d","typeString":"literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""},"value":"TransparentUpgradeableProxy: admin cannot fallback to proxy target"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d","typeString":"literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""}],"id":968,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5266:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5266:76:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"ExpressionStatement","src":"5266:76:10"}]},"id":973,"nodeType":"IfStatement","src":"5108:249:10","trueBody":{"id":967,"nodeType":"Block","src":"5178:64:10","statements":[{"expression":{"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":962,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"5196:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":963,"name":"_dispatchImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"5202:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5202:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5196:31:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":966,"nodeType":"ExpressionStatement","src":"5196:31:10"}]}},"id":974,"nodeType":"IfStatement","src":"4986:371:10","trueBody":{"id":956,"nodeType":"Block","src":"5047:55:10","statements":[{"expression":{"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":951,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"5065:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":952,"name":"_dispatchAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"5071:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5071:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5065:22:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":955,"nodeType":"ExpressionStatement","src":"5065:22:10"}]}},"id":975,"nodeType":"IfStatement","src":"4852:505:10","trueBody":{"id":945,"nodeType":"Block","src":"4919:61:10","statements":[{"expression":{"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":940,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4937:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":941,"name":"_dispatchChangeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4943:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4937:28:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":944,"nodeType":"ExpressionStatement","src":"4937:28:10"}]}},"id":976,"nodeType":"IfStatement","src":"4708:649:10","trueBody":{"id":934,"nodeType":"Block","src":"4780:66:10","statements":[{"expression":{"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":929,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4798:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":930,"name":"_dispatchUpgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"4804:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4804:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4798:33:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":933,"nodeType":"ExpressionStatement","src":"4798:33:10"}]}},"id":977,"nodeType":"IfStatement","src":"4578:779:10","trueBody":{"id":923,"nodeType":"Block","src":"4643:59:10","statements":[{"expression":{"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":918,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4661:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":919,"name":"_dispatchUpgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"4667:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$","typeString":"function () returns (bytes memory)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4667:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4661:26:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":922,"nodeType":"ExpressionStatement","src":"4661:26:10"}]}},{"AST":{"nodeType":"YulBlock","src":"5379:66:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"5408:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5413:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5404:3:10"},"nodeType":"YulFunctionCall","src":"5404:14:10"},{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"5426:3:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5420:5:10"},"nodeType":"YulFunctionCall","src":"5420:10:10"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"5397:6:10"},"nodeType":"YulFunctionCall","src":"5397:34:10"},"nodeType":"YulExpressionStatement","src":"5397:34:10"}]},"evmVersion":"london","externalReferences":[{"declaration":906,"isOffset":false,"isSlot":false,"src":"5408:3:10","valueSize":1},{"declaration":906,"isOffset":false,"isSlot":false,"src":"5426:3:10","valueSize":1}],"id":978,"nodeType":"InlineAssembly","src":"5370:75:10"}]}}]},"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"4272:130:10","text":" @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior"},"id":988,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"4416:9:10","nodeType":"FunctionDefinition","overrides":{"id":898,"nodeType":"OverrideSpecifier","overrides":[],"src":"4445:8:10"},"parameters":{"id":897,"nodeType":"ParameterList","parameters":[],"src":"4425:2:10"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"4454:0:10"},"scope":1146,"src":"4407:1102:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1007,"nodeType":"Block","src":"5917:108:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":994,"name":"_requireZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"5927:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5927:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"ExpressionStatement","src":"5927:19:10"},{"assignments":[998],"declarations":[{"constant":false,"id":998,"mutability":"mutable","name":"admin","nameLocation":"5965:5:10","nodeType":"VariableDeclaration","scope":1007,"src":"5957:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"5957:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1001,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":999,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5973:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5973:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5957:27:10"},{"expression":{"arguments":[{"id":1004,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"6012:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1002,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6001:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6005:6:10","memberName":"encode","nodeType":"MemberAccess","src":"6001:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6001:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":993,"id":1006,"nodeType":"Return","src":"5994:24:10"}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"5515:340:10","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1008,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchAdmin","nameLocation":"5869:14:10","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[],"src":"5883:2:10"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1008,"src":"5903:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":991,"name":"bytes","nodeType":"ElementaryTypeName","src":"5903:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5902:14:10"},"scope":1146,"src":"5860:165:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1027,"nodeType":"Block","src":"6451:132:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1014,"name":"_requireZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"6461:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6461:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"ExpressionStatement","src":"6461:19:10"},{"assignments":[1018],"declarations":[{"constant":false,"id":1018,"mutability":"mutable","name":"implementation","nameLocation":"6499:14:10","nodeType":"VariableDeclaration","scope":1027,"src":"6491:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"6491:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1021,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1019,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[179],"referencedDeclaration":179,"src":"6516:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6516:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6491:42:10"},{"expression":{"arguments":[{"id":1024,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"6561:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1022,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6550:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6554:6:10","memberName":"encode","nodeType":"MemberAccess","src":"6550:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1013,"id":1026,"nodeType":"Return","src":"6543:33:10"}]},"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"6031:349:10","text":" @dev Returns the current implementation.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"id":1028,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchImplementation","nameLocation":"6394:23:10","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[],"src":"6417:2:10"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1028,"src":"6437:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1011,"name":"bytes","nodeType":"ElementaryTypeName","src":"6437:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6436:14:10"},"scope":1146,"src":"6385:198:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1056,"nodeType":"Block","src":"6757:153:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1034,"name":"_requireZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"6767:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6767:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1036,"nodeType":"ExpressionStatement","src":"6767:19:10"},{"assignments":[1038],"declarations":[{"constant":false,"id":1038,"mutability":"mutable","name":"newAdmin","nameLocation":"6805:8:10","nodeType":"VariableDeclaration","scope":1056,"src":"6797:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"6797:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1049,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":1041,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6827:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6831:4:10","memberName":"data","nodeType":"MemberAccess","src":"6827:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"6827:12:10","startExpression":{"hexValue":"34","id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6836:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6842:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"6842:7:10","typeDescriptions":{}}}],"id":1047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6841:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":1039,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6816:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6820:6:10","memberName":"decode","nodeType":"MemberAccess","src":"6816:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6816:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"6797:54:10"},{"expression":{"arguments":[{"id":1051,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"6874:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1050,"name":"_changeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"6861:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6861:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"6861:22:10"},{"expression":{"hexValue":"","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6901:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1033,"id":1055,"nodeType":"Return","src":"6894:9:10"}]},"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"6589:100:10","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchChangeAdmin","nameLocation":"6703:20:10","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[],"src":"6723:2:10"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1057,"src":"6743:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1031,"name":"bytes","nodeType":"ElementaryTypeName","src":"6743:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6742:14:10"},"scope":1146,"src":"6694:216:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1090,"nodeType":"Block","src":"7046:194:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1063,"name":"_requireZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"7056:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7056:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1065,"nodeType":"ExpressionStatement","src":"7056:19:10"},{"assignments":[1067],"declarations":[{"constant":false,"id":1067,"mutability":"mutable","name":"newImplementation","nameLocation":"7094:17:10","nodeType":"VariableDeclaration","scope":1090,"src":"7086:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"7086:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1078,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":1070,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7125:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7129:4:10","memberName":"data","nodeType":"MemberAccess","src":"7125:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"7125:12:10","startExpression":{"hexValue":"34","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7134:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7140:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"7140:7:10","typeDescriptions":{}}}],"id":1076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7139:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":1068,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7114:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7118:6:10","memberName":"decode","nodeType":"MemberAccess","src":"7114:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7114:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"7086:63:10"},{"expression":{"arguments":[{"id":1080,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"7177:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7202:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7196:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1081,"name":"bytes","nodeType":"ElementaryTypeName","src":"7196:5:10","typeDescriptions":{}}},"id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7196:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7207:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1079,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"7159:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7159:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1087,"nodeType":"ExpressionStatement","src":"7159:54:10"},{"expression":{"hexValue":"","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7231:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1062,"id":1089,"nodeType":"Return","src":"7224:9:10"}]},"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"6916:64:10","text":" @dev Upgrade the implementation of the proxy."},"id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchUpgradeTo","nameLocation":"6994:18:10","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[],"src":"7012:2:10"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"7032:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1060,"name":"bytes","nodeType":"ElementaryTypeName","src":"7032:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7031:14:10"},"scope":1146,"src":"6985:255:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1122,"nodeType":"Block","src":"7592:186:10","statements":[{"assignments":[1098,1100],"declarations":[{"constant":false,"id":1098,"mutability":"mutable","name":"newImplementation","nameLocation":"7611:17:10","nodeType":"VariableDeclaration","scope":1122,"src":"7603:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"7603:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"data","nameLocation":"7643:4:10","nodeType":"VariableDeclaration","scope":1122,"src":"7630:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1099,"name":"bytes","nodeType":"ElementaryTypeName","src":"7630:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1113,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":1103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7662:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7666:4:10","memberName":"data","nodeType":"MemberAccess","src":"7662:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"7662:12:10","startExpression":{"hexValue":"34","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7671:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":1108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7677:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"7677:7:10","typeDescriptions":{}}},{"id":1110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7686:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1109,"name":"bytes","nodeType":"ElementaryTypeName","src":"7686:5:10","typeDescriptions":{}}}],"id":1111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7676:16:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(bytes storage pointer))"}],"expression":{"id":1101,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7651:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7655:6:10","memberName":"decode","nodeType":"MemberAccess","src":"7651:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7651:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_bytes_memory_ptr_$","typeString":"tuple(address payable,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7602:91:10"},{"expression":{"arguments":[{"id":1115,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"7721:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"7740:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7746:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1114,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"7703:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7703:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1119,"nodeType":"ExpressionStatement","src":"7703:48:10"},{"expression":{"hexValue":"","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7769:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1096,"id":1121,"nodeType":"Return","src":"7762:9:10"}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"7246:273:10","text":" @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract."},"id":1123,"implemented":true,"kind":"function","modifiers":[],"name":"_dispatchUpgradeToAndCall","nameLocation":"7533:25:10","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"7558:2:10"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1123,"src":"7578:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1094,"name":"bytes","nodeType":"ElementaryTypeName","src":"7578:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7577:14:10"},"scope":1146,"src":"7524:254:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1132,"nodeType":"Block","src":"7989:35:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1129,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8006:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8006:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1128,"id":1131,"nodeType":"Return","src":"7999:18:10"}]},"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"7784:142:10","text":" @dev Returns the current admin.\n CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead."},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"_admin","nameLocation":"7940:6:10","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"7946:2:10"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"7980:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7979:9:10"},"scope":1146,"src":"7931:93:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1144,"nodeType":"Block","src":"8298:40:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1138,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8316:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8320:5:10","memberName":"value","nodeType":"MemberAccess","src":"8316:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8329:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8316:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8308:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8308:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1143,"nodeType":"ExpressionStatement","src":"8308:23:10"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"8030:226:10","text":" @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\n emulate some proxy functions being non-payable while still allowing value to pass through."},"id":1145,"implemented":true,"kind":"function","modifiers":[],"name":"_requireZeroValue","nameLocation":"8270:17:10","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[],"src":"8287:2:10"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[],"src":"8298:0:10"},"scope":1146,"src":"8261:77:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1147,"src":"3389:4951:10","usedErrors":[]}],"src":"133:8208:10"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1211]},"id":1212,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1148,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:11"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1149,"nodeType":"StructuredDocumentation","src":"137:750:11","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1211,"linearizedBaseContracts":[1211],"name":"ReentrancyGuard","nameLocation":"906:15:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1152,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:11","nodeType":"VariableDeclaration","scope":1211,"src":"1676:41:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1155,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:11","nodeType":"VariableDeclaration","scope":1211,"src":"1723:37:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1157,"mutability":"mutable","name":"_status","nameLocation":"1783:7:11","nodeType":"VariableDeclaration","scope":1211,"src":"1767:23:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1164,"nodeType":"Block","src":"1811:39:11","statements":[{"expression":{"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1160,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"1821:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1161,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"1831:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1163,"nodeType":"ExpressionStatement","src":"1821:22:11"}]},"id":1165,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[],"src":"1808:2:11"},"returnParameters":{"id":1159,"nodeType":"ParameterList","parameters":[],"src":"1811:0:11"},"scope":1211,"src":"1797:53:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"2251:79:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1168,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"2261:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1170,"nodeType":"ExpressionStatement","src":"2261:21:11"},{"id":1171,"nodeType":"PlaceholderStatement","src":"2292:1:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1172,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"2303:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1174,"nodeType":"ExpressionStatement","src":"2303:20:11"}]},"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"1856:366:11","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1176,"name":"nonReentrant","nameLocation":"2236:12:11","nodeType":"ModifierDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"2248:2:11"},"src":"2227:103:11","virtual":false,"visibility":"internal"},{"body":{"id":1190,"nodeType":"Block","src":"2375:248:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1180,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"2468:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1181,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2479:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":1179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1185,"nodeType":"ExpressionStatement","src":"2460:63:11"},{"expression":{"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1186,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"2598:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1187,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2608:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1189,"nodeType":"ExpressionStatement","src":"2598:18:11"}]},"id":1191,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:11","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[],"src":"2364:2:11"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"2375:0:11"},"scope":1211,"src":"2336:287:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1198,"nodeType":"Block","src":"2667:171:11","statements":[{"expression":{"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1194,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"2809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1195,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"2819:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1197,"nodeType":"ExpressionStatement","src":"2809:22:11"}]},"id":1199,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:11","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"2656:2:11"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[],"src":"2667:0:11"},"scope":1211,"src":"2629:209:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1209,"nodeType":"Block","src":"3081:43:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1205,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3098:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1206,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"3109:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1204,"id":1208,"nodeType":"Return","src":"3091:26:11"}]},"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"2844:168:11","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1210,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:11","nodeType":"FunctionDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[],"src":"3049:2:11"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1210,"src":"3075:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1202,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:11"},"scope":1211,"src":"3017:107:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1212,"src":"888:2238:11","usedErrors":[]}],"src":"112:3015:11"}},"@openzeppelin/contracts/utils/Address.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1541]},"id":1542,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1213,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"126:67:12","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1541,"linearizedBaseContracts":[1541],"name":"Address","nameLocation":"202:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1228,"nodeType":"Block","src":"1478:254:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1222,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"1702:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:12","memberName":"code","nodeType":"MemberAccess","src":"1702:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:12","memberName":"length","nodeType":"MemberAccess","src":"1702:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1221,"id":1227,"nodeType":"Return","src":"1695:30:12"}]},"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"216:1191:12","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1229,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:12","nodeType":"FunctionDefinition","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"account","nameLocation":"1440:7:12","nodeType":"VariableDeclaration","scope":1229,"src":"1432:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:12"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1229,"src":"1472:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1219,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:12"},"scope":1541,"src":"1412:320:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1262,"nodeType":"Block","src":"2718:241:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1240,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1541","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1541","typeString":"library Address"}],"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:12","typeDescriptions":{}}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:12","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1243,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"2761:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1237,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1247,"nodeType":"ExpressionStatement","src":"2728:73:12"},{"assignments":[1249,null],"declarations":[{"constant":false,"id":1249,"mutability":"mutable","name":"success","nameLocation":"2818:7:12","nodeType":"VariableDeclaration","scope":1262,"src":"2813:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1248,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1256,"initialValue":{"arguments":[{"hexValue":"","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1250,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"2831:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:12","memberName":"call","nodeType":"MemberAccess","src":"2831:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1252,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"2853:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:12"},{"expression":{"arguments":[{"id":1258,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"2882:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1261,"nodeType":"ExpressionStatement","src":"2874:78:12"}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"1738:904:12","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1263,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:12","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:12","nodeType":"VariableDeclaration","scope":1263,"src":"2666:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"amount","nameLocation":"2701:6:12","nodeType":"VariableDeclaration","scope":1263,"src":"2693:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:12"},"returnParameters":{"id":1236,"nodeType":"ParameterList","parameters":[],"src":"2718:0:12"},"scope":1541,"src":"2647:312:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1280,"nodeType":"Block","src":"3790:96:12","statements":[{"expression":{"arguments":[{"id":1274,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3829:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1275,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"3837:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1273,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1321,1365],"referencedDeclaration":1365,"src":"3807:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1272,"id":1279,"nodeType":"Return","src":"3800:79:12"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"2965:731:12","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1281,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:12","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"target","nameLocation":"3731:6:12","nodeType":"VariableDeclaration","scope":1281,"src":"3723:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"data","nameLocation":"3752:4:12","nodeType":"VariableDeclaration","scope":1281,"src":"3739:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1267,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:12"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1281,"src":"3776:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1270,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:12"},"scope":1541,"src":"3701:185:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1300,"nodeType":"Block","src":"4255:76:12","statements":[{"expression":{"arguments":[{"id":1294,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"4294:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1295,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"4302:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1297,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"4311:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1293,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1321,1365],"referencedDeclaration":1365,"src":"4272:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1292,"id":1299,"nodeType":"Return","src":"4265:59:12"}]},"documentation":{"id":1282,"nodeType":"StructuredDocumentation","src":"3892:211:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1301,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:12","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1284,"mutability":"mutable","name":"target","nameLocation":"4147:6:12","nodeType":"VariableDeclaration","scope":1301,"src":"4139:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1283,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1286,"mutability":"mutable","name":"data","nameLocation":"4176:4:12","nodeType":"VariableDeclaration","scope":1301,"src":"4163:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1285,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:12","nodeType":"VariableDeclaration","scope":1301,"src":"4190:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1287,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:12"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1301,"src":"4241:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1290,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:12"},"scope":1541,"src":"4108:223:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1320,"nodeType":"Block","src":"4806:111:12","statements":[{"expression":{"arguments":[{"id":1314,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4845:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"4853:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"4859:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1313,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1321,1365],"referencedDeclaration":1365,"src":"4823:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1312,"id":1319,"nodeType":"Return","src":"4816:94:12"}]},"documentation":{"id":1302,"nodeType":"StructuredDocumentation","src":"4337:351:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:12","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"target","nameLocation":"4732:6:12","nodeType":"VariableDeclaration","scope":1321,"src":"4724:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1306,"mutability":"mutable","name":"data","nameLocation":"4753:4:12","nodeType":"VariableDeclaration","scope":1321,"src":"4740:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1305,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"value","nameLocation":"4767:5:12","nodeType":"VariableDeclaration","scope":1321,"src":"4759:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:12"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1321,"src":"4792:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1310,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:12"},"scope":1541,"src":"4693:224:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1364,"nodeType":"Block","src":"5344:267:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1338,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1541","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1541","typeString":"library Address"}],"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:12","typeDescriptions":{}}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:12","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"5387:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1345,"nodeType":"ExpressionStatement","src":"5354:81:12"},{"assignments":[1347,1349],"declarations":[{"constant":false,"id":1347,"mutability":"mutable","name":"success","nameLocation":"5451:7:12","nodeType":"VariableDeclaration","scope":1364,"src":"5446:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1346,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:12","nodeType":"VariableDeclaration","scope":1364,"src":"5460:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1348,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1356,"initialValue":{"arguments":[{"id":1354,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"5513:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1350,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"5487:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:12","memberName":"call","nodeType":"MemberAccess","src":"5487:11:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"5506:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:12"},{"expression":{"arguments":[{"id":1358,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"5562:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1359,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"5570:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1360,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"5579:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1361,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"5591:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1357,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"5535:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1334,"id":1363,"nodeType":"Return","src":"5528:76:12"}]},"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"4923:237:12","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1365,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:12","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"target","nameLocation":"5213:6:12","nodeType":"VariableDeclaration","scope":1365,"src":"5205:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"data","nameLocation":"5242:4:12","nodeType":"VariableDeclaration","scope":1365,"src":"5229:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1325,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"value","nameLocation":"5264:5:12","nodeType":"VariableDeclaration","scope":1365,"src":"5256:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:12","nodeType":"VariableDeclaration","scope":1365,"src":"5279:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1329,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:12"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"5330:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:12"},"scope":1541,"src":"5165:446:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1381,"nodeType":"Block","src":"5888:97:12","statements":[{"expression":{"arguments":[{"id":1376,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"5924:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"5932:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1375,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1382,1411],"referencedDeclaration":1411,"src":"5905:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1374,"id":1380,"nodeType":"Return","src":"5898:80:12"}]},"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"5617:166:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1382,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:12","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"target","nameLocation":"5824:6:12","nodeType":"VariableDeclaration","scope":1382,"src":"5816:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"data","nameLocation":"5845:4:12","nodeType":"VariableDeclaration","scope":1382,"src":"5832:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1369,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:12"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1382,"src":"5874:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1372,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:12"},"scope":1541,"src":"5788:197:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1410,"nodeType":"Block","src":"6327:168:12","statements":[{"assignments":[1395,1397],"declarations":[{"constant":false,"id":1395,"mutability":"mutable","name":"success","nameLocation":"6343:7:12","nodeType":"VariableDeclaration","scope":1410,"src":"6338:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1394,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:12","nodeType":"VariableDeclaration","scope":1410,"src":"6352:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1396,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1402,"initialValue":{"arguments":[{"id":1400,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"6397:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1398,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"6379:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:12","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:12","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:12"},{"expression":{"arguments":[{"id":1404,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"6446:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1405,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"6454:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1406,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"6463:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1407,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"6475:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1403,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"6419:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1393,"id":1409,"nodeType":"Return","src":"6412:76:12"}]},"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"5991:173:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1411,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:12","nodeType":"FunctionDefinition","parameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"target","nameLocation":"6214:6:12","nodeType":"VariableDeclaration","scope":1411,"src":"6206:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"data","nameLocation":"6243:4:12","nodeType":"VariableDeclaration","scope":1411,"src":"6230:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1386,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:12","nodeType":"VariableDeclaration","scope":1411,"src":"6257:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1388,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:12"},"returnParameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1411,"src":"6313:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1391,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:12"},"scope":1541,"src":"6169:326:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1427,"nodeType":"Block","src":"6771:101:12","statements":[{"expression":{"arguments":[{"id":1422,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"6809:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1423,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"6817:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1421,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1428,1457],"referencedDeclaration":1457,"src":"6788:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1420,"id":1426,"nodeType":"Return","src":"6781:84:12"}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"6501:168:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:12","nodeType":"FunctionDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"target","nameLocation":"6712:6:12","nodeType":"VariableDeclaration","scope":1428,"src":"6704:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"data","nameLocation":"6733:4:12","nodeType":"VariableDeclaration","scope":1428,"src":"6720:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1415,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:12"},"returnParameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1428,"src":"6757:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1418,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:12"},"scope":1541,"src":"6674:198:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1456,"nodeType":"Block","src":"7213:170:12","statements":[{"assignments":[1441,1443],"declarations":[{"constant":false,"id":1441,"mutability":"mutable","name":"success","nameLocation":"7229:7:12","nodeType":"VariableDeclaration","scope":1456,"src":"7224:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1440,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:12","nodeType":"VariableDeclaration","scope":1456,"src":"7238:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1442,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1448,"initialValue":{"arguments":[{"id":1446,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"7285:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1444,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"7265:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:12","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:12","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:12"},{"expression":{"arguments":[{"id":1450,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"7334:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1451,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"7342:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1452,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"7351:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1453,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"7363:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1449,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"7307:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1439,"id":1455,"nodeType":"Return","src":"7300:76:12"}]},"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"6878:175:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1457,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:12","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"target","nameLocation":"7105:6:12","nodeType":"VariableDeclaration","scope":1457,"src":"7097:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"data","nameLocation":"7134:4:12","nodeType":"VariableDeclaration","scope":1457,"src":"7121:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1432,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:12","nodeType":"VariableDeclaration","scope":1457,"src":"7148:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1434,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:12"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1457,"src":"7199:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1437,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:12"},"scope":1541,"src":"7058:325:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1495,"nodeType":"Block","src":"7865:434:12","statements":[{"condition":{"id":1471,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"7879:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1493,"nodeType":"Block","src":"8235:58:12","statements":[{"expression":{"arguments":[{"id":1489,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"8257:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1490,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"8269:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1488,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"8249:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1492,"nodeType":"ExpressionStatement","src":"8249:33:12"}]},"id":1494,"nodeType":"IfStatement","src":"7875:418:12","trueBody":{"id":1487,"nodeType":"Block","src":"7888:341:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1472,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"7906:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:12","memberName":"length","nodeType":"MemberAccess","src":"7906:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1484,"nodeType":"IfStatement","src":"7902:286:12","trueBody":{"id":1483,"nodeType":"Block","src":"7930:258:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1478,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"8132:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1477,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"8121:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1476,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1482,"nodeType":"ExpressionStatement","src":"8113:60:12"}]}},{"expression":{"id":1485,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"8208:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1470,"id":1486,"nodeType":"Return","src":"8201:17:12"}]}}]},"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"7389:277:12","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1496,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:12","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"target","nameLocation":"7724:6:12","nodeType":"VariableDeclaration","scope":1496,"src":"7716:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1462,"mutability":"mutable","name":"success","nameLocation":"7745:7:12","nodeType":"VariableDeclaration","scope":1496,"src":"7740:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1461,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1464,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:12","nodeType":"VariableDeclaration","scope":1496,"src":"7762:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1463,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:12","nodeType":"VariableDeclaration","scope":1496,"src":"7795:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1465,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:12"},"returnParameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1496,"src":"7851:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1468,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:12"},"scope":1541,"src":"7671:628:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1519,"nodeType":"Block","src":"8680:135:12","statements":[{"condition":{"id":1508,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"8694:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1517,"nodeType":"Block","src":"8751:58:12","statements":[{"expression":{"arguments":[{"id":1513,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"8773:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1514,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"8785:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1512,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"8765:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1516,"nodeType":"ExpressionStatement","src":"8765:33:12"}]},"id":1518,"nodeType":"IfStatement","src":"8690:119:12","trueBody":{"id":1511,"nodeType":"Block","src":"8703:42:12","statements":[{"expression":{"id":1509,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"8724:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1507,"id":1510,"nodeType":"Return","src":"8717:17:12"}]}}]},"documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"8305:210:12","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:12","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"success","nameLocation":"8560:7:12","nodeType":"VariableDeclaration","scope":1520,"src":"8555:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1498,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:12","nodeType":"VariableDeclaration","scope":1520,"src":"8577:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1500,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:12","nodeType":"VariableDeclaration","scope":1520,"src":"8610:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1502,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:12"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1520,"src":"8666:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:12"},"scope":1541,"src":"8520:295:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1539,"nodeType":"Block","src":"8904:457:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1527,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"8980:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:12","memberName":"length","nodeType":"MemberAccess","src":"8980:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1537,"nodeType":"Block","src":"9310:45:12","statements":[{"expression":{"arguments":[{"id":1534,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"9331:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1533,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1536,"nodeType":"ExpressionStatement","src":"9324:20:12"}]},"id":1538,"nodeType":"IfStatement","src":"8976:379:12","trueBody":{"id":1532,"nodeType":"Block","src":"9003:301:12","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:12","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:12","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:12"},"nodeType":"YulFunctionCall","src":"9202:17:12"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:12","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:12"},"nodeType":"YulFunctionCall","src":"9243:19:12"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:12"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:12"},"nodeType":"YulFunctionCall","src":"9236:44:12"},"nodeType":"YulExpressionStatement","src":"9236:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1522,"isOffset":false,"isSlot":false,"src":"9208:10:12","valueSize":1},{"declaration":1522,"isOffset":false,"isSlot":false,"src":"9251:10:12","valueSize":1}],"id":1531,"nodeType":"InlineAssembly","src":"9152:142:12"}]}}]},"id":1540,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:12","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:12","nodeType":"VariableDeclaration","scope":1540,"src":"8838:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1521,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1524,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:12","nodeType":"VariableDeclaration","scope":1540,"src":"8863:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1523,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:12"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[],"src":"8904:0:12"},"scope":1541,"src":"8821:540:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1542,"src":"194:9169:12","usedErrors":[]}],"src":"101:9263:12"}},"@openzeppelin/contracts/utils/Context.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1563]},"id":1564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1543,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1544,"nodeType":"StructuredDocumentation","src":"111:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1563,"linearizedBaseContracts":[1563],"name":"Context","nameLocation":"626:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1552,"nodeType":"Block","src":"702:34:13","statements":[{"expression":{"expression":{"id":1549,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:13","memberName":"sender","nodeType":"MemberAccess","src":"719:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1548,"id":1551,"nodeType":"Return","src":"712:17:13"}]},"id":1553,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:13","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[],"src":"659:2:13"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1553,"src":"693:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:13"},"scope":1563,"src":"640:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1561,"nodeType":"Block","src":"809:32:13","statements":[{"expression":{"expression":{"id":1558,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:13","memberName":"data","nodeType":"MemberAccess","src":"826:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1557,"id":1560,"nodeType":"Return","src":"819:15:13"}]},"id":1562,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:13","nodeType":"FunctionDefinition","parameters":{"id":1554,"nodeType":"ParameterList","parameters":[],"src":"759:2:13"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1562,"src":"793:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1555,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:13"},"scope":1563,"src":"742:99:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1564,"src":"608:235:13","usedErrors":[]}],"src":"86:758:13"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1673]},"id":1674,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1565,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"218:1201:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1673,"linearizedBaseContracts":[1673],"name":"StorageSlot","nameLocation":"1428:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1569,"members":[{"constant":false,"id":1568,"mutability":"mutable","name":"value","nameLocation":"1483:5:14","nodeType":"VariableDeclaration","scope":1569,"src":"1475:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:14","nodeType":"StructDefinition","scope":1673,"src":"1446:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1572,"members":[{"constant":false,"id":1571,"mutability":"mutable","name":"value","nameLocation":"1535:5:14","nodeType":"VariableDeclaration","scope":1572,"src":"1530:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1570,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:14","nodeType":"StructDefinition","scope":1673,"src":"1501:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1575,"members":[{"constant":false,"id":1574,"mutability":"mutable","name":"value","nameLocation":"1590:5:14","nodeType":"VariableDeclaration","scope":1575,"src":"1582:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:14","nodeType":"StructDefinition","scope":1673,"src":"1553:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1578,"members":[{"constant":false,"id":1577,"mutability":"mutable","name":"value","nameLocation":"1645:5:14","nodeType":"VariableDeclaration","scope":1578,"src":"1637:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:14","nodeType":"StructDefinition","scope":1673,"src":"1608:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1581,"members":[{"constant":false,"id":1580,"mutability":"mutable","name":"value","nameLocation":"1698:5:14","nodeType":"VariableDeclaration","scope":1581,"src":"1691:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1579,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:14","nodeType":"StructDefinition","scope":1673,"src":"1663:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1584,"members":[{"constant":false,"id":1583,"mutability":"mutable","name":"value","nameLocation":"1749:5:14","nodeType":"VariableDeclaration","scope":1584,"src":"1743:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1582,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:14","nodeType":"StructDefinition","scope":1673,"src":"1716:45:14","visibility":"public"},{"body":{"id":1594,"nodeType":"Block","src":"1943:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:14","statements":[{"nodeType":"YulAssignment","src":"2019:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1591,"isOffset":false,"isSlot":true,"src":"2019:6:14","suffix":"slot","valueSize":1},{"declaration":1587,"isOffset":false,"isSlot":false,"src":"2029:4:14","valueSize":1}],"id":1593,"nodeType":"InlineAssembly","src":"1996:47:14"}]},"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"1767:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:14","nodeType":"FunctionDefinition","parameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"slot","nameLocation":"1891:4:14","nodeType":"VariableDeclaration","scope":1595,"src":"1883:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:14"},"returnParameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"r","nameLocation":"1940:1:14","nodeType":"VariableDeclaration","scope":1595,"src":"1920:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1569_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1590,"nodeType":"UserDefinedTypeName","pathNode":{"id":1589,"name":"AddressSlot","nameLocations":["1920:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1569,"src":"1920:11:14"},"referencedDeclaration":1569,"src":"1920:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1569_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:14"},"scope":1673,"src":"1859:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1605,"nodeType":"Block","src":"2231:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:14","statements":[{"nodeType":"YulAssignment","src":"2307:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1602,"isOffset":false,"isSlot":true,"src":"2307:6:14","suffix":"slot","valueSize":1},{"declaration":1598,"isOffset":false,"isSlot":false,"src":"2317:4:14","valueSize":1}],"id":1604,"nodeType":"InlineAssembly","src":"2284:47:14"}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"2055:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:14","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"slot","nameLocation":"2179:4:14","nodeType":"VariableDeclaration","scope":1606,"src":"2171:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:14"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"r","nameLocation":"2228:1:14","nodeType":"VariableDeclaration","scope":1606,"src":"2208:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1572_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1601,"nodeType":"UserDefinedTypeName","pathNode":{"id":1600,"name":"BooleanSlot","nameLocations":["2208:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1572,"src":"2208:11:14"},"referencedDeclaration":1572,"src":"2208:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1572_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:14"},"scope":1673,"src":"2147:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1616,"nodeType":"Block","src":"2519:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:14","statements":[{"nodeType":"YulAssignment","src":"2595:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1613,"isOffset":false,"isSlot":true,"src":"2595:6:14","suffix":"slot","valueSize":1},{"declaration":1609,"isOffset":false,"isSlot":false,"src":"2605:4:14","valueSize":1}],"id":1615,"nodeType":"InlineAssembly","src":"2572:47:14"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"2343:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1617,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:14","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"slot","nameLocation":"2467:4:14","nodeType":"VariableDeclaration","scope":1617,"src":"2459:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:14"},"returnParameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"mutability":"mutable","name":"r","nameLocation":"2516:1:14","nodeType":"VariableDeclaration","scope":1617,"src":"2496:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1575_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1612,"nodeType":"UserDefinedTypeName","pathNode":{"id":1611,"name":"Bytes32Slot","nameLocations":["2496:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1575,"src":"2496:11:14"},"referencedDeclaration":1575,"src":"2496:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1575_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:14"},"scope":1673,"src":"2435:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1627,"nodeType":"Block","src":"2807:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:14","statements":[{"nodeType":"YulAssignment","src":"2883:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1624,"isOffset":false,"isSlot":true,"src":"2883:6:14","suffix":"slot","valueSize":1},{"declaration":1620,"isOffset":false,"isSlot":false,"src":"2893:4:14","valueSize":1}],"id":1626,"nodeType":"InlineAssembly","src":"2860:47:14"}]},"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"2631:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1628,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:14","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"slot","nameLocation":"2755:4:14","nodeType":"VariableDeclaration","scope":1628,"src":"2747:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:14"},"returnParameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"r","nameLocation":"2804:1:14","nodeType":"VariableDeclaration","scope":1628,"src":"2784:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1578_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1623,"nodeType":"UserDefinedTypeName","pathNode":{"id":1622,"name":"Uint256Slot","nameLocations":["2784:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1578,"src":"2784:11:14"},"referencedDeclaration":1578,"src":"2784:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1578_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:14"},"scope":1673,"src":"2723:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1638,"nodeType":"Block","src":"3092:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:14","statements":[{"nodeType":"YulAssignment","src":"3168:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1635,"isOffset":false,"isSlot":true,"src":"3168:6:14","suffix":"slot","valueSize":1},{"declaration":1631,"isOffset":false,"isSlot":false,"src":"3178:4:14","valueSize":1}],"id":1637,"nodeType":"InlineAssembly","src":"3145:47:14"}]},"documentation":{"id":1629,"nodeType":"StructuredDocumentation","src":"2919:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1639,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:14","nodeType":"FunctionDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"slot","nameLocation":"3041:4:14","nodeType":"VariableDeclaration","scope":1639,"src":"3033:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:14"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"r","nameLocation":"3089:1:14","nodeType":"VariableDeclaration","scope":1639,"src":"3070:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1581_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1634,"nodeType":"UserDefinedTypeName","pathNode":{"id":1633,"name":"StringSlot","nameLocations":["3070:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1581,"src":"3070:10:14"},"referencedDeclaration":1581,"src":"3070:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1581_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:14"},"scope":1673,"src":"3010:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1649,"nodeType":"Block","src":"3400:112:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:14","statements":[{"nodeType":"YulAssignment","src":"3476:20:14","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1646,"isOffset":false,"isSlot":true,"src":"3476:6:14","suffix":"slot","valueSize":1},{"declaration":1642,"isOffset":false,"isSlot":true,"src":"3486:10:14","suffix":"slot","valueSize":1}],"id":1648,"nodeType":"InlineAssembly","src":"3453:53:14"}]},"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"3204:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:14","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"store","nameLocation":"3348:5:14","nodeType":"VariableDeclaration","scope":1650,"src":"3333:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1641,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:14"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"r","nameLocation":"3397:1:14","nodeType":"VariableDeclaration","scope":1650,"src":"3378:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1581_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1645,"nodeType":"UserDefinedTypeName","pathNode":{"id":1644,"name":"StringSlot","nameLocations":["3378:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1581,"src":"3378:10:14"},"referencedDeclaration":1581,"src":"3378:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1581_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:14"},"scope":1673,"src":"3310:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1660,"nodeType":"Block","src":"3688:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:14","statements":[{"nodeType":"YulAssignment","src":"3764:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1657,"isOffset":false,"isSlot":true,"src":"3764:6:14","suffix":"slot","valueSize":1},{"declaration":1653,"isOffset":false,"isSlot":false,"src":"3774:4:14","valueSize":1}],"id":1659,"nodeType":"InlineAssembly","src":"3741:47:14"}]},"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"3518:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1661,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:14","nodeType":"FunctionDefinition","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"slot","nameLocation":"3638:4:14","nodeType":"VariableDeclaration","scope":1661,"src":"3630:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:14"},"returnParameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"r","nameLocation":"3685:1:14","nodeType":"VariableDeclaration","scope":1661,"src":"3667:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1584_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1656,"nodeType":"UserDefinedTypeName","pathNode":{"id":1655,"name":"BytesSlot","nameLocations":["3667:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1584,"src":"3667:9:14"},"referencedDeclaration":1584,"src":"3667:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1584_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:14"},"scope":1673,"src":"3608:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1671,"nodeType":"Block","src":"3991:112:14","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:14","statements":[{"nodeType":"YulAssignment","src":"4067:20:14","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1668,"isOffset":false,"isSlot":true,"src":"4067:6:14","suffix":"slot","valueSize":1},{"declaration":1664,"isOffset":false,"isSlot":true,"src":"4077:10:14","suffix":"slot","valueSize":1}],"id":1670,"nodeType":"InlineAssembly","src":"4044:53:14"}]},"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"3800:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1672,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:14","nodeType":"FunctionDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"store","nameLocation":"3940:5:14","nodeType":"VariableDeclaration","scope":1672,"src":"3926:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1663,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:14"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"r","nameLocation":"3988:1:14","nodeType":"VariableDeclaration","scope":1672,"src":"3970:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1584_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1667,"nodeType":"UserDefinedTypeName","pathNode":{"id":1666,"name":"BytesSlot","nameLocations":["3970:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1584,"src":"3970:9:14"},"referencedDeclaration":1584,"src":"3970:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1584_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:14"},"scope":1673,"src":"3904:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1674,"src":"1420:2685:14","usedErrors":[]}],"src":"193:3913:14"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[2201]},"id":2202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1675,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"143:658:15","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":2201,"linearizedBaseContracts":[2201],"name":"MerkleProof","nameLocation":"810:11:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":1696,"nodeType":"Block","src":"1253:57:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1690,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"1283:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1691,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"1290:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1689,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"1270:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1270:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1693,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"1299:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1270:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1688,"id":1695,"nodeType":"Return","src":"1263:40:15"}]},"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"828:323:15","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1165:6:15","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"proof","nameLocation":"1189:5:15","nodeType":"VariableDeclaration","scope":1697,"src":"1172:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1172:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1679,"nodeType":"ArrayTypeName","src":"1172:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1682,"mutability":"mutable","name":"root","nameLocation":"1204:4:15","nodeType":"VariableDeclaration","scope":1697,"src":"1196:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1196:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"leaf","nameLocation":"1218:4:15","nodeType":"VariableDeclaration","scope":1697,"src":"1210:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:52:15"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1697,"src":"1247:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1686,"name":"bool","nodeType":"ElementaryTypeName","src":"1247:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1246:6:15"},"scope":2201,"src":"1156:154:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"1518:65:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1711,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1556:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1712,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"1563:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1710,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"1535:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1535:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1714,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"1572:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1535:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1709,"id":1716,"nodeType":"Return","src":"1528:48:15"}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"1316:90:15","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1420:14:15","nodeType":"FunctionDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"proof","nameLocation":"1454:5:15","nodeType":"VariableDeclaration","scope":1718,"src":"1435:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1435:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1700,"nodeType":"ArrayTypeName","src":"1435:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"root","nameLocation":"1469:4:15","nodeType":"VariableDeclaration","scope":1718,"src":"1461:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1461:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1705,"mutability":"mutable","name":"leaf","nameLocation":"1483:4:15","nodeType":"VariableDeclaration","scope":1718,"src":"1475:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1475:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1434:54:15"},"returnParameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1718,"src":"1512:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1707,"name":"bool","nodeType":"ElementaryTypeName","src":"1512:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1511:6:15"},"scope":2201,"src":"1411:172:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1757,"nodeType":"Block","src":"2026:198:15","statements":[{"assignments":[1730],"declarations":[{"constant":false,"id":1730,"mutability":"mutable","name":"computedHash","nameLocation":"2044:12:15","nodeType":"VariableDeclaration","scope":1757,"src":"2036:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1732,"initialValue":{"id":1731,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2059:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2036:27:15"},{"body":{"id":1753,"nodeType":"Block","src":"2116:73:15","statements":[{"expression":{"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1744,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2130:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1746,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2155:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1747,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2169:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1749,"indexExpression":{"id":1748,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"2175:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2169:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1745,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"2145:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2130:48:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1752,"nodeType":"ExpressionStatement","src":"2130:48:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"2093:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1738,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2097:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2103:6:15","memberName":"length","nodeType":"MemberAccess","src":"2097:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2093:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1754,"initializationExpression":{"assignments":[1734],"declarations":[{"constant":false,"id":1734,"mutability":"mutable","name":"i","nameLocation":"2086:1:15","nodeType":"VariableDeclaration","scope":1754,"src":"2078:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1736,"initialValue":{"hexValue":"30","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2090:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2078:13:15"},"loopExpression":{"expression":{"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2111:3:15","subExpression":{"id":1741,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"2111:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1743,"nodeType":"ExpressionStatement","src":"2111:3:15"},"nodeType":"ForStatement","src":"2073:116:15"},{"expression":{"id":1755,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2205:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1728,"id":1756,"nodeType":"Return","src":"2198:19:15"}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"1589:340:15","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":1758,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1943:12:15","nodeType":"FunctionDefinition","parameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"proof","nameLocation":"1973:5:15","nodeType":"VariableDeclaration","scope":1758,"src":"1956:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1721,"nodeType":"ArrayTypeName","src":"1956:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"leaf","nameLocation":"1988:4:15","nodeType":"VariableDeclaration","scope":1758,"src":"1980:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1980:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1955:38:15"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1758,"src":"2017:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2016:9:15"},"scope":2201,"src":"1934:290:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1797,"nodeType":"Block","src":"2433:198:15","statements":[{"assignments":[1770],"declarations":[{"constant":false,"id":1770,"mutability":"mutable","name":"computedHash","nameLocation":"2451:12:15","nodeType":"VariableDeclaration","scope":1797,"src":"2443:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1772,"initialValue":{"id":1771,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"2466:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2443:27:15"},{"body":{"id":1793,"nodeType":"Block","src":"2523:73:15","statements":[{"expression":{"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1784,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"2537:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1786,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"2562:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1787,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"2576:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1789,"indexExpression":{"id":1788,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2582:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2576:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1785,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"2552:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2552:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2537:48:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1792,"nodeType":"ExpressionStatement","src":"2537:48:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1777,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2500:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1778,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"2504:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2510:6:15","memberName":"length","nodeType":"MemberAccess","src":"2504:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2500:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1794,"initializationExpression":{"assignments":[1774],"declarations":[{"constant":false,"id":1774,"mutability":"mutable","name":"i","nameLocation":"2493:1:15","nodeType":"VariableDeclaration","scope":1794,"src":"2485:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1773,"name":"uint256","nodeType":"ElementaryTypeName","src":"2485:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1776,"initialValue":{"hexValue":"30","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2497:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2485:13:15"},"loopExpression":{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2518:3:15","subExpression":{"id":1781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2518:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ExpressionStatement","src":"2518:3:15"},"nodeType":"ForStatement","src":"2480:116:15"},{"expression":{"id":1795,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"2612:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1768,"id":1796,"nodeType":"Return","src":"2605:19:15"}]},"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"2230:96:15","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":1798,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2340:20:15","nodeType":"FunctionDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"proof","nameLocation":"2380:5:15","nodeType":"VariableDeclaration","scope":1798,"src":"2361:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2361:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1761,"nodeType":"ArrayTypeName","src":"2361:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"leaf","nameLocation":"2395:4:15","nodeType":"VariableDeclaration","scope":1798,"src":"2387:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2387:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2360:40:15"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1798,"src":"2424:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2424:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2423:9:15"},"scope":2201,"src":"2331:300:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1823,"nodeType":"Block","src":"3174:76:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1816,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"3209:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1817,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"3216:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1818,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"3228:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1815,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"3191:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1820,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"3239:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3191:52:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1814,"id":1822,"nodeType":"Return","src":"3184:59:15"}]},"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"2637:350:15","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1824,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"3001:16:15","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"proof","nameLocation":"3044:5:15","nodeType":"VariableDeclaration","scope":1824,"src":"3027:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3027:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1801,"nodeType":"ArrayTypeName","src":"3027:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"proofFlags","nameLocation":"3073:10:15","nodeType":"VariableDeclaration","scope":1824,"src":"3059:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1803,"name":"bool","nodeType":"ElementaryTypeName","src":"3059:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1804,"nodeType":"ArrayTypeName","src":"3059:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"root","nameLocation":"3101:4:15","nodeType":"VariableDeclaration","scope":1824,"src":"3093:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"leaves","nameLocation":"3132:6:15","nodeType":"VariableDeclaration","scope":1824,"src":"3115:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3115:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1809,"nodeType":"ArrayTypeName","src":"3115:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3017:127:15"},"returnParameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1824,"src":"3168:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1812,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3167:6:15"},"scope":2201,"src":"2992:258:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1849,"nodeType":"Block","src":"3655:84:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1842,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"3698:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1843,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"3705:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1844,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3717:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1841,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"3672:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1846,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"3728:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3672:60:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1840,"id":1848,"nodeType":"Return","src":"3665:67:15"}]},"documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"3256:200:15","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1850,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3470:24:15","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"proof","nameLocation":"3523:5:15","nodeType":"VariableDeclaration","scope":1850,"src":"3504:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3504:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1827,"nodeType":"ArrayTypeName","src":"3504:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1831,"mutability":"mutable","name":"proofFlags","nameLocation":"3554:10:15","nodeType":"VariableDeclaration","scope":1850,"src":"3538:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1829,"name":"bool","nodeType":"ElementaryTypeName","src":"3538:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1830,"nodeType":"ArrayTypeName","src":"3538:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1833,"mutability":"mutable","name":"root","nameLocation":"3582:4:15","nodeType":"VariableDeclaration","scope":1850,"src":"3574:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3574:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"leaves","nameLocation":"3613:6:15","nodeType":"VariableDeclaration","scope":1850,"src":"3596:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3596:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1835,"nodeType":"ArrayTypeName","src":"3596:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3494:131:15"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1850,"src":"3649:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1838,"name":"bool","nodeType":"ElementaryTypeName","src":"3649:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3648:6:15"},"scope":2201,"src":"3461:278:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2007,"nodeType":"Block","src":"4693:2053:15","statements":[{"assignments":[1866],"declarations":[{"constant":false,"id":1866,"mutability":"mutable","name":"leavesLen","nameLocation":"5085:9:15","nodeType":"VariableDeclaration","scope":2007,"src":"5077:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"5077:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1869,"initialValue":{"expression":{"id":1867,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"5097:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5104:6:15","memberName":"length","nodeType":"MemberAccess","src":"5097:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5077:33:15"},{"assignments":[1871],"declarations":[{"constant":false,"id":1871,"mutability":"mutable","name":"proofLen","nameLocation":"5128:8:15","nodeType":"VariableDeclaration","scope":2007,"src":"5120:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"5120:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1874,"initialValue":{"expression":{"id":1872,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"5139:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5145:6:15","memberName":"length","nodeType":"MemberAccess","src":"5139:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5120:31:15"},{"assignments":[1876],"declarations":[{"constant":false,"id":1876,"mutability":"mutable","name":"totalHashes","nameLocation":"5169:11:15","nodeType":"VariableDeclaration","scope":2007,"src":"5161:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"5161:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1879,"initialValue":{"expression":{"id":1877,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"5183:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5194:6:15","memberName":"length","nodeType":"MemberAccess","src":"5183:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5161:39:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"5252:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1882,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"5264:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5275:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5252:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1886,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"5280:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5293:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5244:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5244:83:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"ExpressionStatement","src":"5244:83:15"},{"assignments":[1895],"declarations":[{"constant":false,"id":1895,"mutability":"mutable","name":"hashes","nameLocation":"5589:6:15","nodeType":"VariableDeclaration","scope":2007,"src":"5572:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5572:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1894,"nodeType":"ArrayTypeName","src":"5572:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1901,"initialValue":{"arguments":[{"id":1899,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"5612:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5598:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5602:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1897,"nodeType":"ArrayTypeName","src":"5602:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5598:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5572:52:15"},{"assignments":[1903],"declarations":[{"constant":false,"id":1903,"mutability":"mutable","name":"leafPos","nameLocation":"5642:7:15","nodeType":"VariableDeclaration","scope":2007,"src":"5634:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"5634:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1905,"initialValue":{"hexValue":"30","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5634:19:15"},{"assignments":[1907],"declarations":[{"constant":false,"id":1907,"mutability":"mutable","name":"hashPos","nameLocation":"5671:7:15","nodeType":"VariableDeclaration","scope":2007,"src":"5663:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"5663:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1909,"initialValue":{"hexValue":"30","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5663:19:15"},{"assignments":[1911],"declarations":[{"constant":false,"id":1911,"mutability":"mutable","name":"proofPos","nameLocation":"5700:8:15","nodeType":"VariableDeclaration","scope":2007,"src":"5692:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"5692:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1913,"initialValue":{"hexValue":"30","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5711:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5692:20:15"},{"body":{"id":1972,"nodeType":"Block","src":"6130:292:15","statements":[{"assignments":[1925],"declarations":[{"constant":false,"id":1925,"mutability":"mutable","name":"a","nameLocation":"6152:1:15","nodeType":"VariableDeclaration","scope":1972,"src":"6144:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6144:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1938,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1926,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"6156:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1927,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"6166:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6156:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1933,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"6198:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1936,"indexExpression":{"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6205:9:15","subExpression":{"id":1934,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"6205:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6198:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6156:59:15","trueExpression":{"baseExpression":{"id":1929,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"6178:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1932,"indexExpression":{"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6185:9:15","subExpression":{"id":1930,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"6185:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6178:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6144:71:15"},{"assignments":[1940],"declarations":[{"constant":false,"id":1940,"mutability":"mutable","name":"b","nameLocation":"6237:1:15","nodeType":"VariableDeclaration","scope":1972,"src":"6229:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6229:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1962,"initialValue":{"condition":{"baseExpression":{"id":1941,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"6241:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1943,"indexExpression":{"id":1942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"6252:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6241:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1957,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6353:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1960,"indexExpression":{"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6359:10:15","subExpression":{"id":1958,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"6359:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6353:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6241:129:15","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1944,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"6274:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1945,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"6284:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6274:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1951,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"6316:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1954,"indexExpression":{"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6323:9:15","subExpression":{"id":1952,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"6323:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6316:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6274:59:15","trueExpression":{"baseExpression":{"id":1947,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"6296:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1950,"indexExpression":{"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6303:9:15","subExpression":{"id":1948,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"6303:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6296:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6273:61:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6229:141:15"},{"expression":{"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1963,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"6384:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1965,"indexExpression":{"id":1964,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"6391:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6384:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"6406:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1968,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"6409:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1966,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"6396:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6396:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6384:27:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1971,"nodeType":"ExpressionStatement","src":"6384:27:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"6108:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1919,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6112:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6108:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1973,"initializationExpression":{"assignments":[1915],"declarations":[{"constant":false,"id":1915,"mutability":"mutable","name":"i","nameLocation":"6101:1:15","nodeType":"VariableDeclaration","scope":1973,"src":"6093:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"6093:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1917,"initialValue":{"hexValue":"30","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6105:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6093:13:15"},"loopExpression":{"expression":{"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6125:3:15","subExpression":{"id":1921,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"6125:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1923,"nodeType":"ExpressionStatement","src":"6125:3:15"},"nodeType":"ForStatement","src":"6088:334:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1974,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6436:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6450:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6436:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"6638:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6650:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6638:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2004,"nodeType":"Block","src":"6700:40:15","statements":[{"expression":{"baseExpression":{"id":2000,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6721:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2002,"indexExpression":{"hexValue":"30","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6727:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6721:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1864,"id":2003,"nodeType":"Return","src":"6714:15:15"}]},"id":2005,"nodeType":"IfStatement","src":"6634:106:15","trueBody":{"id":1999,"nodeType":"Block","src":"6653:41:15","statements":[{"expression":{"baseExpression":{"id":1995,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"6674:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1997,"indexExpression":{"hexValue":"30","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6674:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1864,"id":1998,"nodeType":"Return","src":"6667:16:15"}]}},"id":2006,"nodeType":"IfStatement","src":"6432:308:15","trueBody":{"id":1991,"nodeType":"Block","src":"6453:175:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1978,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"6475:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1979,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"6487:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6497:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1977,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6467:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6467:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1983,"nodeType":"ExpressionStatement","src":"6467:64:15"},{"id":1990,"nodeType":"UncheckedBlock","src":"6545:73:15","statements":[{"expression":{"baseExpression":{"id":1984,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"6580:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1988,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1985,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6587:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6601:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6587:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6580:23:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1864,"id":1989,"nodeType":"Return","src":"6573:30:15"}]}]}}]},"documentation":{"id":1851,"nodeType":"StructuredDocumentation","src":"3745:768:15","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n _Available since v4.7._"},"id":2008,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4527:17:15","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"proof","nameLocation":"4571:5:15","nodeType":"VariableDeclaration","scope":2008,"src":"4554:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4554:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1853,"nodeType":"ArrayTypeName","src":"4554:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"proofFlags","nameLocation":"4600:10:15","nodeType":"VariableDeclaration","scope":2008,"src":"4586:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1855,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"nodeType":"ArrayTypeName","src":"4586:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"leaves","nameLocation":"4637:6:15","nodeType":"VariableDeclaration","scope":2008,"src":"4620:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4620:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1859,"nodeType":"ArrayTypeName","src":"4620:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4544:105:15"},"returnParameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"merkleRoot","nameLocation":"4681:10:15","nodeType":"VariableDeclaration","scope":2008,"src":"4673:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4673:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4672:20:15"},"scope":2201,"src":"4518:2228:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2165,"nodeType":"Block","src":"7146:2053:15","statements":[{"assignments":[2024],"declarations":[{"constant":false,"id":2024,"mutability":"mutable","name":"leavesLen","nameLocation":"7538:9:15","nodeType":"VariableDeclaration","scope":2165,"src":"7530:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"7530:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2027,"initialValue":{"expression":{"id":2025,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"7550:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7557:6:15","memberName":"length","nodeType":"MemberAccess","src":"7550:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7530:33:15"},{"assignments":[2029],"declarations":[{"constant":false,"id":2029,"mutability":"mutable","name":"proofLen","nameLocation":"7581:8:15","nodeType":"VariableDeclaration","scope":2165,"src":"7573:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"7573:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2032,"initialValue":{"expression":{"id":2030,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"7592:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7598:6:15","memberName":"length","nodeType":"MemberAccess","src":"7592:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7573:31:15"},{"assignments":[2034],"declarations":[{"constant":false,"id":2034,"mutability":"mutable","name":"totalHashes","nameLocation":"7622:11:15","nodeType":"VariableDeclaration","scope":2165,"src":"7614:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"7614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2037,"initialValue":{"expression":{"id":2035,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"7636:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7647:6:15","memberName":"length","nodeType":"MemberAccess","src":"7636:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7614:39:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2039,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"7705:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2040,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"7717:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7728:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7705:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2044,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"7733:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7746:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":2038,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7697:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:83:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2048,"nodeType":"ExpressionStatement","src":"7697:83:15"},{"assignments":[2053],"declarations":[{"constant":false,"id":2053,"mutability":"mutable","name":"hashes","nameLocation":"8042:6:15","nodeType":"VariableDeclaration","scope":2165,"src":"8025:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8025:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2052,"nodeType":"ArrayTypeName","src":"8025:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2059,"initialValue":{"arguments":[{"id":2057,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"8065:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8051:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":2054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8055:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2055,"nodeType":"ArrayTypeName","src":"8055:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8051:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8025:52:15"},{"assignments":[2061],"declarations":[{"constant":false,"id":2061,"mutability":"mutable","name":"leafPos","nameLocation":"8095:7:15","nodeType":"VariableDeclaration","scope":2165,"src":"8087:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"8087:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2063,"initialValue":{"hexValue":"30","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8105:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8087:19:15"},{"assignments":[2065],"declarations":[{"constant":false,"id":2065,"mutability":"mutable","name":"hashPos","nameLocation":"8124:7:15","nodeType":"VariableDeclaration","scope":2165,"src":"8116:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"8116:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2067,"initialValue":{"hexValue":"30","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8134:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8116:19:15"},{"assignments":[2069],"declarations":[{"constant":false,"id":2069,"mutability":"mutable","name":"proofPos","nameLocation":"8153:8:15","nodeType":"VariableDeclaration","scope":2165,"src":"8145:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"8145:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2071,"initialValue":{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8164:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8145:20:15"},{"body":{"id":2130,"nodeType":"Block","src":"8583:292:15","statements":[{"assignments":[2083],"declarations":[{"constant":false,"id":2083,"mutability":"mutable","name":"a","nameLocation":"8605:1:15","nodeType":"VariableDeclaration","scope":2130,"src":"8597:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8597:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2096,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2084,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"8609:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2085,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"8619:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":2091,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"8651:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2094,"indexExpression":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8658:9:15","subExpression":{"id":2092,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"8658:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8651:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8609:59:15","trueExpression":{"baseExpression":{"id":2087,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"8631:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2090,"indexExpression":{"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8638:9:15","subExpression":{"id":2088,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"8638:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8631:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8597:71:15"},{"assignments":[2098],"declarations":[{"constant":false,"id":2098,"mutability":"mutable","name":"b","nameLocation":"8690:1:15","nodeType":"VariableDeclaration","scope":2130,"src":"8682:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8682:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2120,"initialValue":{"condition":{"baseExpression":{"id":2099,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"8694:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":2101,"indexExpression":{"id":2100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"8705:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8694:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":2115,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"8806:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":2118,"indexExpression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8812:10:15","subExpression":{"id":2116,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"8812:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8806:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8694:129:15","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"8727:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2103,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"8737:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8727:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":2109,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"8769:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2112,"indexExpression":{"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8776:9:15","subExpression":{"id":2110,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"8776:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8769:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8727:59:15","trueExpression":{"baseExpression":{"id":2105,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"8749:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2108,"indexExpression":{"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8756:9:15","subExpression":{"id":2106,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"8756:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8749:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8726:61:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8682:141:15"},{"expression":{"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2121,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"8837:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2123,"indexExpression":{"id":2122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"8844:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8837:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"8859:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"8862:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2124,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"8849:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8849:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8837:27:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2129,"nodeType":"ExpressionStatement","src":"8837:27:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"8561:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2077,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"8565:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8561:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2131,"initializationExpression":{"assignments":[2073],"declarations":[{"constant":false,"id":2073,"mutability":"mutable","name":"i","nameLocation":"8554:1:15","nodeType":"VariableDeclaration","scope":2131,"src":"8546:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"8546:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2075,"initialValue":{"hexValue":"30","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8558:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8546:13:15"},"loopExpression":{"expression":{"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:3:15","subExpression":{"id":2079,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"8578:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2081,"nodeType":"ExpressionStatement","src":"8578:3:15"},"nodeType":"ForStatement","src":"8541:334:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2132,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"8889:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8903:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8889:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2150,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"9091:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9103:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9091:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2162,"nodeType":"Block","src":"9153:40:15","statements":[{"expression":{"baseExpression":{"id":2158,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"9174:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":2160,"indexExpression":{"hexValue":"30","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9180:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9174:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2022,"id":2161,"nodeType":"Return","src":"9167:15:15"}]},"id":2163,"nodeType":"IfStatement","src":"9087:106:15","trueBody":{"id":2157,"nodeType":"Block","src":"9106:41:15","statements":[{"expression":{"baseExpression":{"id":2153,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"9127:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2155,"indexExpression":{"hexValue":"30","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9134:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9127:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2022,"id":2156,"nodeType":"Return","src":"9120:16:15"}]}},"id":2164,"nodeType":"IfStatement","src":"8885:308:15","trueBody":{"id":2149,"nodeType":"Block","src":"8906:175:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2136,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"8928:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2137,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8940:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8928:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8950:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":2135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8920:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8920:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2141,"nodeType":"ExpressionStatement","src":"8920:64:15"},{"id":2148,"nodeType":"UncheckedBlock","src":"8998:73:15","statements":[{"expression":{"baseExpression":{"id":2142,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"9033:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2146,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2143,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"9040:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9040:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9033:23:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2022,"id":2147,"nodeType":"Return","src":"9026:30:15"}]}]}}]},"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"6752:202:15","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":2166,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6968:25:15","nodeType":"FunctionDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"proof","nameLocation":"7022:5:15","nodeType":"VariableDeclaration","scope":2166,"src":"7003:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7003:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2011,"nodeType":"ArrayTypeName","src":"7003:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"proofFlags","nameLocation":"7053:10:15","nodeType":"VariableDeclaration","scope":2166,"src":"7037:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2013,"name":"bool","nodeType":"ElementaryTypeName","src":"7037:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2014,"nodeType":"ArrayTypeName","src":"7037:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"leaves","nameLocation":"7090:6:15","nodeType":"VariableDeclaration","scope":2166,"src":"7073:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7073:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2017,"nodeType":"ArrayTypeName","src":"7073:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6993:109:15"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"merkleRoot","nameLocation":"7134:10:15","nodeType":"VariableDeclaration","scope":2166,"src":"7126:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7126:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7125:20:15"},"scope":2201,"src":"6959:2240:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2188,"nodeType":"Block","src":"9277:75:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"9294:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"9298:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9294:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2183,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"9340:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2184,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"9343:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2182,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"9325:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9325:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9294:51:15","trueExpression":{"arguments":[{"id":2179,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"9317:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2180,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"9320:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2178,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"9302:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9302:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2174,"id":2187,"nodeType":"Return","src":"9287:58:15"}]},"id":2189,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"9214:9:15","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"a","nameLocation":"9232:1:15","nodeType":"VariableDeclaration","scope":2189,"src":"9224:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9224:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"b","nameLocation":"9243:1:15","nodeType":"VariableDeclaration","scope":2189,"src":"9235:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9235:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9223:22:15"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2189,"src":"9268:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9268:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9267:9:15"},"scope":2201,"src":"9205:147:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2199,"nodeType":"Block","src":"9441:178:15","statements":[{"AST":{"nodeType":"YulBlock","src":"9503:110:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9524:4:15","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9530:1:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9517:6:15"},"nodeType":"YulFunctionCall","src":"9517:15:15"},"nodeType":"YulExpressionStatement","src":"9517:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9552:4:15","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9558:1:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9545:6:15"},"nodeType":"YulFunctionCall","src":"9545:15:15"},"nodeType":"YulExpressionStatement","src":"9545:15:15"},{"nodeType":"YulAssignment","src":"9573:30:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9592:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9598:4:15","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9582:9:15"},"nodeType":"YulFunctionCall","src":"9582:21:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9573:5:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2191,"isOffset":false,"isSlot":false,"src":"9530:1:15","valueSize":1},{"declaration":2193,"isOffset":false,"isSlot":false,"src":"9558:1:15","valueSize":1},{"declaration":2196,"isOffset":false,"isSlot":false,"src":"9573:5:15","valueSize":1}],"id":2198,"nodeType":"InlineAssembly","src":"9494:119:15"}]},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9367:14:15","nodeType":"FunctionDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"a","nameLocation":"9390:1:15","nodeType":"VariableDeclaration","scope":2200,"src":"9382:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9382:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2193,"mutability":"mutable","name":"b","nameLocation":"9401:1:15","nodeType":"VariableDeclaration","scope":2200,"src":"9393:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9393:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9381:22:15"},"returnParameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"value","nameLocation":"9434:5:15","nodeType":"VariableDeclaration","scope":2200,"src":"9426:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9426:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9425:15:15"},"scope":2201,"src":"9358:261:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2202,"src":"802:8819:15","usedErrors":[]}],"src":"118:9504:15"}},"contracts/Executor.sol":{"id":16,"ast":{"absolutePath":"contracts/Executor.sol","exportedSymbols":{"AssetType":[7015],"AssetType_ERC1155":[6656],"AssetType_ERC721":[6653],"AtomicExecution":[7119],"BidExchange_askIndex_offset":[6818],"BidExchange_maker_offset":[6824],"BidExchange_proof_offset":[6821],"BidExchange_size":[6815],"BidExchange_taker_offset":[6827],"Bytes1_shift":[6638],"Bytes20_shift":[6644],"Bytes4_shift":[6641],"Delegate_transfer_calldata_offset":[6770],"Delegate_transfer_selector":[6767],"ERC1155_safeTransferFrom_amount_offset":[6758],"ERC1155_safeTransferFrom_data_offset":[6764],"ERC1155_safeTransferFrom_data_pointer_offset":[6761],"ERC1155_safeTransferFrom_from_offset":[6749],"ERC1155_safeTransferFrom_id_offset":[6755],"ERC1155_safeTransferFrom_selector":[6695],"ERC1155_safeTransferFrom_size":[6704],"ERC1155_safeTransferFrom_to_offset":[6752],"ERC20_transferFrom_amount_offset":[6737],"ERC20_transferFrom_from_offset":[6731],"ERC20_transferFrom_selector":[6689],"ERC20_transferFrom_size":[6698],"ERC20_transferFrom_to_offset":[6734],"ERC721_safeTransferFrom_from_offset":[6740],"ERC721_safeTransferFrom_id_offset":[6746],"ERC721_safeTransferFrom_selector":[6692],"ERC721_safeTransferFrom_size":[6701],"ERC721_safeTransferFrom_to_offset":[6743],"Exchange":[7031],"Exchange_askIndex_offset":[6803],"Exchange_maker_offset":[6809],"Exchange_proof_offset":[6806],"Exchange_size":[6800],"Exchange_taker_offset":[6812],"ExecutionBatch_base_size":[6890],"ExecutionBatch_calldata_offset":[6887],"ExecutionBatch_length_offset":[6902],"ExecutionBatch_orderType_offset":[6896],"ExecutionBatch_selector_offset":[6884],"ExecutionBatch_taker_offset":[6893],"ExecutionBatch_transfers_offset":[6905],"ExecutionBatch_transfers_pointer_offset":[6899],"Executor":[3725],"FeeRate":[7142],"Fees":[7137],"FungibleTransfers":[7103],"IDelegate":[6314],"IExecutor":[6396],"Listing":[7040],"Listing_amount_offset":[6839],"Listing_index_offset":[6833],"Listing_price_offset":[6842],"Listing_size":[6830],"Listing_tokenId_offset":[6836],"Memory_pointer":[6650],"One_word":[6647],"OracleSignatures_blockNumber_offset":[6716],"OracleSignatures_oracle_offset":[6719],"OracleSignatures_s_offset":[6710],"OracleSignatures_size":[6707],"OracleSignatures_v_offset":[6713],"Order":[7064],"OrderType":[7019],"OrderType_ASK":[6659],"OrderType_BID":[6662],"Order_assetType_offset":[6791],"Order_collection_offset":[6779],"Order_expirationTime_offset":[6788],"Order_listingsRoot_offset":[6782],"Order_makerFee_offset":[6794],"Order_numberOfListings_offset":[6785],"Order_salt_offset":[6797],"Order_size":[6773],"Order_trader_offset":[6776],"Pool_deposit_selector":[6680],"Pool_deposit_size":[6686],"Pool_deposit_user_offset":[6683],"Pool_withdrawFrom_amount_offset":[6674],"Pool_withdrawFrom_from_offset":[6668],"Pool_withdrawFrom_selector":[6665],"Pool_withdrawFrom_size":[6677],"Pool_withdrawFrom_to_offset":[6671],"Signatures_s_offset":[6725],"Signatures_size":[6722],"Signatures_v_offset":[6728],"StateUpdate":[7130],"StateUpdate_leaf_offset":[6860],"StateUpdate_salt_offset":[6857],"StateUpdate_size":[6854],"StateUpdate_value_offset":[6863],"Taker":[7045],"Taker_amount_offset":[6851],"Taker_size":[6845],"Taker_tokenId_offset":[6848],"Transfer":[7076],"Transfer_amount_offset":[6875],"Transfer_assetType_offset":[6881],"Transfer_collection_offset":[6878],"Transfer_id_offset":[6872],"Transfer_size":[6866],"Transfer_trader_offset":[6869],"Validation":[4962]},"id":3726,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2203,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:16"},{"absolutePath":"contracts/Validation.sol","file":"./Validation.sol","id":2205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3726,"sourceUnit":4963,"src":"57:44:16","symbolAliases":[{"foreign":{"id":2204,"name":"Validation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"65:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/lib/Constants.sol","file":"./lib/Constants.sol","id":2206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3726,"sourceUnit":6906,"src":"102:29:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/Structs.sol","file":"./lib/Structs.sol","id":2219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3726,"sourceUnit":7150,"src":"132:162:16","symbolAliases":[{"foreign":{"id":2207,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"140:5:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2208,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"147:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2209,"name":"FungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"157:17:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2210,"name":"StateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"176:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2211,"name":"AtomicExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"189:15:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2212,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"206:9:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2213,"name":"Fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"217:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2214,"name":"FeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"223:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2215,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"232:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2216,"name":"Taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"241:5:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2217,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"248:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2218,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"258:9:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDelegate.sol","file":"./interfaces/IDelegate.sol","id":2221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3726,"sourceUnit":6315,"src":"295:53:16","symbolAliases":[{"foreign":{"id":2220,"name":"IDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"303:9:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IExecutor.sol","file":"./interfaces/IExecutor.sol","id":2223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3726,"sourceUnit":6397,"src":"349:53:16","symbolAliases":[{"foreign":{"id":2222,"name":"IExecutor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"357:9:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2224,"name":"IExecutor","nameLocations":["434:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":6396,"src":"434:9:16"},"id":2225,"nodeType":"InheritanceSpecifier","src":"434:9:16"},{"baseName":{"id":2226,"name":"Validation","nameLocations":["445:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":4962,"src":"445:10:16"},"id":2227,"nodeType":"InheritanceSpecifier","src":"445:10:16"}],"canonicalName":"Executor","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3725,"linearizedBaseContracts":[3725,4962,4384,6478,6501,6396],"name":"Executor","nameLocation":"422:8:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2229,"mutability":"immutable","name":"_DELEGATE","nameLocation":"488:9:16","nodeType":"VariableDeclaration","scope":3725,"src":"462:35:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"462:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2231,"mutability":"immutable","name":"_POOL","nameLocation":"529:5:16","nodeType":"VariableDeclaration","scope":3725,"src":"503:31:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2230,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":2248,"nodeType":"Block","src":"657:59:16","statements":[{"expression":{"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2240,"name":"_DELEGATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"667:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2241,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"679:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"667:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2243,"nodeType":"ExpressionStatement","src":"667:20:16"},{"expression":{"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2244,"name":"_POOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"697:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2245,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"705:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"697:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2247,"nodeType":"ExpressionStatement","src":"697:12:16"}]},"id":2249,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":2238,"kind":"baseConstructorSpecifier","modifierName":{"id":2237,"name":"Validation","nameLocations":["640:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":4962,"src":"640:10:16"},"nodeType":"ModifierInvocation","src":"640:12:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"delegate","nameLocation":"570:8:16","nodeType":"VariableDeclaration","scope":2249,"src":"562:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"562:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2235,"mutability":"mutable","name":"pool","nameLocation":"596:4:16","nodeType":"VariableDeclaration","scope":2249,"src":"588:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2234,"name":"address","nodeType":"ElementaryTypeName","src":"588:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"552:54:16"},"returnParameters":{"id":2239,"nodeType":"ParameterList","parameters":[],"src":"657:0:16"},"scope":3725,"src":"541:175:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2261,"nodeType":"Block","src":"749:87:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2252,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"763:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"767:6:16","memberName":"sender","nodeType":"MemberAccess","src":"763:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2254,"name":"_POOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"777:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"763:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2260,"nodeType":"IfStatement","src":"759:71:16","trueBody":{"id":2259,"nodeType":"Block","src":"784:46:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2256,"name":"Unauthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"805:12:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"805:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2258,"nodeType":"RevertStatement","src":"798:21:16"}]}}]},"id":2262,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[],"src":"729:2:16"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[],"src":"749:0:16"},"scope":3725,"src":"722:114:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2369,"nodeType":"Block","src":"1639:1354:16","statements":[{"assignments":[2287],"declarations":[{"constant":false,"id":2287,"mutability":"mutable","name":"takerAmount","nameLocation":"1657:11:16","nodeType":"VariableDeclaration","scope":2369,"src":"1649:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1649:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2291,"initialValue":{"expression":{"expression":{"id":2288,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"1671:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":2289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1680:5:16","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":7030,"src":"1671:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":2290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1686:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"1671:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1649:43:16"},{"assignments":[2293,2295,2297,2299],"declarations":[{"constant":false,"id":2293,"mutability":"mutable","name":"totalPrice","nameLocation":"1725:10:16","nodeType":"VariableDeclaration","scope":2369,"src":"1717:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1717:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"protocolFeeAmount","nameLocation":"1757:17:16","nodeType":"VariableDeclaration","scope":2369,"src":"1749:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"makerFeeAmount","nameLocation":"1796:14:16","nodeType":"VariableDeclaration","scope":2369,"src":"1788:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1788:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"takerFeeAmount","nameLocation":"1832:14:16","nodeType":"VariableDeclaration","scope":2369,"src":"1824:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2309,"initialValue":{"arguments":[{"expression":{"expression":{"id":2301,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"1889:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":2302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1898:7:16","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":7027,"src":"1889:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":2303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1906:5:16","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":7039,"src":"1889:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2304,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"1929:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2305,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"1958:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":2306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1964:8:16","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"1958:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"id":2307,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"1990:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":2300,"name":"_computeFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"1859:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,struct FeeRate memory,struct Fees memory) pure returns (uint256,uint256,uint256,uint256)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1859:149:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"1703:305:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2310,"name":"remainingETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2106:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2311,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2122:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2312,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"2135:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2122:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2106:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2367,"nodeType":"Block","src":"2934:53:16","statements":[{"expression":{"components":[{"id":2363,"name":"remainingETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2956:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2970:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":2365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2955:21:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,bool)"}},"functionReturnParameters":2285,"id":2366,"nodeType":"Return","src":"2948:28:16"}]},"id":2368,"nodeType":"IfStatement","src":"2102:885:16","trueBody":{"id":2362,"nodeType":"Block","src":"2151:777:16","statements":[{"id":2323,"nodeType":"UncheckedBlock","src":"2165:100:16","statements":[{"expression":{"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2315,"name":"remainingETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2193:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2316,"name":"remainingETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2208:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2317,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2223:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2208:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2319,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"2236:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2208:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2193:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2322,"nodeType":"ExpressionStatement","src":"2193:57:16"}]},{"expression":{"arguments":[{"id":2325,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"2293:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},{"id":2326,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2312:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"},{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}],"id":2324,"name":"_setAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"2279:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_FungibleTransfers_$7103_memory_ptr_$_t_struct$_Order_$7064_memory_ptr_$returns$__$","typeString":"function (struct FungibleTransfers memory,struct Order memory) pure"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2279:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2328,"nodeType":"ExpressionStatement","src":"2279:39:16"},{"assignments":[2330],"declarations":[{"constant":false,"id":2330,"mutability":"mutable","name":"index","nameLocation":"2341:5:16","nodeType":"VariableDeclaration","scope":2362,"src":"2333:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2333:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2339,"initialValue":{"arguments":[{"id":2332,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"2393:14:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2333,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2425:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"expression":{"id":2334,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"2448:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":2335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2457:7:16","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":7027,"src":"2448:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":2336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2465:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7035,"src":"2448:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2337,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"2490:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2331,"name":"_insertNonfungibleTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"2349:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_struct$_Order_$7064_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes memory,struct Order memory,uint256,uint256) pure returns (uint256)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:166:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2333:182:16"},{"expression":{"arguments":[{"id":2341,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"2572:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},{"id":2342,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"2607:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2343,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"2636:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":2344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2645:7:16","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":7027,"src":"2636:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},{"arguments":[{"expression":{"id":2347,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2678:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":2348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2684:4:16","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"2678:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2670:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2670:7:16","typeDescriptions":{}}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2670:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2350,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"2707:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2351,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2730:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2352,"name":"protocolFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"2758:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2353,"name":"makerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"2793:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2354,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"2825:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2857:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2340,"name":"_insertFungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"2530:24:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_FungibleTransfers_$7103_memory_ptr_$_t_uint256_$_t_struct$_Listing_$7040_memory_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (struct FungibleTransfers memory,uint256,struct Listing memory,bytes32,uint256,uint256,uint256,uint256,uint256,bool) pure"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:345:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2357,"nodeType":"ExpressionStatement","src":"2530:345:16"},{"expression":{"components":[{"id":2358,"name":"remainingETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2898:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2912:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":2360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2897:20:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,bool)"}},"functionReturnParameters":2285,"id":2361,"nodeType":"Return","src":"2890:27:16"}]}}]},"documentation":{"id":2263,"nodeType":"StructuredDocumentation","src":"842:512:16","text":" @notice Insert a validated ask listing into the batch if there's sufficient ETH to fulfill\n @param executionBatch Execution batch\n @param fungibleTransfers Fungible transfers\n @param order Order of the listing to insert\n @param exchange Exchange containing the listing to insert\n @param fees Protocol and taker fees\n @param remainingETH Available ETH remaining\n @return Available ETH remaining after insertion; if the listing was inserted in the batch"},"id":2370,"implemented":true,"kind":"function","modifiers":[],"name":"_insertExecutionAsk","nameLocation":"1368:19:16","nodeType":"FunctionDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"executionBatch","nameLocation":"1410:14:16","nodeType":"VariableDeclaration","scope":2370,"src":"1397:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2264,"name":"bytes","nodeType":"ElementaryTypeName","src":"1397:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"fungibleTransfers","nameLocation":"1459:17:16","nodeType":"VariableDeclaration","scope":2370,"src":"1434:42:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers"},"typeName":{"id":2267,"nodeType":"UserDefinedTypeName","pathNode":{"id":2266,"name":"FungibleTransfers","nameLocations":["1434:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":7103,"src":"1434:17:16"},"referencedDeclaration":7103,"src":"1434:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_storage_ptr","typeString":"struct FungibleTransfers"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"order","nameLocation":"1499:5:16","nodeType":"VariableDeclaration","scope":2370,"src":"1486:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":2270,"nodeType":"UserDefinedTypeName","pathNode":{"id":2269,"name":"Order","nameLocations":["1486:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"1486:5:16"},"referencedDeclaration":7064,"src":"1486:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":2274,"mutability":"mutable","name":"exchange","nameLocation":"1530:8:16","nodeType":"VariableDeclaration","scope":2370,"src":"1514:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange"},"typeName":{"id":2273,"nodeType":"UserDefinedTypeName","pathNode":{"id":2272,"name":"Exchange","nameLocations":["1514:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"1514:8:16"},"referencedDeclaration":7031,"src":"1514:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"fees","nameLocation":"1560:4:16","nodeType":"VariableDeclaration","scope":2370,"src":"1548:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":2276,"nodeType":"UserDefinedTypeName","pathNode":{"id":2275,"name":"Fees","nameLocations":["1548:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"1548:4:16"},"referencedDeclaration":7137,"src":"1548:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"remainingETH","nameLocation":"1582:12:16","nodeType":"VariableDeclaration","scope":2370,"src":"1574:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1574:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1387:213:16"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2370,"src":"1624:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2370,"src":"1633:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2283,"name":"bool","nodeType":"ElementaryTypeName","src":"1633:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1623:15:16"},"scope":3725,"src":"1359:1634:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2446,"nodeType":"Block","src":"3553:910:16","statements":[{"assignments":[2389],"declarations":[{"constant":false,"id":2389,"mutability":"mutable","name":"takerAmount","nameLocation":"3571:11:16","nodeType":"VariableDeclaration","scope":2446,"src":"3563:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2388,"name":"uint256","nodeType":"ElementaryTypeName","src":"3563:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2393,"initialValue":{"expression":{"expression":{"id":2390,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"3585:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":2391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3594:5:16","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":7030,"src":"3585:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":2392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3600:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"3585:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3563:43:16"},{"assignments":[2395,2397,2399,2401],"declarations":[{"constant":false,"id":2395,"mutability":"mutable","name":"totalPrice","nameLocation":"3639:10:16","nodeType":"VariableDeclaration","scope":2446,"src":"3631:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"protocolFeeAmount","nameLocation":"3671:17:16","nodeType":"VariableDeclaration","scope":2446,"src":"3663:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"3663:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"makerFeeAmount","nameLocation":"3710:14:16","nodeType":"VariableDeclaration","scope":2446,"src":"3702:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"3702:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"takerFeeAmount","nameLocation":"3746:14:16","nodeType":"VariableDeclaration","scope":2446,"src":"3738:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3738:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2411,"initialValue":{"arguments":[{"expression":{"expression":{"id":2403,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"3803:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":2404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3812:7:16","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":7027,"src":"3803:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":2405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3820:5:16","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":7039,"src":"3803:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2406,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"3843:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2407,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"3872:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":2408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3878:8:16","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"3872:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"id":2409,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"3904:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":2402,"name":"_computeFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"3773:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,struct FeeRate memory,struct Fees memory) pure returns (uint256,uint256,uint256,uint256)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3773:149:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3617:305:16"},{"expression":{"arguments":[{"id":2413,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"3947:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},{"id":2414,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"3966:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"},{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}],"id":2412,"name":"_setAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"3933:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_FungibleTransfers_$7103_memory_ptr_$_t_struct$_Order_$7064_memory_ptr_$returns$__$","typeString":"function (struct FungibleTransfers memory,struct Order memory) pure"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3933:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2416,"nodeType":"ExpressionStatement","src":"3933:39:16"},{"assignments":[2418],"declarations":[{"constant":false,"id":2418,"mutability":"mutable","name":"index","nameLocation":"3991:5:16","nodeType":"VariableDeclaration","scope":2446,"src":"3983:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2417,"name":"uint256","nodeType":"ElementaryTypeName","src":"3983:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2427,"initialValue":{"arguments":[{"id":2420,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"4039:14:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2421,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"4067:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"expression":{"id":2422,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"4086:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":2423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4095:5:16","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":7030,"src":"4086:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":2424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4101:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7042,"src":"4086:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2425,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"4122:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2419,"name":"_insertNonfungibleTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"3999:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_struct$_Order_$7064_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes memory,struct Order memory,uint256,uint256) pure returns (uint256)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:144:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3983:160:16"},{"expression":{"arguments":[{"id":2429,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"4192:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},{"id":2430,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"4223:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2431,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"4248:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":2432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4257:7:16","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":7027,"src":"4248:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},{"arguments":[{"expression":{"id":2435,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"4286:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":2436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4292:4:16","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"4286:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4278:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4278:7:16","typeDescriptions":{}}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2438,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4311:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2439,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"4330:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2440,"name":"protocolFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"4354:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2441,"name":"makerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"4385:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2442,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"4413:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4441:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2428,"name":"_insertFungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"4154:24:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_FungibleTransfers_$7103_memory_ptr_$_t_uint256_$_t_struct$_Listing_$7040_memory_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (struct FungibleTransfers memory,uint256,struct Listing memory,bytes32,uint256,uint256,uint256,uint256,uint256,bool) pure"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:302:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2445,"nodeType":"ExpressionStatement","src":"4154:302:16"}]},"documentation":{"id":2371,"nodeType":"StructuredDocumentation","src":"2999:323:16","text":" @notice Insert a validated bid listing into the batch\n @param executionBatch Execution batch\n @param fungibleTransfers Fungible transfers\n @param order Order of the listing to insert\n @param exchange Exchange containing listing to insert\n @param fees Protocol and taker fees"},"id":2447,"implemented":true,"kind":"function","modifiers":[],"name":"_insertExecutionBid","nameLocation":"3336:19:16","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"executionBatch","nameLocation":"3378:14:16","nodeType":"VariableDeclaration","scope":2447,"src":"3365:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2372,"name":"bytes","nodeType":"ElementaryTypeName","src":"3365:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2376,"mutability":"mutable","name":"fungibleTransfers","nameLocation":"3427:17:16","nodeType":"VariableDeclaration","scope":2447,"src":"3402:42:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers"},"typeName":{"id":2375,"nodeType":"UserDefinedTypeName","pathNode":{"id":2374,"name":"FungibleTransfers","nameLocations":["3402:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":7103,"src":"3402:17:16"},"referencedDeclaration":7103,"src":"3402:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_storage_ptr","typeString":"struct FungibleTransfers"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"order","nameLocation":"3467:5:16","nodeType":"VariableDeclaration","scope":2447,"src":"3454:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":2378,"nodeType":"UserDefinedTypeName","pathNode":{"id":2377,"name":"Order","nameLocations":["3454:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"3454:5:16"},"referencedDeclaration":7064,"src":"3454:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"exchange","nameLocation":"3498:8:16","nodeType":"VariableDeclaration","scope":2447,"src":"3482:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange"},"typeName":{"id":2381,"nodeType":"UserDefinedTypeName","pathNode":{"id":2380,"name":"Exchange","nameLocations":["3482:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"3482:8:16"},"referencedDeclaration":7031,"src":"3482:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"visibility":"internal"},{"constant":false,"id":2385,"mutability":"mutable","name":"fees","nameLocation":"3528:4:16","nodeType":"VariableDeclaration","scope":2447,"src":"3516:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":2384,"nodeType":"UserDefinedTypeName","pathNode":{"id":2383,"name":"Fees","nameLocations":["3516:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"3516:4:16"},"referencedDeclaration":7137,"src":"3516:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"}],"src":"3355:183:16"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[],"src":"3553:0:16"},"scope":3725,"src":"3327:1136:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2463,"nodeType":"Block","src":"4945:1655:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4964:1630:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4978:120:16","value":{"arguments":[{"name":"executionBatch","nodeType":"YulIdentifier","src":"5022:14:16"},{"name":"ExecutionBatch_calldata_offset","nodeType":"YulIdentifier","src":"5054:30:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5001:3:16"},"nodeType":"YulFunctionCall","src":"5001:97:16"},"variables":[{"name":"calldataPointer","nodeType":"YulTypedName","src":"4982:15:16","type":""}]},{"nodeType":"YulAssignment","src":"5111:104:16","value":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"5155:15:16"},{"name":"ExecutionBatch_length_offset","nodeType":"YulIdentifier","src":"5172:28:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5151:3:16"},"nodeType":"YulFunctionCall","src":"5151:50:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5128:5:16"},"nodeType":"YulFunctionCall","src":"5128:87:16"},"variableNames":[{"name":"transferIndex","nodeType":"YulIdentifier","src":"5111:13:16"}]},{"nodeType":"YulVariableDeclaration","src":"5229:121:16","value":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"5279:15:16"},{"name":"ExecutionBatch_transfers_pointer_offset","nodeType":"YulIdentifier","src":"5296:39:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5275:3:16"},"nodeType":"YulFunctionCall","src":"5275:61:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5252:5:16"},"nodeType":"YulFunctionCall","src":"5252:98:16"},"variables":[{"name":"transfersOffset","nodeType":"YulTypedName","src":"5233:15:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5363:161:16","value":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"5411:15:16"},{"arguments":[{"name":"transfersOffset","nodeType":"YulIdentifier","src":"5432:15:16"},{"name":"One_word","nodeType":"YulIdentifier","src":"5449:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5428:3:16"},"nodeType":"YulFunctionCall","src":"5428:30:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5407:3:16"},"nodeType":"YulFunctionCall","src":"5407:52:16"},{"arguments":[{"name":"transferIndex","nodeType":"YulIdentifier","src":"5481:13:16"},{"name":"Transfer_size","nodeType":"YulIdentifier","src":"5496:13:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5477:3:16"},"nodeType":"YulFunctionCall","src":"5477:33:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5386:3:16"},"nodeType":"YulFunctionCall","src":"5386:138:16"},"variables":[{"name":"transferPointer","nodeType":"YulTypedName","src":"5367:15:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"transferPointer","nodeType":"YulIdentifier","src":"5565:15:16"},{"name":"Transfer_trader_offset","nodeType":"YulIdentifier","src":"5582:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5561:3:16"},"nodeType":"YulFunctionCall","src":"5561:44:16"},{"arguments":[{"arguments":[{"name":"order","nodeType":"YulIdentifier","src":"5633:5:16"},{"name":"Order_trader_offset","nodeType":"YulIdentifier","src":"5640:19:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5629:3:16"},"nodeType":"YulFunctionCall","src":"5629:31:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5623:5:16"},"nodeType":"YulFunctionCall","src":"5623:38:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5537:6:16"},"nodeType":"YulFunctionCall","src":"5537:138:16"},"nodeType":"YulExpressionStatement","src":"5537:138:16"},{"expression":{"arguments":[{"arguments":[{"name":"transferPointer","nodeType":"YulIdentifier","src":"5717:15:16"},{"name":"Transfer_id_offset","nodeType":"YulIdentifier","src":"5734:18:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5713:3:16"},"nodeType":"YulFunctionCall","src":"5713:40:16"},{"name":"tokenId","nodeType":"YulIdentifier","src":"5755:7:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:16"},"nodeType":"YulFunctionCall","src":"5706:57:16"},"nodeType":"YulExpressionStatement","src":"5706:57:16"},{"expression":{"arguments":[{"arguments":[{"name":"transferPointer","nodeType":"YulIdentifier","src":"5824:15:16"},{"name":"Transfer_collection_offset","nodeType":"YulIdentifier","src":"5841:26:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5820:3:16"},"nodeType":"YulFunctionCall","src":"5820:48:16"},{"arguments":[{"arguments":[{"name":"order","nodeType":"YulIdentifier","src":"5896:5:16"},{"name":"Order_collection_offset","nodeType":"YulIdentifier","src":"5903:23:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5892:3:16"},"nodeType":"YulFunctionCall","src":"5892:35:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5886:5:16"},"nodeType":"YulFunctionCall","src":"5886:42:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5796:6:16"},"nodeType":"YulFunctionCall","src":"5796:146:16"},"nodeType":"YulExpressionStatement","src":"5796:146:16"},{"expression":{"arguments":[{"arguments":[{"name":"transferPointer","nodeType":"YulIdentifier","src":"6005:15:16"},{"name":"Transfer_assetType_offset","nodeType":"YulIdentifier","src":"6022:25:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6001:3:16"},"nodeType":"YulFunctionCall","src":"6001:47:16"},{"arguments":[{"arguments":[{"name":"order","nodeType":"YulIdentifier","src":"6076:5:16"},{"name":"Order_assetType_offset","nodeType":"YulIdentifier","src":"6083:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6072:3:16"},"nodeType":"YulFunctionCall","src":"6072:34:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6066:5:16"},"nodeType":"YulFunctionCall","src":"6066:41:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5977:6:16"},"nodeType":"YulFunctionCall","src":"5977:144:16"},"nodeType":"YulExpressionStatement","src":"5977:144:16"},{"expression":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"6184:15:16"},{"name":"ExecutionBatch_length_offset","nodeType":"YulIdentifier","src":"6201:28:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6180:3:16"},"nodeType":"YulFunctionCall","src":"6180:50:16"},{"arguments":[{"name":"transferIndex","nodeType":"YulIdentifier","src":"6252:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"6267:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6248:3:16"},"nodeType":"YulFunctionCall","src":"6248:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6156:6:16"},"nodeType":"YulFunctionCall","src":"6156:127:16"},"nodeType":"YulExpressionStatement","src":"6156:127:16"},{"body":{"nodeType":"YulBlock","src":"6441:143:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"transferPointer","nodeType":"YulIdentifier","src":"6470:15:16"},{"name":"Transfer_amount_offset","nodeType":"YulIdentifier","src":"6487:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6466:3:16"},"nodeType":"YulFunctionCall","src":"6466:44:16"},{"name":"amount","nodeType":"YulIdentifier","src":"6512:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6459:6:16"},"nodeType":"YulFunctionCall","src":"6459:60:16"},"nodeType":"YulExpressionStatement","src":"6459:60:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"order","nodeType":"YulIdentifier","src":"6360:5:16"},{"name":"Order_assetType_offset","nodeType":"YulIdentifier","src":"6367:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6356:3:16"},"nodeType":"YulFunctionCall","src":"6356:34:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6350:5:16"},"nodeType":"YulFunctionCall","src":"6350:41:16"},{"name":"AssetType_ERC1155","nodeType":"YulIdentifier","src":"6409:17:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6330:2:16"},"nodeType":"YulFunctionCall","src":"6330:110:16"},"nodeType":"YulIf","src":"6327:257:16"}]},"evmVersion":"london","externalReferences":[{"declaration":6656,"isOffset":false,"isSlot":false,"src":"6409:17:16","valueSize":1},{"declaration":6887,"isOffset":false,"isSlot":false,"src":"5054:30:16","valueSize":1},{"declaration":6902,"isOffset":false,"isSlot":false,"src":"5172:28:16","valueSize":1},{"declaration":6902,"isOffset":false,"isSlot":false,"src":"6201:28:16","valueSize":1},{"declaration":6899,"isOffset":false,"isSlot":false,"src":"5296:39:16","valueSize":1},{"declaration":6647,"isOffset":false,"isSlot":false,"src":"5449:8:16","valueSize":1},{"declaration":6791,"isOffset":false,"isSlot":false,"src":"6083:22:16","valueSize":1},{"declaration":6791,"isOffset":false,"isSlot":false,"src":"6367:22:16","valueSize":1},{"declaration":6779,"isOffset":false,"isSlot":false,"src":"5903:23:16","valueSize":1},{"declaration":6776,"isOffset":false,"isSlot":false,"src":"5640:19:16","valueSize":1},{"declaration":6875,"isOffset":false,"isSlot":false,"src":"6487:22:16","valueSize":1},{"declaration":6881,"isOffset":false,"isSlot":false,"src":"6022:25:16","valueSize":1},{"declaration":6878,"isOffset":false,"isSlot":false,"src":"5841:26:16","valueSize":1},{"declaration":6872,"isOffset":false,"isSlot":false,"src":"5734:18:16","valueSize":1},{"declaration":6866,"isOffset":false,"isSlot":false,"src":"5496:13:16","valueSize":1},{"declaration":6869,"isOffset":false,"isSlot":false,"src":"5582:22:16","valueSize":1},{"declaration":2457,"isOffset":false,"isSlot":false,"src":"6512:6:16","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"5022:14:16","valueSize":1},{"declaration":2453,"isOffset":false,"isSlot":false,"src":"5633:5:16","valueSize":1},{"declaration":2453,"isOffset":false,"isSlot":false,"src":"5896:5:16","valueSize":1},{"declaration":2453,"isOffset":false,"isSlot":false,"src":"6076:5:16","valueSize":1},{"declaration":2453,"isOffset":false,"isSlot":false,"src":"6360:5:16","valueSize":1},{"declaration":2455,"isOffset":false,"isSlot":false,"src":"5755:7:16","valueSize":1},{"declaration":2460,"isOffset":false,"isSlot":false,"src":"5111:13:16","valueSize":1},{"declaration":2460,"isOffset":false,"isSlot":false,"src":"5481:13:16","valueSize":1},{"declaration":2460,"isOffset":false,"isSlot":false,"src":"6252:13:16","valueSize":1}],"id":2462,"nodeType":"InlineAssembly","src":"4955:1639:16"}]},"documentation":{"id":2448,"nodeType":"StructuredDocumentation","src":"4469:269:16","text":" @notice Insert the nonfungible transfer into the batch\n @param executionBatch Execution batch\n @param order Order\n @param tokenId Token id\n @param amount Number of token units\n @return transferIndex Index of the transfer"},"id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"_insertNonfungibleTransfer","nameLocation":"4752:26:16","nodeType":"FunctionDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"executionBatch","nameLocation":"4801:14:16","nodeType":"VariableDeclaration","scope":2464,"src":"4788:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2449,"name":"bytes","nodeType":"ElementaryTypeName","src":"4788:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2453,"mutability":"mutable","name":"order","nameLocation":"4838:5:16","nodeType":"VariableDeclaration","scope":2464,"src":"4825:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":2452,"nodeType":"UserDefinedTypeName","pathNode":{"id":2451,"name":"Order","nameLocations":["4825:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"4825:5:16"},"referencedDeclaration":7064,"src":"4825:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":2455,"mutability":"mutable","name":"tokenId","nameLocation":"4861:7:16","nodeType":"VariableDeclaration","scope":2464,"src":"4853:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"4853:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2457,"mutability":"mutable","name":"amount","nameLocation":"4886:6:16","nodeType":"VariableDeclaration","scope":2464,"src":"4878:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"4878:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:120:16"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"transferIndex","nameLocation":"4930:13:16","nodeType":"VariableDeclaration","scope":2464,"src":"4922:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"4922:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4921:23:16"},"scope":3725,"src":"4743:1857:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2593,"nodeType":"Block","src":"7574:1268:16","statements":[{"assignments":[2491],"declarations":[{"constant":false,"id":2491,"mutability":"mutable","name":"makerId","nameLocation":"7592:7:16","nodeType":"VariableDeclaration","scope":2593,"src":"7584:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"7584:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2494,"initialValue":{"expression":{"id":2492,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"7602:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7620:7:16","memberName":"makerId","nodeType":"MemberAccess","referencedDeclaration":7086,"src":"7602:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7584:43:16"},{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":2495,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"7637:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7655:10:16","memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":7102,"src":"7637:28:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}},"id":2499,"indexExpression":{"id":2497,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"7666:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7637:35:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7673:7:16","memberName":"makerId","nodeType":"MemberAccess","referencedDeclaration":7105,"src":"7637:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2501,"name":"makerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"7683:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7637:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2503,"nodeType":"ExpressionStatement","src":"7637:53:16"},{"expression":{"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":2504,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"7700:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7731:10:16","memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":7102,"src":"7700:41:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}},"id":2508,"indexExpression":{"id":2506,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"7742:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7700:48:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7762:19:16","memberName":"makerFeeRecipientId","nodeType":"MemberAccess","referencedDeclaration":7109,"src":"7700:81:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2510,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"7784:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7802:14:16","memberName":"feeRecipientId","nodeType":"MemberAccess","referencedDeclaration":7084,"src":"7784:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:116:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2513,"nodeType":"ExpressionStatement","src":"7700:116:16"},{"expression":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":2514,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"7826:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7844:10:16","memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":7102,"src":"7826:28:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}},"id":2518,"indexExpression":{"id":2516,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"7855:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7826:35:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7862:11:16","memberName":"stateUpdate","nodeType":"MemberAccess","referencedDeclaration":7118,"src":"7826:47:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"expression":{"id":2521,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"7910:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:16","memberName":"makers","nodeType":"MemberAccess","referencedDeclaration":7092,"src":"7910:24:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2524,"indexExpression":{"id":2523,"name":"makerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"7935:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7910:33:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2525,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"7963:9:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2526,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"7993:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":2527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8001:5:16","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7033,"src":"7993:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2528,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"8027:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2529,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"8063:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":2530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8071:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7037,"src":"8063:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2520,"name":"StateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"7876:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StateUpdate_$7130_storage_ptr_$","typeString":"type(struct StateUpdate storage pointer)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7902:6:16","7957:4:16","7986:5:16","8020:5:16","8052:9:16"],"names":["trader","hash","index","value","maxAmount"],"nodeType":"FunctionCall","src":"7876:212:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"}},"src":"7826:262:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"}},"id":2533,"nodeType":"ExpressionStatement","src":"7826:262:16"},{"condition":{"id":2534,"name":"makerIsSeller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"8102:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2564,"nodeType":"Block","src":"8348:225:16","statements":[{"id":2563,"nodeType":"UncheckedBlock","src":"8362:201:16","statements":[{"expression":{"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":2550,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"8390:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8408:10:16","memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":7102,"src":"8390:28:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}},"id":2554,"indexExpression":{"id":2552,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"8419:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8390:35:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8426:12:16","memberName":"sellerAmount","nodeType":"MemberAccess","referencedDeclaration":7107,"src":"8390:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"8461:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2557,"name":"protocolFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"8494:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8461:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2559,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"8534:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8461:87:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8390:158:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2562,"nodeType":"ExpressionStatement","src":"8390:158:16"}]}]},"id":2565,"nodeType":"IfStatement","src":"8098:475:16","trueBody":{"id":2549,"nodeType":"Block","src":"8117:225:16","statements":[{"id":2548,"nodeType":"UncheckedBlock","src":"8131:201:16","statements":[{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":2535,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"8159:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8177:10:16","memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":7102,"src":"8159:28:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}},"id":2539,"indexExpression":{"id":2537,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"8188:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8159:35:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8195:12:16","memberName":"sellerAmount","nodeType":"MemberAccess","referencedDeclaration":7107,"src":"8159:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2541,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"8230:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2542,"name":"protocolFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"8263:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8230:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2544,"name":"makerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"8303:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8230:87:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8159:158:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2547,"nodeType":"ExpressionStatement","src":"8159:158:16"}]}]}},{"expression":{"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":2566,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"8582:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8600:10:16","memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":7102,"src":"8582:28:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}},"id":2570,"indexExpression":{"id":2568,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"8611:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8582:35:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8618:14:16","memberName":"makerFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"8582:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2572,"name":"makerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"8635:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8582:67:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2574,"nodeType":"ExpressionStatement","src":"8582:67:16"},{"expression":{"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":2575,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"8659:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8677:10:16","memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":7102,"src":"8659:28:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}},"id":2579,"indexExpression":{"id":2577,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"8688:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8659:35:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8695:14:16","memberName":"takerFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7113,"src":"8659:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2581,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"8712:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8659:67:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2583,"nodeType":"ExpressionStatement","src":"8659:67:16"},{"expression":{"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":2584,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"8736:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8767:10:16","memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":7102,"src":"8736:41:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}},"id":2588,"indexExpression":{"id":2586,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"8778:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8736:48:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8798:17:16","memberName":"protocolFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"8736:79:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2590,"name":"protocolFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"8818:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8736:99:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2592,"nodeType":"ExpressionStatement","src":"8736:99:16"}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"6606:591:16","text":" @notice Insert the fungible transfers that need to be executed atomically\n @param fungibleTransfers Fungible transfers struct\n @param takerAmount Amount of the listing being taken\n @param listing Listing to execute\n @param orderHash Order hash\n @param index Execution index\n @param totalPrice Total price of the purchased tokens\n @param protocolFeeAmount Computed protocol fee\n @param makerFeeAmount Computed maker fee\n @param takerFeeAmount Computed taker fee\n @param makerIsSeller Is the order maker the seller"},"id":2594,"implemented":true,"kind":"function","modifiers":[],"name":"_insertFungibleTransfers","nameLocation":"7211:24:16","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"fungibleTransfers","nameLocation":"7270:17:16","nodeType":"VariableDeclaration","scope":2594,"src":"7245:42:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers"},"typeName":{"id":2467,"nodeType":"UserDefinedTypeName","pathNode":{"id":2466,"name":"FungibleTransfers","nameLocations":["7245:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":7103,"src":"7245:17:16"},"referencedDeclaration":7103,"src":"7245:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_storage_ptr","typeString":"struct FungibleTransfers"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"takerAmount","nameLocation":"7305:11:16","nodeType":"VariableDeclaration","scope":2594,"src":"7297:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"7297:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"listing","nameLocation":"7341:7:16","nodeType":"VariableDeclaration","scope":2594,"src":"7326:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing"},"typeName":{"id":2472,"nodeType":"UserDefinedTypeName","pathNode":{"id":2471,"name":"Listing","nameLocations":["7326:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"7326:7:16"},"referencedDeclaration":7040,"src":"7326:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"},{"constant":false,"id":2475,"mutability":"mutable","name":"orderHash","nameLocation":"7366:9:16","nodeType":"VariableDeclaration","scope":2594,"src":"7358:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7358:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"index","nameLocation":"7393:5:16","nodeType":"VariableDeclaration","scope":2594,"src":"7385:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"7385:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2479,"mutability":"mutable","name":"totalPrice","nameLocation":"7416:10:16","nodeType":"VariableDeclaration","scope":2594,"src":"7408:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"7408:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"protocolFeeAmount","nameLocation":"7444:17:16","nodeType":"VariableDeclaration","scope":2594,"src":"7436:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"7436:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"makerFeeAmount","nameLocation":"7479:14:16","nodeType":"VariableDeclaration","scope":2594,"src":"7471:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"takerFeeAmount","nameLocation":"7511:14:16","nodeType":"VariableDeclaration","scope":2594,"src":"7503:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"7503:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"makerIsSeller","nameLocation":"7540:13:16","nodeType":"VariableDeclaration","scope":2594,"src":"7535:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2486,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7235:324:16"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[],"src":"7574:0:16"},"scope":3725,"src":"7202:1640:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2715,"nodeType":"Block","src":"9232:1229:16","statements":[{"assignments":[2605],"declarations":[{"constant":false,"id":2605,"mutability":"mutable","name":"feeRecipient","nameLocation":"9250:12:16","nodeType":"VariableDeclaration","scope":2715,"src":"9242:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2604,"name":"address","nodeType":"ElementaryTypeName","src":"9242:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2609,"initialValue":{"expression":{"expression":{"id":2606,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"9265:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":2607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9271:8:16","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"9265:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":2608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9280:9:16","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"9265:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9242:47:16"},{"assignments":[2611],"declarations":[{"constant":false,"id":2611,"mutability":"mutable","name":"feeRecipientId","nameLocation":"9307:14:16","nodeType":"VariableDeclaration","scope":2715,"src":"9299:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"9299:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2614,"initialValue":{"expression":{"id":2612,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9324:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9342:14:16","memberName":"feeRecipientId","nodeType":"MemberAccess","referencedDeclaration":7084,"src":"9324:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9299:57:16"},{"assignments":[2616],"declarations":[{"constant":false,"id":2616,"mutability":"mutable","name":"currentFeeRecipient","nameLocation":"9374:19:16","nodeType":"VariableDeclaration","scope":2715,"src":"9366:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"9366:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2621,"initialValue":{"baseExpression":{"expression":{"id":2617,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9396:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9414:13:16","memberName":"feeRecipients","nodeType":"MemberAccess","referencedDeclaration":7089,"src":"9396:31:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2620,"indexExpression":{"id":2619,"name":"feeRecipientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9441:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9396:69:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9366:99:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"9479:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2623,"name":"currentFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"9495:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9479:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2659,"nodeType":"IfStatement","src":"9475:465:16","trueBody":{"id":2658,"nodeType":"Block","src":"9516:424:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2625,"name":"currentFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"9534:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9565:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9557:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2626,"name":"address","nodeType":"ElementaryTypeName","src":"9557:7:16","typeDescriptions":{}}},"id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9557:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9534:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2656,"nodeType":"Block","src":"9670:260:16","statements":[{"id":2649,"nodeType":"UncheckedBlock","src":"9688:161:16","statements":[{"expression":{"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2640,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9720:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9738:13:16","memberName":"feeRecipients","nodeType":"MemberAccess","referencedDeclaration":7089,"src":"9720:31:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2645,"indexExpression":{"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"9777:16:16","subExpression":{"id":2642,"name":"feeRecipientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9779:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9720:95:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2646,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"9818:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9720:110:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2648,"nodeType":"ExpressionStatement","src":"9720:110:16"}]},{"expression":{"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2650,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9866:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9884:14:16","memberName":"feeRecipientId","nodeType":"MemberAccess","referencedDeclaration":7084,"src":"9866:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2653,"name":"feeRecipientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9901:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9866:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2655,"nodeType":"ExpressionStatement","src":"9866:49:16"}]},"id":2657,"nodeType":"IfStatement","src":"9530:400:16","trueBody":{"id":2639,"nodeType":"Block","src":"9569:95:16","statements":[{"expression":{"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2631,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9587:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9605:13:16","memberName":"feeRecipients","nodeType":"MemberAccess","referencedDeclaration":7089,"src":"9587:31:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2635,"indexExpression":{"id":2633,"name":"feeRecipientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9619:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9587:47:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2636,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"9637:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9587:62:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2638,"nodeType":"ExpressionStatement","src":"9587:62:16"}]}}]}},{"assignments":[2661],"declarations":[{"constant":false,"id":2661,"mutability":"mutable","name":"trader","nameLocation":"9957:6:16","nodeType":"VariableDeclaration","scope":2715,"src":"9949:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2660,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2664,"initialValue":{"expression":{"id":2662,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"9966:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":2663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9972:6:16","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"9966:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9949:29:16"},{"assignments":[2666],"declarations":[{"constant":false,"id":2666,"mutability":"mutable","name":"makerId","nameLocation":"9996:7:16","nodeType":"VariableDeclaration","scope":2715,"src":"9988:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2665,"name":"uint256","nodeType":"ElementaryTypeName","src":"9988:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2669,"initialValue":{"expression":{"id":2667,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"10006:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10024:7:16","memberName":"makerId","nodeType":"MemberAccess","referencedDeclaration":7086,"src":"10006:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9988:43:16"},{"assignments":[2671],"declarations":[{"constant":false,"id":2671,"mutability":"mutable","name":"currentTrader","nameLocation":"10049:13:16","nodeType":"VariableDeclaration","scope":2715,"src":"10041:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"10041:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2676,"initialValue":{"baseExpression":{"expression":{"id":2672,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"10065:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10083:6:16","memberName":"makers","nodeType":"MemberAccess","referencedDeclaration":7092,"src":"10065:24:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2675,"indexExpression":{"id":2674,"name":"makerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10090:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10065:33:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10041:57:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2677,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"10112:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2678,"name":"currentTrader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"10122:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10112:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2714,"nodeType":"IfStatement","src":"10108:347:16","trueBody":{"id":2713,"nodeType":"Block","src":"10137:318:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2680,"name":"currentTrader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"10155:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10172:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2681,"name":"address","nodeType":"ElementaryTypeName","src":"10172:7:16","typeDescriptions":{}}},"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10172:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10155:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2711,"nodeType":"Block","src":"10265:180:16","statements":[{"id":2704,"nodeType":"UncheckedBlock","src":"10283:95:16","statements":[{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2695,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"10315:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10333:6:16","memberName":"makers","nodeType":"MemberAccess","referencedDeclaration":7092,"src":"10315:24:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2700,"indexExpression":{"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"10340:9:16","subExpression":{"id":2697,"name":"makerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10342:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10315:35:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2701,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"10353:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10315:44:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2703,"nodeType":"ExpressionStatement","src":"10315:44:16"}]},{"expression":{"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2705,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"10395:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10413:7:16","memberName":"makerId","nodeType":"MemberAccess","referencedDeclaration":7086,"src":"10395:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2708,"name":"makerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10423:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10395:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2710,"nodeType":"ExpressionStatement","src":"10395:35:16"}]},"id":2712,"nodeType":"IfStatement","src":"10151:294:16","trueBody":{"id":2694,"nodeType":"Block","src":"10184:75:16","statements":[{"expression":{"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2686,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"10202:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10220:6:16","memberName":"makers","nodeType":"MemberAccess","referencedDeclaration":7092,"src":"10202:24:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2690,"indexExpression":{"id":2688,"name":"makerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10227:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10202:33:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2691,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"10238:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10202:42:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2693,"nodeType":"ExpressionStatement","src":"10202:42:16"}]}}]}}]},"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"8848:256:16","text":" @notice Set the addresses of the maker fee recipient and order maker if different than currently being batched\n @param fungibleTransfers Fungible transfers struct\n @param order Parent order of listing being added to the batch"},"id":2716,"implemented":true,"kind":"function","modifiers":[],"name":"_setAddresses","nameLocation":"9118:13:16","nodeType":"FunctionDefinition","parameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"fungibleTransfers","nameLocation":"9166:17:16","nodeType":"VariableDeclaration","scope":2716,"src":"9141:42:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers"},"typeName":{"id":2597,"nodeType":"UserDefinedTypeName","pathNode":{"id":2596,"name":"FungibleTransfers","nameLocations":["9141:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":7103,"src":"9141:17:16"},"referencedDeclaration":7103,"src":"9141:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_storage_ptr","typeString":"struct FungibleTransfers"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"order","nameLocation":"9206:5:16","nodeType":"VariableDeclaration","scope":2716,"src":"9193:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":2600,"nodeType":"UserDefinedTypeName","pathNode":{"id":2599,"name":"Order","nameLocations":["9193:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"9193:5:16"},"referencedDeclaration":7064,"src":"9193:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"}],"src":"9131:86:16"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[],"src":"9232:0:16"},"scope":3725,"src":"9109:1352:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2776,"nodeType":"Block","src":"11100:310:16","statements":[{"expression":{"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2738,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"11110:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2739,"name":"pricePerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"11123:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2740,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"11139:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11123:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11110:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2743,"nodeType":"ExpressionStatement","src":"11110:40:16"},{"expression":{"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2744,"name":"makerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"11160:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2745,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"11178:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2746,"name":"makerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"11191:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":2747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11200:4:16","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"11191:13:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11178:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11177:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2750,"name":"_BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"11208:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11177:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11160:61:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2753,"nodeType":"ExpressionStatement","src":"11160:61:16"},{"expression":{"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2754,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"11231:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2755,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"11249:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"expression":{"id":2756,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"11262:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":2757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11267:8:16","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"11262:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":2758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11276:4:16","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"11262:18:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11249:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11248:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2761,"name":"_BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"11284:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11248:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11231:66:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2764,"nodeType":"ExpressionStatement","src":"11231:66:16"},{"expression":{"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2765,"name":"protocolFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"11307:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2766,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"11340:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"expression":{"id":2767,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"11353:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":2768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11358:11:16","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":7133,"src":"11353:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":2769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11370:4:16","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"11353:21:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11340:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2771,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11339:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2772,"name":"_BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"11390:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11339:64:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11307:96:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2775,"nodeType":"ExpressionStatement","src":"11307:96:16"}]},"documentation":{"id":2717,"nodeType":"StructuredDocumentation","src":"10467:277:16","text":" @notice Compute all necessary fees to be taken\n @param pricePerToken Price per token unit\n @param takerAmount Number of token units taken (should only be greater than 1 for ERC1155)\n @param fees Protocol and taker fee set by the transaction"},"id":2777,"implemented":true,"kind":"function","modifiers":[],"name":"_computeFees","nameLocation":"10758:12:16","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"pricePerToken","nameLocation":"10788:13:16","nodeType":"VariableDeclaration","scope":2777,"src":"10780:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"10780:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"takerAmount","nameLocation":"10819:11:16","nodeType":"VariableDeclaration","scope":2777,"src":"10811:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2720,"name":"uint256","nodeType":"ElementaryTypeName","src":"10811:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"makerFee","nameLocation":"10855:8:16","nodeType":"VariableDeclaration","scope":2777,"src":"10840:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":2723,"nodeType":"UserDefinedTypeName","pathNode":{"id":2722,"name":"FeeRate","nameLocations":["10840:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"10840:7:16"},"referencedDeclaration":7142,"src":"10840:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"fees","nameLocation":"10885:4:16","nodeType":"VariableDeclaration","scope":2777,"src":"10873:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":2726,"nodeType":"UserDefinedTypeName","pathNode":{"id":2725,"name":"Fees","nameLocations":["10873:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"10873:4:16"},"referencedDeclaration":7137,"src":"10873:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"}],"src":"10770:125:16"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"totalPrice","nameLocation":"10964:10:16","nodeType":"VariableDeclaration","scope":2777,"src":"10956:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"10956:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2732,"mutability":"mutable","name":"protocolFeeAmount","nameLocation":"10996:17:16","nodeType":"VariableDeclaration","scope":2777,"src":"10988:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"10988:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"makerFeeAmount","nameLocation":"11035:14:16","nodeType":"VariableDeclaration","scope":2777,"src":"11027:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"11027:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"takerFeeAmount","nameLocation":"11071:14:16","nodeType":"VariableDeclaration","scope":2777,"src":"11063:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"11063:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10942:153:16"},"scope":3725,"src":"10749:661:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3216,"nodeType":"Block","src":"12230:7600:16","statements":[{"assignments":[2793],"declarations":[{"constant":false,"id":2793,"mutability":"mutable","name":"batchLength","nameLocation":"12248:11:16","nodeType":"VariableDeclaration","scope":3216,"src":"12240:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2792,"name":"uint256","nodeType":"ElementaryTypeName","src":"12240:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2794,"nodeType":"VariableDeclarationStatement","src":"12240:19:16"},{"AST":{"nodeType":"YulBlock","src":"12278:259:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12292:120:16","value":{"arguments":[{"name":"executionBatch","nodeType":"YulIdentifier","src":"12336:14:16"},{"name":"ExecutionBatch_calldata_offset","nodeType":"YulIdentifier","src":"12368:30:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12315:3:16"},"nodeType":"YulFunctionCall","src":"12315:97:16"},"variables":[{"name":"calldataPointer","nodeType":"YulTypedName","src":"12296:15:16","type":""}]},{"nodeType":"YulAssignment","src":"12425:102:16","value":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"12467:15:16"},{"name":"ExecutionBatch_length_offset","nodeType":"YulIdentifier","src":"12484:28:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12463:3:16"},"nodeType":"YulFunctionCall","src":"12463:50:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12440:5:16"},"nodeType":"YulFunctionCall","src":"12440:87:16"},"variableNames":[{"name":"batchLength","nodeType":"YulIdentifier","src":"12425:11:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6887,"isOffset":false,"isSlot":false,"src":"12368:30:16","valueSize":1},{"declaration":6902,"isOffset":false,"isSlot":false,"src":"12484:28:16","valueSize":1},{"declaration":2793,"isOffset":false,"isSlot":false,"src":"12425:11:16","valueSize":1},{"declaration":2780,"isOffset":false,"isSlot":false,"src":"12336:14:16","valueSize":1}],"id":2795,"nodeType":"InlineAssembly","src":"12269:268:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2796,"name":"batchLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"12550:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12564:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12550:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3215,"nodeType":"IfStatement","src":"12546:7278:16","trueBody":{"id":3214,"nodeType":"Block","src":"12567:7257:16","statements":[{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"successfulTransfers","nameLocation":"12595:19:16","nodeType":"VariableDeclaration","scope":3214,"src":"12581:33:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2801,"name":"bool","nodeType":"ElementaryTypeName","src":"12581:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2802,"nodeType":"ArrayTypeName","src":"12581:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":2808,"initialValue":{"arguments":[{"id":2805,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"12663:14:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2806,"name":"batchLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"12695:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2804,"name":"_executeNonfungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"12617:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (bytes memory,uint256) returns (bool[] memory)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12617:103:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12581:139:16"},{"assignments":[2810],"declarations":[{"constant":false,"id":2810,"mutability":"mutable","name":"transfersLength","nameLocation":"12743:15:16","nodeType":"VariableDeclaration","scope":3214,"src":"12735:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"12735:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2813,"initialValue":{"expression":{"id":2811,"name":"successfulTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"12761:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12781:6:16","memberName":"length","nodeType":"MemberAccess","src":"12761:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12735:52:16"},{"body":{"id":3026,"nodeType":"Block","src":"12840:3869:16","statements":[{"condition":{"baseExpression":{"id":2820,"name":"successfulTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"12862:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2822,"indexExpression":{"id":2821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"12882:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12862:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3021,"nodeType":"IfStatement","src":"12858:3765:16","trueBody":{"id":3020,"nodeType":"Block","src":"12886:3737:16","statements":[{"assignments":[2825],"declarations":[{"constant":false,"id":2825,"mutability":"mutable","name":"execution","nameLocation":"12931:9:16","nodeType":"VariableDeclaration","scope":3020,"src":"12908:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution"},"typeName":{"id":2824,"nodeType":"UserDefinedTypeName","pathNode":{"id":2823,"name":"AtomicExecution","nameLocations":["12908:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":7119,"src":"12908:15:16"},"referencedDeclaration":7119,"src":"12908:15:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_storage_ptr","typeString":"struct AtomicExecution"}},"visibility":"internal"}],"id":2830,"initialValue":{"baseExpression":{"expression":{"id":2826,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"12943:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12986:10:16","memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":7102,"src":"12943:53:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}},"id":2829,"indexExpression":{"id":2828,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"12997:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12943:56:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"nodeType":"VariableDeclarationStatement","src":"12908:91:16"},{"assignments":[2833],"declarations":[{"constant":false,"id":2833,"mutability":"mutable","name":"makerFee","nameLocation":"13036:8:16","nodeType":"VariableDeclaration","scope":3020,"src":"13021:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":2832,"nodeType":"UserDefinedTypeName","pathNode":{"id":2831,"name":"FeeRate","nameLocations":["13021:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"13021:7:16"},"referencedDeclaration":7142,"src":"13021:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"}],"id":2834,"nodeType":"VariableDeclarationStatement","src":"13021:23:16"},{"assignments":[2836],"declarations":[{"constant":false,"id":2836,"mutability":"mutable","name":"price","nameLocation":"13074:5:16","nodeType":"VariableDeclaration","scope":3020,"src":"13066:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"13066:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2837,"nodeType":"VariableDeclarationStatement","src":"13066:13:16"},{"id":2947,"nodeType":"UncheckedBlock","src":"13101:2183:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2838,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"13141:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2839,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"13154:9:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13164:3:16","memberName":"ASK","nodeType":"MemberAccess","referencedDeclaration":7016,"src":"13154:13:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"src":"13141:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2894,"nodeType":"Block","src":"13637:677:16","statements":[{"expression":{"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2864,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"13667:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13685:14:16","memberName":"makerTransfers","nodeType":"MemberAccess","referencedDeclaration":7095,"src":"13667:32:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2869,"indexExpression":{"expression":{"id":2866,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"13733:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13743:7:16","memberName":"makerId","nodeType":"MemberAccess","referencedDeclaration":7105,"src":"13733:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13667:113:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2870,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"13816:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13826:17:16","memberName":"protocolFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"13816:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2872,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"13878:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13888:14:16","memberName":"makerFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"13878:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13816:86:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2875,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"13937:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13947:14:16","memberName":"takerFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7113,"src":"13937:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13816:145:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2878,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"13996:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14006:12:16","memberName":"sellerAmount","nodeType":"MemberAccess","referencedDeclaration":7107,"src":"13996:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13816:202:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13667:351:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2882,"nodeType":"ExpressionStatement","src":"13667:351:16"},{"expression":{"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2883,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"14104:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2884,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"14144:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14154:12:16","memberName":"sellerAmount","nodeType":"MemberAccess","referencedDeclaration":7107,"src":"14144:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2886,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"14201:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14211:17:16","memberName":"protocolFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"14201:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14144:84:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2889,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"14263:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14273:14:16","memberName":"takerFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7113,"src":"14263:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14144:143:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14104:183:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"nodeType":"ExpressionStatement","src":"14104:183:16"}]},"id":2895,"nodeType":"IfStatement","src":"13137:1177:16","trueBody":{"id":2863,"nodeType":"Block","src":"13169:462:16","statements":[{"expression":{"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2842,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"13199:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13217:14:16","memberName":"makerTransfers","nodeType":"MemberAccess","referencedDeclaration":7095,"src":"13199:32:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2847,"indexExpression":{"expression":{"id":2844,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"13265:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13275:7:16","memberName":"makerId","nodeType":"MemberAccess","referencedDeclaration":7105,"src":"13265:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13199:113:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2848,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"13316:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13326:12:16","memberName":"sellerAmount","nodeType":"MemberAccess","referencedDeclaration":7107,"src":"13316:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13199:139:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2851,"nodeType":"ExpressionStatement","src":"13199:139:16"},{"expression":{"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2852,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"13421:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2853,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"13461:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13471:12:16","memberName":"sellerAmount","nodeType":"MemberAccess","referencedDeclaration":7107,"src":"13461:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2855,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"13518:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13528:17:16","memberName":"protocolFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"13518:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13461:84:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2858,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"13580:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13590:14:16","memberName":"makerFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"13580:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13461:143:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13421:183:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2862,"nodeType":"ExpressionStatement","src":"13421:183:16"}]}},{"expression":{"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2896,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"14339:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14357:19:16","memberName":"totalSellerTransfer","nodeType":"MemberAccess","referencedDeclaration":7080,"src":"14339:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2899,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"14380:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14419:12:16","memberName":"sellerAmount","nodeType":"MemberAccess","referencedDeclaration":7107,"src":"14380:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14339:92:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2902,"nodeType":"ExpressionStatement","src":"14339:92:16"},{"expression":{"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2903,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"14474:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14492:16:16","memberName":"totalProtocolFee","nodeType":"MemberAccess","referencedDeclaration":7078,"src":"14474:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2906,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"14512:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14551:17:16","memberName":"protocolFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"14512:56:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14474:94:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2909,"nodeType":"ExpressionStatement","src":"14474:94:16"},{"expression":{"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2910,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"14594:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14612:13:16","memberName":"totalTakerFee","nodeType":"MemberAccess","referencedDeclaration":7082,"src":"14594:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2913,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"14629:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14668:14:16","memberName":"takerFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7113,"src":"14629:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14594:88:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2916,"nodeType":"ExpressionStatement","src":"14594:88:16"},{"expression":{"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2917,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"14708:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14726:12:16","memberName":"feeTransfers","nodeType":"MemberAccess","referencedDeclaration":7098,"src":"14708:30:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2922,"indexExpression":{"expression":{"id":2919,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"14768:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14778:19:16","memberName":"makerFeeRecipientId","nodeType":"MemberAccess","referencedDeclaration":7109,"src":"14768:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14708:115:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2923,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"14827:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14837:14:16","memberName":"makerFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"14827:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14708:143:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2926,"nodeType":"ExpressionStatement","src":"14708:143:16"},{"expression":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2927,"name":"makerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"14877:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"expression":{"id":2929,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"14925:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14943:13:16","memberName":"feeRecipients","nodeType":"MemberAccess","referencedDeclaration":7089,"src":"14925:31:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2933,"indexExpression":{"expression":{"id":2931,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"14990:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15000:19:16","memberName":"makerFeeRecipientId","nodeType":"MemberAccess","referencedDeclaration":7109,"src":"14990:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14925:124:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2936,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"15120:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15130:14:16","memberName":"makerFeeAmount","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"15120:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2938,"name":"_BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"15147:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15120:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15119:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2941,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"15200:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15119:86:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15079:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2934,"name":"uint16","nodeType":"ElementaryTypeName","src":"15079:6:16","typeDescriptions":{}}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15079:156:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":2928,"name":"FeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"14888:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FeeRate_$7142_storage_ptr_$","typeString":"type(struct FeeRate storage pointer)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14888:373:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"src":"14877:384:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":2946,"nodeType":"ExpressionStatement","src":"14877:384:16"}]},{"assignments":[2950],"declarations":[{"constant":false,"id":2950,"mutability":"mutable","name":"stateUpdate","nameLocation":"15373:11:16","nodeType":"VariableDeclaration","scope":3020,"src":"15354:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate"},"typeName":{"id":2949,"nodeType":"UserDefinedTypeName","pathNode":{"id":2948,"name":"StateUpdate","nameLocations":["15354:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":7130,"src":"15354:11:16"},"referencedDeclaration":7130,"src":"15354:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_storage_ptr","typeString":"struct StateUpdate"}},"visibility":"internal"}],"id":2956,"initialValue":{"expression":{"baseExpression":{"expression":{"id":2951,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"15387:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":2952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15430:10:16","memberName":"executions","nodeType":"MemberAccess","referencedDeclaration":7102,"src":"15387:53:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}},"id":2954,"indexExpression":{"id":2953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"15441:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15387:56:16","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_memory_ptr","typeString":"struct AtomicExecution memory"}},"id":2955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15469:11:16","memberName":"stateUpdate","nodeType":"MemberAccess","referencedDeclaration":7118,"src":"15387:93:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"}},"nodeType":"VariableDeclarationStatement","src":"15354:126:16"},{"id":3009,"nodeType":"Block","src":"15502:796:16","statements":[{"assignments":[2958],"declarations":[{"constant":false,"id":2958,"mutability":"mutable","name":"trader","nameLocation":"15536:6:16","nodeType":"VariableDeclaration","scope":3009,"src":"15528:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2957,"name":"address","nodeType":"ElementaryTypeName","src":"15528:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2961,"initialValue":{"expression":{"id":2959,"name":"stateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"15545:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"}},"id":2960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15557:6:16","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7121,"src":"15545:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15528:35:16"},{"assignments":[2963],"declarations":[{"constant":false,"id":2963,"mutability":"mutable","name":"hash","nameLocation":"15597:4:16","nodeType":"VariableDeclaration","scope":3009,"src":"15589:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15589:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2966,"initialValue":{"expression":{"id":2964,"name":"stateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"15604:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"}},"id":2965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15616:4:16","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":7123,"src":"15604:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15589:31:16"},{"assignments":[2968],"declarations":[{"constant":false,"id":2968,"mutability":"mutable","name":"index","nameLocation":"15654:5:16","nodeType":"VariableDeclaration","scope":3009,"src":"15646:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"15646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2971,"initialValue":{"expression":{"id":2969,"name":"stateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"15662:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"}},"id":2970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15674:5:16","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7125,"src":"15662:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15646:33:16"},{"assignments":[2973],"declarations":[{"constant":false,"id":2973,"mutability":"mutable","name":"_amountTaken","nameLocation":"15713:12:16","nodeType":"VariableDeclaration","scope":3009,"src":"15705:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"15705:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2981,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2974,"name":"amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"15728:11:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))"}},"id":2976,"indexExpression":{"id":2975,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"15740:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15728:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":2978,"indexExpression":{"id":2977,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"15748:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15728:25:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2980,"indexExpression":{"id":2979,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"15754:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15728:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15705:55:16"},{"assignments":[2983],"declarations":[{"constant":false,"id":2983,"mutability":"mutable","name":"newAmountTaken","nameLocation":"15794:14:16","nodeType":"VariableDeclaration","scope":3009,"src":"15786:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"15786:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2988,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2984,"name":"_amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"15811:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2985,"name":"stateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"15854:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"}},"id":2986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15866:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":7127,"src":"15854:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15811:60:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15786:85:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2989,"name":"newAmountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"16043:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2990,"name":"stateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"16061:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"}},"id":2991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16073:9:16","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":7129,"src":"16061:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16043:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3007,"nodeType":"Block","src":"16196:80:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3004,"name":"OrderFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"16233:14:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3006,"nodeType":"RevertStatement","src":"16226:23:16"}]},"id":3008,"nodeType":"IfStatement","src":"16039:237:16","trueBody":{"id":3003,"nodeType":"Block","src":"16084:106:16","statements":[{"expression":{"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2993,"name":"amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"16114:11:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))"}},"id":2997,"indexExpression":{"id":2994,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"16126:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16114:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":2998,"indexExpression":{"id":2995,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"16134:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16114:25:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2999,"indexExpression":{"id":2996,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"16140:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16114:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3000,"name":"newAmountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"16149:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16114:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3002,"nodeType":"ExpressionStatement","src":"16114:49:16"}]}}]},{"expression":{"arguments":[{"id":3011,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"16374:14:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3012,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"16414:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3013,"name":"makerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"16445:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"id":3014,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"16479:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},{"id":3015,"name":"stateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"16509:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"}},{"id":3016,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"16546:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":3017,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"16581:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"},{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3010,"name":"_emitExecutionEventFromBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"16320:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$_t_struct$_StateUpdate_$7130_memory_ptr_$_t_enum$_OrderType_$7019_$_t_uint256_$returns$__$","typeString":"function (bytes memory,uint256,struct FeeRate memory,struct Fees memory,struct StateUpdate memory,enum OrderType,uint256)"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16320:284:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3019,"nodeType":"ExpressionStatement","src":"16320:284:16"}]}},{"id":3025,"nodeType":"UncheckedBlock","src":"16641:54:16","statements":[{"expression":{"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"16673:3:16","subExpression":{"id":3022,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"16675:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3024,"nodeType":"ExpressionStatement","src":"16673:3:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"12817:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2818,"name":"transfersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"12821:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12817:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3027,"initializationExpression":{"assignments":[2815],"declarations":[{"constant":false,"id":2815,"mutability":"mutable","name":"i","nameLocation":"12814:1:16","nodeType":"VariableDeclaration","scope":3027,"src":"12806:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"12806:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2816,"nodeType":"VariableDeclarationStatement","src":"12806:9:16"},"nodeType":"ForStatement","src":"12801:3908:16"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3028,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"16727:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3029,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"16740:9:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16750:3:16","memberName":"ASK","nodeType":"MemberAccess","referencedDeclaration":7016,"src":"16740:13:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"src":"16727:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3212,"nodeType":"Block","src":"18095:1719:16","statements":[{"assignments":[3110],"declarations":[{"constant":false,"id":3110,"mutability":"mutable","name":"makersLength","nameLocation":"18180:12:16","nodeType":"VariableDeclaration","scope":3212,"src":"18172:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"18172:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3115,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3111,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"18195:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18213:7:16","memberName":"makerId","nodeType":"MemberAccess","referencedDeclaration":7086,"src":"18195:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18223:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18195:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18172:52:16"},{"body":{"id":3141,"nodeType":"Block","src":"18278:312:16","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":3123,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"18339:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18357:6:16","memberName":"makers","nodeType":"MemberAccess","referencedDeclaration":7092,"src":"18339:24:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3126,"indexExpression":{"id":3125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"18364:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18339:27:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3129,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18400:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Executor_$3725","typeString":"contract Executor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Executor_$3725","typeString":"contract Executor"}],"id":3128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18392:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3127,"name":"address","nodeType":"ElementaryTypeName","src":"18392:7:16","typeDescriptions":{}}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18392:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"expression":{"id":3131,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"18431:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18449:14:16","memberName":"makerTransfers","nodeType":"MemberAccess","referencedDeclaration":7095,"src":"18431:32:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3134,"indexExpression":{"id":3133,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"18464:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18431:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3122,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"18300:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18300:188:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3136,"nodeType":"ExpressionStatement","src":"18300:188:16"},{"id":3140,"nodeType":"UncheckedBlock","src":"18510:62:16","statements":[{"expression":{"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"18546:3:16","subExpression":{"id":3137,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"18548:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3139,"nodeType":"ExpressionStatement","src":"18546:3:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3119,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"18258:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3120,"name":"makersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"18262:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18258:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3142,"initializationExpression":{"assignments":[3117],"declarations":[{"constant":false,"id":3117,"mutability":"mutable","name":"i","nameLocation":"18255:1:16","nodeType":"VariableDeclaration","scope":3142,"src":"18247:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"18247:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3118,"nodeType":"VariableDeclarationStatement","src":"18247:9:16"},"nodeType":"ForStatement","src":"18242:348:16"},{"expression":{"arguments":[{"arguments":[{"id":3146,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18709:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Executor_$3725","typeString":"contract Executor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Executor_$3725","typeString":"contract Executor"}],"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18701:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3144,"name":"address","nodeType":"ElementaryTypeName","src":"18701:7:16","typeDescriptions":{}}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18701:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3148,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18736:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18740:6:16","memberName":"sender","nodeType":"MemberAccess","src":"18736:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3150,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"18768:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18786:19:16","memberName":"totalSellerTransfer","nodeType":"MemberAccess","referencedDeclaration":7080,"src":"18768:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3143,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"18666:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18666:157:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3153,"nodeType":"ExpressionStatement","src":"18666:157:16"},{"assignments":[3155],"declarations":[{"constant":false,"id":3155,"mutability":"mutable","name":"feesLength","nameLocation":"18913:10:16","nodeType":"VariableDeclaration","scope":3212,"src":"18905:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"18905:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3160,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3156,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"18926:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18944:14:16","memberName":"feeRecipientId","nodeType":"MemberAccess","referencedDeclaration":7084,"src":"18926:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18961:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18926:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18905:57:16"},{"body":{"id":3186,"nodeType":"Block","src":"19014:317:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3170,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19083:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Executor_$3725","typeString":"contract Executor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Executor_$3725","typeString":"contract Executor"}],"id":3169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19075:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3168,"name":"address","nodeType":"ElementaryTypeName","src":"19075:7:16","typeDescriptions":{}}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19075:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"expression":{"id":3172,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"19114:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19132:13:16","memberName":"feeRecipients","nodeType":"MemberAccess","referencedDeclaration":7089,"src":"19114:31:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3175,"indexExpression":{"id":3174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"19146:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19114:34:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"expression":{"id":3176,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"19174:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19192:12:16","memberName":"feeTransfers","nodeType":"MemberAccess","referencedDeclaration":7098,"src":"19174:30:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3179,"indexExpression":{"id":3178,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"19205:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19174:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3167,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19036:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19036:193:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3181,"nodeType":"ExpressionStatement","src":"19036:193:16"},{"id":3185,"nodeType":"UncheckedBlock","src":"19251:62:16","statements":[{"expression":{"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"19287:3:16","subExpression":{"id":3182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"19289:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3184,"nodeType":"ExpressionStatement","src":"19287:3:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"18996:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3165,"name":"feesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"19000:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18996:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3187,"initializationExpression":{"assignments":[3162],"declarations":[{"constant":false,"id":3162,"mutability":"mutable","name":"i","nameLocation":"18993:1:16","nodeType":"VariableDeclaration","scope":3187,"src":"18985:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"18985:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3163,"nodeType":"VariableDeclarationStatement","src":"18985:9:16"},"nodeType":"ForStatement","src":"18980:351:16"},{"expression":{"arguments":[{"arguments":[{"id":3191,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19442:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Executor_$3725","typeString":"contract Executor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Executor_$3725","typeString":"contract Executor"}],"id":3190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19434:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3189,"name":"address","nodeType":"ElementaryTypeName","src":"19434:7:16","typeDescriptions":{}}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19434:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":3193,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"19469:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":3194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19474:11:16","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":7133,"src":"19469:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":3195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19486:9:16","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"19469:26:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3196,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"19517:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19535:16:16","memberName":"totalProtocolFee","nodeType":"MemberAccess","referencedDeclaration":7078,"src":"19517:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3188,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19399:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19399:170:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3199,"nodeType":"ExpressionStatement","src":"19399:170:16"},{"expression":{"arguments":[{"arguments":[{"id":3203,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19678:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Executor_$3725","typeString":"contract Executor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Executor_$3725","typeString":"contract Executor"}],"id":3202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19670:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3201,"name":"address","nodeType":"ElementaryTypeName","src":"19670:7:16","typeDescriptions":{}}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19670:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":3205,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"19705:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":3206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19710:8:16","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"19705:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":3207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19719:9:16","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"19705:23:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3208,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"19750:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19768:13:16","memberName":"totalTakerFee","nodeType":"MemberAccess","referencedDeclaration":7082,"src":"19750:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3200,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"19635:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19635:164:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3211,"nodeType":"ExpressionStatement","src":"19635:164:16"}]},"id":3213,"nodeType":"IfStatement","src":"16723:3091:16","trueBody":{"id":3108,"nodeType":"Block","src":"16755:1334:16","statements":[{"assignments":[3033],"declarations":[{"constant":false,"id":3033,"mutability":"mutable","name":"makersLength","nameLocation":"16841:12:16","nodeType":"VariableDeclaration","scope":3108,"src":"16833:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3032,"name":"uint256","nodeType":"ElementaryTypeName","src":"16833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3038,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3034,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"16856:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16874:7:16","memberName":"makerId","nodeType":"MemberAccess","referencedDeclaration":7086,"src":"16856:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16884:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16856:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16833:52:16"},{"body":{"id":3060,"nodeType":"Block","src":"16939:272:16","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":3046,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"16999:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17017:6:16","memberName":"makers","nodeType":"MemberAccess","referencedDeclaration":7092,"src":"16999:24:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3049,"indexExpression":{"id":3048,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"17024:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16999:27:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"expression":{"id":3050,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"17052:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17070:14:16","memberName":"makerTransfers","nodeType":"MemberAccess","referencedDeclaration":7095,"src":"17052:32:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3053,"indexExpression":{"id":3052,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"17085:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17052:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3045,"name":"_transferETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"16961:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16961:148:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3055,"nodeType":"ExpressionStatement","src":"16961:148:16"},{"id":3059,"nodeType":"UncheckedBlock","src":"17131:62:16","statements":[{"expression":{"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17167:3:16","subExpression":{"id":3056,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"17169:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3058,"nodeType":"ExpressionStatement","src":"17167:3:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"16919:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3043,"name":"makersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"16923:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16919:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3061,"initializationExpression":{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"i","nameLocation":"16916:1:16","nodeType":"VariableDeclaration","scope":3061,"src":"16908:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"16908:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3041,"nodeType":"VariableDeclarationStatement","src":"16908:9:16"},"nodeType":"ForStatement","src":"16903:308:16"},{"assignments":[3063],"declarations":[{"constant":false,"id":3063,"mutability":"mutable","name":"feesLength","nameLocation":"17300:10:16","nodeType":"VariableDeclaration","scope":3108,"src":"17292:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"17292:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3068,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3064,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"17313:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17331:14:16","memberName":"feeRecipientId","nodeType":"MemberAccess","referencedDeclaration":7084,"src":"17313:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17348:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17313:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17292:57:16"},{"body":{"id":3090,"nodeType":"Block","src":"17401:277:16","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":3076,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"17461:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17479:13:16","memberName":"feeRecipients","nodeType":"MemberAccess","referencedDeclaration":7089,"src":"17461:31:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3079,"indexExpression":{"id":3078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"17493:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17461:34:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"expression":{"id":3080,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"17521:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17539:12:16","memberName":"feeTransfers","nodeType":"MemberAccess","referencedDeclaration":7098,"src":"17521:30:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3083,"indexExpression":{"id":3082,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"17552:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17521:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3075,"name":"_transferETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"17423:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17423:153:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3085,"nodeType":"ExpressionStatement","src":"17423:153:16"},{"id":3089,"nodeType":"UncheckedBlock","src":"17598:62:16","statements":[{"expression":{"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17634:3:16","subExpression":{"id":3086,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"17636:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3088,"nodeType":"ExpressionStatement","src":"17634:3:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"17383:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3073,"name":"feesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"17387:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17383:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3091,"initializationExpression":{"assignments":[3070],"declarations":[{"constant":false,"id":3070,"mutability":"mutable","name":"i","nameLocation":"17380:1:16","nodeType":"VariableDeclaration","scope":3091,"src":"17372:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"17372:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3071,"nodeType":"VariableDeclarationStatement","src":"17372:9:16"},"nodeType":"ForStatement","src":"17367:311:16"},{"expression":{"arguments":[{"expression":{"expression":{"id":3093,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"17780:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":3094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17785:11:16","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":7133,"src":"17780:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":3095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17797:9:16","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"17780:26:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3096,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"17828:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17846:16:16","memberName":"totalProtocolFee","nodeType":"MemberAccess","referencedDeclaration":7078,"src":"17828:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3092,"name":"_transferETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"17746:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17746:134:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3099,"nodeType":"ExpressionStatement","src":"17746:134:16"},{"expression":{"arguments":[{"expression":{"expression":{"id":3101,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"17980:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":3102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17985:8:16","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"17980:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":3103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17994:9:16","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"17980:23:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3104,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"18025:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":3105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18043:13:16","memberName":"totalTakerFee","nodeType":"MemberAccess","referencedDeclaration":7082,"src":"18025:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3100,"name":"_transferETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"17946:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17946:128:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3107,"nodeType":"ExpressionStatement","src":"17946:128:16"}]}}]}}]},"documentation":{"id":2778,"nodeType":"StructuredDocumentation","src":"11599:436:16","text":" @notice Execute the transfers by first attempting the nonfungible transfers, for the successful transfers sum the fungible transfers by the recipients and execute\n @param executionBatch Execution batch struct\n @param fungibleTransfers Fungible transfers struct\n @param fees Protocol, maker, taker fees (note: makerFee will be inaccurate at this point in execution)\n @param orderType Order type"},"id":3217,"implemented":true,"kind":"function","modifiers":[],"name":"_executeBatchTransfer","nameLocation":"12049:21:16","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"executionBatch","nameLocation":"12093:14:16","nodeType":"VariableDeclaration","scope":3217,"src":"12080:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2779,"name":"bytes","nodeType":"ElementaryTypeName","src":"12080:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2783,"mutability":"mutable","name":"fungibleTransfers","nameLocation":"12142:17:16","nodeType":"VariableDeclaration","scope":3217,"src":"12117:42:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers"},"typeName":{"id":2782,"nodeType":"UserDefinedTypeName","pathNode":{"id":2781,"name":"FungibleTransfers","nameLocations":["12117:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":7103,"src":"12117:17:16"},"referencedDeclaration":7103,"src":"12117:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_storage_ptr","typeString":"struct FungibleTransfers"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"fees","nameLocation":"12181:4:16","nodeType":"VariableDeclaration","scope":3217,"src":"12169:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":2785,"nodeType":"UserDefinedTypeName","pathNode":{"id":2784,"name":"Fees","nameLocations":["12169:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"12169:4:16"},"referencedDeclaration":7137,"src":"12169:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"orderType","nameLocation":"12205:9:16","nodeType":"VariableDeclaration","scope":3217,"src":"12195:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":2788,"nodeType":"UserDefinedTypeName","pathNode":{"id":2787,"name":"OrderType","nameLocations":["12195:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"12195:9:16"},"referencedDeclaration":7019,"src":"12195:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"}],"src":"12070:150:16"},"returnParameters":{"id":2791,"nodeType":"ParameterList","parameters":[],"src":"12230:0:16"},"scope":3725,"src":"12040:7790:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3250,"nodeType":"Block","src":"20294:1288:16","statements":[{"assignments":[3229],"declarations":[{"constant":false,"id":3229,"mutability":"mutable","name":"delegate","nameLocation":"20312:8:16","nodeType":"VariableDeclaration","scope":3250,"src":"20304:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"20304:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3231,"initialValue":{"id":3230,"name":"_DELEGATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"20323:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"20304:28:16"},{"assignments":[3233],"declarations":[{"constant":false,"id":3233,"mutability":"mutable","name":"successfulTransfersPointer","nameLocation":"20461:26:16","nodeType":"VariableDeclaration","scope":3250,"src":"20453:34:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"20453:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3234,"nodeType":"VariableDeclarationStatement","src":"20453:34:16"},{"AST":{"nodeType":"YulBlock","src":"20506:281:16","statements":[{"nodeType":"YulAssignment","src":"20520:51:16","value":{"arguments":[{"name":"Memory_pointer","nodeType":"YulIdentifier","src":"20556:14:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20550:5:16"},"nodeType":"YulFunctionCall","src":"20550:21:16"},"variableNames":[{"name":"successfulTransfersPointer","nodeType":"YulIdentifier","src":"20520:26:16"}]},{"expression":{"arguments":[{"name":"Memory_pointer","nodeType":"YulIdentifier","src":"20719:14:16"},{"arguments":[{"name":"successfulTransfersPointer","nodeType":"YulIdentifier","src":"20739:26:16"},{"name":"One_word","nodeType":"YulIdentifier","src":"20767:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20735:3:16"},"nodeType":"YulFunctionCall","src":"20735:41:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20712:6:16"},"nodeType":"YulFunctionCall","src":"20712:65:16"},"nodeType":"YulExpressionStatement","src":"20712:65:16"}]},"evmVersion":"london","externalReferences":[{"declaration":6650,"isOffset":false,"isSlot":false,"src":"20556:14:16","valueSize":1},{"declaration":6650,"isOffset":false,"isSlot":false,"src":"20719:14:16","valueSize":1},{"declaration":6647,"isOffset":false,"isSlot":false,"src":"20767:8:16","valueSize":1},{"declaration":3233,"isOffset":false,"isSlot":false,"src":"20520:26:16","valueSize":1},{"declaration":3233,"isOffset":false,"isSlot":false,"src":"20739:26:16","valueSize":1}],"id":3235,"nodeType":"InlineAssembly","src":"20497:290:16"},{"assignments":[3240],"declarations":[{"constant":false,"id":3240,"mutability":"mutable","name":"successfulTransfers","nameLocation":"20811:19:16","nodeType":"VariableDeclaration","scope":3250,"src":"20797:33:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3238,"name":"bool","nodeType":"ElementaryTypeName","src":"20797:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3239,"nodeType":"ArrayTypeName","src":"20797:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":3246,"initialValue":{"arguments":[{"id":3244,"name":"batchIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"20844:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"20833:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3241,"name":"bool","nodeType":"ElementaryTypeName","src":"20837:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3242,"nodeType":"ArrayTypeName","src":"20837:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20833:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"20797:58:16"},{"AST":{"nodeType":"YulBlock","src":"20874:666:16","statements":[{"nodeType":"YulVariableDeclaration","src":"20888:33:16","value":{"arguments":[{"name":"executionBatch","nodeType":"YulIdentifier","src":"20906:14:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20900:5:16"},"nodeType":"YulFunctionCall","src":"20900:21:16"},"variables":[{"name":"size","nodeType":"YulTypedName","src":"20892:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20934:120:16","value":{"arguments":[{"name":"executionBatch","nodeType":"YulIdentifier","src":"20978:14:16"},{"name":"ExecutionBatch_selector_offset","nodeType":"YulIdentifier","src":"21010:30:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20957:3:16"},"nodeType":"YulFunctionCall","src":"20957:97:16"},"variables":[{"name":"selectorPointer","nodeType":"YulTypedName","src":"20938:15:16","type":""}]},{"expression":{"arguments":[{"name":"selectorPointer","nodeType":"YulIdentifier","src":"21091:15:16"},{"arguments":[{"name":"Bytes4_shift","nodeType":"YulIdentifier","src":"21128:12:16"},{"name":"Delegate_transfer_selector","nodeType":"YulIdentifier","src":"21142:26:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"21124:3:16"},"nodeType":"YulFunctionCall","src":"21124:45:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21067:6:16"},"nodeType":"YulFunctionCall","src":"21067:116:16"},"nodeType":"YulExpressionStatement","src":"21067:116:16"},{"nodeType":"YulVariableDeclaration","src":"21196:334:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"21233:3:16"},"nodeType":"YulFunctionCall","src":"21233:5:16"},{"name":"delegate","nodeType":"YulIdentifier","src":"21256:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"21282:1:16","type":"","value":"0"},{"arguments":[{"name":"selectorPointer","nodeType":"YulIdentifier","src":"21305:15:16"},{"name":"Delegate_transfer_calldata_offset","nodeType":"YulIdentifier","src":"21322:33:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21301:3:16"},"nodeType":"YulFunctionCall","src":"21301:55:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"21378:4:16"},{"name":"Delegate_transfer_calldata_offset","nodeType":"YulIdentifier","src":"21384:33:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21374:3:16"},"nodeType":"YulFunctionCall","src":"21374:44:16"},{"name":"successfulTransfersPointer","nodeType":"YulIdentifier","src":"21436:26:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21484:4:16","type":"","value":"0x40"},{"arguments":[{"name":"batchIndex","nodeType":"YulIdentifier","src":"21494:10:16"},{"name":"One_word","nodeType":"YulIdentifier","src":"21506:8:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21490:3:16"},"nodeType":"YulFunctionCall","src":"21490:25:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21480:3:16"},"nodeType":"YulFunctionCall","src":"21480:36:16"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"21211:4:16"},"nodeType":"YulFunctionCall","src":"21211:319:16"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"21200:7:16","type":""}]}]},"evmVersion":"london","externalReferences":[{"declaration":6641,"isOffset":false,"isSlot":false,"src":"21128:12:16","valueSize":1},{"declaration":6770,"isOffset":false,"isSlot":false,"src":"21322:33:16","valueSize":1},{"declaration":6770,"isOffset":false,"isSlot":false,"src":"21384:33:16","valueSize":1},{"declaration":6767,"isOffset":false,"isSlot":false,"src":"21142:26:16","valueSize":1},{"declaration":6884,"isOffset":false,"isSlot":false,"src":"21010:30:16","valueSize":1},{"declaration":6647,"isOffset":false,"isSlot":false,"src":"21506:8:16","valueSize":1},{"declaration":3222,"isOffset":false,"isSlot":false,"src":"21494:10:16","valueSize":1},{"declaration":3229,"isOffset":false,"isSlot":false,"src":"21256:8:16","valueSize":1},{"declaration":3220,"isOffset":false,"isSlot":false,"src":"20906:14:16","valueSize":1},{"declaration":3220,"isOffset":false,"isSlot":false,"src":"20978:14:16","valueSize":1},{"declaration":3233,"isOffset":false,"isSlot":false,"src":"21436:26:16","valueSize":1}],"id":3247,"nodeType":"InlineAssembly","src":"20865:675:16"},{"expression":{"id":3248,"name":"successfulTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"21556:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"functionReturnParameters":3227,"id":3249,"nodeType":"Return","src":"21549:26:16"}]},"documentation":{"id":3218,"nodeType":"StructuredDocumentation","src":"19836:311:16","text":" @notice Attempt to execute a series of nonfungible transfers through the delegate; reverts will be skipped\n @param executionBatch Execution batch struct\n @param batchIndex Current available transfer slot in the batch\n @return Array indicating which transfers were successful"},"id":3251,"implemented":true,"kind":"function","modifiers":[],"name":"_executeNonfungibleTransfers","nameLocation":"20161:28:16","nodeType":"FunctionDefinition","parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3220,"mutability":"mutable","name":"executionBatch","nameLocation":"20212:14:16","nodeType":"VariableDeclaration","scope":3251,"src":"20199:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3219,"name":"bytes","nodeType":"ElementaryTypeName","src":"20199:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3222,"mutability":"mutable","name":"batchIndex","nameLocation":"20244:10:16","nodeType":"VariableDeclaration","scope":3251,"src":"20236:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"20236:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20189:71:16"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3251,"src":"20279:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3224,"name":"bool","nodeType":"ElementaryTypeName","src":"20279:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3225,"nodeType":"ArrayTypeName","src":"20279:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"20278:15:16"},"scope":3725,"src":"20152:1430:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3275,"nodeType":"Block","src":"21951:255:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3259,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"21965:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21974:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21965:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3274,"nodeType":"IfStatement","src":"21961:239:16","trueBody":{"id":3273,"nodeType":"Block","src":"21977:223:16","statements":[{"assignments":[3263],"declarations":[{"constant":false,"id":3263,"mutability":"mutable","name":"success","nameLocation":"21996:7:16","nodeType":"VariableDeclaration","scope":3273,"src":"21991:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3262,"name":"bool","nodeType":"ElementaryTypeName","src":"21991:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3264,"nodeType":"VariableDeclarationStatement","src":"21991:12:16"},{"AST":{"nodeType":"YulBlock","src":"22026:78:16","statements":[{"nodeType":"YulAssignment","src":"22044:46:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"22060:3:16"},"nodeType":"YulFunctionCall","src":"22060:5:16"},{"name":"to","nodeType":"YulIdentifier","src":"22067:2:16"},{"name":"amount","nodeType":"YulIdentifier","src":"22071:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"22079:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22082:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22085:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22088:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"22055:4:16"},"nodeType":"YulFunctionCall","src":"22055:35:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"22044:7:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3256,"isOffset":false,"isSlot":false,"src":"22071:6:16","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"22044:7:16","valueSize":1},{"declaration":3254,"isOffset":false,"isSlot":false,"src":"22067:2:16","valueSize":1}],"id":3265,"nodeType":"InlineAssembly","src":"22017:87:16"},{"condition":{"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22121:8:16","subExpression":{"id":3266,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"22122:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3272,"nodeType":"IfStatement","src":"22117:73:16","trueBody":{"id":3271,"nodeType":"Block","src":"22131:59:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3268,"name":"ETHTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"22156:17:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22156:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3270,"nodeType":"RevertStatement","src":"22149:26:16"}]}}]}}]},"documentation":{"id":3252,"nodeType":"StructuredDocumentation","src":"21770:117:16","text":" @notice Transfer ETH\n @param to Recipient address\n @param amount Amount of ETH to send"},"id":3276,"implemented":true,"kind":"function","modifiers":[],"name":"_transferETH","nameLocation":"21901:12:16","nodeType":"FunctionDefinition","parameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"to","nameLocation":"21922:2:16","nodeType":"VariableDeclaration","scope":3276,"src":"21914:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3253,"name":"address","nodeType":"ElementaryTypeName","src":"21914:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"amount","nameLocation":"21934:6:16","nodeType":"VariableDeclaration","scope":3276,"src":"21926:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"21926:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21913:28:16"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[],"src":"21951:0:16"},"scope":3725,"src":"21892:314:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3306,"nodeType":"Block","src":"22462:776:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3286,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"22476:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22485:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22476:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3305,"nodeType":"IfStatement","src":"22472:760:16","trueBody":{"id":3304,"nodeType":"Block","src":"22488:744:16","statements":[{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"success","nameLocation":"22507:7:16","nodeType":"VariableDeclaration","scope":3304,"src":"22502:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3289,"name":"bool","nodeType":"ElementaryTypeName","src":"22502:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3291,"nodeType":"VariableDeclarationStatement","src":"22502:12:16"},{"assignments":[3293],"declarations":[{"constant":false,"id":3293,"mutability":"mutable","name":"pool","nameLocation":"22536:4:16","nodeType":"VariableDeclaration","scope":3304,"src":"22528:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3292,"name":"address","nodeType":"ElementaryTypeName","src":"22528:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3295,"initialValue":{"id":3294,"name":"_POOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"22543:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22528:20:16"},{"AST":{"nodeType":"YulBlock","src":"22571:564:16","statements":[{"nodeType":"YulVariableDeclaration","src":"22589:30:16","value":{"arguments":[{"name":"Memory_pointer","nodeType":"YulIdentifier","src":"22604:14:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22598:5:16"},"nodeType":"YulFunctionCall","src":"22598:21:16"},"variables":[{"name":"x","nodeType":"YulTypedName","src":"22593:1:16","type":""}]},{"expression":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22643:1:16"},{"name":"ERC20_transferFrom_selector","nodeType":"YulIdentifier","src":"22646:27:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22636:6:16"},"nodeType":"YulFunctionCall","src":"22636:38:16"},"nodeType":"YulExpressionStatement","src":"22636:38:16"},{"expression":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22702:1:16"},{"name":"ERC20_transferFrom_from_offset","nodeType":"YulIdentifier","src":"22705:30:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22698:3:16"},"nodeType":"YulFunctionCall","src":"22698:38:16"},{"name":"from","nodeType":"YulIdentifier","src":"22738:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22691:6:16"},"nodeType":"YulFunctionCall","src":"22691:52:16"},"nodeType":"YulExpressionStatement","src":"22691:52:16"},{"expression":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22771:1:16"},{"name":"ERC20_transferFrom_to_offset","nodeType":"YulIdentifier","src":"22774:28:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22767:3:16"},"nodeType":"YulFunctionCall","src":"22767:36:16"},{"name":"to","nodeType":"YulIdentifier","src":"22805:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22760:6:16"},"nodeType":"YulFunctionCall","src":"22760:48:16"},"nodeType":"YulExpressionStatement","src":"22760:48:16"},{"expression":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22836:1:16"},{"name":"ERC20_transferFrom_amount_offset","nodeType":"YulIdentifier","src":"22839:32:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22832:3:16"},"nodeType":"YulFunctionCall","src":"22832:40:16"},{"name":"amount","nodeType":"YulIdentifier","src":"22874:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22825:6:16"},"nodeType":"YulFunctionCall","src":"22825:56:16"},"nodeType":"YulExpressionStatement","src":"22825:56:16"},{"nodeType":"YulAssignment","src":"22898:223:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"22935:3:16"},"nodeType":"YulFunctionCall","src":"22935:5:16"},{"name":"pool","nodeType":"YulIdentifier","src":"22962:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"22988:1:16","type":"","value":"0"},{"name":"x","nodeType":"YulIdentifier","src":"23011:1:16"},{"name":"ERC20_transferFrom_size","nodeType":"YulIdentifier","src":"23034:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"23079:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23102:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"22909:4:16"},"nodeType":"YulFunctionCall","src":"22909:212:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"22898:7:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6737,"isOffset":false,"isSlot":false,"src":"22839:32:16","valueSize":1},{"declaration":6731,"isOffset":false,"isSlot":false,"src":"22705:30:16","valueSize":1},{"declaration":6689,"isOffset":false,"isSlot":false,"src":"22646:27:16","valueSize":1},{"declaration":6698,"isOffset":false,"isSlot":false,"src":"23034:23:16","valueSize":1},{"declaration":6734,"isOffset":false,"isSlot":false,"src":"22774:28:16","valueSize":1},{"declaration":6650,"isOffset":false,"isSlot":false,"src":"22604:14:16","valueSize":1},{"declaration":3283,"isOffset":false,"isSlot":false,"src":"22874:6:16","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"22738:4:16","valueSize":1},{"declaration":3293,"isOffset":false,"isSlot":false,"src":"22962:4:16","valueSize":1},{"declaration":3290,"isOffset":false,"isSlot":false,"src":"22898:7:16","valueSize":1},{"declaration":3281,"isOffset":false,"isSlot":false,"src":"22805:2:16","valueSize":1}],"id":3296,"nodeType":"InlineAssembly","src":"22562:573:16"},{"condition":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23152:8:16","subExpression":{"id":3297,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"23153:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3303,"nodeType":"IfStatement","src":"23148:74:16","trueBody":{"id":3302,"nodeType":"Block","src":"23162:60:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3299,"name":"PoolTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"23187:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23187:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3301,"nodeType":"RevertStatement","src":"23180:27:16"}]}}]}}]},"documentation":{"id":3277,"nodeType":"StructuredDocumentation","src":"22212:171:16","text":" @notice Transfer pool funds on behalf of a user\n @param from Sender address\n @param to Recipient address\n @param amount Amount to send"},"id":3307,"implemented":true,"kind":"function","modifiers":[],"name":"_transferPool","nameLocation":"22397:13:16","nodeType":"FunctionDefinition","parameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"from","nameLocation":"22419:4:16","nodeType":"VariableDeclaration","scope":3307,"src":"22411:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3278,"name":"address","nodeType":"ElementaryTypeName","src":"22411:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3281,"mutability":"mutable","name":"to","nameLocation":"22433:2:16","nodeType":"VariableDeclaration","scope":3307,"src":"22425:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3280,"name":"address","nodeType":"ElementaryTypeName","src":"22425:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3283,"mutability":"mutable","name":"amount","nameLocation":"22445:6:16","nodeType":"VariableDeclaration","scope":3307,"src":"22437:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"22437:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22410:42:16"},"returnParameters":{"id":3285,"nodeType":"ParameterList","parameters":[],"src":"22462:0:16"},"scope":3725,"src":"22388:850:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3330,"nodeType":"Block","src":"23448:384:16","statements":[{"assignments":[3316],"declarations":[{"constant":false,"id":3316,"mutability":"mutable","name":"success","nameLocation":"23463:7:16","nodeType":"VariableDeclaration","scope":3330,"src":"23458:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3315,"name":"bool","nodeType":"ElementaryTypeName","src":"23458:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3317,"nodeType":"VariableDeclarationStatement","src":"23458:12:16"},{"assignments":[3319],"declarations":[{"constant":false,"id":3319,"mutability":"mutable","name":"pool","nameLocation":"23488:4:16","nodeType":"VariableDeclaration","scope":3330,"src":"23480:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3318,"name":"address","nodeType":"ElementaryTypeName","src":"23480:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3321,"initialValue":{"id":3320,"name":"_POOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"23495:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"23480:20:16"},{"AST":{"nodeType":"YulBlock","src":"23519:233:16","statements":[{"nodeType":"YulVariableDeclaration","src":"23533:30:16","value":{"arguments":[{"name":"Memory_pointer","nodeType":"YulIdentifier","src":"23548:14:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23542:5:16"},"nodeType":"YulFunctionCall","src":"23542:21:16"},"variables":[{"name":"x","nodeType":"YulTypedName","src":"23537:1:16","type":""}]},{"expression":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23583:1:16"},{"name":"Pool_deposit_selector","nodeType":"YulIdentifier","src":"23586:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23576:6:16"},"nodeType":"YulFunctionCall","src":"23576:32:16"},"nodeType":"YulExpressionStatement","src":"23576:32:16"},{"expression":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23632:1:16"},{"name":"Pool_deposit_user_offset","nodeType":"YulIdentifier","src":"23635:24:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23628:3:16"},"nodeType":"YulFunctionCall","src":"23628:32:16"},{"name":"to","nodeType":"YulIdentifier","src":"23662:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23621:6:16"},"nodeType":"YulFunctionCall","src":"23621:44:16"},"nodeType":"YulExpressionStatement","src":"23621:44:16"},{"nodeType":"YulAssignment","src":"23678:64:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"23694:3:16"},"nodeType":"YulFunctionCall","src":"23694:5:16"},{"name":"pool","nodeType":"YulIdentifier","src":"23701:4:16"},{"name":"amount","nodeType":"YulIdentifier","src":"23707:6:16"},{"name":"x","nodeType":"YulIdentifier","src":"23715:1:16"},{"name":"Pool_deposit_size","nodeType":"YulIdentifier","src":"23718:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"23737:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23740:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"23689:4:16"},"nodeType":"YulFunctionCall","src":"23689:53:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"23678:7:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6650,"isOffset":false,"isSlot":false,"src":"23548:14:16","valueSize":1},{"declaration":6680,"isOffset":false,"isSlot":false,"src":"23586:21:16","valueSize":1},{"declaration":6686,"isOffset":false,"isSlot":false,"src":"23718:17:16","valueSize":1},{"declaration":6683,"isOffset":false,"isSlot":false,"src":"23635:24:16","valueSize":1},{"declaration":3312,"isOffset":false,"isSlot":false,"src":"23707:6:16","valueSize":1},{"declaration":3319,"isOffset":false,"isSlot":false,"src":"23701:4:16","valueSize":1},{"declaration":3316,"isOffset":false,"isSlot":false,"src":"23678:7:16","valueSize":1},{"declaration":3310,"isOffset":false,"isSlot":false,"src":"23662:2:16","valueSize":1}],"id":3322,"nodeType":"InlineAssembly","src":"23510:242:16"},{"condition":{"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23765:8:16","subExpression":{"id":3323,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"23766:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3329,"nodeType":"IfStatement","src":"23761:65:16","trueBody":{"id":3328,"nodeType":"Block","src":"23775:51:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3325,"name":"PoolDepositFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"23796:17:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3327,"nodeType":"RevertStatement","src":"23789:26:16"}]}}]},"documentation":{"id":3308,"nodeType":"StructuredDocumentation","src":"23244:140:16","text":" @notice Deposit ETH to user's pool funds\n @param to Recipient address\n @param amount Amount of ETH to deposit"},"id":3331,"implemented":true,"kind":"function","modifiers":[],"name":"_depositPool","nameLocation":"23398:12:16","nodeType":"FunctionDefinition","parameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"to","nameLocation":"23419:2:16","nodeType":"VariableDeclaration","scope":3331,"src":"23411:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3309,"name":"address","nodeType":"ElementaryTypeName","src":"23411:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3312,"mutability":"mutable","name":"amount","nameLocation":"23431:6:16","nodeType":"VariableDeclaration","scope":3331,"src":"23423:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"23423:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23410:28:16"},"returnParameters":{"id":3314,"nodeType":"ParameterList","parameters":[],"src":"23448:0:16"},"scope":3725,"src":"23389:443:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3354,"nodeType":"Block","src":"24062:536:16","statements":[{"assignments":[3340],"declarations":[{"constant":false,"id":3340,"mutability":"mutable","name":"success","nameLocation":"24077:7:16","nodeType":"VariableDeclaration","scope":3354,"src":"24072:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3339,"name":"bool","nodeType":"ElementaryTypeName","src":"24072:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3341,"nodeType":"VariableDeclarationStatement","src":"24072:12:16"},{"assignments":[3343],"declarations":[{"constant":false,"id":3343,"mutability":"mutable","name":"pool","nameLocation":"24102:4:16","nodeType":"VariableDeclaration","scope":3354,"src":"24094:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3342,"name":"address","nodeType":"ElementaryTypeName","src":"24094:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3345,"initialValue":{"id":3344,"name":"_POOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"24109:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"24094:20:16"},{"AST":{"nodeType":"YulBlock","src":"24133:380:16","statements":[{"nodeType":"YulVariableDeclaration","src":"24147:30:16","value":{"arguments":[{"name":"Memory_pointer","nodeType":"YulIdentifier","src":"24162:14:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24156:5:16"},"nodeType":"YulFunctionCall","src":"24156:21:16"},"variables":[{"name":"x","nodeType":"YulTypedName","src":"24151:1:16","type":""}]},{"expression":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24197:1:16"},{"name":"Pool_withdrawFrom_selector","nodeType":"YulIdentifier","src":"24200:26:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24190:6:16"},"nodeType":"YulFunctionCall","src":"24190:37:16"},"nodeType":"YulExpressionStatement","src":"24190:37:16"},{"expression":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24251:1:16"},{"name":"Pool_withdrawFrom_from_offset","nodeType":"YulIdentifier","src":"24254:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24247:3:16"},"nodeType":"YulFunctionCall","src":"24247:37:16"},{"name":"from","nodeType":"YulIdentifier","src":"24286:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24240:6:16"},"nodeType":"YulFunctionCall","src":"24240:51:16"},"nodeType":"YulExpressionStatement","src":"24240:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24315:1:16"},{"name":"Pool_withdrawFrom_to_offset","nodeType":"YulIdentifier","src":"24318:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24311:3:16"},"nodeType":"YulFunctionCall","src":"24311:35:16"},{"arguments":[],"functionName":{"name":"address","nodeType":"YulIdentifier","src":"24348:7:16"},"nodeType":"YulFunctionCall","src":"24348:9:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24304:6:16"},"nodeType":"YulFunctionCall","src":"24304:54:16"},"nodeType":"YulExpressionStatement","src":"24304:54:16"},{"expression":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24382:1:16"},{"name":"Pool_withdrawFrom_amount_offset","nodeType":"YulIdentifier","src":"24385:31:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24378:3:16"},"nodeType":"YulFunctionCall","src":"24378:39:16"},{"name":"amount","nodeType":"YulIdentifier","src":"24419:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24371:6:16"},"nodeType":"YulFunctionCall","src":"24371:55:16"},"nodeType":"YulExpressionStatement","src":"24371:55:16"},{"nodeType":"YulAssignment","src":"24439:64:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"24455:3:16"},"nodeType":"YulFunctionCall","src":"24455:5:16"},{"name":"pool","nodeType":"YulIdentifier","src":"24462:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"24468:1:16","type":"","value":"0"},{"name":"x","nodeType":"YulIdentifier","src":"24471:1:16"},{"name":"Pool_withdrawFrom_size","nodeType":"YulIdentifier","src":"24474:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"24498:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24501:1:16","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"24450:4:16"},"nodeType":"YulFunctionCall","src":"24450:53:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"24439:7:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6650,"isOffset":false,"isSlot":false,"src":"24162:14:16","valueSize":1},{"declaration":6674,"isOffset":false,"isSlot":false,"src":"24385:31:16","valueSize":1},{"declaration":6668,"isOffset":false,"isSlot":false,"src":"24254:29:16","valueSize":1},{"declaration":6665,"isOffset":false,"isSlot":false,"src":"24200:26:16","valueSize":1},{"declaration":6677,"isOffset":false,"isSlot":false,"src":"24474:22:16","valueSize":1},{"declaration":6671,"isOffset":false,"isSlot":false,"src":"24318:27:16","valueSize":1},{"declaration":3336,"isOffset":false,"isSlot":false,"src":"24419:6:16","valueSize":1},{"declaration":3334,"isOffset":false,"isSlot":false,"src":"24286:4:16","valueSize":1},{"declaration":3343,"isOffset":false,"isSlot":false,"src":"24462:4:16","valueSize":1},{"declaration":3340,"isOffset":false,"isSlot":false,"src":"24439:7:16","valueSize":1}],"id":3346,"nodeType":"InlineAssembly","src":"24124:389:16"},{"condition":{"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"24526:8:16","subExpression":{"id":3347,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"24527:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3353,"nodeType":"IfStatement","src":"24522:70:16","trueBody":{"id":3352,"nodeType":"Block","src":"24536:56:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3349,"name":"PoolWithdrawFromFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"24557:22:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24557:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3351,"nodeType":"RevertStatement","src":"24550:31:16"}]}}]},"documentation":{"id":3332,"nodeType":"StructuredDocumentation","src":"23838:153:16","text":" @notice Withdraw ETH from user's pool funds\n @param from Address to withdraw from\n @param amount Amount of ETH to withdraw"},"id":3355,"implemented":true,"kind":"function","modifiers":[],"name":"_withdrawFromPool","nameLocation":"24005:17:16","nodeType":"FunctionDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"from","nameLocation":"24031:4:16","nodeType":"VariableDeclaration","scope":3355,"src":"24023:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3333,"name":"address","nodeType":"ElementaryTypeName","src":"24023:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3336,"mutability":"mutable","name":"amount","nameLocation":"24045:6:16","nodeType":"VariableDeclaration","scope":3355,"src":"24037:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"24037:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24022:30:16"},"returnParameters":{"id":3338,"nodeType":"ParameterList","parameters":[],"src":"24062:0:16"},"scope":3725,"src":"23996:602:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3394,"nodeType":"Block","src":"25487:712:16","statements":[{"assignments":[3379],"declarations":[{"constant":false,"id":3379,"mutability":"mutable","name":"transfer","nameLocation":"25513:8:16","nodeType":"VariableDeclaration","scope":3394,"src":"25497:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer"},"typeName":{"id":3378,"nodeType":"UserDefinedTypeName","pathNode":{"id":3377,"name":"Transfer","nameLocations":["25497:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7076,"src":"25497:8:16"},"referencedDeclaration":7076,"src":"25497:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_storage_ptr","typeString":"struct Transfer"}},"visibility":"internal"}],"id":3380,"nodeType":"VariableDeclarationStatement","src":"25497:24:16"},{"AST":{"nodeType":"YulBlock","src":"25540:441:16","statements":[{"nodeType":"YulVariableDeclaration","src":"25554:120:16","value":{"arguments":[{"name":"executionBatch","nodeType":"YulIdentifier","src":"25598:14:16"},{"name":"ExecutionBatch_calldata_offset","nodeType":"YulIdentifier","src":"25630:30:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25577:3:16"},"nodeType":"YulFunctionCall","src":"25577:97:16"},"variables":[{"name":"calldataPointer","nodeType":"YulTypedName","src":"25558:15:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25687:121:16","value":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"25737:15:16"},{"name":"ExecutionBatch_transfers_pointer_offset","nodeType":"YulIdentifier","src":"25754:39:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25733:3:16"},"nodeType":"YulFunctionCall","src":"25733:61:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25710:5:16"},"nodeType":"YulFunctionCall","src":"25710:98:16"},"variables":[{"name":"transfersOffset","nodeType":"YulTypedName","src":"25691:15:16","type":""}]},{"nodeType":"YulAssignment","src":"25821:150:16","value":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"25858:15:16"},{"arguments":[{"name":"transfersOffset","nodeType":"YulIdentifier","src":"25879:15:16"},{"name":"One_word","nodeType":"YulIdentifier","src":"25896:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25875:3:16"},"nodeType":"YulFunctionCall","src":"25875:30:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25854:3:16"},"nodeType":"YulFunctionCall","src":"25854:52:16"},{"arguments":[{"name":"transferIndex","nodeType":"YulIdentifier","src":"25928:13:16"},{"name":"Transfer_size","nodeType":"YulIdentifier","src":"25943:13:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25924:3:16"},"nodeType":"YulFunctionCall","src":"25924:33:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25833:3:16"},"nodeType":"YulFunctionCall","src":"25833:138:16"},"variableNames":[{"name":"transfer","nodeType":"YulIdentifier","src":"25821:8:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6887,"isOffset":false,"isSlot":false,"src":"25630:30:16","valueSize":1},{"declaration":6899,"isOffset":false,"isSlot":false,"src":"25754:39:16","valueSize":1},{"declaration":6647,"isOffset":false,"isSlot":false,"src":"25896:8:16","valueSize":1},{"declaration":6866,"isOffset":false,"isSlot":false,"src":"25943:13:16","valueSize":1},{"declaration":3358,"isOffset":false,"isSlot":false,"src":"25598:14:16","valueSize":1},{"declaration":3379,"isOffset":false,"isSlot":false,"src":"25821:8:16","valueSize":1},{"declaration":3374,"isOffset":false,"isSlot":false,"src":"25928:13:16","valueSize":1}],"id":3381,"nodeType":"InlineAssembly","src":"25531:450:16"},{"expression":{"arguments":[{"id":3383,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"26031:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},{"expression":{"id":3384,"name":"stateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"26053:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"}},"id":3385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26065:4:16","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":7123,"src":"26053:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3386,"name":"stateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"26083:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate memory"}},"id":3387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26095:5:16","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7125,"src":"26083:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3388,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"26114:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3389,"name":"makerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"26133:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"id":3390,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"26155:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},{"id":3391,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"26173:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}],"id":3382,"name":"_emitOptimalExecutionEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"25991:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Transfer_$7076_memory_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$_t_enum$_OrderType_$7019_$returns$__$","typeString":"function (struct Transfer memory,bytes32,uint256,uint256,struct FeeRate memory,struct Fees memory,enum OrderType)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25991:201:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3393,"nodeType":"ExpressionStatement","src":"25991:201:16"}]},"documentation":{"id":3356,"nodeType":"StructuredDocumentation","src":"24784:426:16","text":" @notice Emit Execution event from a single execution\n @param executionBatch Execution batch struct\n @param price Price of the token purchased\n @param fees Protocol, maker, and taker fees taken\n @param stateUpdate Fulfillment to be recorded with a successful execution\n @param orderType Order type\n @param transferIndex Index of the transfer corresponding to the execution"},"id":3395,"implemented":true,"kind":"function","modifiers":[],"name":"_emitExecutionEventFromBatch","nameLocation":"25224:28:16","nodeType":"FunctionDefinition","parameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"executionBatch","nameLocation":"25275:14:16","nodeType":"VariableDeclaration","scope":3395,"src":"25262:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3357,"name":"bytes","nodeType":"ElementaryTypeName","src":"25262:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3360,"mutability":"mutable","name":"price","nameLocation":"25307:5:16","nodeType":"VariableDeclaration","scope":3395,"src":"25299:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3359,"name":"uint256","nodeType":"ElementaryTypeName","src":"25299:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3363,"mutability":"mutable","name":"makerFee","nameLocation":"25337:8:16","nodeType":"VariableDeclaration","scope":3395,"src":"25322:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":3362,"nodeType":"UserDefinedTypeName","pathNode":{"id":3361,"name":"FeeRate","nameLocations":["25322:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"25322:7:16"},"referencedDeclaration":7142,"src":"25322:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":3366,"mutability":"mutable","name":"fees","nameLocation":"25367:4:16","nodeType":"VariableDeclaration","scope":3395,"src":"25355:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":3365,"nodeType":"UserDefinedTypeName","pathNode":{"id":3364,"name":"Fees","nameLocations":["25355:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"25355:4:16"},"referencedDeclaration":7137,"src":"25355:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"},{"constant":false,"id":3369,"mutability":"mutable","name":"stateUpdate","nameLocation":"25400:11:16","nodeType":"VariableDeclaration","scope":3395,"src":"25381:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_memory_ptr","typeString":"struct StateUpdate"},"typeName":{"id":3368,"nodeType":"UserDefinedTypeName","pathNode":{"id":3367,"name":"StateUpdate","nameLocations":["25381:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":7130,"src":"25381:11:16"},"referencedDeclaration":7130,"src":"25381:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_storage_ptr","typeString":"struct StateUpdate"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"orderType","nameLocation":"25431:9:16","nodeType":"VariableDeclaration","scope":3395,"src":"25421:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":3371,"nodeType":"UserDefinedTypeName","pathNode":{"id":3370,"name":"OrderType","nameLocations":["25421:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"25421:9:16"},"referencedDeclaration":7019,"src":"25421:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":3374,"mutability":"mutable","name":"transferIndex","nameLocation":"25458:13:16","nodeType":"VariableDeclaration","scope":3395,"src":"25450:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"25450:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25252:225:16"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[],"src":"25487:0:16"},"scope":3725,"src":"25215:984:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3554,"nodeType":"Block","src":"26890:2397:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3417,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"27081:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},"id":3418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27090:9:16","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":7075,"src":"27081:18:16","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3419,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"27103:9:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$7015_$","typeString":"type(enum AssetType)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27113:6:16","memberName":"ERC721","nodeType":"MemberAccess","referencedDeclaration":7013,"src":"27103:16:16","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"}},"src":"27081:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3422,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"27135:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":3423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27140:11:16","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":7133,"src":"27135:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":3424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27152:4:16","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"27135:21:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27160:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27135:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27081:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3428,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"27177:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},"id":3429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27186:2:16","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7068,"src":"27177:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_309485009821345068724781056_by_1","typeString":"int_const 309485009821345068724781056"},"id":3435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27191:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"id":3433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3131","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27197:2:16","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27202:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27197:6:16","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"}}],"id":3434,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27196:8:16","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"}},"src":"27191:13:16","typeDescriptions":{"typeIdentifier":"t_rational_309485009821345068724781056_by_1","typeString":"int_const 309485009821345068724781056"}},"src":"27177:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27081:123:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"listingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"27220:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27235:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"id":3442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27241:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27245:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27241:5:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"}}],"id":3443,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27240:7:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"}},"src":"27235:12:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"27220:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27081:166:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3447,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"27263:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_309485009821345068724781056_by_1","typeString":"int_const 309485009821345068724781056"},"id":3453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27271:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"id":3451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3131","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27277:2:16","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27282:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27277:6:16","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"}}],"id":3452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27276:8:16","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"}},"src":"27271:13:16","typeDescriptions":{"typeIdentifier":"t_rational_309485009821345068724781056_by_1","typeString":"int_const 309485009821345068724781056"}},"src":"27263:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27081:203:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3543,"nodeType":"IfStatement","src":"26900:2122:16","trueBody":{"id":3542,"nodeType":"Block","src":"27295:1727:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3456,"name":"makerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"27313:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":3457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27322:4:16","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"27313:13:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27330:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27313:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3460,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"27335:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":3461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27340:8:16","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"27335:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":3462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27349:4:16","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"27335:18:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27357:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27335:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27313:45:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3485,"name":"makerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"27866:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":3486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27875:4:16","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"27866:13:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27883:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27866:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3512,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"28444:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":3513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28449:8:16","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"28444:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":3514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28458:4:16","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"28444:18:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28466:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28444:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3539,"nodeType":"IfStatement","src":"28440:572:16","trueBody":{"id":3538,"nodeType":"Block","src":"28469:543:16","statements":[{"eventCall":{"arguments":[{"id":3518,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"28540:9:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":3520,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"28626:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},"id":3521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28635:2:16","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7068,"src":"28626:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3522,"name":"listingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"28663:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3523,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"28701:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},"id":3524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28710:6:16","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7066,"src":"28701:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3519,"name":"packTokenIdListingIndexTrader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"28571:29:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,uint256,address) pure returns (uint256)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28571:167:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3527,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"28809:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":3528,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"28844:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3529,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"28875:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},"id":3530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28884:10:16","memberName":"collection","nodeType":"MemberAccess","referencedDeclaration":7072,"src":"28875:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3526,"name":"packTypePriceCollection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"28760:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_OrderType_$7019_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (enum OrderType,uint256,address) pure returns (uint256)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28760:156:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3533,"name":"makerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"28946:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}],"id":3532,"name":"packFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"28938:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_FeeRate_$7142_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct FeeRate memory) pure returns (uint256)"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28938:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3517,"name":"Execution721MakerFeePacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"28492:26:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256)"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28492:481:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3536,"nodeType":"EmitStatement","src":"28487:486:16"},{"functionReturnParameters":3416,"id":3537,"nodeType":"Return","src":"28991:7:16"}]}},"id":3540,"nodeType":"IfStatement","src":"27862:1150:16","trueBody":{"id":3511,"nodeType":"Block","src":"27886:548:16","statements":[{"eventCall":{"arguments":[{"id":3490,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"27957:9:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":3492,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"28043:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},"id":3493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28052:2:16","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7068,"src":"28043:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3494,"name":"listingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"28080:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3495,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"28118:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},"id":3496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28127:6:16","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7066,"src":"28118:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3491,"name":"packTokenIdListingIndexTrader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"27988:29:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,uint256,address) pure returns (uint256)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27988:167:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3499,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"28226:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":3500,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"28261:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3501,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"28292:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},"id":3502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28301:10:16","memberName":"collection","nodeType":"MemberAccess","referencedDeclaration":7072,"src":"28292:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3498,"name":"packTypePriceCollection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"28177:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_OrderType_$7019_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (enum OrderType,uint256,address) pure returns (uint256)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28177:156:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":3505,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"28363:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":3506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28368:8:16","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"28363:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}],"id":3504,"name":"packFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"28355:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_FeeRate_$7142_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct FeeRate memory) pure returns (uint256)"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28355:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3489,"name":"Execution721TakerFeePacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"27909:26:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27909:486:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3509,"nodeType":"EmitStatement","src":"27904:491:16"},{"functionReturnParameters":3416,"id":3510,"nodeType":"Return","src":"28413:7:16"}]}},"id":3541,"nodeType":"IfStatement","src":"27309:1703:16","trueBody":{"id":3484,"nodeType":"Block","src":"27360:496:16","statements":[{"eventCall":{"arguments":[{"id":3467,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"27423:9:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":3469,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"27509:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},"id":3470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27518:2:16","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7068,"src":"27509:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3471,"name":"listingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"27546:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3472,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"27584:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},"id":3473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27593:6:16","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7066,"src":"27584:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3468,"name":"packTokenIdListingIndexTrader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"27454:29:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,uint256,address) pure returns (uint256)"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27454:167:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3476,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"27692:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":3477,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"27727:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3478,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"27758:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},"id":3479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27767:10:16","memberName":"collection","nodeType":"MemberAccess","referencedDeclaration":7072,"src":"27758:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3475,"name":"packTypePriceCollection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"27643:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_OrderType_$7019_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (enum OrderType,uint256,address) pure returns (uint256)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27643:156:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3466,"name":"Execution721Packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"27383:18:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,uint256)"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27383:434:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3482,"nodeType":"EmitStatement","src":"27378:439:16"},{"functionReturnParameters":3416,"id":3483,"nodeType":"Return","src":"27835:7:16"}]}}]}},{"eventCall":{"arguments":[{"id":3545,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"29071:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},{"id":3546,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"29104:9:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3547,"name":"listingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"29141:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3548,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"29174:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3549,"name":"makerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"29203:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"id":3550,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"29231:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},{"id":3551,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"29260:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}],"id":3544,"name":"Execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"29037:9:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_Transfer_$7076_memory_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$_t_enum$_OrderType_$7019_$returns$__$","typeString":"function (struct Transfer memory,bytes32,uint256,uint256,struct FeeRate memory,struct Fees memory,enum OrderType)"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["29061:8:16","29093:9:16","29127:12:16","29167:5:16","29193:8:16","29225:4:16","29249:9:16"],"names":["transfer","orderHash","listingIndex","price","makerFee","fees","orderType"],"nodeType":"FunctionCall","src":"29037:243:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3553,"nodeType":"EmitStatement","src":"29032:248:16"}]},"documentation":{"id":3396,"nodeType":"StructuredDocumentation","src":"26205:427:16","text":" @notice Emit the Execution event that minimizes the number of bytes in the log\n @param transfer The nft transfer\n @param orderHash Order hash\n @param listingIndex Index of the listing being fulfilled within the order\n @param price Price of the token purchased\n @param makerFee Maker fees taken\n @param fees Protocol, and taker fees taken\n @param orderType Order type"},"id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"_emitOptimalExecutionEvent","nameLocation":"26646:26:16","nodeType":"FunctionDefinition","parameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3399,"mutability":"mutable","name":"transfer","nameLocation":"26698:8:16","nodeType":"VariableDeclaration","scope":3555,"src":"26682:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer"},"typeName":{"id":3398,"nodeType":"UserDefinedTypeName","pathNode":{"id":3397,"name":"Transfer","nameLocations":["26682:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7076,"src":"26682:8:16"},"referencedDeclaration":7076,"src":"26682:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_storage_ptr","typeString":"struct Transfer"}},"visibility":"internal"},{"constant":false,"id":3401,"mutability":"mutable","name":"orderHash","nameLocation":"26724:9:16","nodeType":"VariableDeclaration","scope":3555,"src":"26716:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26716:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3403,"mutability":"mutable","name":"listingIndex","nameLocation":"26751:12:16","nodeType":"VariableDeclaration","scope":3555,"src":"26743:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"26743:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3405,"mutability":"mutable","name":"price","nameLocation":"26781:5:16","nodeType":"VariableDeclaration","scope":3555,"src":"26773:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"26773:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3408,"mutability":"mutable","name":"makerFee","nameLocation":"26811:8:16","nodeType":"VariableDeclaration","scope":3555,"src":"26796:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":3407,"nodeType":"UserDefinedTypeName","pathNode":{"id":3406,"name":"FeeRate","nameLocations":["26796:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"26796:7:16"},"referencedDeclaration":7142,"src":"26796:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":3411,"mutability":"mutable","name":"fees","nameLocation":"26841:4:16","nodeType":"VariableDeclaration","scope":3555,"src":"26829:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":3410,"nodeType":"UserDefinedTypeName","pathNode":{"id":3409,"name":"Fees","nameLocations":["26829:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"26829:4:16"},"referencedDeclaration":7137,"src":"26829:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"orderType","nameLocation":"26865:9:16","nodeType":"VariableDeclaration","scope":3555,"src":"26855:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":3413,"nodeType":"UserDefinedTypeName","pathNode":{"id":3412,"name":"OrderType","nameLocations":["26855:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"26855:9:16"},"referencedDeclaration":7019,"src":"26855:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"}],"src":"26672:208:16"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[],"src":"26890:0:16"},"scope":3725,"src":"26637:2650:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3594,"nodeType":"Block","src":"29895:630:16","statements":[{"assignments":[3576],"declarations":[{"constant":false,"id":3576,"mutability":"mutable","name":"transfer","nameLocation":"29921:8:16","nodeType":"VariableDeclaration","scope":3594,"src":"29905:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer"},"typeName":{"id":3575,"nodeType":"UserDefinedTypeName","pathNode":{"id":3574,"name":"Transfer","nameLocations":["29905:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7076,"src":"29905:8:16"},"referencedDeclaration":7076,"src":"29905:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_storage_ptr","typeString":"struct Transfer"}},"visibility":"internal"}],"id":3577,"nodeType":"VariableDeclarationStatement","src":"29905:24:16"},{"AST":{"nodeType":"YulBlock","src":"29948:355:16","statements":[{"nodeType":"YulVariableDeclaration","src":"29962:120:16","value":{"arguments":[{"name":"executionBatch","nodeType":"YulIdentifier","src":"30006:14:16"},{"name":"ExecutionBatch_calldata_offset","nodeType":"YulIdentifier","src":"30038:30:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29985:3:16"},"nodeType":"YulFunctionCall","src":"29985:97:16"},"variables":[{"name":"calldataPointer","nodeType":"YulTypedName","src":"29966:15:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30095:121:16","value":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"30145:15:16"},{"name":"ExecutionBatch_transfers_pointer_offset","nodeType":"YulIdentifier","src":"30162:39:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30141:3:16"},"nodeType":"YulFunctionCall","src":"30141:61:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30118:5:16"},"nodeType":"YulFunctionCall","src":"30118:98:16"},"variables":[{"name":"transfersOffset","nodeType":"YulTypedName","src":"30099:15:16","type":""}]},{"nodeType":"YulAssignment","src":"30229:64:16","value":{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"30245:15:16"},{"arguments":[{"name":"transfersOffset","nodeType":"YulIdentifier","src":"30266:15:16"},{"name":"One_word","nodeType":"YulIdentifier","src":"30283:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30262:3:16"},"nodeType":"YulFunctionCall","src":"30262:30:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30241:3:16"},"nodeType":"YulFunctionCall","src":"30241:52:16"},"variableNames":[{"name":"transfer","nodeType":"YulIdentifier","src":"30229:8:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6887,"isOffset":false,"isSlot":false,"src":"30038:30:16","valueSize":1},{"declaration":6899,"isOffset":false,"isSlot":false,"src":"30162:39:16","valueSize":1},{"declaration":6647,"isOffset":false,"isSlot":false,"src":"30283:8:16","valueSize":1},{"declaration":3558,"isOffset":false,"isSlot":false,"src":"30006:14:16","valueSize":1},{"declaration":3576,"isOffset":false,"isSlot":false,"src":"30229:8:16","valueSize":1}],"id":3578,"nodeType":"InlineAssembly","src":"29939:364:16"},{"expression":{"arguments":[{"id":3580,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"30353:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"}},{"arguments":[{"expression":{"id":3583,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"30383:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"30389:4:16","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"30383:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30375:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30375:7:16","typeDescriptions":{}}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30375:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3586,"name":"listingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"30408:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3587,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"30434:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3588,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"30453:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"30459:8:16","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"30453:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"id":3590,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"30481:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},{"id":3591,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"30499:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}],"id":3579,"name":"_emitOptimalExecutionEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"30313:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Transfer_$7076_memory_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$_t_enum$_OrderType_$7019_$returns$__$","typeString":"function (struct Transfer memory,bytes32,uint256,uint256,struct FeeRate memory,struct Fees memory,enum OrderType)"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30313:205:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3593,"nodeType":"ExpressionStatement","src":"30313:205:16"}]},"documentation":{"id":3556,"nodeType":"StructuredDocumentation","src":"29293:380:16","text":" @notice Emit Execution event from a single execution\n @param executionBatch Execution batch struct\n @param order Order being fulfilled\n @param listingIndex Index of the listing being fulfilled within the order\n @param price Price of the token purchased\n @param fees Protocol, and taker fees taken\n @param orderType Order type"},"id":3595,"implemented":true,"kind":"function","modifiers":[],"name":"_emitExecutionEvent","nameLocation":"29687:19:16","nodeType":"FunctionDefinition","parameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"executionBatch","nameLocation":"29729:14:16","nodeType":"VariableDeclaration","scope":3595,"src":"29716:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3557,"name":"bytes","nodeType":"ElementaryTypeName","src":"29716:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"order","nameLocation":"29766:5:16","nodeType":"VariableDeclaration","scope":3595,"src":"29753:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":3560,"nodeType":"UserDefinedTypeName","pathNode":{"id":3559,"name":"Order","nameLocations":["29753:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"29753:5:16"},"referencedDeclaration":7064,"src":"29753:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"listingIndex","nameLocation":"29789:12:16","nodeType":"VariableDeclaration","scope":3595,"src":"29781:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"29781:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"price","nameLocation":"29819:5:16","nodeType":"VariableDeclaration","scope":3595,"src":"29811:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"29811:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"fees","nameLocation":"29846:4:16","nodeType":"VariableDeclaration","scope":3595,"src":"29834:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":3567,"nodeType":"UserDefinedTypeName","pathNode":{"id":3566,"name":"Fees","nameLocations":["29834:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"29834:4:16"},"referencedDeclaration":7137,"src":"29834:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"},{"constant":false,"id":3571,"mutability":"mutable","name":"orderType","nameLocation":"29870:9:16","nodeType":"VariableDeclaration","scope":3595,"src":"29860:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":3570,"nodeType":"UserDefinedTypeName","pathNode":{"id":3569,"name":"OrderType","nameLocations":["29860:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"29860:9:16"},"referencedDeclaration":7019,"src":"29860:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"}],"src":"29706:179:16"},"returnParameters":{"id":3573,"nodeType":"ParameterList","parameters":[],"src":"29895:0:16"},"scope":3725,"src":"29678:847:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"30686:128:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"30716:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"id":3609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3231","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30728:2:16","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30733:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"30728:6:16","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"}}],"id":3610,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"30727:8:16","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"}},"src":"30716:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30715:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3613,"name":"listingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"30752:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"id":3616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3230","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30769:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30774:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"30769:6:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"}}],"id":3617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"30768:8:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"}},"src":"30752:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30751:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30715:62:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":3623,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"30800:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30792:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3621,"name":"uint160","nodeType":"ElementaryTypeName","src":"30792:7:16","typeDescriptions":{}}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30792:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"30715:92:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3605,"id":3626,"nodeType":"Return","src":"30696:111:16"}]},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"packTokenIdListingIndexTrader","nameLocation":"30540:29:16","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"tokenId","nameLocation":"30587:7:16","nodeType":"VariableDeclaration","scope":3628,"src":"30579:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"30579:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3599,"mutability":"mutable","name":"listingIndex","nameLocation":"30612:12:16","nodeType":"VariableDeclaration","scope":3628,"src":"30604:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"30604:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"trader","nameLocation":"30642:6:16","nodeType":"VariableDeclaration","scope":3628,"src":"30634:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3600,"name":"address","nodeType":"ElementaryTypeName","src":"30634:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30569:85:16"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3628,"src":"30677:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"30677:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30676:9:16"},"scope":3725,"src":"30531:283:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3664,"nodeType":"Block","src":"30970:136:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3642,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"31008:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}],"id":3641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31000:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"31000:7:16","typeDescriptions":{}}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31000:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"id":3646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3331","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31023:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31028:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"31023:6:16","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"}}],"id":3647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31022:8:16","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"}},"src":"31000:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30999:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3650,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"31047:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3230","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31057:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31062:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"31057:6:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"}}],"id":3654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31056:8:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"}},"src":"31047:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31046:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30999:66:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":3660,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"31088:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31080:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3658,"name":"uint160","nodeType":"ElementaryTypeName","src":"31080:7:16","typeDescriptions":{}}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31080:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"30999:100:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3639,"id":3663,"nodeType":"Return","src":"30980:119:16"}]},"id":3665,"implemented":true,"kind":"function","modifiers":[],"name":"packTypePriceCollection","nameLocation":"30829:23:16","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"orderType","nameLocation":"30872:9:16","nodeType":"VariableDeclaration","scope":3665,"src":"30862:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":3630,"nodeType":"UserDefinedTypeName","pathNode":{"id":3629,"name":"OrderType","nameLocations":["30862:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"30862:9:16"},"referencedDeclaration":7019,"src":"30862:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"price","nameLocation":"30899:5:16","nodeType":"VariableDeclaration","scope":3665,"src":"30891:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"30891:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"collection","nameLocation":"30922:10:16","nodeType":"VariableDeclaration","scope":3665,"src":"30914:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3634,"name":"address","nodeType":"ElementaryTypeName","src":"30914:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30852:86:16"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3665,"src":"30961:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"30961:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30960:9:16"},"scope":3725,"src":"30820:286:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3691,"nodeType":"Block","src":"31180:80:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3675,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"31206:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":3676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31210:4:16","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"31206:8:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31198:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"31198:7:16","typeDescriptions":{}}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31198:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"id":3680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3230","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31220:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31225:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"31220:6:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"}}],"id":3681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31219:8:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"}},"src":"31198:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31197:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"expression":{"id":3686,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"31239:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":3687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31243:9:16","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"31239:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31231:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3684,"name":"uint160","nodeType":"ElementaryTypeName","src":"31231:7:16","typeDescriptions":{}}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31231:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"31197:56:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3672,"id":3690,"nodeType":"Return","src":"31190:63:16"}]},"id":3692,"implemented":true,"kind":"function","modifiers":[],"name":"packFee","nameLocation":"31121:7:16","nodeType":"FunctionDefinition","parameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"fee","nameLocation":"31144:3:16","nodeType":"VariableDeclaration","scope":3692,"src":"31129:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":3667,"nodeType":"UserDefinedTypeName","pathNode":{"id":3666,"name":"FeeRate","nameLocations":["31129:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"31129:7:16"},"referencedDeclaration":7142,"src":"31129:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"}],"src":"31128:20:16"},"returnParameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3692,"src":"31171:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"31171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31170:9:16"},"scope":3725,"src":"31112:148:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3719,"nodeType":"Block","src":"31472:244:16","statements":[{"eventCall":{"arguments":[{"id":3707,"name":"offerCollectionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"31531:19:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3708,"name":"accepter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"31564:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3709,"name":"bidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"31586:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3710,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"31606:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":3711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31614:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7035,"src":"31606:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3712,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"31635:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":3713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31643:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7037,"src":"31635:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3714,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"31663:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":3715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31671:5:16","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":7039,"src":"31663:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3716,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"31690:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3706,"name":"ExecutionAcceptCollectionOffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"31487:30:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256,uint256,uint256,uint256)"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31487:222:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3718,"nodeType":"EmitStatement","src":"31482:227:16"}]},"id":3720,"implemented":true,"kind":"function","modifiers":[],"name":"_emitExecutionAcceptCollectionOffer","nameLocation":"31275:35:16","nodeType":"FunctionDefinition","parameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"offerCollectionHash","nameLocation":"31328:19:16","nodeType":"VariableDeclaration","scope":3720,"src":"31320:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31320:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3696,"mutability":"mutable","name":"accepter","nameLocation":"31365:8:16","nodeType":"VariableDeclaration","scope":3720,"src":"31357:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3695,"name":"address","nodeType":"ElementaryTypeName","src":"31357:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3698,"mutability":"mutable","name":"bidder","nameLocation":"31391:6:16","nodeType":"VariableDeclaration","scope":3720,"src":"31383:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3697,"name":"address","nodeType":"ElementaryTypeName","src":"31383:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3701,"mutability":"mutable","name":"listing","nameLocation":"31422:7:16","nodeType":"VariableDeclaration","scope":3720,"src":"31407:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing"},"typeName":{"id":3700,"nodeType":"UserDefinedTypeName","pathNode":{"id":3699,"name":"Listing","nameLocations":["31407:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"31407:7:16"},"referencedDeclaration":7040,"src":"31407:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"},{"constant":false,"id":3703,"mutability":"mutable","name":"remaining","nameLocation":"31447:9:16","nodeType":"VariableDeclaration","scope":3720,"src":"31439:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3702,"name":"uint256","nodeType":"ElementaryTypeName","src":"31439:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31310:152:16"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[],"src":"31472:0:16"},"scope":3725,"src":"31266:450:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"id":3724,"mutability":"mutable","name":"__gap","nameLocation":"31742:5:16","nodeType":"VariableDeclaration","scope":3725,"src":"31722:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"31722:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3723,"length":{"hexValue":"3530","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31730:2:16","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"31722:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":3726,"src":"404:31346:16","usedErrors":[6323,6325,6327,6329,6331,6408,6410,6412,6414,6416]}],"src":"32:31719:16"}},"contracts/Signatures.sol":{"id":17,"ast":{"absolutePath":"contracts/Signatures.sol","exportedSymbols":{"AssetType":[7015],"AssetType_ERC1155":[6656],"AssetType_ERC721":[6653],"BidExchange_askIndex_offset":[6818],"BidExchange_maker_offset":[6824],"BidExchange_proof_offset":[6821],"BidExchange_size":[6815],"BidExchange_taker_offset":[6827],"Bytes1_shift":[6638],"Bytes20_shift":[6644],"Bytes4_shift":[6641],"Delegate_transfer_calldata_offset":[6770],"Delegate_transfer_selector":[6767],"ERC1155_safeTransferFrom_amount_offset":[6758],"ERC1155_safeTransferFrom_data_offset":[6764],"ERC1155_safeTransferFrom_data_pointer_offset":[6761],"ERC1155_safeTransferFrom_from_offset":[6749],"ERC1155_safeTransferFrom_id_offset":[6755],"ERC1155_safeTransferFrom_selector":[6695],"ERC1155_safeTransferFrom_size":[6704],"ERC1155_safeTransferFrom_to_offset":[6752],"ERC20_transferFrom_amount_offset":[6737],"ERC20_transferFrom_from_offset":[6731],"ERC20_transferFrom_selector":[6689],"ERC20_transferFrom_size":[6698],"ERC20_transferFrom_to_offset":[6734],"ERC721_safeTransferFrom_from_offset":[6740],"ERC721_safeTransferFrom_id_offset":[6746],"ERC721_safeTransferFrom_selector":[6692],"ERC721_safeTransferFrom_size":[6701],"ERC721_safeTransferFrom_to_offset":[6743],"Exchange_askIndex_offset":[6803],"Exchange_maker_offset":[6809],"Exchange_proof_offset":[6806],"Exchange_size":[6800],"Exchange_taker_offset":[6812],"ExecutionBatch_base_size":[6890],"ExecutionBatch_calldata_offset":[6887],"ExecutionBatch_length_offset":[6902],"ExecutionBatch_orderType_offset":[6896],"ExecutionBatch_selector_offset":[6884],"ExecutionBatch_taker_offset":[6893],"ExecutionBatch_transfers_offset":[6905],"ExecutionBatch_transfers_pointer_offset":[6899],"FeeRate":[7142],"ISignatures":[6478],"Listing":[7040],"Listing_amount_offset":[6839],"Listing_index_offset":[6833],"Listing_price_offset":[6842],"Listing_size":[6830],"Listing_tokenId_offset":[6836],"Memory_pointer":[6650],"One_word":[6647],"OracleSignatures_blockNumber_offset":[6716],"OracleSignatures_oracle_offset":[6719],"OracleSignatures_s_offset":[6710],"OracleSignatures_size":[6707],"OracleSignatures_v_offset":[6713],"Order":[7064],"OrderType":[7019],"OrderType_ASK":[6659],"OrderType_BID":[6662],"Order_assetType_offset":[6791],"Order_collection_offset":[6779],"Order_expirationTime_offset":[6788],"Order_listingsRoot_offset":[6782],"Order_makerFee_offset":[6794],"Order_numberOfListings_offset":[6785],"Order_salt_offset":[6797],"Order_size":[6773],"Order_trader_offset":[6776],"Pool_deposit_selector":[6680],"Pool_deposit_size":[6686],"Pool_deposit_user_offset":[6683],"Pool_withdrawFrom_amount_offset":[6674],"Pool_withdrawFrom_from_offset":[6668],"Pool_withdrawFrom_selector":[6665],"Pool_withdrawFrom_size":[6677],"Pool_withdrawFrom_to_offset":[6671],"Signatures":[4384],"Signatures_s_offset":[6725],"Signatures_size":[6722],"Signatures_v_offset":[6728],"StateUpdate_leaf_offset":[6860],"StateUpdate_salt_offset":[6857],"StateUpdate_size":[6854],"StateUpdate_value_offset":[6863],"TakeAsk":[6960],"TakeAskSingle":[6974],"TakeBid":[6988],"TakeBidSingle":[7012],"Taker_amount_offset":[6851],"Taker_size":[6845],"Taker_tokenId_offset":[6848],"Transfer_amount_offset":[6875],"Transfer_assetType_offset":[6881],"Transfer_collection_offset":[6878],"Transfer_id_offset":[6872],"Transfer_size":[6866],"Transfer_trader_offset":[6869]},"id":4385,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3727,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:17"},{"absolutePath":"contracts/lib/Constants.sol","file":"./lib/Constants.sol","id":3728,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4385,"sourceUnit":6906,"src":"57:29:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/Structs.sol","file":"./lib/Structs.sol","id":3738,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4385,"sourceUnit":7150,"src":"87:128:17","symbolAliases":[{"foreign":{"id":3729,"name":"TakeAsk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"95:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3730,"name":"TakeBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"104:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3731,"name":"TakeAskSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"113:13:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3732,"name":"TakeBidSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"128:13:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3733,"name":"FeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"143:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3734,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"152:5:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3735,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"159:9:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3736,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"170:9:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3737,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"181:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISignatures.sol","file":"./interfaces/ISignatures.sol","id":3740,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4385,"sourceUnit":6479,"src":"216:57:17","symbolAliases":[{"foreign":{"id":3739,"name":"ISignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"224:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3741,"name":"ISignatures","nameLocations":["307:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":6478,"src":"307:11:17"},"id":3742,"nodeType":"InheritanceSpecifier","src":"307:11:17"}],"canonicalName":"Signatures","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4384,"linearizedBaseContracts":[4384,6478],"name":"Signatures","nameLocation":"293:10:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3745,"mutability":"constant","name":"_NAME","nameLocation":"349:5:17","nodeType":"VariableDeclaration","scope":4384,"src":"325:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3743,"name":"string","nodeType":"ElementaryTypeName","src":"325:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5a655a752045786368616e6765","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"357:15:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_008d36b3f477268d1152bc9bbf1e76725c59d7621413718f5cd33aeabb387ea2","typeString":"literal_string \"ZeZu Exchange\""},"value":"ZeZu Exchange"},"visibility":"private"},{"constant":true,"id":3748,"mutability":"constant","name":"_VERSION","nameLocation":"402:8:17","nodeType":"VariableDeclaration","scope":4384,"src":"378:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3746,"name":"string","nodeType":"ElementaryTypeName","src":"378:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"312e30","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"413:5:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3","typeString":"literal_string \"1.0\""},"value":"1.0"},"visibility":"private"},{"constant":false,"id":3750,"mutability":"immutable","name":"_FEE_RATE_TYPEHASH","nameLocation":"451:18:17","nodeType":"VariableDeclaration","scope":4384,"src":"425:44:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"425:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3752,"mutability":"immutable","name":"_ORDER_TYPEHASH","nameLocation":"501:15:17","nodeType":"VariableDeclaration","scope":4384,"src":"475:41:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"475:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3754,"mutability":"immutable","name":"_OFFER_COLLECTION_TYPEHASH","nameLocation":"548:26:17","nodeType":"VariableDeclaration","scope":4384,"src":"522:52:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"522:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"functionSelector":"dc0c81b5","id":3756,"mutability":"immutable","name":"_DOMAIN_SEPARATOR","nameLocation":"605:17:17","nodeType":"VariableDeclaration","scope":4384,"src":"580:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"580:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"baseFunctions":[6423],"constant":false,"functionSelector":"addd5099","id":3760,"mutability":"mutable","name":"oracles","nameLocation":"664:7:17","nodeType":"VariableDeclaration","scope":4384,"src":"629:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3759,"keyType":{"id":3757,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"629:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"648:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"baseFunctions":[6430],"constant":false,"functionSelector":"7ecebe00","id":3764,"mutability":"mutable","name":"nonces","nameLocation":"712:6:17","nodeType":"VariableDeclaration","scope":4384,"src":"677:41:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3763,"keyType":{"id":3761,"name":"address","nodeType":"ElementaryTypeName","src":"685:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"677:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3762,"name":"uint256","nodeType":"ElementaryTypeName","src":"696:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"baseFunctions":[6435],"constant":false,"functionSelector":"a4b2c674","id":3766,"mutability":"mutable","name":"blockRange","nameLocation":"739:10:17","nodeType":"VariableDeclaration","scope":4384,"src":"724:25:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint256","nodeType":"ElementaryTypeName","src":"724:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":3778,"nodeType":"Block","src":"770:181:17","statements":[{"expression":{"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3769,"name":"_FEE_RATE_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"794:18:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3770,"name":"_ORDER_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"826:15:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3771,"name":"_OFFER_COLLECTION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"855:26:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3772,"name":"_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"895:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3773,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"780:142:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32,bytes32,bytes32)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3774,"name":"_createTypehashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"925:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$","typeString":"function () view returns (bytes32,bytes32,bytes32,bytes32)"}},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"925:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32,bytes32,bytes32)"}},"src":"780:164:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3777,"nodeType":"ExpressionStatement","src":"780:164:17"}]},"id":3779,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3767,"nodeType":"ParameterList","parameters":[],"src":"767:2:17"},"returnParameters":{"id":3768,"nodeType":"ParameterList","parameters":[],"src":"770:0:17"},"scope":4384,"src":"756:195:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6438],"body":{"id":3828,"nodeType":"Block","src":"1127:603:17","statements":[{"assignments":[3784],"declarations":[{"constant":false,"id":3784,"mutability":"mutable","name":"eip712DomainTypehash","nameLocation":"1145:20:17","nodeType":"VariableDeclaration","scope":3828,"src":"1137:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1137:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3797,"initialValue":{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1221:15:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_de06c25f21a371a1bc92887b399d179e16db7e78ff9780730d4f2f1217f0227a","typeString":"literal_string \"EIP712Domain(\""},"value":"EIP712Domain("},{"hexValue":"737472696e67206e616d652c","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1254:14:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_0376df606842aeeddf95ba5db6e827bf40e254b68db9531357ede6679d404597","typeString":"literal_string \"string name,\""},"value":"string name,"},{"hexValue":"737472696e672076657273696f6e2c","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1286:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_59f8a695163fe72b45680abd680645bb66c8df0e236a50c4f8a610af2d5a606c","typeString":"literal_string \"string version,\""},"value":"string version,"},{"hexValue":"75696e7432353620636861696e49642c","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_43fde9c96e882d48ec2b3bfc68b495c65e04789cf76c3487375805a9d865e46b","typeString":"literal_string \"uint256 chainId,\""},"value":"uint256 chainId,"},{"hexValue":"6164647265737320766572696679696e67436f6e7472616374","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1357:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_40ab939a78baf41674810042aff4b66e1c8507c1fbb0af0c7e28dc4250f2dd9b","typeString":"literal_string \"address verifyingContract\""},"value":"address verifyingContract"},{"hexValue":"29","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1402:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""},"value":")"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_de06c25f21a371a1bc92887b399d179e16db7e78ff9780730d4f2f1217f0227a","typeString":"literal_string \"EIP712Domain(\""},{"typeIdentifier":"t_stringliteral_0376df606842aeeddf95ba5db6e827bf40e254b68db9531357ede6679d404597","typeString":"literal_string \"string name,\""},{"typeIdentifier":"t_stringliteral_59f8a695163fe72b45680abd680645bb66c8df0e236a50c4f8a610af2d5a606c","typeString":"literal_string \"string version,\""},{"typeIdentifier":"t_stringliteral_43fde9c96e882d48ec2b3bfc68b495c65e04789cf76c3487375805a9d865e46b","typeString":"literal_string \"uint256 chainId,\""},{"typeIdentifier":"t_stringliteral_40ab939a78baf41674810042aff4b66e1c8507c1fbb0af0c7e28dc4250f2dd9b","typeString":"literal_string \"address verifyingContract\""},{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""}],"expression":{"id":3787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1191:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3786,"name":"bytes","nodeType":"ElementaryTypeName","src":"1191:5:17","typeDescriptions":{}}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1197:6:17","memberName":"concat","nodeType":"MemberAccess","src":"1191:12:17","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1191:228:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3785,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1168:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1168:261:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1137:292:17"},{"assignments":[3799],"declarations":[{"constant":false,"id":3799,"mutability":"mutable","name":"domainSeparator","nameLocation":"1448:15:17","nodeType":"VariableDeclaration","scope":3828,"src":"1440:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1440:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3819,"initialValue":{"arguments":[{"id":3801,"name":"eip712DomainTypehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"1491:20:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":3805,"name":"_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"1541:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1535:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3803,"name":"bytes","nodeType":"ElementaryTypeName","src":"1535:5:17","typeDescriptions":{}}},"id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1535:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3802,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1525:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":3811,"name":"_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"1578:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1572:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3809,"name":"bytes","nodeType":"ElementaryTypeName","src":"1572:5:17","typeDescriptions":{}}},"id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1572:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3808,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1562:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1562:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3816,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1610:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Signatures_$4384","typeString":"contract Signatures"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Signatures_$4384","typeString":"contract Signatures"}],"id":3815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1602:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3814,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:17","typeDescriptions":{}}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1602:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3800,"name":"_hashDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"1466:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32,address) view returns (bytes32)"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1466:159:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1440:185:17"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3820,"name":"_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"1639:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3821,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"1660:15:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1639:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3827,"nodeType":"IfStatement","src":"1635:89:17","trueBody":{"id":3826,"nodeType":"Block","src":"1677:47:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3823,"name":"InvalidDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"1698:13:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1698:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3825,"nodeType":"RevertStatement","src":"1691:22:17"}]}}]},"documentation":{"id":3780,"nodeType":"StructuredDocumentation","src":"957:129:17","text":" @notice Verify the domain separator produced during deployment of the implementation matches that of the proxy"},"functionSelector":"708ef9aa","id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"verifyDomain","nameLocation":"1100:12:17","nodeType":"FunctionDefinition","parameters":{"id":3781,"nodeType":"ParameterList","parameters":[],"src":"1112:2:17"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[],"src":"1127:0:17"},"scope":4384,"src":"1091:639:17","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[6445],"body":{"id":3845,"nodeType":"Block","src":"1925:80:17","statements":[{"expression":{"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3837,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"1935:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3838,"name":"_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"1945:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1935:18:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3840,"nodeType":"ExpressionStatement","src":"1935:18:17"},{"expression":{"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3841,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"1963:15:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3842,"name":"_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"1981:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1963:35:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3844,"nodeType":"ExpressionStatement","src":"1963:35:17"}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"1736:62:17","text":" @notice Return version and domain separator"},"functionSelector":"f47b7740","id":3846,"implemented":true,"kind":"function","modifiers":[],"name":"information","nameLocation":"1812:11:17","nodeType":"FunctionDefinition","parameters":{"id":3831,"nodeType":"ParameterList","parameters":[],"src":"1823:2:17"},"returnParameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"version","nameLocation":"1887:7:17","nodeType":"VariableDeclaration","scope":3846,"src":"1873:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3832,"name":"string","nodeType":"ElementaryTypeName","src":"1873:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"domainSeparator","nameLocation":"1904:15:17","nodeType":"VariableDeclaration","scope":3846,"src":"1896:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1896:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1872:48:17"},"scope":4384,"src":"1803:202:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3858,"nodeType":"Block","src":"2266:46:17","statements":[{"expression":{"arguments":[{"id":3855,"name":"_caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"2297:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3854,"name":"_hashCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"2283:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2283:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3853,"id":3857,"nodeType":"Return","src":"2276:29:17"}]},"documentation":{"id":3847,"nodeType":"StructuredDocumentation","src":"2011:180:17","text":" @notice Create a hash of TakeAsk calldata with an approved caller\n @param _caller Address approved to execute the calldata\n @return Calldata hash"},"functionSelector":"228ed5d2","id":3859,"implemented":true,"kind":"function","modifiers":[],"name":"hashTakeAsk","nameLocation":"2205:11:17","nodeType":"FunctionDefinition","parameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"_caller","nameLocation":"2225:7:17","nodeType":"VariableDeclaration","scope":3859,"src":"2217:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3848,"name":"address","nodeType":"ElementaryTypeName","src":"2217:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2216:17:17"},"returnParameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3859,"src":"2257:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2257:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2256:9:17"},"scope":4384,"src":"2196:116:17","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":3871,"nodeType":"Block","src":"2569:46:17","statements":[{"expression":{"arguments":[{"id":3868,"name":"_caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"2600:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3867,"name":"_hashCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"2586:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2586:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3866,"id":3870,"nodeType":"Return","src":"2579:29:17"}]},"documentation":{"id":3860,"nodeType":"StructuredDocumentation","src":"2318:176:17","text":" @notice Create a hash of TakeBid calldata with an approved caller\n @param _caller Address approved to execute the calldata\n @return Calldata hash"},"functionSelector":"7154ec89","id":3872,"implemented":true,"kind":"function","modifiers":[],"name":"hashTakeBid","nameLocation":"2508:11:17","nodeType":"FunctionDefinition","parameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"_caller","nameLocation":"2528:7:17","nodeType":"VariableDeclaration","scope":3872,"src":"2520:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3861,"name":"address","nodeType":"ElementaryTypeName","src":"2520:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2519:17:17"},"returnParameters":{"id":3866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3872,"src":"2560:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2559:9:17"},"scope":4384,"src":"2499:116:17","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":3884,"nodeType":"Block","src":"2898:46:17","statements":[{"expression":{"arguments":[{"id":3881,"name":"_caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"2929:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3880,"name":"_hashCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"2915:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2915:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3879,"id":3883,"nodeType":"Return","src":"2908:29:17"}]},"documentation":{"id":3873,"nodeType":"StructuredDocumentation","src":"2621:182:17","text":" @notice Create a hash of TakeAskSingle calldata with an approved caller\n @param _caller Address approved to execute the calldata\n @return Calldata hash"},"functionSelector":"beafe7ca","id":3885,"implemented":true,"kind":"function","modifiers":[],"name":"hashTakeAskSingle","nameLocation":"2817:17:17","nodeType":"FunctionDefinition","parameters":{"id":3876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3875,"mutability":"mutable","name":"_caller","nameLocation":"2852:7:17","nodeType":"VariableDeclaration","scope":3885,"src":"2844:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3874,"name":"address","nodeType":"ElementaryTypeName","src":"2844:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2834:31:17"},"returnParameters":{"id":3879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3885,"src":"2889:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2889:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2888:9:17"},"scope":4384,"src":"2808:136:17","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":3897,"nodeType":"Block","src":"3227:46:17","statements":[{"expression":{"arguments":[{"id":3894,"name":"_caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"3258:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3893,"name":"_hashCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"3244:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3892,"id":3896,"nodeType":"Return","src":"3237:29:17"}]},"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"2950:182:17","text":" @notice Create a hash of TakeBidSingle calldata with an approved caller\n @param _caller Address approved to execute the calldata\n @return Calldata hash"},"functionSelector":"b082c3ba","id":3898,"implemented":true,"kind":"function","modifiers":[],"name":"hashTakeBidSingle","nameLocation":"3146:17:17","nodeType":"FunctionDefinition","parameters":{"id":3889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"_caller","nameLocation":"3181:7:17","nodeType":"VariableDeclaration","scope":3898,"src":"3173:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3887,"name":"address","nodeType":"ElementaryTypeName","src":"3173:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3163:31:17"},"returnParameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3898,"src":"3218:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:9:17"},"scope":4384,"src":"3137:136:17","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[6464],"body":{"id":3940,"nodeType":"Block","src":"3654:532:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3913,"name":"_ORDER_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"3742:15:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3914,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"3779:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3785:6:17","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"3779:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3916,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"3813:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3819:10:17","memberName":"collection","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"3813:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3918,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"3851:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3857:12:17","memberName":"listingsRoot","nodeType":"MemberAccess","referencedDeclaration":7051,"src":"3851:18:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3920,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"3891:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3897:16:17","memberName":"numberOfListings","nodeType":"MemberAccess","referencedDeclaration":7053,"src":"3891:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3922,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"3935:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3941:14:17","memberName":"expirationTime","nodeType":"MemberAccess","referencedDeclaration":7055,"src":"3935:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3924,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"3977:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3983:9:17","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":7058,"src":"3977:15:17","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"}},{"arguments":[{"expression":{"id":3927,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"4027:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3928,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4033:8:17","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"4027:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}],"id":3926,"name":"_hashFeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"4014:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_FeeRate_$7142_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct FeeRate memory) view returns (bytes32)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4014:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3930,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"4064:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4070:4:17","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"4064:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3932,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"4096:9:17","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"baseExpression":{"id":3933,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4127:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3936,"indexExpression":{"expression":{"id":3934,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"4134:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4140:6:17","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"4134:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4127:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3911,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3710:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3714:6:17","memberName":"encode","nodeType":"MemberAccess","src":"3710:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3710:455:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3910,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3683:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3683:496:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3909,"id":3939,"nodeType":"Return","src":"3664:515:17"}]},"documentation":{"id":3899,"nodeType":"StructuredDocumentation","src":"3279:258:17","text":" @notice Create an EIP712 hash of an Order\n @dev Includes two additional parameters not in the struct (orderType, nonce)\n @param order Order to hash\n @param orderType OrderType of the Order\n @return Order EIP712 hash"},"functionSelector":"51114ffa","id":3941,"implemented":true,"kind":"function","modifiers":[],"name":"hashOrder","nameLocation":"3551:9:17","nodeType":"FunctionDefinition","parameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"order","nameLocation":"3583:5:17","nodeType":"VariableDeclaration","scope":3941,"src":"3570:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":3901,"nodeType":"UserDefinedTypeName","pathNode":{"id":3900,"name":"Order","nameLocations":["3570:5:17"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"3570:5:17"},"referencedDeclaration":7064,"src":"3570:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":3905,"mutability":"mutable","name":"orderType","nameLocation":"3608:9:17","nodeType":"VariableDeclaration","scope":3941,"src":"3598:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":3904,"nodeType":"UserDefinedTypeName","pathNode":{"id":3903,"name":"OrderType","nameLocations":["3598:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"3598:9:17"},"referencedDeclaration":7019,"src":"3598:9:17","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"}],"src":"3560:63:17"},"returnParameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3941,"src":"3645:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3645:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3644:9:17"},"scope":4384,"src":"3542:644:17","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[6477],"body":{"id":3985,"nodeType":"Block","src":"4345:577:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3957,"name":"_OFFER_COLLECTION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"4433:26:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3958,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"4481:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4487:6:17","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"4481:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3960,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"4515:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4521:10:17","memberName":"collection","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"4515:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3962,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"4553:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4559:12:17","memberName":"listingsRoot","nodeType":"MemberAccess","referencedDeclaration":7051,"src":"4553:18:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3964,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"4593:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4599:16:17","memberName":"numberOfListings","nodeType":"MemberAccess","referencedDeclaration":7053,"src":"4593:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3966,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"4637:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4643:14:17","memberName":"expirationTime","nodeType":"MemberAccess","referencedDeclaration":7055,"src":"4637:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3968,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"4679:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4685:9:17","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":7058,"src":"4679:15:17","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"}},{"arguments":[{"expression":{"id":3971,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"4729:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4735:8:17","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"4729:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}],"id":3970,"name":"_hashFeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"4716:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_FeeRate_$7142_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct FeeRate memory) view returns (bytes32)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4716:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3974,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"4766:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4772:4:17","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"4766:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3976,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"4798:9:17","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"baseExpression":{"id":3977,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4829:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3980,"indexExpression":{"expression":{"id":3978,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"4836:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":3979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4842:6:17","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"4836:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4829:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3981,"name":"pricePerItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"4871:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3955,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4401:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4405:6:17","memberName":"encode","nodeType":"MemberAccess","src":"4401:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4401:500:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3954,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4374:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:541:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3953,"id":3984,"nodeType":"Return","src":"4355:560:17"}]},"functionSelector":"6bf68190","id":3986,"implemented":true,"kind":"function","modifiers":[],"name":"hashOfferCollection","nameLocation":"4202:19:17","nodeType":"FunctionDefinition","parameters":{"id":3950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3944,"mutability":"mutable","name":"order","nameLocation":"4244:5:17","nodeType":"VariableDeclaration","scope":3986,"src":"4231:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":3943,"nodeType":"UserDefinedTypeName","pathNode":{"id":3942,"name":"Order","nameLocations":["4231:5:17"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"4231:5:17"},"referencedDeclaration":7064,"src":"4231:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"orderType","nameLocation":"4269:9:17","nodeType":"VariableDeclaration","scope":3986,"src":"4259:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":3946,"nodeType":"UserDefinedTypeName","pathNode":{"id":3945,"name":"OrderType","nameLocations":["4259:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"4259:9:17"},"referencedDeclaration":7019,"src":"4259:9:17","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"pricePerItem","nameLocation":"4296:12:17","nodeType":"VariableDeclaration","scope":3986,"src":"4288:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"4288:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4221:93:17"},"returnParameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3986,"src":"4336:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4335:9:17"},"scope":4384,"src":"4193:729:17","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[6453],"body":{"id":4009,"nodeType":"Block","src":"5134:248:17","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3998,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"5222:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":3999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5230:5:17","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7033,"src":"5222:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4000,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"5257:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":4001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5265:7:17","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7035,"src":"5257:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4002,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"5294:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":4003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5302:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7037,"src":"5294:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4004,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"5330:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":4005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5338:5:17","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":7039,"src":"5330:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3996,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5190:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5194:6:17","memberName":"encode","nodeType":"MemberAccess","src":"5190:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5190:171:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3995,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5163:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5163:212:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3994,"id":4008,"nodeType":"Return","src":"5144:231:17"}]},"documentation":{"id":3987,"nodeType":"StructuredDocumentation","src":"4928:126:17","text":" @notice Create a hash of a Listing struct\n @param listing Listing to hash\n @return Listing hash"},"functionSelector":"87cc694d","id":4010,"implemented":true,"kind":"function","modifiers":[],"name":"hashListing","nameLocation":"5068:11:17","nodeType":"FunctionDefinition","parameters":{"id":3991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3990,"mutability":"mutable","name":"listing","nameLocation":"5095:7:17","nodeType":"VariableDeclaration","scope":4010,"src":"5080:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing"},"typeName":{"id":3989,"nodeType":"UserDefinedTypeName","pathNode":{"id":3988,"name":"Listing","nameLocations":["5080:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"5080:7:17"},"referencedDeclaration":7040,"src":"5080:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"}],"src":"5079:24:17"},"returnParameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4010,"src":"5125:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5125:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5124:9:17"},"scope":4384,"src":"5059:323:17","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4019,"nodeType":"Block","src":"5657:220:17","statements":[{"AST":{"nodeType":"YulBlock","src":"5676:195:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5690:30:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5715:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5709:5:17"},"nodeType":"YulFunctionCall","src":"5709:11:17"},"variables":[{"name":"nextPointer","nodeType":"YulTypedName","src":"5694:11:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5733:45:17","value":{"arguments":[{"arguments":[{"name":"nextPointer","nodeType":"YulIdentifier","src":"5753:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"5766:4:17","type":"","value":"0x80"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5749:3:17"},"nodeType":"YulFunctionCall","src":"5749:22:17"},{"kind":"number","nodeType":"YulLiteral","src":"5773:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5745:3:17"},"nodeType":"YulFunctionCall","src":"5745:33:17"},"variables":[{"name":"size","nodeType":"YulTypedName","src":"5737:4:17","type":""}]},{"expression":{"arguments":[{"name":"nextPointer","nodeType":"YulIdentifier","src":"5798:11:17"},{"name":"_caller","nodeType":"YulIdentifier","src":"5811:7:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5791:6:17"},"nodeType":"YulFunctionCall","src":"5791:28:17"},"nodeType":"YulExpressionStatement","src":"5791:28:17"},{"nodeType":"YulAssignment","src":"5832:29:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5850:4:17","type":"","value":"0x80"},{"name":"size","nodeType":"YulIdentifier","src":"5856:4:17"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5840:9:17"},"nodeType":"YulFunctionCall","src":"5840:21:17"},"variableNames":[{"name":"hash","nodeType":"YulIdentifier","src":"5832:4:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4013,"isOffset":false,"isSlot":false,"src":"5811:7:17","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"5832:4:17","valueSize":1}],"id":4018,"nodeType":"InlineAssembly","src":"5667:204:17"}]},"documentation":{"id":4011,"nodeType":"StructuredDocumentation","src":"5388:173:17","text":" @notice Create a hash of calldata with an approved caller\n @param _caller Address approved to execute the calldata\n @return hash Calldata hash"},"id":4020,"implemented":true,"kind":"function","modifiers":[],"name":"_hashCalldata","nameLocation":"5575:13:17","nodeType":"FunctionDefinition","parameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"_caller","nameLocation":"5606:7:17","nodeType":"VariableDeclaration","scope":4020,"src":"5598:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4012,"name":"address","nodeType":"ElementaryTypeName","src":"5598:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5588:31:17"},"returnParameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"hash","nameLocation":"5651:4:17","nodeType":"VariableDeclaration","scope":4020,"src":"5643:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5643:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5642:14:17"},"scope":4384,"src":"5566:311:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4040,"nodeType":"Block","src":"6120:140:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":4032,"name":"_FEE_RATE_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"6187:18:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4033,"name":"feeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"6207:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":4034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6215:9:17","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"6207:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4035,"name":"feeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"6226:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":4036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6234:4:17","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"6226:12:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":4030,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6176:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6180:6:17","memberName":"encode","nodeType":"MemberAccess","src":"6176:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6176:63:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4029,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6149:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:104:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4028,"id":4039,"nodeType":"Return","src":"6130:123:17"}]},"documentation":{"id":4021,"nodeType":"StructuredDocumentation","src":"5883:141:17","text":" @notice Create an EIP712 hash of a FeeRate struct\n @param feeRate FeeRate to hash\n @return FeeRate EIP712 hash"},"id":4041,"implemented":true,"kind":"function","modifiers":[],"name":"_hashFeeRate","nameLocation":"6038:12:17","nodeType":"FunctionDefinition","parameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"feeRate","nameLocation":"6075:7:17","nodeType":"VariableDeclaration","scope":4041,"src":"6060:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":4023,"nodeType":"UserDefinedTypeName","pathNode":{"id":4022,"name":"FeeRate","nameLocations":["6060:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"6060:7:17"},"referencedDeclaration":7142,"src":"6060:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"}],"src":"6050:38:17"},"returnParameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4041,"src":"6111:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6111:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6110:9:17"},"scope":4384,"src":"6029:231:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4062,"nodeType":"Block","src":"6465:88:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"307831393031","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6512:6:17","typeDescriptions":{"typeIdentifier":"t_rational_6401_by_1","typeString":"int_const 6401"},"value":"0x1901"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6401_by_1","typeString":"int_const 6401"}],"id":4054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4053,"name":"bytes2","nodeType":"ElementaryTypeName","src":"6505:6:17","typeDescriptions":{}}},"id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":4057,"name":"_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"6521:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4058,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"6540:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6492:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4050,"name":"bytes","nodeType":"ElementaryTypeName","src":"6492:5:17","typeDescriptions":{}}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6498:6:17","memberName":"concat","nodeType":"MemberAccess","src":"6492:12:17","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6492:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4049,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6482:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6482:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4048,"id":4061,"nodeType":"Return","src":"6475:71:17"}]},"documentation":{"id":4042,"nodeType":"StructuredDocumentation","src":"6266:129:17","text":" @notice Create an EIP712 hash to sign\n @param hash Primary EIP712 object hash\n @return EIP712 hash"},"functionSelector":"c1dc0285","id":4063,"implemented":true,"kind":"function","modifiers":[],"name":"_hashToSign","nameLocation":"6409:11:17","nodeType":"FunctionDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"hash","nameLocation":"6429:4:17","nodeType":"VariableDeclaration","scope":4063,"src":"6421:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6421:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6420:14:17"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4063,"src":"6456:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6456:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6455:9:17"},"scope":4384,"src":"6400:153:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4167,"nodeType":"Block","src":"6864:1796:17","statements":[{"assignments":[4076],"declarations":[{"constant":false,"id":4076,"mutability":"mutable","name":"eip712DomainTypehash","nameLocation":"6882:20:17","nodeType":"VariableDeclaration","scope":4167,"src":"6874:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6874:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4089,"initialValue":{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6958:15:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_de06c25f21a371a1bc92887b399d179e16db7e78ff9780730d4f2f1217f0227a","typeString":"literal_string \"EIP712Domain(\""},"value":"EIP712Domain("},{"hexValue":"737472696e67206e616d652c","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6991:14:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_0376df606842aeeddf95ba5db6e827bf40e254b68db9531357ede6679d404597","typeString":"literal_string \"string name,\""},"value":"string name,"},{"hexValue":"737472696e672076657273696f6e2c","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7023:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_59f8a695163fe72b45680abd680645bb66c8df0e236a50c4f8a610af2d5a606c","typeString":"literal_string \"string version,\""},"value":"string version,"},{"hexValue":"75696e7432353620636861696e49642c","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7058:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_43fde9c96e882d48ec2b3bfc68b495c65e04789cf76c3487375805a9d865e46b","typeString":"literal_string \"uint256 chainId,\""},"value":"uint256 chainId,"},{"hexValue":"6164647265737320766572696679696e67436f6e7472616374","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7094:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_40ab939a78baf41674810042aff4b66e1c8507c1fbb0af0c7e28dc4250f2dd9b","typeString":"literal_string \"address verifyingContract\""},"value":"address verifyingContract"},{"hexValue":"29","id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7139:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""},"value":")"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_de06c25f21a371a1bc92887b399d179e16db7e78ff9780730d4f2f1217f0227a","typeString":"literal_string \"EIP712Domain(\""},{"typeIdentifier":"t_stringliteral_0376df606842aeeddf95ba5db6e827bf40e254b68db9531357ede6679d404597","typeString":"literal_string \"string name,\""},{"typeIdentifier":"t_stringliteral_59f8a695163fe72b45680abd680645bb66c8df0e236a50c4f8a610af2d5a606c","typeString":"literal_string \"string version,\""},{"typeIdentifier":"t_stringliteral_43fde9c96e882d48ec2b3bfc68b495c65e04789cf76c3487375805a9d865e46b","typeString":"literal_string \"uint256 chainId,\""},{"typeIdentifier":"t_stringliteral_40ab939a78baf41674810042aff4b66e1c8507c1fbb0af0c7e28dc4250f2dd9b","typeString":"literal_string \"address verifyingContract\""},{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""}],"expression":{"id":4079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6928:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4078,"name":"bytes","nodeType":"ElementaryTypeName","src":"6928:5:17","typeDescriptions":{}}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6934:6:17","memberName":"concat","nodeType":"MemberAccess","src":"6928:12:17","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6928:228:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4077,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6905:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6905:261:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6874:292:17"},{"assignments":[4091],"declarations":[{"constant":false,"id":4091,"mutability":"mutable","name":"feeRateTypestring","nameLocation":"7202:17:17","nodeType":"VariableDeclaration","scope":4167,"src":"7177:42:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4090,"name":"bytes","nodeType":"ElementaryTypeName","src":"7177:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4093,"initialValue":{"hexValue":"46656552617465286164647265737320726563697069656e742c75696e743136207261746529","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7222:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a192ca867b0af2744eab247871e1a6c69fcaeef80ace07b70395b60f43c0f489","typeString":"literal_string \"FeeRate(address recipient,uint16 rate)\""},"value":"FeeRate(address recipient,uint16 rate)"},"nodeType":"VariableDeclarationStatement","src":"7177:85:17"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4094,"name":"orderTypehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"7273:13:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"4f7264657228","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7342:8:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e914b43d8d6cbd999d1f030ee624f48df0ba3eae96befa67ebf4e808f3fc00d","typeString":"literal_string \"Order(\""},"value":"Order("},{"hexValue":"61646472657373207472616465722c","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7368:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7c1e5fc631548cdd9bc5970a20a86303b676b17fcd0fe96099521204291c144b","typeString":"literal_string \"address trader,\""},"value":"address trader,"},{"hexValue":"6164647265737320636f6c6c656374696f6e2c","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7403:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c96a6d84da2ab5131e1ae03bb609b91243a9928464c1023a400a595271ced23","typeString":"literal_string \"address collection,\""},"value":"address collection,"},{"hexValue":"62797465733332206c697374696e6773526f6f742c","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7442:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd6a71c9f2410abe4b5cb675edbdee6a42c1fe01c13b793c37abce89818cc2ba","typeString":"literal_string \"bytes32 listingsRoot,\""},"value":"bytes32 listingsRoot,"},{"hexValue":"75696e74323536206e756d6265724f664c697374696e67732c","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7483:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_835cc6a50d70cf2c4c60c33e703612a407d482e05c5ee9ca364b2b0dd2f78d35","typeString":"literal_string \"uint256 numberOfListings,\""},"value":"uint256 numberOfListings,"},{"hexValue":"75696e743235362065787069726174696f6e54696d652c","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7528:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dbea4d28703bb3f672227fd9b2265070118b325748ffefaea1071d407f4e566","typeString":"literal_string \"uint256 expirationTime,\""},"value":"uint256 expirationTime,"},{"hexValue":"75696e7438206173736574547970652c","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7571:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3d7af04c6c5194cbe34a0ef6b002f8f43230924f4dbea9212466439768c19da","typeString":"literal_string \"uint8 assetType,\""},"value":"uint8 assetType,"},{"hexValue":"46656552617465206d616b65724665652c","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7607:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_519f79a078f279b73f16bf07ef3ae1993888b882de08d43d99dee1dad23f8db2","typeString":"literal_string \"FeeRate makerFee,\""},"value":"FeeRate makerFee,"},{"hexValue":"75696e743235362073616c742c","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7644:15:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7afce5645cc56fac870e2fe75e80ac27df3fcb6cd3912779279ab14e789c90b9","typeString":"literal_string \"uint256 salt,\""},"value":"uint256 salt,"},{"hexValue":"75696e7438206f72646572547970652c","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7677:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ca99a1f17421d983438cc17eb08862a0680b9d69f23168b6da798602e65107f","typeString":"literal_string \"uint8 orderType,\""},"value":"uint8 orderType,"},{"hexValue":"75696e74323536206e6f6e6365","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7713:15:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_57010f4150eb08e779a691a31a26f7592ae1229ccc4d87d3555e3f40fad8b362","typeString":"literal_string \"uint256 nonce\""},"value":"uint256 nonce"},{"hexValue":"29","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7746:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""},"value":")"},{"id":4111,"name":"feeRateTypestring","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"7767:17:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2e914b43d8d6cbd999d1f030ee624f48df0ba3eae96befa67ebf4e808f3fc00d","typeString":"literal_string \"Order(\""},{"typeIdentifier":"t_stringliteral_7c1e5fc631548cdd9bc5970a20a86303b676b17fcd0fe96099521204291c144b","typeString":"literal_string \"address trader,\""},{"typeIdentifier":"t_stringliteral_2c96a6d84da2ab5131e1ae03bb609b91243a9928464c1023a400a595271ced23","typeString":"literal_string \"address collection,\""},{"typeIdentifier":"t_stringliteral_cd6a71c9f2410abe4b5cb675edbdee6a42c1fe01c13b793c37abce89818cc2ba","typeString":"literal_string \"bytes32 listingsRoot,\""},{"typeIdentifier":"t_stringliteral_835cc6a50d70cf2c4c60c33e703612a407d482e05c5ee9ca364b2b0dd2f78d35","typeString":"literal_string \"uint256 numberOfListings,\""},{"typeIdentifier":"t_stringliteral_7dbea4d28703bb3f672227fd9b2265070118b325748ffefaea1071d407f4e566","typeString":"literal_string \"uint256 expirationTime,\""},{"typeIdentifier":"t_stringliteral_f3d7af04c6c5194cbe34a0ef6b002f8f43230924f4dbea9212466439768c19da","typeString":"literal_string \"uint8 assetType,\""},{"typeIdentifier":"t_stringliteral_519f79a078f279b73f16bf07ef3ae1993888b882de08d43d99dee1dad23f8db2","typeString":"literal_string \"FeeRate makerFee,\""},{"typeIdentifier":"t_stringliteral_7afce5645cc56fac870e2fe75e80ac27df3fcb6cd3912779279ab14e789c90b9","typeString":"literal_string \"uint256 salt,\""},{"typeIdentifier":"t_stringliteral_3ca99a1f17421d983438cc17eb08862a0680b9d69f23168b6da798602e65107f","typeString":"literal_string \"uint8 orderType,\""},{"typeIdentifier":"t_stringliteral_57010f4150eb08e779a691a31a26f7592ae1229ccc4d87d3555e3f40fad8b362","typeString":"literal_string \"uint256 nonce\""},{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7312:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4096,"name":"bytes","nodeType":"ElementaryTypeName","src":"7312:5:17","typeDescriptions":{}}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7318:6:17","memberName":"concat","nodeType":"MemberAccess","src":"7312:12:17","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7312:486:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4095,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7289:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7289:519:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7273:535:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4115,"nodeType":"ExpressionStatement","src":"7273:535:17"},{"expression":{"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4116,"name":"offerCollectionTypehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"7819:23:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"4f66666572436f6c656374696f6e28","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7892:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c9536742f166cb6c2f63a2c33c730714e709b289f2a923139bc1aa0e4625569","typeString":"literal_string \"OfferColection(\""},"value":"OfferColection("},{"hexValue":"61646472657373207472616465722c","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7927:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7c1e5fc631548cdd9bc5970a20a86303b676b17fcd0fe96099521204291c144b","typeString":"literal_string \"address trader,\""},"value":"address trader,"},{"hexValue":"6164647265737320636f6c6c656374696f6e2c","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7962:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c96a6d84da2ab5131e1ae03bb609b91243a9928464c1023a400a595271ced23","typeString":"literal_string \"address collection,\""},"value":"address collection,"},{"hexValue":"62797465733332206c697374696e6773526f6f742c","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8001:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd6a71c9f2410abe4b5cb675edbdee6a42c1fe01c13b793c37abce89818cc2ba","typeString":"literal_string \"bytes32 listingsRoot,\""},"value":"bytes32 listingsRoot,"},{"hexValue":"75696e74323536206e756d6265724f664c697374696e67732c","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8042:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_835cc6a50d70cf2c4c60c33e703612a407d482e05c5ee9ca364b2b0dd2f78d35","typeString":"literal_string \"uint256 numberOfListings,\""},"value":"uint256 numberOfListings,"},{"hexValue":"75696e743235362065787069726174696f6e54696d652c","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8087:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dbea4d28703bb3f672227fd9b2265070118b325748ffefaea1071d407f4e566","typeString":"literal_string \"uint256 expirationTime,\""},"value":"uint256 expirationTime,"},{"hexValue":"75696e7438206173736574547970652c","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8130:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3d7af04c6c5194cbe34a0ef6b002f8f43230924f4dbea9212466439768c19da","typeString":"literal_string \"uint8 assetType,\""},"value":"uint8 assetType,"},{"hexValue":"46656552617465206d616b65724665652c","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8166:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_519f79a078f279b73f16bf07ef3ae1993888b882de08d43d99dee1dad23f8db2","typeString":"literal_string \"FeeRate makerFee,\""},"value":"FeeRate makerFee,"},{"hexValue":"75696e743235362073616c742c","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8203:15:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7afce5645cc56fac870e2fe75e80ac27df3fcb6cd3912779279ab14e789c90b9","typeString":"literal_string \"uint256 salt,\""},"value":"uint256 salt,"},{"hexValue":"75696e7438206f72646572547970652c","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8236:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ca99a1f17421d983438cc17eb08862a0680b9d69f23168b6da798602e65107f","typeString":"literal_string \"uint8 orderType,\""},"value":"uint8 orderType,"},{"hexValue":"75696e74323536206e6f6e63652c","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8272:16:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_08278c604c8e95f1bef09faa00a4ab47d0f02ecaf55fa6d10dbcb13a24951c54","typeString":"literal_string \"uint256 nonce,\""},"value":"uint256 nonce,"},{"hexValue":"75696e743235362070726963655065724974656d","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8306:22:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_11c822d823b2a1700e8dd1502324f006717fd7daaecd7847517847940a1c85d3","typeString":"literal_string \"uint256 pricePerItem\""},"value":"uint256 pricePerItem"},{"hexValue":"29","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8346:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""},"value":")"},{"id":4134,"name":"feeRateTypestring","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"8367:17:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4c9536742f166cb6c2f63a2c33c730714e709b289f2a923139bc1aa0e4625569","typeString":"literal_string \"OfferColection(\""},{"typeIdentifier":"t_stringliteral_7c1e5fc631548cdd9bc5970a20a86303b676b17fcd0fe96099521204291c144b","typeString":"literal_string \"address trader,\""},{"typeIdentifier":"t_stringliteral_2c96a6d84da2ab5131e1ae03bb609b91243a9928464c1023a400a595271ced23","typeString":"literal_string \"address collection,\""},{"typeIdentifier":"t_stringliteral_cd6a71c9f2410abe4b5cb675edbdee6a42c1fe01c13b793c37abce89818cc2ba","typeString":"literal_string \"bytes32 listingsRoot,\""},{"typeIdentifier":"t_stringliteral_835cc6a50d70cf2c4c60c33e703612a407d482e05c5ee9ca364b2b0dd2f78d35","typeString":"literal_string \"uint256 numberOfListings,\""},{"typeIdentifier":"t_stringliteral_7dbea4d28703bb3f672227fd9b2265070118b325748ffefaea1071d407f4e566","typeString":"literal_string \"uint256 expirationTime,\""},{"typeIdentifier":"t_stringliteral_f3d7af04c6c5194cbe34a0ef6b002f8f43230924f4dbea9212466439768c19da","typeString":"literal_string \"uint8 assetType,\""},{"typeIdentifier":"t_stringliteral_519f79a078f279b73f16bf07ef3ae1993888b882de08d43d99dee1dad23f8db2","typeString":"literal_string \"FeeRate makerFee,\""},{"typeIdentifier":"t_stringliteral_7afce5645cc56fac870e2fe75e80ac27df3fcb6cd3912779279ab14e789c90b9","typeString":"literal_string \"uint256 salt,\""},{"typeIdentifier":"t_stringliteral_3ca99a1f17421d983438cc17eb08862a0680b9d69f23168b6da798602e65107f","typeString":"literal_string \"uint8 orderType,\""},{"typeIdentifier":"t_stringliteral_08278c604c8e95f1bef09faa00a4ab47d0f02ecaf55fa6d10dbcb13a24951c54","typeString":"literal_string \"uint256 nonce,\""},{"typeIdentifier":"t_stringliteral_11c822d823b2a1700e8dd1502324f006717fd7daaecd7847517847940a1c85d3","typeString":"literal_string \"uint256 pricePerItem\""},{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7866:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4118,"name":"bytes","nodeType":"ElementaryTypeName","src":"7866:5:17","typeDescriptions":{}}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7872:6:17","memberName":"concat","nodeType":"MemberAccess","src":"7866:12:17","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7866:530:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4117,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7845:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7845:563:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7819:589:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4138,"nodeType":"ExpressionStatement","src":"7819:589:17"},{"expression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4139,"name":"feeRateTypehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"8419:15:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4141,"name":"feeRateTypestring","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"8447:17:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4140,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8437:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8437:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8419:46:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4144,"nodeType":"ExpressionStatement","src":"8419:46:17"},{"expression":{"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4145,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"8476:15:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4147,"name":"eip712DomainTypehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"8519:20:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":4151,"name":"_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"8569:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8563:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4149,"name":"bytes","nodeType":"ElementaryTypeName","src":"8563:5:17","typeDescriptions":{}}},"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8563:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4148,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8553:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8553:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":4157,"name":"_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"8606:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8600:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4155,"name":"bytes","nodeType":"ElementaryTypeName","src":"8600:5:17","typeDescriptions":{}}},"id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8600:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4154,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8590:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8590:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4162,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8638:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Signatures_$4384","typeString":"contract Signatures"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Signatures_$4384","typeString":"contract Signatures"}],"id":4161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8630:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4160,"name":"address","nodeType":"ElementaryTypeName","src":"8630:7:17","typeDescriptions":{}}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8630:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4146,"name":"_hashDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"8494:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32,address) view returns (bytes32)"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8494:159:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8476:177:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4166,"nodeType":"ExpressionStatement","src":"8476:177:17"}]},"documentation":{"id":4064,"nodeType":"StructuredDocumentation","src":"6559:57:17","text":" @notice Generate all EIP712 Typehashes"},"id":4168,"implemented":true,"kind":"function","modifiers":[],"name":"_createTypehashes","nameLocation":"6630:17:17","nodeType":"FunctionDefinition","parameters":{"id":4065,"nodeType":"ParameterList","parameters":[],"src":"6647:2:17"},"returnParameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"feeRateTypehash","nameLocation":"6717:15:17","nodeType":"VariableDeclaration","scope":4168,"src":"6709:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6709:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"orderTypehash","nameLocation":"6754:13:17","nodeType":"VariableDeclaration","scope":4168,"src":"6746:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6746:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4071,"mutability":"mutable","name":"offerCollectionTypehash","nameLocation":"6789:23:17","nodeType":"VariableDeclaration","scope":4168,"src":"6781:31:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6781:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4073,"mutability":"mutable","name":"domainSeparator","nameLocation":"6834:15:17","nodeType":"VariableDeclaration","scope":4168,"src":"6826:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6826:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6695:164:17"},"scope":4384,"src":"6621:2039:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4194,"nodeType":"Block","src":"9187:272:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":4185,"name":"eip712DomainTypehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"9275:20:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4186,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"9317:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4187,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"9347:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4188,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9380:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9386:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"9380:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4190,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"9415:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4183,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9243:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9247:6:17","memberName":"encode","nodeType":"MemberAccess","src":"9243:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9243:195:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4182,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9216:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9216:236:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4181,"id":4193,"nodeType":"Return","src":"9197:255:17"}]},"documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"8666:342:17","text":" @notice Create an EIP712 domain separator\n @param eip712DomainTypehash Typehash of the EIP712Domain struct\n @param nameHash Hash of the contract name\n @param versionHash Hash of the version string\n @param proxy Address of the proxy this implementation will be behind\n @return EIP712Domain hash"},"id":4195,"implemented":true,"kind":"function","modifiers":[],"name":"_hashDomain","nameLocation":"9022:11:17","nodeType":"FunctionDefinition","parameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"eip712DomainTypehash","nameLocation":"9051:20:17","nodeType":"VariableDeclaration","scope":4195,"src":"9043:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9043:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4173,"mutability":"mutable","name":"nameHash","nameLocation":"9089:8:17","nodeType":"VariableDeclaration","scope":4195,"src":"9081:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9081:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4175,"mutability":"mutable","name":"versionHash","nameLocation":"9115:11:17","nodeType":"VariableDeclaration","scope":4195,"src":"9107:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9107:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4177,"mutability":"mutable","name":"proxy","nameLocation":"9144:5:17","nodeType":"VariableDeclaration","scope":4195,"src":"9136:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4176,"name":"address","nodeType":"ElementaryTypeName","src":"9136:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9033:122:17"},"returnParameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4195,"src":"9178:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9178:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9177:9:17"},"scope":4384,"src":"9013:446:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4232,"nodeType":"Block","src":"9983:521:17","statements":[{"assignments":[4216],"declarations":[{"constant":false,"id":4216,"mutability":"mutable","name":"hashToSign","nameLocation":"10001:10:17","nodeType":"VariableDeclaration","scope":4232,"src":"9993:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9993:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4220,"initialValue":{"arguments":[{"id":4218,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"10026:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4217,"name":"_hashToSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"10014:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10014:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9993:38:17"},{"AST":{"nodeType":"YulBlock","src":"10050:389:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10064:128:17","value":{"arguments":[{"arguments":[{"name":"signatures","nodeType":"YulIdentifier","src":"10112:10:17"},{"name":"One_word","nodeType":"YulIdentifier","src":"10124:8:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10108:3:17"},"nodeType":"YulFunctionCall","src":"10108:25:17"},{"arguments":[{"name":"Signatures_size","nodeType":"YulIdentifier","src":"10155:15:17"},{"name":"index","nodeType":"YulIdentifier","src":"10172:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10151:3:17"},"nodeType":"YulFunctionCall","src":"10151:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10087:3:17"},"nodeType":"YulFunctionCall","src":"10087:105:17"},"variables":[{"name":"signatureOffset","nodeType":"YulTypedName","src":"10068:15:17","type":""}]},{"nodeType":"YulAssignment","src":"10205:27:17","value":{"arguments":[{"name":"signatureOffset","nodeType":"YulIdentifier","src":"10216:15:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10210:5:17"},"nodeType":"YulFunctionCall","src":"10210:22:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"10205:1:17"}]},{"nodeType":"YulAssignment","src":"10245:53:17","value":{"arguments":[{"arguments":[{"name":"signatureOffset","nodeType":"YulIdentifier","src":"10260:15:17"},{"name":"Signatures_s_offset","nodeType":"YulIdentifier","src":"10277:19:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10256:3:17"},"nodeType":"YulFunctionCall","src":"10256:41:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10250:5:17"},"nodeType":"YulFunctionCall","src":"10250:48:17"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"10245:1:17"}]},{"nodeType":"YulAssignment","src":"10311:118:17","value":{"arguments":[{"name":"Bytes1_shift","nodeType":"YulIdentifier","src":"10337:12:17"},{"arguments":[{"arguments":[{"name":"signatureOffset","nodeType":"YulIdentifier","src":"10377:15:17"},{"name":"Signatures_v_offset","nodeType":"YulIdentifier","src":"10394:19:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10373:3:17"},"nodeType":"YulFunctionCall","src":"10373:41:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10367:5:17"},"nodeType":"YulFunctionCall","src":"10367:48:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10316:3:17"},"nodeType":"YulFunctionCall","src":"10316:113:17"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"10311:1:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6638,"isOffset":false,"isSlot":false,"src":"10337:12:17","valueSize":1},{"declaration":6647,"isOffset":false,"isSlot":false,"src":"10124:8:17","valueSize":1},{"declaration":6725,"isOffset":false,"isSlot":false,"src":"10277:19:17","valueSize":1},{"declaration":6722,"isOffset":false,"isSlot":false,"src":"10155:15:17","valueSize":1},{"declaration":6728,"isOffset":false,"isSlot":false,"src":"10394:19:17","valueSize":1},{"declaration":4204,"isOffset":false,"isSlot":false,"src":"10172:5:17","valueSize":1},{"declaration":4209,"isOffset":false,"isSlot":false,"src":"10205:1:17","valueSize":1},{"declaration":4211,"isOffset":false,"isSlot":false,"src":"10245:1:17","valueSize":1},{"declaration":4202,"isOffset":false,"isSlot":false,"src":"10112:10:17","valueSize":1},{"declaration":4213,"isOffset":false,"isSlot":false,"src":"10311:1:17","valueSize":1}],"id":4221,"nodeType":"InlineAssembly","src":"10041:398:17"},{"expression":{"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4222,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"10448:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4224,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"10469:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4225,"name":"hashToSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"10477:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4226,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"10489:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4227,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"10492:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4228,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"10495:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4223,"name":"_verify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"10461:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32,uint8,bytes32,bytes32) pure returns (bool)"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10461:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10448:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4231,"nodeType":"ExpressionStatement","src":"10448:49:17"}]},"documentation":{"id":4196,"nodeType":"StructuredDocumentation","src":"9465:301:17","text":" @notice Verify EIP712 signature\n @param signer Address of the alleged signer\n @param hash EIP712 hash\n @param signatures Packed bytes array of order signatures\n @param index Index of the signature to verify\n @return authorized Validity of the signature"},"functionSelector":"7566cd3c","id":4233,"implemented":true,"kind":"function","modifiers":[],"name":"verifyAuthorizationPublic","nameLocation":"9780:25:17","nodeType":"FunctionDefinition","parameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"mutability":"mutable","name":"signer","nameLocation":"9823:6:17","nodeType":"VariableDeclaration","scope":4233,"src":"9815:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4197,"name":"address","nodeType":"ElementaryTypeName","src":"9815:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4200,"mutability":"mutable","name":"hash","nameLocation":"9847:4:17","nodeType":"VariableDeclaration","scope":4233,"src":"9839:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9839:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4202,"mutability":"mutable","name":"signatures","nameLocation":"9874:10:17","nodeType":"VariableDeclaration","scope":4233,"src":"9861:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4201,"name":"bytes","nodeType":"ElementaryTypeName","src":"9861:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4204,"mutability":"mutable","name":"index","nameLocation":"9902:5:17","nodeType":"VariableDeclaration","scope":4233,"src":"9894:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4203,"name":"uint256","nodeType":"ElementaryTypeName","src":"9894:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9805:108:17"},"returnParameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"authorized","nameLocation":"9940:10:17","nodeType":"VariableDeclaration","scope":4233,"src":"9935:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4206,"name":"bool","nodeType":"ElementaryTypeName","src":"9935:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4209,"mutability":"mutable","name":"r","nameLocation":"9960:1:17","nodeType":"VariableDeclaration","scope":4233,"src":"9952:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9952:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"s","nameLocation":"9971:1:17","nodeType":"VariableDeclaration","scope":4233,"src":"9963:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9963:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"v","nameLocation":"9980:1:17","nodeType":"VariableDeclaration","scope":4233,"src":"9974:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4212,"name":"uint8","nodeType":"ElementaryTypeName","src":"9974:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"9934:48:17"},"scope":4384,"src":"9771:733:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4272,"nodeType":"Block","src":"10688:576:17","statements":[{"assignments":[4247],"declarations":[{"constant":false,"id":4247,"mutability":"mutable","name":"hashToSign","nameLocation":"10706:10:17","nodeType":"VariableDeclaration","scope":4272,"src":"10698:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10698:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4251,"initialValue":{"arguments":[{"id":4249,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"10731:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4248,"name":"_hashToSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"10719:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10719:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10698:38:17"},{"assignments":[4253],"declarations":[{"constant":false,"id":4253,"mutability":"mutable","name":"r","nameLocation":"10754:1:17","nodeType":"VariableDeclaration","scope":4272,"src":"10746:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10746:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4254,"nodeType":"VariableDeclarationStatement","src":"10746:9:17"},{"assignments":[4256],"declarations":[{"constant":false,"id":4256,"mutability":"mutable","name":"s","nameLocation":"10773:1:17","nodeType":"VariableDeclaration","scope":4272,"src":"10765:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10765:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4257,"nodeType":"VariableDeclarationStatement","src":"10765:9:17"},{"assignments":[4259],"declarations":[{"constant":false,"id":4259,"mutability":"mutable","name":"v","nameLocation":"10790:1:17","nodeType":"VariableDeclaration","scope":4272,"src":"10784:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4258,"name":"uint8","nodeType":"ElementaryTypeName","src":"10784:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4260,"nodeType":"VariableDeclarationStatement","src":"10784:7:17"},{"AST":{"nodeType":"YulBlock","src":"10810:389:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10824:128:17","value":{"arguments":[{"arguments":[{"name":"signatures","nodeType":"YulIdentifier","src":"10872:10:17"},{"name":"One_word","nodeType":"YulIdentifier","src":"10884:8:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10868:3:17"},"nodeType":"YulFunctionCall","src":"10868:25:17"},{"arguments":[{"name":"Signatures_size","nodeType":"YulIdentifier","src":"10915:15:17"},{"name":"index","nodeType":"YulIdentifier","src":"10932:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10911:3:17"},"nodeType":"YulFunctionCall","src":"10911:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10847:3:17"},"nodeType":"YulFunctionCall","src":"10847:105:17"},"variables":[{"name":"signatureOffset","nodeType":"YulTypedName","src":"10828:15:17","type":""}]},{"nodeType":"YulAssignment","src":"10965:27:17","value":{"arguments":[{"name":"signatureOffset","nodeType":"YulIdentifier","src":"10976:15:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10970:5:17"},"nodeType":"YulFunctionCall","src":"10970:22:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"10965:1:17"}]},{"nodeType":"YulAssignment","src":"11005:53:17","value":{"arguments":[{"arguments":[{"name":"signatureOffset","nodeType":"YulIdentifier","src":"11020:15:17"},{"name":"Signatures_s_offset","nodeType":"YulIdentifier","src":"11037:19:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11016:3:17"},"nodeType":"YulFunctionCall","src":"11016:41:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11010:5:17"},"nodeType":"YulFunctionCall","src":"11010:48:17"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"11005:1:17"}]},{"nodeType":"YulAssignment","src":"11071:118:17","value":{"arguments":[{"name":"Bytes1_shift","nodeType":"YulIdentifier","src":"11097:12:17"},{"arguments":[{"arguments":[{"name":"signatureOffset","nodeType":"YulIdentifier","src":"11137:15:17"},{"name":"Signatures_v_offset","nodeType":"YulIdentifier","src":"11154:19:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11133:3:17"},"nodeType":"YulFunctionCall","src":"11133:41:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11127:5:17"},"nodeType":"YulFunctionCall","src":"11127:48:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11076:3:17"},"nodeType":"YulFunctionCall","src":"11076:113:17"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"11071:1:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6638,"isOffset":false,"isSlot":false,"src":"11097:12:17","valueSize":1},{"declaration":6647,"isOffset":false,"isSlot":false,"src":"10884:8:17","valueSize":1},{"declaration":6725,"isOffset":false,"isSlot":false,"src":"11037:19:17","valueSize":1},{"declaration":6722,"isOffset":false,"isSlot":false,"src":"10915:15:17","valueSize":1},{"declaration":6728,"isOffset":false,"isSlot":false,"src":"11154:19:17","valueSize":1},{"declaration":4241,"isOffset":false,"isSlot":false,"src":"10932:5:17","valueSize":1},{"declaration":4253,"isOffset":false,"isSlot":false,"src":"10965:1:17","valueSize":1},{"declaration":4256,"isOffset":false,"isSlot":false,"src":"11005:1:17","valueSize":1},{"declaration":4239,"isOffset":false,"isSlot":false,"src":"10872:10:17","valueSize":1},{"declaration":4259,"isOffset":false,"isSlot":false,"src":"11071:1:17","valueSize":1}],"id":4261,"nodeType":"InlineAssembly","src":"10801:398:17"},{"expression":{"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4262,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"11208:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4264,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"11229:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4265,"name":"hashToSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"11237:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4266,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"11249:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4267,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"11252:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4268,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"11255:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4263,"name":"_verify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"11221:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32,uint8,bytes32,bytes32) pure returns (bool)"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11221:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11208:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4271,"nodeType":"ExpressionStatement","src":"11208:49:17"}]},"id":4273,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyAuthorization","nameLocation":"10519:20:17","nodeType":"FunctionDefinition","parameters":{"id":4242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"signer","nameLocation":"10557:6:17","nodeType":"VariableDeclaration","scope":4273,"src":"10549:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4234,"name":"address","nodeType":"ElementaryTypeName","src":"10549:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4237,"mutability":"mutable","name":"hash","nameLocation":"10581:4:17","nodeType":"VariableDeclaration","scope":4273,"src":"10573:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10573:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4239,"mutability":"mutable","name":"signatures","nameLocation":"10608:10:17","nodeType":"VariableDeclaration","scope":4273,"src":"10595:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4238,"name":"bytes","nodeType":"ElementaryTypeName","src":"10595:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4241,"mutability":"mutable","name":"index","nameLocation":"10636:5:17","nodeType":"VariableDeclaration","scope":4273,"src":"10628:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4240,"name":"uint256","nodeType":"ElementaryTypeName","src":"10628:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10539:108:17"},"returnParameters":{"id":4245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4244,"mutability":"mutable","name":"authorized","nameLocation":"10676:10:17","nodeType":"VariableDeclaration","scope":4273,"src":"10671:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4243,"name":"bool","nodeType":"ElementaryTypeName","src":"10671:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10670:17:17"},"scope":4384,"src":"10510:754:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4336,"nodeType":"Block","src":"11369:1334:17","statements":[{"assignments":[4280],"declarations":[{"constant":false,"id":4280,"mutability":"mutable","name":"r","nameLocation":"11387:1:17","nodeType":"VariableDeclaration","scope":4336,"src":"11379:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11379:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4281,"nodeType":"VariableDeclarationStatement","src":"11379:9:17"},{"assignments":[4283],"declarations":[{"constant":false,"id":4283,"mutability":"mutable","name":"s","nameLocation":"11406:1:17","nodeType":"VariableDeclaration","scope":4336,"src":"11398:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11398:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4284,"nodeType":"VariableDeclarationStatement","src":"11398:9:17"},{"assignments":[4286],"declarations":[{"constant":false,"id":4286,"mutability":"mutable","name":"v","nameLocation":"11423:1:17","nodeType":"VariableDeclaration","scope":4336,"src":"11417:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4285,"name":"uint8","nodeType":"ElementaryTypeName","src":"11417:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4287,"nodeType":"VariableDeclarationStatement","src":"11417:7:17"},{"assignments":[4289],"declarations":[{"constant":false,"id":4289,"mutability":"mutable","name":"blockNumber","nameLocation":"11441:11:17","nodeType":"VariableDeclaration","scope":4336,"src":"11434:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4288,"name":"uint32","nodeType":"ElementaryTypeName","src":"11434:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":4290,"nodeType":"VariableDeclarationStatement","src":"11434:18:17"},{"assignments":[4292],"declarations":[{"constant":false,"id":4292,"mutability":"mutable","name":"oracle","nameLocation":"11470:6:17","nodeType":"VariableDeclaration","scope":4336,"src":"11462:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4291,"name":"address","nodeType":"ElementaryTypeName","src":"11462:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4293,"nodeType":"VariableDeclarationStatement","src":"11462:14:17"},{"AST":{"nodeType":"YulBlock","src":"11495:734:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11509:45:17","value":{"name":"oracleSignature.offset","nodeType":"YulIdentifier","src":"11532:22:17"},"variables":[{"name":"signatureOffset","nodeType":"YulTypedName","src":"11513:15:17","type":""}]},{"nodeType":"YulAssignment","src":"11567:34:17","value":{"arguments":[{"name":"signatureOffset","nodeType":"YulIdentifier","src":"11585:15:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11572:12:17"},"nodeType":"YulFunctionCall","src":"11572:29:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"11567:1:17"}]},{"nodeType":"YulAssignment","src":"11614:66:17","value":{"arguments":[{"arguments":[{"name":"signatureOffset","nodeType":"YulIdentifier","src":"11636:15:17"},{"name":"OracleSignatures_s_offset","nodeType":"YulIdentifier","src":"11653:25:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11632:3:17"},"nodeType":"YulFunctionCall","src":"11632:47:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11619:12:17"},"nodeType":"YulFunctionCall","src":"11619:61:17"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"11614:1:17"}]},{"nodeType":"YulAssignment","src":"11693:131:17","value":{"arguments":[{"name":"Bytes1_shift","nodeType":"YulIdentifier","src":"11719:12:17"},{"arguments":[{"arguments":[{"name":"signatureOffset","nodeType":"YulIdentifier","src":"11766:15:17"},{"name":"OracleSignatures_v_offset","nodeType":"YulIdentifier","src":"11783:25:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11762:3:17"},"nodeType":"YulFunctionCall","src":"11762:47:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11749:12:17"},"nodeType":"YulFunctionCall","src":"11749:61:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11698:3:17"},"nodeType":"YulFunctionCall","src":"11698:126:17"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"11693:1:17"}]},{"nodeType":"YulAssignment","src":"11837:189:17","value":{"arguments":[{"name":"Bytes4_shift","nodeType":"YulIdentifier","src":"11873:12:17"},{"arguments":[{"arguments":[{"name":"signatureOffset","nodeType":"YulIdentifier","src":"11941:15:17"},{"name":"OracleSignatures_blockNumber_offset","nodeType":"YulIdentifier","src":"11958:35:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11937:3:17"},"nodeType":"YulFunctionCall","src":"11937:57:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11903:12:17"},"nodeType":"YulFunctionCall","src":"11903:109:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11852:3:17"},"nodeType":"YulFunctionCall","src":"11852:174:17"},"variableNames":[{"name":"blockNumber","nodeType":"YulIdentifier","src":"11837:11:17"}]},{"nodeType":"YulAssignment","src":"12039:180:17","value":{"arguments":[{"name":"Bytes20_shift","nodeType":"YulIdentifier","src":"12070:13:17"},{"arguments":[{"arguments":[{"name":"signatureOffset","nodeType":"YulIdentifier","src":"12139:15:17"},{"name":"OracleSignatures_oracle_offset","nodeType":"YulIdentifier","src":"12156:30:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12135:3:17"},"nodeType":"YulFunctionCall","src":"12135:52:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12101:12:17"},"nodeType":"YulFunctionCall","src":"12101:104:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12049:3:17"},"nodeType":"YulFunctionCall","src":"12049:170:17"},"variableNames":[{"name":"oracle","nodeType":"YulIdentifier","src":"12039:6:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6638,"isOffset":false,"isSlot":false,"src":"11719:12:17","valueSize":1},{"declaration":6644,"isOffset":false,"isSlot":false,"src":"12070:13:17","valueSize":1},{"declaration":6641,"isOffset":false,"isSlot":false,"src":"11873:12:17","valueSize":1},{"declaration":6716,"isOffset":false,"isSlot":false,"src":"11958:35:17","valueSize":1},{"declaration":6719,"isOffset":false,"isSlot":false,"src":"12156:30:17","valueSize":1},{"declaration":6710,"isOffset":false,"isSlot":false,"src":"11653:25:17","valueSize":1},{"declaration":6713,"isOffset":false,"isSlot":false,"src":"11783:25:17","valueSize":1},{"declaration":4289,"isOffset":false,"isSlot":false,"src":"11837:11:17","valueSize":1},{"declaration":4292,"isOffset":false,"isSlot":false,"src":"12039:6:17","valueSize":1},{"declaration":4277,"isOffset":true,"isSlot":false,"src":"11532:22:17","suffix":"offset","valueSize":1},{"declaration":4280,"isOffset":false,"isSlot":false,"src":"11567:1:17","valueSize":1},{"declaration":4283,"isOffset":false,"isSlot":false,"src":"11614:1:17","valueSize":1},{"declaration":4286,"isOffset":false,"isSlot":false,"src":"11693:1:17","valueSize":1}],"id":4294,"nodeType":"InlineAssembly","src":"11486:743:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"12242:11:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4296,"name":"blockRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"12256:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12242:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4298,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12269:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12275:6:17","memberName":"number","nodeType":"MemberAccess","src":"12269:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12242:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4305,"nodeType":"IfStatement","src":"12238:101:17","trueBody":{"id":4304,"nodeType":"Block","src":"12283:56:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4301,"name":"ExpiredOracleSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"12304:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12304:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4303,"nodeType":"RevertStatement","src":"12297:31:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4306,"name":"oracles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"12352:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4308,"indexExpression":{"id":4307,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"12360:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12352:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12371:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12352:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4315,"nodeType":"IfStatement","src":"12348:78:17","trueBody":{"id":4314,"nodeType":"Block","src":"12374:52:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4311,"name":"UnauthorizedOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"12395:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12395:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4313,"nodeType":"RevertStatement","src":"12388:27:17"}]}},{"condition":{"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12452:167:17","subExpression":{"arguments":[{"id":4317,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"12478:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":4321,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"12529:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4322,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"12535:11:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":4319,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12512:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12516:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"12512:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12512:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4318,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12502:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12502:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4325,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"12566:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4326,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"12585:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4327,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"12604:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4316,"name":"_verify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"12453:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32,uint8,bytes32,bytes32) pure returns (bool)"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12453:166:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4334,"nodeType":"IfStatement","src":"12435:251:17","trueBody":{"id":4333,"nodeType":"Block","src":"12630:56:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4330,"name":"InvalidOracleSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"12651:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12651:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4332,"nodeType":"RevertStatement","src":"12644:31:17"}]}},{"id":4335,"nodeType":"PlaceholderStatement","src":"12695:1:17"}]},"id":4337,"name":"verifyOracleSignature","nameLocation":"11279:21:17","nodeType":"ModifierDefinition","parameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"hash","nameLocation":"11318:4:17","nodeType":"VariableDeclaration","scope":4337,"src":"11310:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11310:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4277,"mutability":"mutable","name":"oracleSignature","nameLocation":"11347:15:17","nodeType":"VariableDeclaration","scope":4337,"src":"11332:30:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4276,"name":"bytes","nodeType":"ElementaryTypeName","src":"11332:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11300:68:17"},"src":"11270:1433:17","virtual":false,"visibility":"internal"},{"body":{"id":4378,"nodeType":"Block","src":"13097:179:17","statements":[{"assignments":[4354],"declarations":[{"constant":false,"id":4354,"mutability":"mutable","name":"recoveredSigner","nameLocation":"13115:15:17","nodeType":"VariableDeclaration","scope":4378,"src":"13107:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4353,"name":"address","nodeType":"ElementaryTypeName","src":"13107:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4361,"initialValue":{"arguments":[{"id":4356,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"13143:6:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4357,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"13151:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4358,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"13154:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4359,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"13157:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4355,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"13133:9:17","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13133:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13107:52:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"recoveredSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"13173:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13200:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13192:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4363,"name":"address","nodeType":"ElementaryTypeName","src":"13192:7:17","typeDescriptions":{}}},"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13192:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13173:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4368,"name":"recoveredSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"13206:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4369,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"13225:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13206:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13173:58:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4377,"nodeType":"IfStatement","src":"13169:101:17","trueBody":{"id":4376,"nodeType":"Block","src":"13233:37:17","statements":[{"expression":{"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4372,"name":"valid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"13247:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13255:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13247:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4375,"nodeType":"ExpressionStatement","src":"13247:12:17"}]}}]},"documentation":{"id":4338,"nodeType":"StructuredDocumentation","src":"12709:223:17","text":" @notice Verify signature of digest\n @param signer Address of expected signer\n @param digest Signature digest\n @param v v parameter\n @param r r parameter\n @param s s parameter"},"id":4379,"implemented":true,"kind":"function","modifiers":[],"name":"_verify","nameLocation":"12946:7:17","nodeType":"FunctionDefinition","parameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4340,"mutability":"mutable","name":"signer","nameLocation":"12971:6:17","nodeType":"VariableDeclaration","scope":4379,"src":"12963:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4339,"name":"address","nodeType":"ElementaryTypeName","src":"12963:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4342,"mutability":"mutable","name":"digest","nameLocation":"12995:6:17","nodeType":"VariableDeclaration","scope":4379,"src":"12987:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12987:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4344,"mutability":"mutable","name":"v","nameLocation":"13017:1:17","nodeType":"VariableDeclaration","scope":4379,"src":"13011:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4343,"name":"uint8","nodeType":"ElementaryTypeName","src":"13011:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4346,"mutability":"mutable","name":"r","nameLocation":"13036:1:17","nodeType":"VariableDeclaration","scope":4379,"src":"13028:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13028:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4348,"mutability":"mutable","name":"s","nameLocation":"13055:1:17","nodeType":"VariableDeclaration","scope":4379,"src":"13047:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13047:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12953:109:17"},"returnParameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"valid","nameLocation":"13090:5:17","nodeType":"VariableDeclaration","scope":4379,"src":"13085:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4350,"name":"bool","nodeType":"ElementaryTypeName","src":"13085:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13084:12:17"},"scope":4384,"src":"12937:339:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"constant":false,"id":4383,"mutability":"mutable","name":"__gap","nameLocation":"13302:5:17","nodeType":"VariableDeclaration","scope":4384,"src":"13282:25:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage","typeString":"uint256[47]"},"typeName":{"baseType":{"id":4380,"name":"uint256","nodeType":"ElementaryTypeName","src":"13282:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4382,"length":{"hexValue":"3437","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13290:2:17","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"nodeType":"ArrayTypeName","src":"13282:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage_ptr","typeString":"uint256[47]"}},"visibility":"private"}],"scope":4385,"src":"275:13035:17","usedErrors":[6408,6410,6412,6414,6416]}],"src":"32:13279:17"}},"contracts/Validation.sol":{"id":18,"ast":{"absolutePath":"contracts/Validation.sol","exportedSymbols":{"AssetType":[7015],"Exchange":[7031],"FeeRate":[7142],"Fees":[7137],"IValidation":[6501],"Listing":[7040],"MerkleProof":[2201],"Order":[7064],"OrderType":[7019],"Signatures":[4384],"Taker":[7045],"Validation":[4962]},"id":4963,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4386,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":4388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4963,"sourceUnit":2202,"src":"57:89:18","symbolAliases":[{"foreign":{"id":4387,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"66:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/Signatures.sol","file":"./Signatures.sol","id":4390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4963,"sourceUnit":4385,"src":"148:46:18","symbolAliases":[{"foreign":{"id":4389,"name":"Signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"157:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/lib/Structs.sol","file":"./lib/Structs.sol","id":4399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4963,"sourceUnit":7150,"src":"195:105:18","symbolAliases":[{"foreign":{"id":4391,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"204:9:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4392,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"215:5:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4393,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"222:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4394,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"232:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4395,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"241:9:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4396,"name":"FeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"252:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4397,"name":"Fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"261:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4398,"name":"Taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"267:5:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IValidation.sol","file":"./interfaces/IValidation.sol","id":4401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4963,"sourceUnit":6502,"src":"301:59:18","symbolAliases":[{"foreign":{"id":4400,"name":"IValidation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"310:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4402,"name":"IValidation","nameLocations":["394:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":6501,"src":"394:11:18"},"id":4403,"nodeType":"InheritanceSpecifier","src":"394:11:18"},{"baseName":{"id":4404,"name":"Signatures","nameLocations":["407:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":4384,"src":"407:10:18"},"id":4405,"nodeType":"InheritanceSpecifier","src":"407:10:18"}],"canonicalName":"Validation","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4962,"linearizedBaseContracts":[4962,4384,6478,6501],"name":"Validation","nameLocation":"380:10:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4408,"mutability":"constant","name":"_BASIS_POINTS","nameLocation":"450:13:18","nodeType":"VariableDeclaration","scope":4962,"src":"424:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4406,"name":"uint256","nodeType":"ElementaryTypeName","src":"424:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31305f303030","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"466:6:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10_000"},"visibility":"internal"},{"constant":true,"id":4411,"mutability":"constant","name":"_MAX_PROTOCOL_FEE_RATE","nameLocation":"504:22:18","nodeType":"VariableDeclaration","scope":4962,"src":"478:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4409,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353030","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"529:3:18","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"internal"},{"baseFunctions":[6489],"constant":false,"functionSelector":"b0e21e8a","id":4414,"mutability":"mutable","name":"protocolFee","nameLocation":"554:11:18","nodeType":"VariableDeclaration","scope":4962,"src":"539:26:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate"},"typeName":{"id":4413,"nodeType":"UserDefinedTypeName","pathNode":{"id":4412,"name":"FeeRate","nameLocations":["539:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"539:7:18"},"referencedDeclaration":7142,"src":"539:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"public"},{"baseFunctions":[6500],"constant":false,"functionSelector":"3c2ab6bf","id":4422,"mutability":"mutable","name":"amountTaken","nameLocation":"700:11:18","nodeType":"VariableDeclaration","scope":4962,"src":"625:86:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))"},"typeName":{"id":4421,"keyType":{"id":4415,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"625:67:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))"},"valueType":{"id":4420,"keyType":{"id":4416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"652:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"644:47:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"},"valueType":{"id":4419,"keyType":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"671:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"663:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":4418,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}}},"visibility":"public"},{"body":{"id":4427,"nodeType":"Block","src":"745:2:18","statements":[]},"id":4428,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":4425,"kind":"baseConstructorSpecifier","modifierName":{"id":4424,"name":"Signatures","nameLocations":["732:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":4384,"src":"732:10:18"},"nodeType":"ModifierInvocation","src":"732:12:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4423,"nodeType":"ParameterList","parameters":[],"src":"729:2:18"},"returnParameters":{"id":4426,"nodeType":"ParameterList","parameters":[],"src":"745:0:18"},"scope":4962,"src":"718:29:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4444,"nodeType":"Block","src":"959:64:18","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4437,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"977:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"983:14:18","memberName":"expirationTime","nodeType":"MemberAccess","referencedDeclaration":7055,"src":"977:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4439,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1000:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1006:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"1000:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"977:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"976:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4436,"id":4443,"nodeType":"Return","src":"969:47:18"}]},"documentation":{"id":4429,"nodeType":"StructuredDocumentation","src":"753:129:18","text":" @notice Check if an order has expired\n @param order Order to check liveness\n @return Order is live"},"id":4445,"implemented":true,"kind":"function","modifiers":[],"name":"_checkLiveness","nameLocation":"896:14:18","nodeType":"FunctionDefinition","parameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"order","nameLocation":"924:5:18","nodeType":"VariableDeclaration","scope":4445,"src":"911:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":4431,"nodeType":"UserDefinedTypeName","pathNode":{"id":4430,"name":"Order","nameLocations":["911:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"911:5:18"},"referencedDeclaration":7064,"src":"911:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"}],"src":"910:20:18"},"returnParameters":{"id":4436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4445,"src":"953:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4434,"name":"bool","nodeType":"ElementaryTypeName","src":"953:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"952:6:18"},"scope":4962,"src":"887:136:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4470,"nodeType":"Block","src":"1337:99:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4457,"name":"makerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"1354:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":4458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1363:4:18","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"1354:13:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"expression":{"id":4459,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"1370:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":4460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1375:8:18","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"1370:13:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":4461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1384:4:18","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"1370:18:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"1354:34:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"expression":{"id":4463,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"1391:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":4464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1396:11:18","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":7133,"src":"1391:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":4465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1408:4:18","memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"1391:21:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"1354:58:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4467,"name":"_BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"1416:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1354:75:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4456,"id":4469,"nodeType":"Return","src":"1347:82:18"}]},"documentation":{"id":4446,"nodeType":"StructuredDocumentation","src":"1029:213:18","text":" @notice Check that the fees to be taken will not overflow the purchase price\n @param makerFee Maker fee amount\n @param fees Protocol and taker fee rates\n @return Fees are valid"},"id":4471,"implemented":true,"kind":"function","modifiers":[],"name":"_checkFee","nameLocation":"1256:9:18","nodeType":"FunctionDefinition","parameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"makerFee","nameLocation":"1281:8:18","nodeType":"VariableDeclaration","scope":4471,"src":"1266:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":4448,"nodeType":"UserDefinedTypeName","pathNode":{"id":4447,"name":"FeeRate","nameLocations":["1266:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"1266:7:18"},"referencedDeclaration":7142,"src":"1266:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":4452,"mutability":"mutable","name":"fees","nameLocation":"1303:4:18","nodeType":"VariableDeclaration","scope":4471,"src":"1291:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":4451,"nodeType":"UserDefinedTypeName","pathNode":{"id":4450,"name":"Fees","nameLocations":["1291:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"1291:4:18"},"referencedDeclaration":7137,"src":"1291:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"}],"src":"1265:43:18"},"returnParameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4471,"src":"1331:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4454,"name":"bool","nodeType":"ElementaryTypeName","src":"1331:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1330:6:18"},"scope":4962,"src":"1247:189:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4555,"nodeType":"Block","src":"1987:443:18","statements":[{"assignments":[4495],"declarations":[{"constant":false,"id":4495,"mutability":"mutable","name":"ordersLength","nameLocation":"2005:12:18","nodeType":"VariableDeclaration","scope":4555,"src":"1997:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4498,"initialValue":{"expression":{"id":4496,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"2020:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2027:6:18","memberName":"length","nodeType":"MemberAccess","src":"2020:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1997:36:18"},{"expression":{"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4499,"name":"validOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"2043:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4503,"name":"ordersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"2068:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2057:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":4500,"name":"bool","nodeType":"ElementaryTypeName","src":"2061:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4501,"nodeType":"ArrayTypeName","src":"2061:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2057:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"src":"2043:38:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4506,"nodeType":"ExpressionStatement","src":"2043:38:18"},{"expression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4507,"name":"pendingAmountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"2091:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4512,"name":"ordersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"2128:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2112:15:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory[] memory)"},"typeName":{"baseType":{"baseType":{"id":4508,"name":"uint256","nodeType":"ElementaryTypeName","src":"2116:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4509,"nodeType":"ArrayTypeName","src":"2116:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":4510,"nodeType":"ArrayTypeName","src":"2116:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2112:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"src":"2091:50:18","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4515,"nodeType":"ExpressionStatement","src":"2091:50:18"},{"body":{"id":4553,"nodeType":"Block","src":"2187:237:18","statements":[{"expression":{"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4522,"name":"pendingAmountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"2201:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4524,"indexExpression":{"id":4523,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"2220:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2201:21:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"baseExpression":{"id":4528,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"2239:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"}},"id":4530,"indexExpression":{"id":4529,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"2246:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2239:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2249:16:18","memberName":"numberOfListings","nodeType":"MemberAccess","referencedDeclaration":7053,"src":"2239:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2225:13:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4525,"name":"uint256","nodeType":"ElementaryTypeName","src":"2229:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4526,"nodeType":"ArrayTypeName","src":"2229:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"2201:65:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4534,"nodeType":"ExpressionStatement","src":"2201:65:18"},{"expression":{"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4535,"name":"validOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"2280:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4537,"indexExpression":{"id":4536,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"2292:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2280:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":4539,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"2312:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"}},"id":4541,"indexExpression":{"id":4540,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"2319:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2312:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"id":4542,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"2323:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":4543,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"2334:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4544,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"2346:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},{"id":4545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"2352:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4538,"name":"_validateOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"2297:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_bytes_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct Order memory,enum OrderType,bytes memory,struct Fees memory,uint256) view returns (bool)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2297:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2280:74:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4548,"nodeType":"ExpressionStatement","src":"2280:74:18"},{"id":4552,"nodeType":"UncheckedBlock","src":"2368:46:18","statements":[{"expression":{"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2396:3:18","subExpression":{"id":4549,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"2398:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4551,"nodeType":"ExpressionStatement","src":"2396:3:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"2167:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4520,"name":"ordersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"2171:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2167:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4554,"initializationExpression":{"assignments":[4517],"declarations":[{"constant":false,"id":4517,"mutability":"mutable","name":"i","nameLocation":"2164:1:18","nodeType":"VariableDeclaration","scope":4554,"src":"2156:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4516,"name":"uint256","nodeType":"ElementaryTypeName","src":"2156:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4518,"nodeType":"VariableDeclarationStatement","src":"2156:9:18"},"nodeType":"ForStatement","src":"2151:273:18"}]},"documentation":{"id":4472,"nodeType":"StructuredDocumentation","src":"1442:301:18","text":" @notice Validate a list of orders and prepare arrays for recording pending fulfillments\n @param orders List of orders\n @param orderType Order type for all orders\n @param signatures Bytes array of the order signatures\n @param fees Protocol and taker fee rates"},"id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOrders","nameLocation":"1757:15:18","nodeType":"FunctionDefinition","parameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"orders","nameLocation":"1797:6:18","nodeType":"VariableDeclaration","scope":4556,"src":"1782:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order[]"},"typeName":{"baseType":{"id":4474,"nodeType":"UserDefinedTypeName","pathNode":{"id":4473,"name":"Order","nameLocations":["1782:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"1782:5:18"},"referencedDeclaration":7064,"src":"1782:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"id":4475,"nodeType":"ArrayTypeName","src":"1782:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_storage_$dyn_storage_ptr","typeString":"struct Order[]"}},"visibility":"internal"},{"constant":false,"id":4479,"mutability":"mutable","name":"orderType","nameLocation":"1823:9:18","nodeType":"VariableDeclaration","scope":4556,"src":"1813:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":4478,"nodeType":"UserDefinedTypeName","pathNode":{"id":4477,"name":"OrderType","nameLocations":["1813:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"1813:9:18"},"referencedDeclaration":7019,"src":"1813:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":4481,"mutability":"mutable","name":"signatures","nameLocation":"1855:10:18","nodeType":"VariableDeclaration","scope":4556,"src":"1842:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4480,"name":"bytes","nodeType":"ElementaryTypeName","src":"1842:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4484,"mutability":"mutable","name":"fees","nameLocation":"1887:4:18","nodeType":"VariableDeclaration","scope":4556,"src":"1875:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":4483,"nodeType":"UserDefinedTypeName","pathNode":{"id":4482,"name":"Fees","nameLocations":["1875:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"1875:4:18"},"referencedDeclaration":7137,"src":"1875:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"}],"src":"1772:125:18"},"returnParameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"validOrders","nameLocation":"1935:11:18","nodeType":"VariableDeclaration","scope":4556,"src":"1921:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4486,"name":"bool","nodeType":"ElementaryTypeName","src":"1921:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4487,"nodeType":"ArrayTypeName","src":"1921:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4492,"mutability":"mutable","name":"pendingAmountTaken","nameLocation":"1967:18:18","nodeType":"VariableDeclaration","scope":4556,"src":"1948:37:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":4489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1948:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4490,"nodeType":"ArrayTypeName","src":"1948:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":4491,"nodeType":"ArrayTypeName","src":"1948:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"1920:66:18"},"scope":4962,"src":"1748:682:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4609,"nodeType":"Block","src":"2965:434:18","statements":[{"assignments":[4576],"declarations":[{"constant":false,"id":4576,"mutability":"mutable","name":"orderHash","nameLocation":"2983:9:18","nodeType":"VariableDeclaration","scope":4609,"src":"2975:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2975:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4581,"initialValue":{"arguments":[{"id":4578,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"3005:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"id":4579,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"3012:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}],"id":4577,"name":"hashOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"2995:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$returns$_t_bytes32_$","typeString":"function (struct Order memory,enum OrderType) view returns (bytes32)"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2975:47:18"},{"expression":{"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4582,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"3128:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3134:4:18","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"3128:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4587,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"3149:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3141:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4585,"name":"uint256","nodeType":"ElementaryTypeName","src":"3141:7:18","typeDescriptions":{}}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3141:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3128:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4590,"nodeType":"ExpressionStatement","src":"3128:31:18"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4592,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"3211:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3217:6:18","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"3211:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4594,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"3237:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4595,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"3260:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4596,"name":"signatureIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"3284:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4591,"name":"_verifyAuthorization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"3177:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory,uint256) view returns (bool)"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3177:131:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":4599,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"3339:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}],"id":4598,"name":"_checkLiveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"3324:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$7064_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Order memory) view returns (bool)"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3324:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3177:168:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"expression":{"id":4603,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"3371:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3377:8:18","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"3371:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"id":4605,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"3387:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":4602,"name":"_checkFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"3361:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_FeeRate_$7142_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$_t_bool_$","typeString":"function (struct FeeRate memory,struct Fees memory) pure returns (bool)"}},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3361:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3177:215:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4574,"id":4608,"nodeType":"Return","src":"3170:222:18"}]},"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"2436:317:18","text":" @notice Validate an order\n @param order Order to validate\n @param orderType Order type\n @param signatures Bytes array of order signatures\n @param fees Protocol and taker fee rates\n @param signatureIndex Index of the order signature\n @return Validity of the order"},"id":4610,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOrder","nameLocation":"2767:14:18","nodeType":"FunctionDefinition","parameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"order","nameLocation":"2804:5:18","nodeType":"VariableDeclaration","scope":4610,"src":"2791:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":4559,"nodeType":"UserDefinedTypeName","pathNode":{"id":4558,"name":"Order","nameLocations":["2791:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"2791:5:18"},"referencedDeclaration":7064,"src":"2791:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":4563,"mutability":"mutable","name":"orderType","nameLocation":"2829:9:18","nodeType":"VariableDeclaration","scope":4610,"src":"2819:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":4562,"nodeType":"UserDefinedTypeName","pathNode":{"id":4561,"name":"OrderType","nameLocations":["2819:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"2819:9:18"},"referencedDeclaration":7019,"src":"2819:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":4565,"mutability":"mutable","name":"signatures","nameLocation":"2861:10:18","nodeType":"VariableDeclaration","scope":4610,"src":"2848:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4564,"name":"bytes","nodeType":"ElementaryTypeName","src":"2848:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4568,"mutability":"mutable","name":"fees","nameLocation":"2893:4:18","nodeType":"VariableDeclaration","scope":4610,"src":"2881:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":4567,"nodeType":"UserDefinedTypeName","pathNode":{"id":4566,"name":"Fees","nameLocations":["2881:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"2881:4:18"},"referencedDeclaration":7137,"src":"2881:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"},{"constant":false,"id":4570,"mutability":"mutable","name":"signatureIndex","nameLocation":"2915:14:18","nodeType":"VariableDeclaration","scope":4610,"src":"2907:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2907:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2781:154:18"},"returnParameters":{"id":4574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4610,"src":"2959:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4572,"name":"bool","nodeType":"ElementaryTypeName","src":"2959:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2958:6:18"},"scope":4962,"src":"2758:641:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4685,"nodeType":"Block","src":"3653:566:18","statements":[{"assignments":[4632],"declarations":[{"constant":false,"id":4632,"mutability":"mutable","name":"orderHash","nameLocation":"3671:9:18","nodeType":"VariableDeclaration","scope":4685,"src":"3663:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3663:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4638,"initialValue":{"arguments":[{"id":4634,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"3703:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"id":4635,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"3710:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":4636,"name":"pricePerItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"3721:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4633,"name":"hashOfferCollection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"3683:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct Order memory,enum OrderType,uint256) view returns (bytes32)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3683:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3663:71:18"},{"expression":{"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4639,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"3840:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3846:4:18","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"3840:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4644,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"3861:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3853:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"3853:7:18","typeDescriptions":{}}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3853:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3840:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4647,"nodeType":"ExpressionStatement","src":"3840:31:18"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4649,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"3923:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3929:6:18","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"3923:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4651,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"3949:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4652,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"3972:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3996:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4648,"name":"_verifyAuthorization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"3889:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory,uint256) view returns (bool)"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:118:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":4656,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"4038:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}],"id":4655,"name":"_checkLiveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"4023:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$7064_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Order memory) view returns (bool)"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4023:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3889:155:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"expression":{"id":4660,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"4070:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4076:8:18","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"4070:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"id":4662,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"4086:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":4659,"name":"_checkFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"4060:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_FeeRate_$7142_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$_t_bool_$","typeString":"function (struct FeeRate memory,struct Fees memory) pure returns (bool)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4060:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3889:202:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":4665,"name":"amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"4108:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))"}},"id":4668,"indexExpression":{"expression":{"id":4666,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"4120:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4126:6:18","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"4120:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4108:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":4674,"indexExpression":{"arguments":[{"expression":{"id":4671,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"4142:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4148:4:18","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"4142:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4134:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4134:7:18","typeDescriptions":{}}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4134:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4108:46:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4676,"indexExpression":{"hexValue":"30","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4155:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4108:49:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4677,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"4160:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":4678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4168:6:18","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7037,"src":"4160:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4108:66:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4680,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"4190:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4196:16:18","memberName":"numberOfListings","nodeType":"MemberAccess","referencedDeclaration":7053,"src":"4190:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4108:104:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3889:323:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4630,"id":4684,"nodeType":"Return","src":"3882:330:18"}]},"id":4686,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOfferCollection","nameLocation":"3415:24:18","nodeType":"FunctionDefinition","parameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"mutability":"mutable","name":"order","nameLocation":"3462:5:18","nodeType":"VariableDeclaration","scope":4686,"src":"3449:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":4612,"nodeType":"UserDefinedTypeName","pathNode":{"id":4611,"name":"Order","nameLocations":["3449:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"3449:5:18"},"referencedDeclaration":7064,"src":"3449:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":4616,"mutability":"mutable","name":"orderType","nameLocation":"3487:9:18","nodeType":"VariableDeclaration","scope":4686,"src":"3477:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":4615,"nodeType":"UserDefinedTypeName","pathNode":{"id":4614,"name":"OrderType","nameLocations":["3477:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"3477:9:18"},"referencedDeclaration":7019,"src":"3477:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":4618,"mutability":"mutable","name":"pricePerItem","nameLocation":"3514:12:18","nodeType":"VariableDeclaration","scope":4686,"src":"3506:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4617,"name":"uint256","nodeType":"ElementaryTypeName","src":"3506:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4621,"mutability":"mutable","name":"listing","nameLocation":"3551:7:18","nodeType":"VariableDeclaration","scope":4686,"src":"3536:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing"},"typeName":{"id":4620,"nodeType":"UserDefinedTypeName","pathNode":{"id":4619,"name":"Listing","nameLocations":["3536:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"3536:7:18"},"referencedDeclaration":7040,"src":"3536:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"},{"constant":false,"id":4623,"mutability":"mutable","name":"signatures","nameLocation":"3581:10:18","nodeType":"VariableDeclaration","scope":4686,"src":"3568:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4622,"name":"bytes","nodeType":"ElementaryTypeName","src":"3568:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4626,"mutability":"mutable","name":"fees","nameLocation":"3613:4:18","nodeType":"VariableDeclaration","scope":4686,"src":"3601:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":4625,"nodeType":"UserDefinedTypeName","pathNode":{"id":4624,"name":"Fees","nameLocations":["3601:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"3601:4:18"},"referencedDeclaration":7137,"src":"3601:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"}],"src":"3439:184:18"},"returnParameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4686,"src":"3647:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4628,"name":"bool","nodeType":"ElementaryTypeName","src":"3647:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3646:6:18"},"scope":4962,"src":"3406:813:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4784,"nodeType":"Block","src":"5200:673:18","statements":[{"assignments":[4710],"declarations":[{"constant":false,"id":4710,"mutability":"mutable","name":"listing","nameLocation":"5225:7:18","nodeType":"VariableDeclaration","scope":4784,"src":"5210:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing"},"typeName":{"id":4709,"nodeType":"UserDefinedTypeName","pathNode":{"id":4708,"name":"Listing","nameLocations":["5210:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"5210:7:18"},"referencedDeclaration":7040,"src":"5210:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"}],"id":4713,"initialValue":{"expression":{"id":4711,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"5235:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":4712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5244:7:18","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":7027,"src":"5235:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"nodeType":"VariableDeclarationStatement","src":"5210:41:18"},{"assignments":[4715],"declarations":[{"constant":false,"id":4715,"mutability":"mutable","name":"listingIndex","nameLocation":"5269:12:18","nodeType":"VariableDeclaration","scope":4784,"src":"5261:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"5261:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4718,"initialValue":{"expression":{"id":4716,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"5284:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":4717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5292:5:18","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7033,"src":"5284:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5261:36:18"},{"assignments":[4720],"declarations":[{"constant":false,"id":4720,"mutability":"mutable","name":"amountTaken","nameLocation":"5315:11:18","nodeType":"VariableDeclaration","scope":4784,"src":"5307:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"5307:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4733,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":4721,"name":"amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"5329:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))"}},"id":4724,"indexExpression":{"expression":{"id":4722,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"5341:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5347:6:18","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"5341:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5329:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":4730,"indexExpression":{"arguments":[{"expression":{"id":4727,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"5363:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5369:4:18","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"5363:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5355:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5355:7:18","typeDescriptions":{}}},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5355:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5329:46:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4732,"indexExpression":{"id":4731,"name":"listingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"5376:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5329:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5307:82:18"},{"assignments":[4735],"declarations":[{"constant":false,"id":4735,"mutability":"mutable","name":"pendingAmountTaken","nameLocation":"5407:18:18","nodeType":"VariableDeclaration","scope":4784,"src":"5399:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4734,"name":"uint256","nodeType":"ElementaryTypeName","src":"5399:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4742,"initialValue":{"baseExpression":{"baseExpression":{"id":4736,"name":"pendingAmountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"5428:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4739,"indexExpression":{"expression":{"id":4737,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"5447:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":4738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5456:5:18","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7021,"src":"5447:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5428:34:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4741,"indexExpression":{"id":4740,"name":"listingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"5463:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5428:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5399:77:18"},{"assignments":[4744],"declarations":[{"constant":false,"id":4744,"mutability":"mutable","name":"takerAmount","nameLocation":"5494:11:18","nodeType":"VariableDeclaration","scope":4784,"src":"5486:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4743,"name":"uint256","nodeType":"ElementaryTypeName","src":"5486:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4748,"initialValue":{"expression":{"expression":{"id":4745,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"5508:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":4746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5517:5:18","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":7030,"src":"5508:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":4747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5523:6:18","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"5508:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5486:43:18"},{"id":4783,"nodeType":"UncheckedBlock","src":"5539:328:18","statements":[{"expression":{"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4749,"name":"validListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"5563:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4750,"name":"validOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"5594:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4753,"indexExpression":{"expression":{"id":4751,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"5606:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":4752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5615:5:18","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7021,"src":"5606:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5594:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":4755,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"5658:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"id":4756,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"5665:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":4757,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"5676:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}],"id":4754,"name":"_validateListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"5641:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_struct$_Exchange_$7031_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Order memory,enum OrderType,struct Exchange memory) pure returns (bool)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5594:91:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"pendingAmountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"5705:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4761,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"5726:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5705:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5746:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4763,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5741:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5741:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5755:3:18","memberName":"max","nodeType":"MemberAccess","src":"5741:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4768,"name":"amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"5761:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5741:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5705:67:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5594:178:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4772,"name":"amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"5792:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4773,"name":"pendingAmountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"5806:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5792:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4775,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"5827:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5792:46:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4777,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"5842:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":4778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5850:6:18","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7037,"src":"5842:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5792:64:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5594:262:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5563:293:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4782,"nodeType":"ExpressionStatement","src":"5563:293:18"}]}]},"documentation":{"id":4687,"nodeType":"StructuredDocumentation","src":"4225:714:18","text":" @notice Validate a listing (only valid if the order has be prevalidated)\n @dev Validation can be manipulated by inputting the same order twice in the orders array,\n which will effectively bypass the `pendingAmountTaken` check. There is a safety check at the\n execution phase that will revert the transaction if this manipulation overdraws an order.\n @param order Order of the listing\n @param orderType Order type\n @param exchange Exchange containing the listing\n @param validOrders List indicated which orders were validated\n @param pendingAmountTaken Pending fulfillments from the current batch\n @return validListing Validity of the listing"},"id":4785,"implemented":true,"kind":"function","modifiers":[],"name":"_validateListingFromBatch","nameLocation":"4953:25:18","nodeType":"FunctionDefinition","parameters":{"id":4704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"mutability":"mutable","name":"order","nameLocation":"5001:5:18","nodeType":"VariableDeclaration","scope":4785,"src":"4988:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":4689,"nodeType":"UserDefinedTypeName","pathNode":{"id":4688,"name":"Order","nameLocations":["4988:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"4988:5:18"},"referencedDeclaration":7064,"src":"4988:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":4693,"mutability":"mutable","name":"orderType","nameLocation":"5026:9:18","nodeType":"VariableDeclaration","scope":4785,"src":"5016:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":4692,"nodeType":"UserDefinedTypeName","pathNode":{"id":4691,"name":"OrderType","nameLocations":["5016:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"5016:9:18"},"referencedDeclaration":7019,"src":"5016:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":4696,"mutability":"mutable","name":"exchange","nameLocation":"5061:8:18","nodeType":"VariableDeclaration","scope":4785,"src":"5045:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange"},"typeName":{"id":4695,"nodeType":"UserDefinedTypeName","pathNode":{"id":4694,"name":"Exchange","nameLocations":["5045:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"5045:8:18"},"referencedDeclaration":7031,"src":"5045:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"visibility":"internal"},{"constant":false,"id":4699,"mutability":"mutable","name":"validOrders","nameLocation":"5093:11:18","nodeType":"VariableDeclaration","scope":4785,"src":"5079:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4697,"name":"bool","nodeType":"ElementaryTypeName","src":"5079:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4698,"nodeType":"ArrayTypeName","src":"5079:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4703,"mutability":"mutable","name":"pendingAmountTaken","nameLocation":"5133:18:18","nodeType":"VariableDeclaration","scope":4785,"src":"5114:37:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":4700,"name":"uint256","nodeType":"ElementaryTypeName","src":"5114:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4701,"nodeType":"ArrayTypeName","src":"5114:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":4702,"nodeType":"ArrayTypeName","src":"5114:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"4978:179:18"},"returnParameters":{"id":4707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4706,"mutability":"mutable","name":"validListing","nameLocation":"5186:12:18","nodeType":"VariableDeclaration","scope":4785,"src":"5181:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4705,"name":"bool","nodeType":"ElementaryTypeName","src":"5181:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5180:19:18"},"scope":4962,"src":"4944:929:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4890,"nodeType":"Block","src":"6328:745:18","statements":[{"assignments":[4802],"declarations":[{"constant":false,"id":4802,"mutability":"mutable","name":"listing","nameLocation":"6353:7:18","nodeType":"VariableDeclaration","scope":4890,"src":"6338:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing"},"typeName":{"id":4801,"nodeType":"UserDefinedTypeName","pathNode":{"id":4800,"name":"Listing","nameLocations":["6338:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"6338:7:18"},"referencedDeclaration":7040,"src":"6338:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"}],"id":4805,"initialValue":{"expression":{"id":4803,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"6363:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":4804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6372:7:18","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":7027,"src":"6363:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"nodeType":"VariableDeclarationStatement","src":"6338:41:18"},{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4806,"name":"validListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"6389:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4809,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"6423:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":4810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6432:5:18","memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":7024,"src":"6423:14:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"expression":{"id":4811,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"6439:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6445:12:18","memberName":"listingsRoot","nodeType":"MemberAccess","referencedDeclaration":7051,"src":"6439:18:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4814,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"6471:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}],"id":4813,"name":"hashListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"6459:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Listing_$7040_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct Listing memory) pure returns (bytes32)"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6459:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4807,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"6404:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$2201_$","typeString":"type(library MerkleProof)"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6416:6:18","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":1697,"src":"6404:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6404:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6389:91:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4818,"nodeType":"ExpressionStatement","src":"6389:91:18"},{"assignments":[4821],"declarations":[{"constant":false,"id":4821,"mutability":"mutable","name":"taker","nameLocation":"6503:5:18","nodeType":"VariableDeclaration","scope":4890,"src":"6490:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker"},"typeName":{"id":4820,"nodeType":"UserDefinedTypeName","pathNode":{"id":4819,"name":"Taker","nameLocations":["6490:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":7045,"src":"6490:5:18"},"referencedDeclaration":7045,"src":"6490:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_storage_ptr","typeString":"struct Taker"}},"visibility":"internal"}],"id":4824,"initialValue":{"expression":{"id":4822,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"6511:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":4823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6520:5:18","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":7030,"src":"6511:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"nodeType":"VariableDeclarationStatement","src":"6490:35:18"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4825,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"6539:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4826,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"6552:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6562:3:18","memberName":"ASK","nodeType":"MemberAccess","referencedDeclaration":7016,"src":"6552:13:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"src":"6539:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4888,"nodeType":"Block","src":"6819:248:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4861,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"6837:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6843:9:18","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":7058,"src":"6837:15:18","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4863,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"6856:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$7015_$","typeString":"type(enum AssetType)"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6866:6:18","memberName":"ERC721","nodeType":"MemberAccess","referencedDeclaration":7013,"src":"6856:16:18","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"}},"src":"6837:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4886,"nodeType":"Block","src":"6961:96:18","statements":[{"expression":{"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4876,"name":"validListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"6979:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4877,"name":"validListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"6994:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4878,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"7010:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":4879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7018:7:18","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7035,"src":"7010:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4880,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"7029:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":4881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7035:7:18","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7042,"src":"7029:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7010:32:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6994:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6979:63:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4885,"nodeType":"ExpressionStatement","src":"6979:63:18"}]},"id":4887,"nodeType":"IfStatement","src":"6833:224:18","trueBody":{"id":4875,"nodeType":"Block","src":"6874:81:18","statements":[{"expression":{"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4866,"name":"validListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"6892:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4867,"name":"validListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"6907:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4868,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"6923:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":4869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6929:6:18","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"6923:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6939:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6923:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6907:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6892:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4874,"nodeType":"ExpressionStatement","src":"6892:48:18"}]}}]},"id":4889,"nodeType":"IfStatement","src":"6535:532:18","trueBody":{"id":4860,"nodeType":"Block","src":"6567:246:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4829,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"6585:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6591:9:18","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":7058,"src":"6585:15:18","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4831,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"6604:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$7015_$","typeString":"type(enum AssetType)"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6614:6:18","memberName":"ERC721","nodeType":"MemberAccess","referencedDeclaration":7013,"src":"6604:16:18","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"}},"src":"6585:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4849,"nodeType":"IfStatement","src":"6581:145:18","trueBody":{"id":4848,"nodeType":"Block","src":"6622:104:18","statements":[{"expression":{"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4834,"name":"validListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"6640:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"validListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"6655:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4836,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"6671:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":4837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6677:6:18","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"6671:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6687:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6671:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6655:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4841,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"6692:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":4842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6700:6:18","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7037,"src":"6692:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6710:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6692:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6655:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6640:71:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4847,"nodeType":"ExpressionStatement","src":"6640:71:18"}]}},{"expression":{"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4850,"name":"validListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"6739:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4851,"name":"validListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"6754:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4852,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"6770:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":4853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6778:7:18","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7035,"src":"6770:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4854,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"6789:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":4855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6795:7:18","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7042,"src":"6789:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6770:32:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6754:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6739:63:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4859,"nodeType":"ExpressionStatement","src":"6739:63:18"}]}}]},"documentation":{"id":4786,"nodeType":"StructuredDocumentation","src":"5879:280:18","text":" @notice Validate a listing and its proposed exchange\n @param order Order of the listing\n @param orderType Order type\n @param exchange Exchange containing the listing\n @return validListing Validity of the listing and its proposed exchange"},"id":4891,"implemented":true,"kind":"function","modifiers":[],"name":"_validateListing","nameLocation":"6173:16:18","nodeType":"FunctionDefinition","parameters":{"id":4796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4789,"mutability":"mutable","name":"order","nameLocation":"6212:5:18","nodeType":"VariableDeclaration","scope":4891,"src":"6199:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":4788,"nodeType":"UserDefinedTypeName","pathNode":{"id":4787,"name":"Order","nameLocations":["6199:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"6199:5:18"},"referencedDeclaration":7064,"src":"6199:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":4792,"mutability":"mutable","name":"orderType","nameLocation":"6237:9:18","nodeType":"VariableDeclaration","scope":4891,"src":"6227:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":4791,"nodeType":"UserDefinedTypeName","pathNode":{"id":4790,"name":"OrderType","nameLocations":["6227:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"6227:9:18"},"referencedDeclaration":7019,"src":"6227:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":4795,"mutability":"mutable","name":"exchange","nameLocation":"6272:8:18","nodeType":"VariableDeclaration","scope":4891,"src":"6256:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange"},"typeName":{"id":4794,"nodeType":"UserDefinedTypeName","pathNode":{"id":4793,"name":"Exchange","nameLocations":["6256:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"6256:8:18"},"referencedDeclaration":7031,"src":"6256:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"visibility":"internal"}],"src":"6189:97:18"},"returnParameters":{"id":4799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4798,"mutability":"mutable","name":"validListing","nameLocation":"6314:12:18","nodeType":"VariableDeclaration","scope":4891,"src":"6309:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4797,"name":"bool","nodeType":"ElementaryTypeName","src":"6309:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6308:19:18"},"scope":4962,"src":"6164:909:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4956,"nodeType":"Block","src":"7679:375:18","statements":[{"assignments":[4913],"declarations":[{"constant":false,"id":4913,"mutability":"mutable","name":"listing","nameLocation":"7704:7:18","nodeType":"VariableDeclaration","scope":4956,"src":"7689:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing"},"typeName":{"id":4912,"nodeType":"UserDefinedTypeName","pathNode":{"id":4911,"name":"Listing","nameLocations":["7689:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"7689:7:18"},"referencedDeclaration":7040,"src":"7689:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"}],"id":4916,"initialValue":{"expression":{"id":4914,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"7714:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":4915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7723:7:18","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":7027,"src":"7714:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"nodeType":"VariableDeclarationStatement","src":"7689:41:18"},{"assignments":[4918],"declarations":[{"constant":false,"id":4918,"mutability":"mutable","name":"listingIndex","nameLocation":"7748:12:18","nodeType":"VariableDeclaration","scope":4956,"src":"7740:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4917,"name":"uint256","nodeType":"ElementaryTypeName","src":"7740:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4921,"initialValue":{"expression":{"id":4919,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7763:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":4920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7771:5:18","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7033,"src":"7763:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7740:36:18"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4923,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"7820:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"id":4924,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"7827:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":4925,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"7838:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4926,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"7849:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},{"hexValue":"30","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7855:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4922,"name":"_validateOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"7805:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_bytes_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct Order memory,enum OrderType,bytes memory,struct Fees memory,uint256) view returns (bool)"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7805:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":4930,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"7890:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"id":4931,"name":"orderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"7897:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":4932,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"7908:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}],"id":4929,"name":"_validateListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"7873:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_struct$_Exchange_$7031_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Order memory,enum OrderType,struct Exchange memory) pure returns (bool)"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7873:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7805:112:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":4935,"name":"amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"7933:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))"}},"id":4938,"indexExpression":{"expression":{"id":4936,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"7945:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7951:6:18","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"7945:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7933:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":4944,"indexExpression":{"arguments":[{"expression":{"id":4941,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"7967:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":4942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7973:4:18","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"7967:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7959:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7959:7:18","typeDescriptions":{}}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7933:46:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4946,"indexExpression":{"id":4945,"name":"listingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"7980:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7933:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"expression":{"id":4947,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"7996:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":4948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8005:5:18","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":7030,"src":"7996:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":4949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8011:6:18","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"7996:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7933:84:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4951,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"8033:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":4952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8041:6:18","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7037,"src":"8033:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7933:114:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7805:242:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4910,"id":4955,"nodeType":"Return","src":"7786:261:18"}]},"documentation":{"id":4892,"nodeType":"StructuredDocumentation","src":"7085:371:18","text":" @notice Validate both the listing and it's parent order (only for single executions)\n @param order Order of the listing\n @param orderType Order type\n @param exchange Exchange containing the listing\n @param signature Order signature\n @param fees Protocol and taker fee rates\n @return Validity of the order and listing"},"id":4957,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOrderAndListing","nameLocation":"7470:24:18","nodeType":"FunctionDefinition","parameters":{"id":4907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"order","nameLocation":"7517:5:18","nodeType":"VariableDeclaration","scope":4957,"src":"7504:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":4894,"nodeType":"UserDefinedTypeName","pathNode":{"id":4893,"name":"Order","nameLocations":["7504:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"7504:5:18"},"referencedDeclaration":7064,"src":"7504:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":4898,"mutability":"mutable","name":"orderType","nameLocation":"7542:9:18","nodeType":"VariableDeclaration","scope":4957,"src":"7532:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":4897,"nodeType":"UserDefinedTypeName","pathNode":{"id":4896,"name":"OrderType","nameLocations":["7532:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"7532:9:18"},"referencedDeclaration":7019,"src":"7532:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":4901,"mutability":"mutable","name":"exchange","nameLocation":"7577:8:18","nodeType":"VariableDeclaration","scope":4957,"src":"7561:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange"},"typeName":{"id":4900,"nodeType":"UserDefinedTypeName","pathNode":{"id":4899,"name":"Exchange","nameLocations":["7561:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"7561:8:18"},"referencedDeclaration":7031,"src":"7561:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"visibility":"internal"},{"constant":false,"id":4903,"mutability":"mutable","name":"signature","nameLocation":"7608:9:18","nodeType":"VariableDeclaration","scope":4957,"src":"7595:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4902,"name":"bytes","nodeType":"ElementaryTypeName","src":"7595:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4906,"mutability":"mutable","name":"fees","nameLocation":"7639:4:18","nodeType":"VariableDeclaration","scope":4957,"src":"7627:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":4905,"nodeType":"UserDefinedTypeName","pathNode":{"id":4904,"name":"Fees","nameLocations":["7627:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"7627:4:18"},"referencedDeclaration":7137,"src":"7627:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"}],"src":"7494:155:18"},"returnParameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4957,"src":"7673:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4908,"name":"bool","nodeType":"ElementaryTypeName","src":"7673:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7672:6:18"},"scope":4962,"src":"7461:593:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":false,"id":4961,"mutability":"mutable","name":"__gap","nameLocation":"8081:5:18","nodeType":"VariableDeclaration","scope":4962,"src":"8061:25:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"8061:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4960,"length":{"hexValue":"3439","id":4959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8069:2:18","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"8061:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":4963,"src":"362:7727:18","usedErrors":[6408,6410,6412,6414,6416]}],"src":"32:8058:18"}},"contracts/ZeZuExchange.sol":{"id":19,"ast":{"absolutePath":"contracts/ZeZuExchange.sol","exportedSymbols":{"AssetType":[7015],"AssetType_ERC1155":[6656],"AssetType_ERC721":[6653],"AtomicExecution":[7119],"BidExchange_askIndex_offset":[6818],"BidExchange_maker_offset":[6824],"BidExchange_proof_offset":[6821],"BidExchange_size":[6815],"BidExchange_taker_offset":[6827],"Bytes1_shift":[6638],"Bytes20_shift":[6644],"Bytes4_shift":[6641],"Cancel":[7149],"Delegate_transfer_calldata_offset":[6770],"Delegate_transfer_selector":[6767],"ERC1155_safeTransferFrom_amount_offset":[6758],"ERC1155_safeTransferFrom_data_offset":[6764],"ERC1155_safeTransferFrom_data_pointer_offset":[6761],"ERC1155_safeTransferFrom_from_offset":[6749],"ERC1155_safeTransferFrom_id_offset":[6755],"ERC1155_safeTransferFrom_selector":[6695],"ERC1155_safeTransferFrom_size":[6704],"ERC1155_safeTransferFrom_to_offset":[6752],"ERC20_transferFrom_amount_offset":[6737],"ERC20_transferFrom_from_offset":[6731],"ERC20_transferFrom_selector":[6689],"ERC20_transferFrom_size":[6698],"ERC20_transferFrom_to_offset":[6734],"ERC721_safeTransferFrom_from_offset":[6740],"ERC721_safeTransferFrom_id_offset":[6746],"ERC721_safeTransferFrom_selector":[6692],"ERC721_safeTransferFrom_size":[6701],"ERC721_safeTransferFrom_to_offset":[6743],"Exchange":[7031],"Exchange_askIndex_offset":[6803],"Exchange_maker_offset":[6809],"Exchange_proof_offset":[6806],"Exchange_size":[6800],"Exchange_taker_offset":[6812],"ExecutionBatch_base_size":[6890],"ExecutionBatch_calldata_offset":[6887],"ExecutionBatch_length_offset":[6902],"ExecutionBatch_orderType_offset":[6896],"ExecutionBatch_selector_offset":[6884],"ExecutionBatch_taker_offset":[6893],"ExecutionBatch_transfers_offset":[6905],"ExecutionBatch_transfers_pointer_offset":[6899],"Executor":[3725],"FeeRate":[7142],"Fees":[7137],"FungibleTransfers":[7103],"IZeZuExchange":[6633],"Listing":[7040],"Listing_amount_offset":[6839],"Listing_index_offset":[6833],"Listing_price_offset":[6842],"Listing_size":[6830],"Listing_tokenId_offset":[6836],"Memory_pointer":[6650],"One_word":[6647],"OracleSignatures_blockNumber_offset":[6716],"OracleSignatures_oracle_offset":[6719],"OracleSignatures_s_offset":[6710],"OracleSignatures_size":[6707],"OracleSignatures_v_offset":[6713],"Order":[7064],"OrderType":[7019],"OrderType_ASK":[6659],"OrderType_BID":[6662],"Order_assetType_offset":[6791],"Order_collection_offset":[6779],"Order_expirationTime_offset":[6788],"Order_listingsRoot_offset":[6782],"Order_makerFee_offset":[6794],"Order_numberOfListings_offset":[6785],"Order_salt_offset":[6797],"Order_size":[6773],"Order_trader_offset":[6776],"Pool_deposit_selector":[6680],"Pool_deposit_size":[6686],"Pool_deposit_user_offset":[6683],"Pool_withdrawFrom_amount_offset":[6674],"Pool_withdrawFrom_from_offset":[6668],"Pool_withdrawFrom_selector":[6665],"Pool_withdrawFrom_size":[6677],"Pool_withdrawFrom_to_offset":[6671],"ReentrancyGuard":[1211],"Signatures_s_offset":[6725],"Signatures_size":[6722],"Signatures_v_offset":[6728],"StateUpdate":[7130],"StateUpdate_leaf_offset":[6860],"StateUpdate_salt_offset":[6857],"StateUpdate_size":[6854],"StateUpdate_value_offset":[6863],"TakeAsk":[6960],"TakeAskSingle":[6974],"TakeBid":[6988],"TakeBidSingle":[7012],"TakeCollectionOffer":[7000],"Taker_amount_offset":[6851],"Taker_size":[6845],"Taker_tokenId_offset":[6848],"Transfer":[7076],"Transfer_amount_offset":[6875],"Transfer_assetType_offset":[6881],"Transfer_collection_offset":[6878],"Transfer_id_offset":[6872],"Transfer_size":[6866],"Transfer_trader_offset":[6869],"ZeZuExchange":[6290]},"id":6291,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4964,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:19"},{"absolutePath":"contracts/Executor.sol","file":"./Executor.sol","id":4966,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6291,"sourceUnit":3726,"src":"277:40:19","symbolAliases":[{"foreign":{"id":4965,"name":"Executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"285:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/lib/Constants.sol","file":"./lib/Constants.sol","id":4967,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6291,"sourceUnit":6906,"src":"318:29:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/Structs.sol","file":"./lib/Structs.sol","id":4985,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6291,"sourceUnit":7150,"src":"348:232:19","symbolAliases":[{"foreign":{"id":4968,"name":"TakeAsk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"356:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4969,"name":"TakeBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"365:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4970,"name":"TakeAskSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"374:13:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4971,"name":"TakeBidSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"389:13:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4972,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"404:5:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4973,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"411:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4974,"name":"Fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"421:4:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4975,"name":"FeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"427:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4976,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"436:9:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4977,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"447:9:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4978,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"458:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4979,"name":"FungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"468:17:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4980,"name":"StateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"487:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4981,"name":"AtomicExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"500:15:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4982,"name":"Cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"517:6:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4983,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"525:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4984,"name":"TakeCollectionOffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"534:19:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IZeZuExchange.sol","file":"./interfaces/IZeZuExchange.sol","id":4987,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6291,"sourceUnit":6634,"src":"581:61:19","symbolAliases":[{"foreign":{"id":4986,"name":"IZeZuExchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6633,"src":"589:13:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":4988,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6291,"sourceUnit":1212,"src":"727:62:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4989,"name":"IZeZuExchange","nameLocations":["816:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":6633,"src":"816:13:19"},"id":4990,"nodeType":"InheritanceSpecifier","src":"816:13:19"},{"baseName":{"id":4991,"name":"Executor","nameLocations":["831:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3725,"src":"831:8:19"},"id":4992,"nodeType":"InheritanceSpecifier","src":"831:8:19"},{"baseName":{"id":4993,"name":"ReentrancyGuard","nameLocations":["841:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":1211,"src":"841:15:19"},"id":4994,"nodeType":"InheritanceSpecifier","src":"841:15:19"}],"canonicalName":"ZeZuExchange","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6290,"linearizedBaseContracts":[6290,1211,3725,4962,4384,6478,6501,6396,6633],"name":"ZeZuExchange","nameLocation":"800:12:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"0c340a24","id":4996,"mutability":"mutable","name":"governor","nameLocation":"878:8:19","nodeType":"VariableDeclaration","scope":6290,"src":"863:23:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4995,"name":"address","nodeType":"ElementaryTypeName","src":"863:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":5012,"nodeType":"Block","src":"1137:73:19","statements":[{"expression":{"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5007,"name":"governor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"1147:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5008,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1158:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1162:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1158:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1147:21:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5011,"nodeType":"ExpressionStatement","src":"1147:21:19"}]},"id":5013,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5003,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"1117:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5004,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"1127:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5005,"kind":"baseConstructorSpecifier","modifierName":{"id":5002,"name":"Executor","nameLocations":["1108:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3725,"src":"1108:8:19"},"nodeType":"ModifierInvocation","src":"1108:24:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"delegate","nameLocation":"1038:8:19","nodeType":"VariableDeclaration","scope":5013,"src":"1030:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4997,"name":"address","nodeType":"ElementaryTypeName","src":"1030:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5000,"mutability":"mutable","name":"pool","nameLocation":"1064:4:19","nodeType":"VariableDeclaration","scope":5013,"src":"1056:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4999,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1020:54:19"},"returnParameters":{"id":5006,"nodeType":"ParameterList","parameters":[],"src":"1137:0:19"},"scope":6290,"src":"1009:201:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5025,"nodeType":"Block","src":"1427:101:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5015,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1441:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1445:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1441:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5017,"name":"governor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"1455:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1441:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5023,"nodeType":"IfStatement","src":"1437:74:19","trueBody":{"id":5022,"nodeType":"Block","src":"1465:46:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5019,"name":"Unauthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"1486:12:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5021,"nodeType":"RevertStatement","src":"1479:21:19"}]}},{"id":5024,"nodeType":"PlaceholderStatement","src":"1520:1:19"}]},"id":5026,"name":"onlyGovernor","nameLocation":"1412:12:19","nodeType":"ModifierDefinition","parameters":{"id":5014,"nodeType":"ParameterList","parameters":[],"src":"1424:2:19"},"src":"1403:125:19","virtual":false,"visibility":"internal"},{"baseFunctions":[6571],"body":{"id":5056,"nodeType":"Block","src":"1815:197:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5036,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"1829:4:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5037,"name":"_MAX_PROTOCOL_FEE_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"1836:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1829:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5043,"nodeType":"IfStatement","src":"1825:87:19","trueBody":{"id":5042,"nodeType":"Block","src":"1860:52:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5039,"name":"ProtocolFeeTooHigh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"1881:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5041,"nodeType":"RevertStatement","src":"1874:27:19"}]}},{"expression":{"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5044,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"1921:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5046,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"1943:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5047,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"1954:4:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":5045,"name":"FeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"1935:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FeeRate_$7142_storage_ptr_$","typeString":"type(struct FeeRate storage pointer)"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"src":"1921:38:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate storage ref"}},"id":5050,"nodeType":"ExpressionStatement","src":"1921:38:19"},{"eventCall":{"arguments":[{"id":5052,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"1989:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5053,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"2000:4:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":5051,"name":"NewProtocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"1974:14:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint16_$returns$__$","typeString":"function (address,uint16)"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5055,"nodeType":"EmitStatement","src":"1969:36:19"}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"1534:176:19","text":" @notice Governor only function to set the protocol fee rate and recipient\n @param recipient Protocol fee recipient\n @param rate Protocol fee rate"},"functionSelector":"3a16b768","id":5057,"implemented":true,"kind":"function","modifiers":[{"id":5034,"kind":"modifierInvocation","modifierName":{"id":5033,"name":"onlyGovernor","nameLocations":["1802:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":5026,"src":"1802:12:19"},"nodeType":"ModifierInvocation","src":"1802:12:19"}],"name":"setProtocolFee","nameLocation":"1724:14:19","nodeType":"FunctionDefinition","parameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"recipient","nameLocation":"1756:9:19","nodeType":"VariableDeclaration","scope":5057,"src":"1748:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5028,"name":"address","nodeType":"ElementaryTypeName","src":"1748:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5031,"mutability":"mutable","name":"rate","nameLocation":"1782:4:19","nodeType":"VariableDeclaration","scope":5057,"src":"1775:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5030,"name":"uint16","nodeType":"ElementaryTypeName","src":"1775:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1738:54:19"},"returnParameters":{"id":5035,"nodeType":"ParameterList","parameters":[],"src":"1815:0:19"},"scope":6290,"src":"1715:297:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6576],"body":{"id":5079,"nodeType":"Block","src":"2205:132:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"governor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"2223:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5065,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2235:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2235:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204f776e6572","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2247:15:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_0adaaa7734adb8be286395d1b1d8f51c494cd563cab95a6d353d380c38ab4885","typeString":"literal_string \"Invalid Owner\""},"value":"Invalid Owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0adaaa7734adb8be286395d1b1d8f51c494cd563cab95a6d353d380c38ab4885","typeString":"literal_string \"Invalid Owner\""}],"id":5063,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2215:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2215:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5070,"nodeType":"ExpressionStatement","src":"2215:48:19"},{"expression":{"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5071,"name":"governor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"2273:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5072,"name":"_governor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"2284:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2273:20:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5074,"nodeType":"ExpressionStatement","src":"2273:20:19"},{"eventCall":{"arguments":[{"id":5076,"name":"_governor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"2320:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5075,"name":"NewGovernor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"2308:11:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5078,"nodeType":"EmitStatement","src":"2303:27:19"}]},"documentation":{"id":5058,"nodeType":"StructuredDocumentation","src":"2018:133:19","text":" @notice Admin only function to set the governor of the exchange\n @param _governor Address of governor to set"},"functionSelector":"c42cf535","id":5080,"implemented":true,"kind":"function","modifiers":[],"name":"setGovernor","nameLocation":"2165:11:19","nodeType":"FunctionDefinition","parameters":{"id":5061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5060,"mutability":"mutable","name":"_governor","nameLocation":"2185:9:19","nodeType":"VariableDeclaration","scope":5080,"src":"2177:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5059,"name":"address","nodeType":"ElementaryTypeName","src":"2177:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2176:19:19"},"returnParameters":{"id":5062,"nodeType":"ParameterList","parameters":[],"src":"2205:0:19"},"scope":6290,"src":"2156:181:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6583],"body":{"id":5137,"nodeType":"Block","src":"3414:461:19","statements":[{"assignments":[5089],"declarations":[{"constant":false,"id":5089,"mutability":"mutable","name":"cancelsLength","nameLocation":"3432:13:19","nodeType":"VariableDeclaration","scope":5137,"src":"3424:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"3424:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5092,"initialValue":{"expression":{"id":5090,"name":"cancels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"3448:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cancel_$7149_memory_ptr_$dyn_memory_ptr","typeString":"struct Cancel memory[] memory"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3456:6:19","memberName":"length","nodeType":"MemberAccess","src":"3448:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3424:38:19"},{"body":{"id":5135,"nodeType":"Block","src":"3509:360:19","statements":[{"assignments":[5101],"declarations":[{"constant":false,"id":5101,"mutability":"mutable","name":"cancel","nameLocation":"3537:6:19","nodeType":"VariableDeclaration","scope":5135,"src":"3523:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cancel_$7149_memory_ptr","typeString":"struct Cancel"},"typeName":{"id":5100,"nodeType":"UserDefinedTypeName","pathNode":{"id":5099,"name":"Cancel","nameLocations":["3523:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":7149,"src":"3523:6:19"},"referencedDeclaration":7149,"src":"3523:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Cancel_$7149_storage_ptr","typeString":"struct Cancel"}},"visibility":"internal"}],"id":5105,"initialValue":{"baseExpression":{"id":5102,"name":"cancels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"3546:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cancel_$7149_memory_ptr_$dyn_memory_ptr","typeString":"struct Cancel memory[] memory"}},"id":5104,"indexExpression":{"id":5103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"3554:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3546:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Cancel_$7149_memory_ptr","typeString":"struct Cancel memory"}},"nodeType":"VariableDeclarationStatement","src":"3523:33:19"},{"expression":{"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5106,"name":"amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"3570:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))"}},"id":5113,"indexExpression":{"expression":{"id":5107,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3582:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3586:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3582:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3570:23:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":5114,"indexExpression":{"expression":{"id":5109,"name":"cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"3594:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Cancel_$7149_memory_ptr","typeString":"struct Cancel memory"}},"id":5110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3601:4:19","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":7144,"src":"3594:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3570:36:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5115,"indexExpression":{"expression":{"id":5111,"name":"cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"3607:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Cancel_$7149_memory_ptr","typeString":"struct Cancel memory"}},"id":5112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3614:5:19","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7146,"src":"3607:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3570:50:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":5116,"name":"cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"3624:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Cancel_$7149_memory_ptr","typeString":"struct Cancel memory"}},"id":5117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3631:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7148,"src":"3624:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3570:67:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5119,"nodeType":"ExpressionStatement","src":"3570:67:19"},{"eventCall":{"arguments":[{"expression":{"id":5121,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3685:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3689:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3685:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5123,"name":"cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"3713:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Cancel_$7149_memory_ptr","typeString":"struct Cancel memory"}},"id":5124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3720:4:19","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":7144,"src":"3713:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5125,"name":"cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"3742:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Cancel_$7149_memory_ptr","typeString":"struct Cancel memory"}},"id":5126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3749:5:19","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7146,"src":"3742:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5127,"name":"cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"3772:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Cancel_$7149_memory_ptr","typeString":"struct Cancel memory"}},"id":5128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3779:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7148,"src":"3772:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5120,"name":"CancelTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"3656:11:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint256,uint256)"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3656:143:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5130,"nodeType":"EmitStatement","src":"3651:148:19"},{"id":5134,"nodeType":"UncheckedBlock","src":"3813:46:19","statements":[{"expression":{"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3841:3:19","subExpression":{"id":5131,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"3843:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5133,"nodeType":"ExpressionStatement","src":"3841:3:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"3488:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5097,"name":"cancelsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"3492:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3488:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5136,"initializationExpression":{"assignments":[5094],"declarations":[{"constant":false,"id":5094,"mutability":"mutable","name":"i","nameLocation":"3485:1:19","nodeType":"VariableDeclaration","scope":5136,"src":"3477:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3477:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5095,"nodeType":"VariableDeclarationStatement","src":"3477:9:19"},"nodeType":"ForStatement","src":"3472:397:19"}]},"documentation":{"id":5081,"nodeType":"StructuredDocumentation","src":"3231:122:19","text":" @notice Cancel listings by recording their fulfillment\n @param cancels List of cancels to execute"},"functionSelector":"3f8fc233","id":5138,"implemented":true,"kind":"function","modifiers":[],"name":"cancelTrades","nameLocation":"3367:12:19","nodeType":"FunctionDefinition","parameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"cancels","nameLocation":"3396:7:19","nodeType":"VariableDeclaration","scope":5138,"src":"3380:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cancel_$7149_memory_ptr_$dyn_memory_ptr","typeString":"struct Cancel[]"},"typeName":{"baseType":{"id":5083,"nodeType":"UserDefinedTypeName","pathNode":{"id":5082,"name":"Cancel","nameLocations":["3380:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":7149,"src":"3380:6:19"},"referencedDeclaration":7149,"src":"3380:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Cancel_$7149_storage_ptr","typeString":"struct Cancel"}},"id":5084,"nodeType":"ArrayTypeName","src":"3380:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cancel_$7149_storage_$dyn_storage_ptr","typeString":"struct Cancel[]"}},"visibility":"internal"}],"src":"3379:25:19"},"returnParameters":{"id":5087,"nodeType":"ParameterList","parameters":[],"src":"3414:0:19"},"scope":6290,"src":"3358:517:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6586],"body":{"id":5152,"nodeType":"Block","src":"3995:72:19","statements":[{"eventCall":{"arguments":[{"expression":{"id":5143,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4027:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4031:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4027:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4039:20:19","subExpression":{"baseExpression":{"id":5145,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4041:6:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5148,"indexExpression":{"expression":{"id":5146,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4048:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4052:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4048:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4041:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5142,"name":"NonceIncremented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"4010:16:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4010:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5151,"nodeType":"EmitStatement","src":"4005:55:19"}]},"documentation":{"id":5139,"nodeType":"StructuredDocumentation","src":"3881:74:19","text":" @notice Cancels all orders by incrementing caller nonce"},"functionSelector":"627cdcb9","id":5153,"implemented":true,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"3969:14:19","nodeType":"FunctionDefinition","parameters":{"id":5140,"nodeType":"ParameterList","parameters":[],"src":"3983:2:19"},"returnParameters":{"id":5141,"nodeType":"ParameterList","parameters":[],"src":"3995:0:19"},"scope":6290,"src":"3960:107:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6592],"body":{"id":5175,"nodeType":"Block","src":"4484:187:19","statements":[{"expression":{"arguments":[{"expression":{"id":5163,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"4516:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_memory_ptr","typeString":"struct TakeAsk memory"}},"id":5164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4523:6:19","memberName":"orders","nodeType":"MemberAccess","referencedDeclaration":6948,"src":"4516:13:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"}},{"expression":{"id":5165,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"4543:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_memory_ptr","typeString":"struct TakeAsk memory"}},"id":5166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4550:9:19","memberName":"exchanges","nodeType":"MemberAccess","referencedDeclaration":6952,"src":"4543:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange memory[] memory"}},{"expression":{"id":5167,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"4573:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_memory_ptr","typeString":"struct TakeAsk memory"}},"id":5168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4580:8:19","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":6955,"src":"4573:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"expression":{"id":5169,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"4602:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_memory_ptr","typeString":"struct TakeAsk memory"}},"id":5170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4609:10:19","memberName":"signatures","nodeType":"MemberAccess","referencedDeclaration":6957,"src":"4602:17:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":5171,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"4633:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_memory_ptr","typeString":"struct TakeAsk memory"}},"id":5172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4640:14:19","memberName":"tokenRecipient","nodeType":"MemberAccess","referencedDeclaration":6959,"src":"4633:21:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"},{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange memory[] memory"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5162,"name":"_takeAsk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"4494:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Exchange_$7031_memory_ptr_$dyn_memory_ptr_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (struct Order memory[] memory,struct Exchange memory[] memory,struct FeeRate memory,bytes memory,address)"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4494:170:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5174,"nodeType":"ExpressionStatement","src":"4494:170:19"}]},"documentation":{"id":5154,"nodeType":"StructuredDocumentation","src":"4257:154:19","text":" @notice Wrapper of _takeAsk that verifies an oracle signature of the calldata before executing\n @param inputs Inputs for _takeAsk"},"functionSelector":"1ec1fd88","id":5176,"implemented":true,"kind":"function","modifiers":[{"id":5160,"kind":"modifierInvocation","modifierName":{"id":5159,"name":"nonReentrant","nameLocations":["4471:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":1176,"src":"4471:12:19"},"nodeType":"ModifierInvocation","src":"4471:12:19"}],"name":"takeAsk","nameLocation":"4425:7:19","nodeType":"FunctionDefinition","parameters":{"id":5158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5157,"mutability":"mutable","name":"inputs","nameLocation":"4448:6:19","nodeType":"VariableDeclaration","scope":5176,"src":"4433:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_memory_ptr","typeString":"struct TakeAsk"},"typeName":{"id":5156,"nodeType":"UserDefinedTypeName","pathNode":{"id":5155,"name":"TakeAsk","nameLocations":["4433:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":6960,"src":"4433:7:19"},"referencedDeclaration":6960,"src":"4433:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_storage_ptr","typeString":"struct TakeAsk"}},"visibility":"internal"}],"src":"4432:23:19"},"returnParameters":{"id":5161,"nodeType":"ParameterList","parameters":[],"src":"4484:0:19"},"scope":6290,"src":"4416:255:19","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[6598],"body":{"id":5194,"nodeType":"Block","src":"4883:152:19","statements":[{"expression":{"arguments":[{"expression":{"id":5184,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"4915:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBid_$6988_memory_ptr","typeString":"struct TakeBid memory"}},"id":5185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4922:6:19","memberName":"orders","nodeType":"MemberAccess","referencedDeclaration":6978,"src":"4915:13:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"}},{"expression":{"id":5186,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"4942:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBid_$6988_memory_ptr","typeString":"struct TakeBid memory"}},"id":5187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4949:9:19","memberName":"exchanges","nodeType":"MemberAccess","referencedDeclaration":6982,"src":"4942:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange memory[] memory"}},{"expression":{"id":5188,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"4972:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBid_$6988_memory_ptr","typeString":"struct TakeBid memory"}},"id":5189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4979:8:19","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":6985,"src":"4972:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"expression":{"id":5190,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"5001:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBid_$6988_memory_ptr","typeString":"struct TakeBid memory"}},"id":5191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5008:10:19","memberName":"signatures","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"5001:17:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"},{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange memory[] memory"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5183,"name":"_takeBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"4893:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Exchange_$7031_memory_ptr_$dyn_memory_ptr_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct Order memory[] memory,struct Exchange memory[] memory,struct FeeRate memory,bytes memory)"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:135:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5193,"nodeType":"ExpressionStatement","src":"4893:135:19"}]},"documentation":{"id":5177,"nodeType":"StructuredDocumentation","src":"4677:154:19","text":" @notice Wrapper of _takeBid that verifies an oracle signature of the calldata before executing\n @param inputs Inputs for _takeBid"},"functionSelector":"7c7c5507","id":5195,"implemented":true,"kind":"function","modifiers":[],"name":"takeBid","nameLocation":"4845:7:19","nodeType":"FunctionDefinition","parameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5180,"mutability":"mutable","name":"inputs","nameLocation":"4868:6:19","nodeType":"VariableDeclaration","scope":5195,"src":"4853:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBid_$6988_memory_ptr","typeString":"struct TakeBid"},"typeName":{"id":5179,"nodeType":"UserDefinedTypeName","pathNode":{"id":5178,"name":"TakeBid","nameLocations":["4853:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":6988,"src":"4853:7:19"},"referencedDeclaration":6988,"src":"4853:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBid_$6988_storage_ptr","typeString":"struct TakeBid"}},"visibility":"internal"}],"src":"4852:23:19"},"returnParameters":{"id":5182,"nodeType":"ParameterList","parameters":[],"src":"4883:0:19"},"scope":6290,"src":"4836:199:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6604],"body":{"id":5217,"nodeType":"Block","src":"5306:190:19","statements":[{"expression":{"arguments":[{"expression":{"id":5205,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"5344:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_memory_ptr","typeString":"struct TakeAskSingle memory"}},"id":5206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5351:5:19","memberName":"order","nodeType":"MemberAccess","referencedDeclaration":6963,"src":"5344:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":5207,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"5370:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_memory_ptr","typeString":"struct TakeAskSingle memory"}},"id":5208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5377:8:19","memberName":"exchange","nodeType":"MemberAccess","referencedDeclaration":6966,"src":"5370:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},{"expression":{"id":5209,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"5399:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_memory_ptr","typeString":"struct TakeAskSingle memory"}},"id":5210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5406:8:19","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":6969,"src":"5399:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"expression":{"id":5211,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"5428:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_memory_ptr","typeString":"struct TakeAskSingle memory"}},"id":5212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5435:9:19","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":6971,"src":"5428:16:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":5213,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"5458:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_memory_ptr","typeString":"struct TakeAskSingle memory"}},"id":5214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5465:14:19","memberName":"tokenRecipient","nodeType":"MemberAccess","referencedDeclaration":6973,"src":"5458:21:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5204,"name":"_takeAskSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"5316:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Order_$7064_memory_ptr_$_t_struct$_Exchange_$7031_memory_ptr_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (struct Order memory,struct Exchange memory,struct FeeRate memory,bytes memory,address)"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5316:173:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5216,"nodeType":"ExpressionStatement","src":"5316:173:19"}]},"documentation":{"id":5196,"nodeType":"StructuredDocumentation","src":"5041:166:19","text":" @notice Wrapper of _takeAskSingle that verifies an oracle signature of the calldata before executing\n @param inputs Inputs for _takeAskSingle"},"functionSelector":"455fce13","id":5218,"implemented":true,"kind":"function","modifiers":[{"id":5202,"kind":"modifierInvocation","modifierName":{"id":5201,"name":"nonReentrant","nameLocations":["5293:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":1176,"src":"5293:12:19"},"nodeType":"ModifierInvocation","src":"5293:12:19"}],"name":"takeAskSingle","nameLocation":"5221:13:19","nodeType":"FunctionDefinition","parameters":{"id":5200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5199,"mutability":"mutable","name":"inputs","nameLocation":"5265:6:19","nodeType":"VariableDeclaration","scope":5218,"src":"5244:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_memory_ptr","typeString":"struct TakeAskSingle"},"typeName":{"id":5198,"nodeType":"UserDefinedTypeName","pathNode":{"id":5197,"name":"TakeAskSingle","nameLocations":["5244:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":6974,"src":"5244:13:19"},"referencedDeclaration":6974,"src":"5244:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_storage_ptr","typeString":"struct TakeAskSingle"}},"visibility":"internal"}],"src":"5234:43:19"},"returnParameters":{"id":5203,"nodeType":"ParameterList","parameters":[],"src":"5306:0:19"},"scope":6290,"src":"5212:284:19","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[6610],"body":{"id":5236,"nodeType":"Block","src":"5734:155:19","statements":[{"expression":{"arguments":[{"expression":{"id":5226,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"5772:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBidSingle_$7012_memory_ptr","typeString":"struct TakeBidSingle memory"}},"id":5227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5779:5:19","memberName":"order","nodeType":"MemberAccess","referencedDeclaration":7003,"src":"5772:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":5228,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"5798:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBidSingle_$7012_memory_ptr","typeString":"struct TakeBidSingle memory"}},"id":5229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5805:8:19","memberName":"exchange","nodeType":"MemberAccess","referencedDeclaration":7006,"src":"5798:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},{"expression":{"id":5230,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"5827:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBidSingle_$7012_memory_ptr","typeString":"struct TakeBidSingle memory"}},"id":5231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5834:8:19","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":7009,"src":"5827:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"expression":{"id":5232,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"5856:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBidSingle_$7012_memory_ptr","typeString":"struct TakeBidSingle memory"}},"id":5233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5863:9:19","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"5856:16:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5225,"name":"_takeBidSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"5744:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Order_$7064_memory_ptr_$_t_struct$_Exchange_$7031_memory_ptr_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct Order memory,struct Exchange memory,struct FeeRate memory,bytes memory)"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5744:138:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5235,"nodeType":"ExpressionStatement","src":"5744:138:19"}]},"documentation":{"id":5219,"nodeType":"StructuredDocumentation","src":"5502:166:19","text":" @notice Wrapper of _takeBidSingle that verifies an oracle signature of the calldata before executing\n @param inputs Inputs for _takeBidSingle"},"functionSelector":"069827e2","id":5237,"implemented":true,"kind":"function","modifiers":[],"name":"takeBidSingle","nameLocation":"5682:13:19","nodeType":"FunctionDefinition","parameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"inputs","nameLocation":"5717:6:19","nodeType":"VariableDeclaration","scope":5237,"src":"5696:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBidSingle_$7012_memory_ptr","typeString":"struct TakeBidSingle"},"typeName":{"id":5221,"nodeType":"UserDefinedTypeName","pathNode":{"id":5220,"name":"TakeBidSingle","nameLocations":["5696:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":7012,"src":"5696:13:19"},"referencedDeclaration":7012,"src":"5696:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBidSingle_$7012_storage_ptr","typeString":"struct TakeBidSingle"}},"visibility":"internal"}],"src":"5695:29:19"},"returnParameters":{"id":5224,"nodeType":"ParameterList","parameters":[],"src":"5734:0:19"},"scope":6290,"src":"5673:216:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6616],"body":{"id":5254,"nodeType":"Block","src":"5965:156:19","statements":[{"expression":{"arguments":[{"expression":{"id":5244,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"6009:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeCollectionOffer_$7000_memory_ptr","typeString":"struct TakeCollectionOffer memory"}},"id":5245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6015:5:19","memberName":"order","nodeType":"MemberAccess","referencedDeclaration":6991,"src":"6009:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":5246,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"6034:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeCollectionOffer_$7000_memory_ptr","typeString":"struct TakeCollectionOffer memory"}},"id":5247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6040:7:19","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":6994,"src":"6034:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},{"expression":{"id":5248,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"6061:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeCollectionOffer_$7000_memory_ptr","typeString":"struct TakeCollectionOffer memory"}},"id":5249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6067:8:19","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":6997,"src":"6061:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"expression":{"id":5250,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"6089:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeCollectionOffer_$7000_memory_ptr","typeString":"struct TakeCollectionOffer memory"}},"id":5251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6095:9:19","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":6999,"src":"6089:15:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5243,"name":"_takeCollectionOffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"5975:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Order_$7064_memory_ptr_$_t_struct$_Listing_$7040_memory_ptr_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct Order memory,struct Listing memory,struct FeeRate memory,bytes memory)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5975:139:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5253,"nodeType":"ExpressionStatement","src":"5975:139:19"}]},"functionSelector":"6ee45533","id":5255,"implemented":true,"kind":"function","modifiers":[],"name":"takeCollectionOffer","nameLocation":"5904:19:19","nodeType":"FunctionDefinition","parameters":{"id":5241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5240,"mutability":"mutable","name":"input","nameLocation":"5951:5:19","nodeType":"VariableDeclaration","scope":5255,"src":"5924:32:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeCollectionOffer_$7000_memory_ptr","typeString":"struct TakeCollectionOffer"},"typeName":{"id":5239,"nodeType":"UserDefinedTypeName","pathNode":{"id":5238,"name":"TakeCollectionOffer","nameLocations":["5924:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":7000,"src":"5924:19:19"},"referencedDeclaration":7000,"src":"5924:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeCollectionOffer_$7000_storage_ptr","typeString":"struct TakeCollectionOffer"}},"visibility":"internal"}],"src":"5923:34:19"},"returnParameters":{"id":5242,"nodeType":"ParameterList","parameters":[],"src":"5965:0:19"},"scope":6290,"src":"5895:226:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6624],"body":{"id":5274,"nodeType":"Block","src":"6677:96:19","statements":[{"expression":{"arguments":[{"expression":{"id":5265,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6705:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6709:6:19","memberName":"sender","nodeType":"MemberAccess","src":"6705:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5267,"name":"amountToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"6717:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5264,"name":"_withdrawFromPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"6687:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6687:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5269,"nodeType":"ExpressionStatement","src":"6687:47:19"},{"expression":{"arguments":[{"id":5271,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"6759:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_memory_ptr","typeString":"struct TakeAskSingle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_memory_ptr","typeString":"struct TakeAskSingle memory"}],"id":5270,"name":"takeAskSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"6745:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_TakeAskSingle_$6974_memory_ptr_$returns$__$","typeString":"function (struct TakeAskSingle memory)"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6745:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5273,"nodeType":"ExpressionStatement","src":"6745:21:19"}]},"documentation":{"id":5256,"nodeType":"StructuredDocumentation","src":"6314:237:19","text":" @notice Wrapper of takeAskSingle that withdraws ETH from the caller's pool balance prior to executing\n @param inputs Inputs for takeAskSingle\n @param amountToWithdraw Amount of ETH to withdraw from the pool"},"functionSelector":"bcd4f51a","id":5275,"implemented":true,"kind":"function","modifiers":[],"name":"takeAskSinglePool","nameLocation":"6565:17:19","nodeType":"FunctionDefinition","parameters":{"id":5262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"inputs","nameLocation":"6613:6:19","nodeType":"VariableDeclaration","scope":5275,"src":"6592:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_memory_ptr","typeString":"struct TakeAskSingle"},"typeName":{"id":5258,"nodeType":"UserDefinedTypeName","pathNode":{"id":5257,"name":"TakeAskSingle","nameLocations":["6592:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":6974,"src":"6592:13:19"},"referencedDeclaration":6974,"src":"6592:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_storage_ptr","typeString":"struct TakeAskSingle"}},"visibility":"internal"},{"constant":false,"id":5261,"mutability":"mutable","name":"amountToWithdraw","nameLocation":"6637:16:19","nodeType":"VariableDeclaration","scope":5275,"src":"6629:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5260,"name":"uint256","nodeType":"ElementaryTypeName","src":"6629:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6582:77:19"},"returnParameters":{"id":5263,"nodeType":"ParameterList","parameters":[],"src":"6677:0:19"},"scope":6290,"src":"6556:217:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[6632],"body":{"id":5294,"nodeType":"Block","src":"7118:90:19","statements":[{"expression":{"arguments":[{"expression":{"id":5285,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7146:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7150:6:19","memberName":"sender","nodeType":"MemberAccess","src":"7146:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5287,"name":"amountToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"7158:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5284,"name":"_withdrawFromPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"7128:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7128:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5289,"nodeType":"ExpressionStatement","src":"7128:47:19"},{"expression":{"arguments":[{"id":5291,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"7194:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_memory_ptr","typeString":"struct TakeAsk memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TakeAsk_$6960_memory_ptr","typeString":"struct TakeAsk memory"}],"id":5290,"name":"takeAsk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"7186:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_TakeAsk_$6960_memory_ptr_$returns$__$","typeString":"function (struct TakeAsk memory)"}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7186:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5293,"nodeType":"ExpressionStatement","src":"7186:15:19"}]},"documentation":{"id":5276,"nodeType":"StructuredDocumentation","src":"6779:225:19","text":" @notice Wrapper of takeAsk that withdraws ETH from the caller's pool balance prior to executing\n @param inputs Inputs for takeAsk\n @param amountToWithdraw Amount of ETH to withdraw from the pool"},"functionSelector":"46d7dd05","id":5295,"implemented":true,"kind":"function","modifiers":[],"name":"takeAskPool","nameLocation":"7018:11:19","nodeType":"FunctionDefinition","parameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5279,"mutability":"mutable","name":"inputs","nameLocation":"7054:6:19","nodeType":"VariableDeclaration","scope":5295,"src":"7039:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_memory_ptr","typeString":"struct TakeAsk"},"typeName":{"id":5278,"nodeType":"UserDefinedTypeName","pathNode":{"id":5277,"name":"TakeAsk","nameLocations":["7039:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":6960,"src":"7039:7:19"},"referencedDeclaration":6960,"src":"7039:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_storage_ptr","typeString":"struct TakeAsk"}},"visibility":"internal"},{"constant":false,"id":5281,"mutability":"mutable","name":"amountToWithdraw","nameLocation":"7078:16:19","nodeType":"VariableDeclaration","scope":5295,"src":"7070:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5280,"name":"uint256","nodeType":"ElementaryTypeName","src":"7070:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7029:71:19"},"returnParameters":{"id":5283,"nodeType":"ParameterList","parameters":[],"src":"7118:0:19"},"scope":6290,"src":"7009:199:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":5478,"nodeType":"Block","src":"7569:2242:19","statements":[{"assignments":[5311],"declarations":[{"constant":false,"id":5311,"mutability":"mutable","name":"fees","nameLocation":"7591:4:19","nodeType":"VariableDeclaration","scope":5478,"src":"7579:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":5310,"nodeType":"UserDefinedTypeName","pathNode":{"id":5309,"name":"Fees","nameLocations":["7579:4:19"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"7579:4:19"},"referencedDeclaration":7137,"src":"7579:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"}],"id":5316,"initialValue":{"arguments":[{"id":5313,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"7603:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate storage ref"}},{"id":5314,"name":"takerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"7616:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate storage ref"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}],"id":5312,"name":"Fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"7598:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Fees_$7137_storage_ptr_$","typeString":"type(struct Fees storage pointer)"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7598:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"nodeType":"VariableDeclarationStatement","src":"7579:46:19"},{"assignments":[5318],"declarations":[{"constant":false,"id":5318,"mutability":"mutable","name":"takerAmount","nameLocation":"7643:11:19","nodeType":"VariableDeclaration","scope":5478,"src":"7635:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"7635:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5321,"initialValue":{"expression":{"id":5319,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"7657:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":5320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7665:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7037,"src":"7657:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7635:36:19"},{"condition":{"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7760:211:19","subExpression":{"arguments":[{"id":5323,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"7803:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":5324,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"7826:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7836:16:19","memberName":"OFFER_COLLECTION","nodeType":"MemberAccess","referencedDeclaration":7018,"src":"7826:26:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"expression":{"id":5326,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"7870:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":5327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7878:5:19","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":7039,"src":"7870:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5328,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"7901:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},{"id":5329,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"7926:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5330,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"7953:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":5322,"name":"_validateOfferCollection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"7761:24:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_uint256_$_t_struct$_Listing_$7040_memory_ptr_$_t_bytes_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Order memory,enum OrderType,uint256,struct Listing memory,bytes memory,struct Fees memory) view returns (bool)"}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7761:210:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5337,"nodeType":"IfStatement","src":"7743:285:19","trueBody":{"id":5336,"nodeType":"Block","src":"7982:46:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5333,"name":"InvalidOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"8003:12:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5335,"nodeType":"RevertStatement","src":"7996:21:19"}]}},{"assignments":[5339],"declarations":[{"constant":false,"id":5339,"mutability":"mutable","name":"executionBatch","nameLocation":"8120:14:19","nodeType":"VariableDeclaration","scope":5478,"src":"8107:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5338,"name":"bytes","nodeType":"ElementaryTypeName","src":"8107:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5350,"initialValue":{"arguments":[{"id":5341,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"8177:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":5342,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"8196:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8206:3:19","memberName":"BID","nodeType":"MemberAccess","referencedDeclaration":7017,"src":"8196:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"expression":{"id":5344,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"8223:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":5345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8231:7:19","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7035,"src":"8223:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5346,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"8252:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5347,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8277:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8281:6:19","memberName":"sender","nodeType":"MemberAccess","src":"8277:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5340,"name":"_initializeSingleExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"8137:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct Order memory,enum OrderType,uint256,uint256,address) pure returns (bytes memory)"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8137:160:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8107:190:19"},{"id":5370,"nodeType":"Block","src":"8377:257:19","statements":[{"assignments":[5355],"declarations":[{"constant":false,"id":5355,"mutability":"mutable","name":"successfulTransfers","nameLocation":"8405:19:19","nodeType":"VariableDeclaration","scope":5370,"src":"8391:33:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5353,"name":"bool","nodeType":"ElementaryTypeName","src":"8391:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5354,"nodeType":"ArrayTypeName","src":"8391:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":5360,"initialValue":{"arguments":[{"id":5357,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"8473:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"31","id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8505:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5356,"name":"_executeNonfungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"8427:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (bytes memory,uint256) returns (bool[] memory)"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8427:93:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8391:129:19"},{"condition":{"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8538:23:19","subExpression":{"baseExpression":{"id":5361,"name":"successfulTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"8539:19:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5363,"indexExpression":{"hexValue":"30","id":5362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8559:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8539:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5369,"nodeType":"IfStatement","src":"8534:90:19","trueBody":{"id":5368,"nodeType":"Block","src":"8563:61:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5365,"name":"TokenTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"8588:19:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8588:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5367,"nodeType":"RevertStatement","src":"8581:28:19"}]}}]},{"assignments":[5372,5374,5376,5378],"declarations":[{"constant":false,"id":5372,"mutability":"mutable","name":"totalPrice","nameLocation":"8666:10:19","nodeType":"VariableDeclaration","scope":5478,"src":"8658:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5371,"name":"uint256","nodeType":"ElementaryTypeName","src":"8658:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5374,"mutability":"mutable","name":"protocolFeeAmount","nameLocation":"8698:17:19","nodeType":"VariableDeclaration","scope":5478,"src":"8690:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5373,"name":"uint256","nodeType":"ElementaryTypeName","src":"8690:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5376,"mutability":"mutable","name":"makerFeeAmount","nameLocation":"8737:14:19","nodeType":"VariableDeclaration","scope":5478,"src":"8729:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5375,"name":"uint256","nodeType":"ElementaryTypeName","src":"8729:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5378,"mutability":"mutable","name":"takerFeeAmount","nameLocation":"8773:14:19","nodeType":"VariableDeclaration","scope":5478,"src":"8765:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5377,"name":"uint256","nodeType":"ElementaryTypeName","src":"8765:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5387,"initialValue":{"arguments":[{"expression":{"id":5380,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"8813:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":5381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8821:5:19","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":7039,"src":"8813:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5382,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"8828:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5383,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"8841:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8847:8:19","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"8841:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"id":5385,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"8857:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":5379,"name":"_computeFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"8800:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,struct FeeRate memory,struct Fees memory) pure returns (uint256,uint256,uint256,uint256)"}},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8800:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8644:218:19"},{"assignments":[5389],"declarations":[{"constant":false,"id":5389,"mutability":"mutable","name":"trader","nameLocation":"8956:6:19","nodeType":"VariableDeclaration","scope":5478,"src":"8948:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5388,"name":"address","nodeType":"ElementaryTypeName","src":"8948:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5392,"initialValue":{"expression":{"id":5390,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"8965:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8971:6:19","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"8965:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8948:29:19"},{"expression":{"arguments":[{"id":5394,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"9001:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":5395,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"9009:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9015:8:19","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"9009:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":5397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9024:9:19","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"9009:24:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5398,"name":"makerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"9035:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5393,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"8987:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8987:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5400,"nodeType":"ExpressionStatement","src":"8987:63:19"},{"expression":{"arguments":[{"id":5402,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"9074:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":5403,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"9082:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":5404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9087:8:19","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"9082:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":5405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9096:9:19","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"9082:23:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5406,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"9107:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5401,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"9060:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9060:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5408,"nodeType":"ExpressionStatement","src":"9060:62:19"},{"expression":{"arguments":[{"id":5410,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"9146:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":5411,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"9154:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":5412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9159:11:19","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":7133,"src":"9154:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":5413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9171:9:19","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"9154:26:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5414,"name":"protocolFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"9182:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5409,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"9132:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9132:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5416,"nodeType":"ExpressionStatement","src":"9132:68:19"},{"assignments":[5418],"declarations":[{"constant":false,"id":5418,"mutability":"mutable","name":"remaining","nameLocation":"9219:9:19","nodeType":"VariableDeclaration","scope":5478,"src":"9211:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"9211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5420,"initialValue":{"hexValue":"30","id":5419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9231:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9211:21:19"},{"id":5463,"nodeType":"UncheckedBlock","src":"9243:379:19","statements":[{"expression":{"arguments":[{"id":5422,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"9298:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5423,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9322:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9326:6:19","memberName":"sender","nodeType":"MemberAccess","src":"9322:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5425,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"9350:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5426,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"9363:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9350:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5428,"name":"protocolFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"9380:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9350:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5421,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"9267:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9267:144:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5431,"nodeType":"ExpressionStatement","src":"9267:144:19"},{"expression":{"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5432,"name":"amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"9426:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))"}},"id":5440,"indexExpression":{"id":5433,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"9438:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9426:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":5441,"indexExpression":{"arguments":[{"expression":{"id":5436,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"9454:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9460:4:19","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"9454:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9446:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9446:7:19","typeDescriptions":{}}},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9446:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9426:40:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5442,"indexExpression":{"hexValue":"30","id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9467:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9426:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5443,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"9473:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9426:58:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5445,"nodeType":"ExpressionStatement","src":"9426:58:19"},{"expression":{"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5446,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"9499:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5447,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"9527:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9533:16:19","memberName":"numberOfListings","nodeType":"MemberAccess","referencedDeclaration":7053,"src":"9527:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5449,"name":"amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"9568:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))"}},"id":5451,"indexExpression":{"id":5450,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"9580:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9568:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":5457,"indexExpression":{"arguments":[{"expression":{"id":5454,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"9596:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9602:4:19","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"9596:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9588:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9588:7:19","typeDescriptions":{}}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9588:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9568:40:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5459,"indexExpression":{"hexValue":"30","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9609:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9568:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9527:84:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9499:112:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5462,"nodeType":"ExpressionStatement","src":"9499:112:19"}]},{"expression":{"arguments":[{"arguments":[{"expression":{"id":5467,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"9689:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9695:4:19","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"9689:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9681:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9681:7:19","typeDescriptions":{}}},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9681:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9714:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9718:6:19","memberName":"sender","nodeType":"MemberAccess","src":"9714:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5472,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"9738:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9744:6:19","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"9738:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5474,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"9764:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},{"id":5475,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"9785:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5464,"name":"_emitExecutionAcceptCollectionOffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"9632:35:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_struct$_Listing_$7040_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,struct Listing memory,uint256)"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9632:172:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5477,"nodeType":"ExpressionStatement","src":"9632:172:19"}]},"id":5479,"implemented":true,"kind":"function","modifiers":[],"name":"_takeCollectionOffer","nameLocation":"7408:20:19","nodeType":"FunctionDefinition","parameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5298,"mutability":"mutable","name":"order","nameLocation":"7451:5:19","nodeType":"VariableDeclaration","scope":5479,"src":"7438:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":5297,"nodeType":"UserDefinedTypeName","pathNode":{"id":5296,"name":"Order","nameLocations":["7438:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"7438:5:19"},"referencedDeclaration":7064,"src":"7438:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":5301,"mutability":"mutable","name":"listing","nameLocation":"7481:7:19","nodeType":"VariableDeclaration","scope":5479,"src":"7466:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing"},"typeName":{"id":5300,"nodeType":"UserDefinedTypeName","pathNode":{"id":5299,"name":"Listing","nameLocations":["7466:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"7466:7:19"},"referencedDeclaration":7040,"src":"7466:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"},{"constant":false,"id":5304,"mutability":"mutable","name":"takerFee","nameLocation":"7513:8:19","nodeType":"VariableDeclaration","scope":5479,"src":"7498:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":5303,"nodeType":"UserDefinedTypeName","pathNode":{"id":5302,"name":"FeeRate","nameLocations":["7498:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"7498:7:19"},"referencedDeclaration":7142,"src":"7498:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":5306,"mutability":"mutable","name":"signature","nameLocation":"7544:9:19","nodeType":"VariableDeclaration","scope":5479,"src":"7531:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5305,"name":"bytes","nodeType":"ElementaryTypeName","src":"7531:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7428:131:19"},"returnParameters":{"id":5308,"nodeType":"ParameterList","parameters":[],"src":"7569:0:19"},"scope":6290,"src":"7399:2412:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5664,"nodeType":"Block","src":"10370:2433:19","statements":[{"assignments":[5498],"declarations":[{"constant":false,"id":5498,"mutability":"mutable","name":"fees","nameLocation":"10392:4:19","nodeType":"VariableDeclaration","scope":5664,"src":"10380:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":5497,"nodeType":"UserDefinedTypeName","pathNode":{"id":5496,"name":"Fees","nameLocations":["10380:4:19"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"10380:4:19"},"referencedDeclaration":7137,"src":"10380:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"}],"id":5503,"initialValue":{"arguments":[{"id":5500,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"10404:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate storage ref"}},{"id":5501,"name":"takerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"10417:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate storage ref"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}],"id":5499,"name":"Fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"10399:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Fees_$7137_storage_ptr_$","typeString":"type(struct Fees storage pointer)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10399:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"nodeType":"VariableDeclarationStatement","src":"10380:46:19"},{"assignments":[5506],"declarations":[{"constant":false,"id":5506,"mutability":"mutable","name":"listing","nameLocation":"10451:7:19","nodeType":"VariableDeclaration","scope":5664,"src":"10436:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing"},"typeName":{"id":5505,"nodeType":"UserDefinedTypeName","pathNode":{"id":5504,"name":"Listing","nameLocations":["10436:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"10436:7:19"},"referencedDeclaration":7040,"src":"10436:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"}],"id":5509,"initialValue":{"expression":{"id":5507,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"10461:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":5508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10470:7:19","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":7027,"src":"10461:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"nodeType":"VariableDeclarationStatement","src":"10436:41:19"},{"assignments":[5511],"declarations":[{"constant":false,"id":5511,"mutability":"mutable","name":"takerAmount","nameLocation":"10495:11:19","nodeType":"VariableDeclaration","scope":5664,"src":"10487:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5510,"name":"uint256","nodeType":"ElementaryTypeName","src":"10487:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5515,"initialValue":{"expression":{"expression":{"id":5512,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"10509:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":5513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10518:5:19","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":7030,"src":"10509:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":5514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10524:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"10509:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10487:43:19"},{"condition":{"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10619:168:19","subExpression":{"arguments":[{"id":5517,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"10662:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":5518,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"10685:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10695:3:19","memberName":"ASK","nodeType":"MemberAccess","referencedDeclaration":7016,"src":"10685:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":5520,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"10716:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},{"id":5521,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"10742:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5522,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"10769:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":5516,"name":"_validateOrderAndListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10620:24:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_struct$_Exchange_$7031_memory_ptr_$_t_bytes_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Order memory,enum OrderType,struct Exchange memory,bytes memory,struct Fees memory) view returns (bool)"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10620:167:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5529,"nodeType":"IfStatement","src":"10602:242:19","trueBody":{"id":5528,"nodeType":"Block","src":"10798:46:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5525,"name":"InvalidOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"10819:12:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10819:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5527,"nodeType":"RevertStatement","src":"10812:21:19"}]}},{"assignments":[5531],"declarations":[{"constant":false,"id":5531,"mutability":"mutable","name":"executionBatch","nameLocation":"10936:14:19","nodeType":"VariableDeclaration","scope":5664,"src":"10923:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5530,"name":"bytes","nodeType":"ElementaryTypeName","src":"10923:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5541,"initialValue":{"arguments":[{"id":5533,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"10993:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":5534,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"11012:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":5535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11022:3:19","memberName":"ASK","nodeType":"MemberAccess","referencedDeclaration":7016,"src":"11012:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"expression":{"id":5536,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"11039:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":5537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11047:7:19","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7035,"src":"11039:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5538,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"11068:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5539,"name":"tokenRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"11093:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5532,"name":"_initializeSingleExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"10953:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct Order memory,enum OrderType,uint256,uint256,address) pure returns (bytes memory)"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10953:164:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"10923:194:19"},{"id":5558,"nodeType":"UncheckedBlock","src":"11176:141:19","statements":[{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5542,"name":"amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"11200:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))"}},"id":5552,"indexExpression":{"expression":{"id":5543,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"11212:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:19","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"11212:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11200:25:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":5553,"indexExpression":{"arguments":[{"expression":{"id":5547,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"11234:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11240:4:19","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"11234:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11226:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11226:7:19","typeDescriptions":{}}},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11226:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11200:46:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5554,"indexExpression":{"expression":{"id":5550,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"11264:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":5551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11272:5:19","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7033,"src":"11264:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11200:91:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5555,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"11295:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11200:106:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5557,"nodeType":"ExpressionStatement","src":"11200:106:19"}]},{"id":5578,"nodeType":"Block","src":"11396:257:19","statements":[{"assignments":[5563],"declarations":[{"constant":false,"id":5563,"mutability":"mutable","name":"successfulTransfers","nameLocation":"11424:19:19","nodeType":"VariableDeclaration","scope":5578,"src":"11410:33:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5561,"name":"bool","nodeType":"ElementaryTypeName","src":"11410:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5562,"nodeType":"ArrayTypeName","src":"11410:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":5568,"initialValue":{"arguments":[{"id":5565,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"11492:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"31","id":5566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11524:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5564,"name":"_executeNonfungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"11446:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (bytes memory,uint256) returns (bool[] memory)"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11446:93:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11410:129:19"},{"condition":{"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11557:23:19","subExpression":{"baseExpression":{"id":5569,"name":"successfulTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"11558:19:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5571,"indexExpression":{"hexValue":"30","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11578:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11558:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5577,"nodeType":"IfStatement","src":"11553:90:19","trueBody":{"id":5576,"nodeType":"Block","src":"11582:61:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5573,"name":"TokenTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"11607:19:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11607:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5575,"nodeType":"RevertStatement","src":"11600:28:19"}]}}]},{"assignments":[5580,5582,5584,5586],"declarations":[{"constant":false,"id":5580,"mutability":"mutable","name":"totalPrice","nameLocation":"11685:10:19","nodeType":"VariableDeclaration","scope":5664,"src":"11677:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5579,"name":"uint256","nodeType":"ElementaryTypeName","src":"11677:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5582,"mutability":"mutable","name":"protocolFeeAmount","nameLocation":"11717:17:19","nodeType":"VariableDeclaration","scope":5664,"src":"11709:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5581,"name":"uint256","nodeType":"ElementaryTypeName","src":"11709:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5584,"mutability":"mutable","name":"makerFeeAmount","nameLocation":"11756:14:19","nodeType":"VariableDeclaration","scope":5664,"src":"11748:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5583,"name":"uint256","nodeType":"ElementaryTypeName","src":"11748:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5586,"mutability":"mutable","name":"takerFeeAmount","nameLocation":"11792:14:19","nodeType":"VariableDeclaration","scope":5664,"src":"11784:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5585,"name":"uint256","nodeType":"ElementaryTypeName","src":"11784:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5595,"initialValue":{"arguments":[{"expression":{"id":5588,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"11832:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":5589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11840:5:19","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":7039,"src":"11832:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5590,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"11847:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5591,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"11860:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11866:8:19","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"11860:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"id":5593,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"11876:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":5587,"name":"_computeFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"11819:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,struct FeeRate memory,struct Fees memory) pure returns (uint256,uint256,uint256,uint256)"}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11819:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11663:218:19"},{"id":5610,"nodeType":"UncheckedBlock","src":"11980:150:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5598,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12016:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_ZeZuExchange_$6290","typeString":"contract ZeZuExchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ZeZuExchange_$6290","typeString":"contract ZeZuExchange"}],"id":5597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12008:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5596,"name":"address","nodeType":"ElementaryTypeName","src":"12008:7:19","typeDescriptions":{}}},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12022:7:19","memberName":"balance","nodeType":"MemberAccess","src":"12008:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5601,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"12032:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5602,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"12045:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12032:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12008:51:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5609,"nodeType":"IfStatement","src":"12004:116:19","trueBody":{"id":5608,"nodeType":"Block","src":"12061:59:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5605,"name":"InsufficientFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"12086:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12086:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5607,"nodeType":"RevertStatement","src":"12079:26:19"}]}}]},{"expression":{"arguments":[{"expression":{"expression":{"id":5612,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"12190:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":5613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12195:11:19","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":7133,"src":"12190:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":5614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12207:9:19","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"12190:26:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5615,"name":"protocolFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"12218:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5611,"name":"_transferETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"12177:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12177:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5617,"nodeType":"ExpressionStatement","src":"12177:59:19"},{"expression":{"arguments":[{"expression":{"expression":{"id":5619,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"12259:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":5620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12264:8:19","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"12259:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":5621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12273:9:19","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"12259:23:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5622,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"12284:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5618,"name":"_transferETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"12246:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12246:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5624,"nodeType":"ExpressionStatement","src":"12246:53:19"},{"expression":{"arguments":[{"expression":{"expression":{"id":5626,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"12322:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12328:8:19","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"12322:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":5628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12337:9:19","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"12322:24:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5629,"name":"makerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"12348:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5625,"name":"_transferETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"12309:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12309:54:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5631,"nodeType":"ExpressionStatement","src":"12309:54:19"},{"id":5642,"nodeType":"UncheckedBlock","src":"12373:156:19","statements":[{"expression":{"arguments":[{"expression":{"id":5633,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"12427:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:6:19","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"12427:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5635,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"12457:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5636,"name":"makerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"12470:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12457:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5638,"name":"protocolFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"12487:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12457:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5632,"name":"_transferETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"12397:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12397:121:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5641,"nodeType":"ExpressionStatement","src":"12397:121:19"}]},{"expression":{"arguments":[{"id":5644,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"12572:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5645,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"12600:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":5646,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"12619:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":5647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12627:5:19","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7033,"src":"12619:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5648,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"12646:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5649,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"12670:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},{"expression":{"id":5650,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"12688:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12698:3:19","memberName":"ASK","nodeType":"MemberAccess","referencedDeclaration":7016,"src":"12688:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}],"id":5643,"name":"_emitExecutionEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"12539:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_struct$_Order_$7064_memory_ptr_$_t_uint256_$_t_uint256_$_t_struct$_Fees_$7137_memory_ptr_$_t_enum$_OrderType_$7019_$returns$__$","typeString":"function (bytes memory,struct Order memory,uint256,uint256,struct Fees memory,enum OrderType)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12539:172:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5653,"nodeType":"ExpressionStatement","src":"12539:172:19"},{"expression":{"arguments":[{"expression":{"id":5655,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12762:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12766:6:19","memberName":"sender","nodeType":"MemberAccess","src":"12762:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":5659,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12782:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_ZeZuExchange_$6290","typeString":"contract ZeZuExchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ZeZuExchange_$6290","typeString":"contract ZeZuExchange"}],"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12774:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5657,"name":"address","nodeType":"ElementaryTypeName","src":"12774:7:19","typeDescriptions":{}}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12774:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12788:7:19","memberName":"balance","nodeType":"MemberAccess","src":"12774:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5654,"name":"_transferETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"12749:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12749:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5663,"nodeType":"ExpressionStatement","src":"12749:47:19"}]},"documentation":{"id":5480,"nodeType":"StructuredDocumentation","src":"9817:350:19","text":" @notice Take a single ask\n @param order Order of listing to fulfill\n @param exchange Exchange struct indicating the listing to take and the parameters to match it with\n @param takerFee Taker fee to be taken\n @param signature Order signature\n @param tokenRecipient Address to receive the token transfer"},"id":5665,"implemented":true,"kind":"function","modifiers":[],"name":"_takeAskSingle","nameLocation":"10181:14:19","nodeType":"FunctionDefinition","parameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"order","nameLocation":"10218:5:19","nodeType":"VariableDeclaration","scope":5665,"src":"10205:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":5482,"nodeType":"UserDefinedTypeName","pathNode":{"id":5481,"name":"Order","nameLocations":["10205:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"10205:5:19"},"referencedDeclaration":7064,"src":"10205:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":5486,"mutability":"mutable","name":"exchange","nameLocation":"10249:8:19","nodeType":"VariableDeclaration","scope":5665,"src":"10233:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange"},"typeName":{"id":5485,"nodeType":"UserDefinedTypeName","pathNode":{"id":5484,"name":"Exchange","nameLocations":["10233:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"10233:8:19"},"referencedDeclaration":7031,"src":"10233:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"visibility":"internal"},{"constant":false,"id":5489,"mutability":"mutable","name":"takerFee","nameLocation":"10282:8:19","nodeType":"VariableDeclaration","scope":5665,"src":"10267:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":5488,"nodeType":"UserDefinedTypeName","pathNode":{"id":5487,"name":"FeeRate","nameLocations":["10267:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"10267:7:19"},"referencedDeclaration":7142,"src":"10267:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":5491,"mutability":"mutable","name":"signature","nameLocation":"10313:9:19","nodeType":"VariableDeclaration","scope":5665,"src":"10300:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5490,"name":"bytes","nodeType":"ElementaryTypeName","src":"10300:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5493,"mutability":"mutable","name":"tokenRecipient","nameLocation":"10340:14:19","nodeType":"VariableDeclaration","scope":5665,"src":"10332:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5492,"name":"address","nodeType":"ElementaryTypeName","src":"10332:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10195:165:19"},"returnParameters":{"id":5495,"nodeType":"ParameterList","parameters":[],"src":"10370:0:19"},"scope":6290,"src":"10172:2631:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5834,"nodeType":"Block","src":"13263:2160:19","statements":[{"assignments":[5682],"declarations":[{"constant":false,"id":5682,"mutability":"mutable","name":"fees","nameLocation":"13285:4:19","nodeType":"VariableDeclaration","scope":5834,"src":"13273:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":5681,"nodeType":"UserDefinedTypeName","pathNode":{"id":5680,"name":"Fees","nameLocations":["13273:4:19"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"13273:4:19"},"referencedDeclaration":7137,"src":"13273:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"}],"id":5687,"initialValue":{"arguments":[{"id":5684,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"13297:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate storage ref"}},{"id":5685,"name":"takerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5675,"src":"13310:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate storage ref"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}],"id":5683,"name":"Fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"13292:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Fees_$7137_storage_ptr_$","typeString":"type(struct Fees storage pointer)"}},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13292:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"nodeType":"VariableDeclarationStatement","src":"13273:46:19"},{"assignments":[5690],"declarations":[{"constant":false,"id":5690,"mutability":"mutable","name":"listing","nameLocation":"13344:7:19","nodeType":"VariableDeclaration","scope":5834,"src":"13329:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing"},"typeName":{"id":5689,"nodeType":"UserDefinedTypeName","pathNode":{"id":5688,"name":"Listing","nameLocations":["13329:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"13329:7:19"},"referencedDeclaration":7040,"src":"13329:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"}],"id":5693,"initialValue":{"expression":{"id":5691,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"13354:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":5692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13363:7:19","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":7027,"src":"13354:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"nodeType":"VariableDeclarationStatement","src":"13329:41:19"},{"assignments":[5695],"declarations":[{"constant":false,"id":5695,"mutability":"mutable","name":"takerAmount","nameLocation":"13388:11:19","nodeType":"VariableDeclaration","scope":5834,"src":"13380:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5694,"name":"uint256","nodeType":"ElementaryTypeName","src":"13380:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5699,"initialValue":{"expression":{"expression":{"id":5696,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"13402:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":5697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13411:5:19","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":7030,"src":"13402:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":5698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13417:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"13402:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13380:43:19"},{"condition":{"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13512:168:19","subExpression":{"arguments":[{"id":5701,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"13555:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":5702,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"13578:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13588:3:19","memberName":"BID","nodeType":"MemberAccess","referencedDeclaration":7017,"src":"13578:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":5704,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"13609:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},{"id":5705,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"13635:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5706,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"13662:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":5700,"name":"_validateOrderAndListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"13513:24:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_struct$_Exchange_$7031_memory_ptr_$_t_bytes_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Order memory,enum OrderType,struct Exchange memory,bytes memory,struct Fees memory) view returns (bool)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13513:167:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5713,"nodeType":"IfStatement","src":"13495:242:19","trueBody":{"id":5712,"nodeType":"Block","src":"13691:46:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5709,"name":"InvalidOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"13712:12:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13712:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5711,"nodeType":"RevertStatement","src":"13705:21:19"}]}},{"assignments":[5715],"declarations":[{"constant":false,"id":5715,"mutability":"mutable","name":"executionBatch","nameLocation":"13829:14:19","nodeType":"VariableDeclaration","scope":5834,"src":"13816:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5714,"name":"bytes","nodeType":"ElementaryTypeName","src":"13816:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5727,"initialValue":{"arguments":[{"id":5717,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"13886:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":5718,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"13905:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13915:3:19","memberName":"BID","nodeType":"MemberAccess","referencedDeclaration":7017,"src":"13905:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"expression":{"expression":{"id":5720,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"13932:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":5721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13941:5:19","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":7030,"src":"13932:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":5722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13947:7:19","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7042,"src":"13932:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5723,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"13968:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5724,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13993:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13997:6:19","memberName":"sender","nodeType":"MemberAccess","src":"13993:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5716,"name":"_initializeSingleExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"13846:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct Order memory,enum OrderType,uint256,uint256,address) pure returns (bytes memory)"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13846:167:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"13816:197:19"},{"id":5747,"nodeType":"Block","src":"14093:257:19","statements":[{"assignments":[5732],"declarations":[{"constant":false,"id":5732,"mutability":"mutable","name":"successfulTransfers","nameLocation":"14121:19:19","nodeType":"VariableDeclaration","scope":5747,"src":"14107:33:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5730,"name":"bool","nodeType":"ElementaryTypeName","src":"14107:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5731,"nodeType":"ArrayTypeName","src":"14107:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":5737,"initialValue":{"arguments":[{"id":5734,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"14189:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"31","id":5735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14221:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5733,"name":"_executeNonfungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"14143:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (bytes memory,uint256) returns (bool[] memory)"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14143:93:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14107:129:19"},{"condition":{"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14254:23:19","subExpression":{"baseExpression":{"id":5738,"name":"successfulTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"14255:19:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5740,"indexExpression":{"hexValue":"30","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14275:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14255:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5746,"nodeType":"IfStatement","src":"14250:90:19","trueBody":{"id":5745,"nodeType":"Block","src":"14279:61:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5742,"name":"TokenTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"14304:19:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14304:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5744,"nodeType":"RevertStatement","src":"14297:28:19"}]}}]},{"assignments":[5749,5751,5753,5755],"declarations":[{"constant":false,"id":5749,"mutability":"mutable","name":"totalPrice","nameLocation":"14382:10:19","nodeType":"VariableDeclaration","scope":5834,"src":"14374:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5748,"name":"uint256","nodeType":"ElementaryTypeName","src":"14374:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5751,"mutability":"mutable","name":"protocolFeeAmount","nameLocation":"14414:17:19","nodeType":"VariableDeclaration","scope":5834,"src":"14406:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5750,"name":"uint256","nodeType":"ElementaryTypeName","src":"14406:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5753,"mutability":"mutable","name":"makerFeeAmount","nameLocation":"14453:14:19","nodeType":"VariableDeclaration","scope":5834,"src":"14445:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5752,"name":"uint256","nodeType":"ElementaryTypeName","src":"14445:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5755,"mutability":"mutable","name":"takerFeeAmount","nameLocation":"14489:14:19","nodeType":"VariableDeclaration","scope":5834,"src":"14481:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5754,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5764,"initialValue":{"arguments":[{"expression":{"id":5757,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"14529:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":5758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14537:5:19","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":7039,"src":"14529:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5759,"name":"takerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"14544:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5760,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"14557:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14563:8:19","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"14557:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},{"id":5762,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"14573:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":5756,"name":"_computeFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"14516:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_struct$_FeeRate_$7142_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,struct FeeRate memory,struct Fees memory) pure returns (uint256,uint256,uint256,uint256)"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14516:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"14360:218:19"},{"assignments":[5766],"declarations":[{"constant":false,"id":5766,"mutability":"mutable","name":"trader","nameLocation":"14672:6:19","nodeType":"VariableDeclaration","scope":5834,"src":"14664:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5765,"name":"address","nodeType":"ElementaryTypeName","src":"14664:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5769,"initialValue":{"expression":{"id":5767,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"14681:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14687:6:19","memberName":"trader","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"14681:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14664:29:19"},{"expression":{"arguments":[{"id":5771,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"14717:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":5772,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"14725:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14731:8:19","memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"14725:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":5774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14740:9:19","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"14725:24:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5775,"name":"makerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"14751:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5770,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"14703:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14703:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5777,"nodeType":"ExpressionStatement","src":"14703:63:19"},{"expression":{"arguments":[{"id":5779,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"14790:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":5780,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"14798:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":5781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14803:8:19","memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"14798:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":5782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14812:9:19","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"14798:23:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5783,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"14823:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5778,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"14776:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14776:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5785,"nodeType":"ExpressionStatement","src":"14776:62:19"},{"expression":{"arguments":[{"id":5787,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"14862:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":5788,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"14870:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"id":5789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14875:11:19","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":7133,"src":"14870:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}},"id":5790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14887:9:19","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"14870:26:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5791,"name":"protocolFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"14898:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5786,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"14848:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14848:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5793,"nodeType":"ExpressionStatement","src":"14848:68:19"},{"id":5822,"nodeType":"UncheckedBlock","src":"14926:308:19","statements":[{"expression":{"arguments":[{"id":5795,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"14981:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5796,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15005:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15009:6:19","memberName":"sender","nodeType":"MemberAccess","src":"15005:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5798,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"15033:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5799,"name":"takerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"15046:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15033:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5801,"name":"protocolFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"15063:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15033:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5794,"name":"_transferPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"14950:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14950:144:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5804,"nodeType":"ExpressionStatement","src":"14950:144:19"},{"expression":{"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5805,"name":"amountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"15109:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))"}},"id":5814,"indexExpression":{"id":5806,"name":"trader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"15121:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15109:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":5815,"indexExpression":{"arguments":[{"expression":{"id":5809,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"15137:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15143:4:19","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":7063,"src":"15137:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15129:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15129:7:19","typeDescriptions":{}}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15129:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15109:40:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5816,"indexExpression":{"expression":{"id":5812,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"15150:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":5813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15158:5:19","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7033,"src":"15150:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15109:55:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"expression":{"id":5817,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"15168:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":5818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15194:5:19","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":7030,"src":"15168:31:19","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":5819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15217:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"15168:55:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15109:114:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5821,"nodeType":"ExpressionStatement","src":"15109:114:19"}]},{"expression":{"arguments":[{"id":5824,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"15277:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5825,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"15305:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":5826,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"15324:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":5827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15332:5:19","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7033,"src":"15324:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5828,"name":"totalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"15351:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5829,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"15375:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},{"expression":{"id":5830,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"15393:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15403:3:19","memberName":"BID","nodeType":"MemberAccess","referencedDeclaration":7017,"src":"15393:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}],"id":5823,"name":"_emitExecutionEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"15244:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_struct$_Order_$7064_memory_ptr_$_t_uint256_$_t_uint256_$_t_struct$_Fees_$7137_memory_ptr_$_t_enum$_OrderType_$7019_$returns$__$","typeString":"function (bytes memory,struct Order memory,uint256,uint256,struct Fees memory,enum OrderType)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15244:172:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5833,"nodeType":"ExpressionStatement","src":"15244:172:19"}]},"documentation":{"id":5666,"nodeType":"StructuredDocumentation","src":"12809:283:19","text":" @notice Take a single bid\n @param order Order of listing to fulfill\n @param exchange Exchange struct indicating the listing to take and the parameters to match it with\n @param takerFee Taker fee to be taken\n @param signature Order signature"},"id":5835,"implemented":true,"kind":"function","modifiers":[],"name":"_takeBidSingle","nameLocation":"13106:14:19","nodeType":"FunctionDefinition","parameters":{"id":5678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5669,"mutability":"mutable","name":"order","nameLocation":"13143:5:19","nodeType":"VariableDeclaration","scope":5835,"src":"13130:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":5668,"nodeType":"UserDefinedTypeName","pathNode":{"id":5667,"name":"Order","nameLocations":["13130:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"13130:5:19"},"referencedDeclaration":7064,"src":"13130:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":5672,"mutability":"mutable","name":"exchange","nameLocation":"13174:8:19","nodeType":"VariableDeclaration","scope":5835,"src":"13158:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange"},"typeName":{"id":5671,"nodeType":"UserDefinedTypeName","pathNode":{"id":5670,"name":"Exchange","nameLocations":["13158:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"13158:8:19"},"referencedDeclaration":7031,"src":"13158:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"visibility":"internal"},{"constant":false,"id":5675,"mutability":"mutable","name":"takerFee","nameLocation":"13207:8:19","nodeType":"VariableDeclaration","scope":5835,"src":"13192:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":5674,"nodeType":"UserDefinedTypeName","pathNode":{"id":5673,"name":"FeeRate","nameLocations":["13192:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"13192:7:19"},"referencedDeclaration":7142,"src":"13192:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":5677,"mutability":"mutable","name":"signature","nameLocation":"13238:9:19","nodeType":"VariableDeclaration","scope":5835,"src":"13225:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5676,"name":"bytes","nodeType":"ElementaryTypeName","src":"13225:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13120:133:19"},"returnParameters":{"id":5679,"nodeType":"ParameterList","parameters":[],"src":"13263:0:19"},"scope":6290,"src":"13097:2326:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5998,"nodeType":"Block","src":"16070:2278:19","statements":[{"assignments":[5856],"declarations":[{"constant":false,"id":5856,"mutability":"mutable","name":"fees","nameLocation":"16092:4:19","nodeType":"VariableDeclaration","scope":5998,"src":"16080:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":5855,"nodeType":"UserDefinedTypeName","pathNode":{"id":5854,"name":"Fees","nameLocations":["16080:4:19"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"16080:4:19"},"referencedDeclaration":7137,"src":"16080:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"}],"id":5861,"initialValue":{"arguments":[{"id":5858,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"16104:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate storage ref"}},{"id":5859,"name":"takerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"16117:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate storage ref"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}],"id":5857,"name":"Fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"16099:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Fees_$7137_storage_ptr_$","typeString":"type(struct Fees storage pointer)"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16099:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"nodeType":"VariableDeclarationStatement","src":"16080:46:19"},{"assignments":[5866,5870],"declarations":[{"constant":false,"id":5866,"mutability":"mutable","name":"validOrders","nameLocation":"16321:11:19","nodeType":"VariableDeclaration","scope":5998,"src":"16307:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5864,"name":"bool","nodeType":"ElementaryTypeName","src":"16307:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5865,"nodeType":"ArrayTypeName","src":"16307:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5870,"mutability":"mutable","name":"pendingAmountTaken","nameLocation":"16365:18:19","nodeType":"VariableDeclaration","scope":5998,"src":"16346:37:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":5867,"name":"uint256","nodeType":"ElementaryTypeName","src":"16346:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5868,"nodeType":"ArrayTypeName","src":"16346:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":5869,"nodeType":"ArrayTypeName","src":"16346:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"documentation":" Validate all the orders potentially used in the execution and\n initialize the arrays for pending fulfillments.","id":5878,"initialValue":{"arguments":[{"id":5872,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"16412:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"}},{"expression":{"id":5873,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"16420:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16430:3:19","memberName":"ASK","nodeType":"MemberAccess","referencedDeclaration":7016,"src":"16420:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":5875,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"16435:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5876,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"16447:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":5871,"name":"_validateOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"16396:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr_$_t_enum$_OrderType_$7019_$_t_bytes_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$","typeString":"function (struct Order memory[] memory,enum OrderType,bytes memory,struct Fees memory) view returns (bool[] memory,uint256[] memory[] memory)"}},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16396:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"16293:159:19"},{"assignments":[5880],"declarations":[{"constant":false,"id":5880,"mutability":"mutable","name":"exchangesLength","nameLocation":"16471:15:19","nodeType":"VariableDeclaration","scope":5998,"src":"16463:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5879,"name":"uint256","nodeType":"ElementaryTypeName","src":"16463:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5883,"initialValue":{"expression":{"id":5881,"name":"exchanges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"16489:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange memory[] memory"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16499:6:19","memberName":"length","nodeType":"MemberAccess","src":"16489:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16463:42:19"},{"assignments":[5885,5888],"declarations":[{"constant":false,"id":5885,"mutability":"mutable","name":"executionBatch","nameLocation":"16597:14:19","nodeType":"VariableDeclaration","scope":5998,"src":"16584:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5884,"name":"bytes","nodeType":"ElementaryTypeName","src":"16584:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5888,"mutability":"mutable","name":"fungibleTransfers","nameLocation":"16650:17:19","nodeType":"VariableDeclaration","scope":5998,"src":"16625:42:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers"},"typeName":{"id":5887,"nodeType":"UserDefinedTypeName","pathNode":{"id":5886,"name":"FungibleTransfers","nameLocations":["16625:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":7103,"src":"16625:17:19"},"referencedDeclaration":7103,"src":"16625:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_storage_ptr","typeString":"struct FungibleTransfers"}},"visibility":"internal"}],"id":5895,"initialValue":{"arguments":[{"id":5890,"name":"exchangesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"16697:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5891,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"16714:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16724:3:19","memberName":"ASK","nodeType":"MemberAccess","referencedDeclaration":7016,"src":"16714:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":5893,"name":"tokenRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"16729:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5889,"name":"_initializeBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"16680:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_enum$_OrderType_$7019_$_t_address_$returns$_t_bytes_memory_ptr_$_t_struct$_FungibleTransfers_$7103_memory_ptr_$","typeString":"function (uint256,enum OrderType,address) pure returns (bytes memory,struct FungibleTransfers memory)"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16680:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_struct$_FungibleTransfers_$7103_memory_ptr_$","typeString":"tuple(bytes memory,struct FungibleTransfers memory)"}},"nodeType":"VariableDeclarationStatement","src":"16570:174:19"},{"assignments":[5898],"declarations":[{"constant":false,"id":5898,"mutability":"mutable","name":"order","nameLocation":"16768:5:19","nodeType":"VariableDeclaration","scope":5998,"src":"16755:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":5897,"nodeType":"UserDefinedTypeName","pathNode":{"id":5896,"name":"Order","nameLocations":["16755:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"16755:5:19"},"referencedDeclaration":7064,"src":"16755:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"}],"id":5899,"nodeType":"VariableDeclarationStatement","src":"16755:18:19"},{"assignments":[5902],"declarations":[{"constant":false,"id":5902,"mutability":"mutable","name":"exchange","nameLocation":"16799:8:19","nodeType":"VariableDeclaration","scope":5998,"src":"16783:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange"},"typeName":{"id":5901,"nodeType":"UserDefinedTypeName","pathNode":{"id":5900,"name":"Exchange","nameLocations":["16783:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"16783:8:19"},"referencedDeclaration":7031,"src":"16783:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"visibility":"internal"}],"id":5903,"nodeType":"VariableDeclarationStatement","src":"16783:24:19"},{"assignments":[5905],"declarations":[{"constant":false,"id":5905,"mutability":"mutable","name":"remainingETH","nameLocation":"16826:12:19","nodeType":"VariableDeclaration","scope":5998,"src":"16818:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5904,"name":"uint256","nodeType":"ElementaryTypeName","src":"16818:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5911,"initialValue":{"expression":{"arguments":[{"id":5908,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16849:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_ZeZuExchange_$6290","typeString":"contract ZeZuExchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ZeZuExchange_$6290","typeString":"contract ZeZuExchange"}],"id":5907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16841:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5906,"name":"address","nodeType":"ElementaryTypeName","src":"16841:7:19","typeDescriptions":{}}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16841:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16855:7:19","memberName":"balance","nodeType":"MemberAccess","src":"16841:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16818:44:19"},{"body":{"id":5978,"nodeType":"Block","src":"16911:1163:19","statements":[{"expression":{"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5918,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"16925:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5919,"name":"exchanges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"16936:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange memory[] memory"}},"id":5921,"indexExpression":{"id":5920,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"16946:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16936:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"src":"16925:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":5923,"nodeType":"ExpressionStatement","src":"16925:23:19"},{"expression":{"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5924,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"16962:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5925,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"16970:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"}},"id":5928,"indexExpression":{"expression":{"id":5926,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"16977:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":5927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16986:5:19","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7021,"src":"16977:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16970:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"src":"16962:30:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":5930,"nodeType":"ExpressionStatement","src":"16962:30:19"},{"condition":{"arguments":[{"id":5932,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"17182:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":5933,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"17209:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":5934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17219:3:19","memberName":"ASK","nodeType":"MemberAccess","referencedDeclaration":7016,"src":"17209:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":5935,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"17244:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},{"id":5936,"name":"validOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"17274:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":5937,"name":"pendingAmountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"17307:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}],"id":5931,"name":"_validateListingFromBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"17135:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_struct$_Exchange_$7031_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Order memory,enum OrderType,struct Exchange memory,bool[] memory,uint256[] memory[] memory) view returns (bool)"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17135:208:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5973,"nodeType":"IfStatement","src":"17114:890:19","trueBody":{"id":5972,"nodeType":"Block","src":"17358:646:19","statements":[{"assignments":[5940],"declarations":[{"constant":false,"id":5940,"mutability":"mutable","name":"inserted","nameLocation":"17440:8:19","nodeType":"VariableDeclaration","scope":5972,"src":"17435:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5939,"name":"bool","nodeType":"ElementaryTypeName","src":"17435:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5941,"nodeType":"VariableDeclarationStatement","src":"17435:13:19"},{"expression":{"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5942,"name":"remainingETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"17467:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5943,"name":"inserted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"17481:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5944,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"17466:24:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5946,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"17534:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5947,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"17570:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},{"id":5948,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"17609:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"id":5949,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"17636:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},{"id":5950,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"17666:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},{"id":5951,"name":"remainingETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"17692:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"},{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5945,"name":"_insertExecutionAsk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"17493:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_struct$_FungibleTransfers_$7103_memory_ptr_$_t_struct$_Order_$7064_memory_ptr_$_t_struct$_Exchange_$7031_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_bool_$","typeString":"function (bytes memory,struct FungibleTransfers memory,struct Order memory,struct Exchange memory,struct Fees memory,uint256) pure returns (uint256,bool)"}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17493:229:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,bool)"}},"src":"17466:256:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5954,"nodeType":"ExpressionStatement","src":"17466:256:19"},{"condition":{"id":5955,"name":"inserted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"17744:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5971,"nodeType":"IfStatement","src":"17740:250:19","trueBody":{"id":5970,"nodeType":"Block","src":"17754:236:19","statements":[{"id":5969,"nodeType":"UncheckedBlock","src":"17776:196:19","statements":[{"expression":{"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5956,"name":"pendingAmountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"17812:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":5962,"indexExpression":{"expression":{"id":5957,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"17831:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":5958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17840:5:19","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7021,"src":"17831:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17812:34:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5963,"indexExpression":{"expression":{"expression":{"id":5959,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"17876:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":5960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17885:7:19","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":7027,"src":"17876:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":5961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17893:5:19","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7033,"src":"17876:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17812:112:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"expression":{"id":5964,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"17928:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":5965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17937:5:19","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":7030,"src":"17928:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":5966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17943:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"17928:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17812:137:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5968,"nodeType":"ExpressionStatement","src":"17812:137:19"}]}]}}]}},{"id":5977,"nodeType":"UncheckedBlock","src":"18018:46:19","statements":[{"expression":{"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"18046:3:19","subExpression":{"id":5974,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"18048:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5976,"nodeType":"ExpressionStatement","src":"18046:3:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5915,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"16888:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5916,"name":"exchangesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"16892:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16888:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5979,"initializationExpression":{"assignments":[5913],"declarations":[{"constant":false,"id":5913,"mutability":"mutable","name":"i","nameLocation":"16885:1:19","nodeType":"VariableDeclaration","scope":5979,"src":"16877:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5912,"name":"uint256","nodeType":"ElementaryTypeName","src":"16877:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5914,"nodeType":"VariableDeclarationStatement","src":"16877:9:19"},"nodeType":"ForStatement","src":"16872:1202:19"},{"expression":{"arguments":[{"id":5981,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"18156:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5982,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"18184:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},{"id":5983,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"18215:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},{"expression":{"id":5984,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"18233:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18243:3:19","memberName":"ASK","nodeType":"MemberAccess","referencedDeclaration":7016,"src":"18233:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}],"id":5980,"name":"_executeBatchTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"18121:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_struct$_FungibleTransfers_$7103_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$_t_enum$_OrderType_$7019_$returns$__$","typeString":"function (bytes memory,struct FungibleTransfers memory,struct Fees memory,enum OrderType)"}},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18121:135:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5987,"nodeType":"ExpressionStatement","src":"18121:135:19"},{"expression":{"arguments":[{"expression":{"id":5989,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18307:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18311:6:19","memberName":"sender","nodeType":"MemberAccess","src":"18307:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":5993,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18327:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_ZeZuExchange_$6290","typeString":"contract ZeZuExchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ZeZuExchange_$6290","typeString":"contract ZeZuExchange"}],"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18319:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5991,"name":"address","nodeType":"ElementaryTypeName","src":"18319:7:19","typeDescriptions":{}}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18319:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18333:7:19","memberName":"balance","nodeType":"MemberAccess","src":"18319:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5988,"name":"_transferETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"18294:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18294:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5997,"nodeType":"ExpressionStatement","src":"18294:47:19"}]},"documentation":{"id":5836,"nodeType":"StructuredDocumentation","src":"15429:437:19","text":" @notice Take multiple asks; efficiently verifying and executing the transfers in bulk\n @param orders List of orders\n @param exchanges List of exchanges indicating the listing to take and the parameters to match it with\n @param takerFee Taker fee to be taken on each exchange\n @param signatures Bytes array of order signatures\n @param tokenRecipient Address to receive the tokens purchased"},"id":5999,"implemented":true,"kind":"function","modifiers":[],"name":"_takeAsk","nameLocation":"15880:8:19","nodeType":"FunctionDefinition","parameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5840,"mutability":"mutable","name":"orders","nameLocation":"15913:6:19","nodeType":"VariableDeclaration","scope":5999,"src":"15898:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order[]"},"typeName":{"baseType":{"id":5838,"nodeType":"UserDefinedTypeName","pathNode":{"id":5837,"name":"Order","nameLocations":["15898:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"15898:5:19"},"referencedDeclaration":7064,"src":"15898:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"id":5839,"nodeType":"ArrayTypeName","src":"15898:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_storage_$dyn_storage_ptr","typeString":"struct Order[]"}},"visibility":"internal"},{"constant":false,"id":5844,"mutability":"mutable","name":"exchanges","nameLocation":"15947:9:19","nodeType":"VariableDeclaration","scope":5999,"src":"15929:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange[]"},"typeName":{"baseType":{"id":5842,"nodeType":"UserDefinedTypeName","pathNode":{"id":5841,"name":"Exchange","nameLocations":["15929:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"15929:8:19"},"referencedDeclaration":7031,"src":"15929:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"id":5843,"nodeType":"ArrayTypeName","src":"15929:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_storage_$dyn_storage_ptr","typeString":"struct Exchange[]"}},"visibility":"internal"},{"constant":false,"id":5847,"mutability":"mutable","name":"takerFee","nameLocation":"15981:8:19","nodeType":"VariableDeclaration","scope":5999,"src":"15966:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":5846,"nodeType":"UserDefinedTypeName","pathNode":{"id":5845,"name":"FeeRate","nameLocations":["15966:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"15966:7:19"},"referencedDeclaration":7142,"src":"15966:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":5849,"mutability":"mutable","name":"signatures","nameLocation":"16012:10:19","nodeType":"VariableDeclaration","scope":5999,"src":"15999:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5848,"name":"bytes","nodeType":"ElementaryTypeName","src":"15999:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5851,"mutability":"mutable","name":"tokenRecipient","nameLocation":"16040:14:19","nodeType":"VariableDeclaration","scope":5999,"src":"16032:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5850,"name":"address","nodeType":"ElementaryTypeName","src":"16032:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15888:172:19"},"returnParameters":{"id":5853,"nodeType":"ParameterList","parameters":[],"src":"16070:0:19"},"scope":6290,"src":"15871:2477:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6132,"nodeType":"Block","src":"18894:2028:19","statements":[{"assignments":[6018],"declarations":[{"constant":false,"id":6018,"mutability":"mutable","name":"fees","nameLocation":"18916:4:19","nodeType":"VariableDeclaration","scope":6132,"src":"18904:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":6017,"nodeType":"UserDefinedTypeName","pathNode":{"id":6016,"name":"Fees","nameLocations":["18904:4:19"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"18904:4:19"},"referencedDeclaration":7137,"src":"18904:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"}],"id":6023,"initialValue":{"arguments":[{"id":6020,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"18928:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate storage ref"}},{"id":6021,"name":"takerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"18941:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_FeeRate_$7142_storage","typeString":"struct FeeRate storage ref"},{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate memory"}],"id":6019,"name":"Fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"18923:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Fees_$7137_storage_ptr_$","typeString":"type(struct Fees storage pointer)"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18923:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},"nodeType":"VariableDeclarationStatement","src":"18904:46:19"},{"assignments":[6028,6032],"declarations":[{"constant":false,"id":6028,"mutability":"mutable","name":"validOrders","nameLocation":"19145:11:19","nodeType":"VariableDeclaration","scope":6132,"src":"19131:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":6026,"name":"bool","nodeType":"ElementaryTypeName","src":"19131:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6027,"nodeType":"ArrayTypeName","src":"19131:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":6032,"mutability":"mutable","name":"pendingAmountTaken","nameLocation":"19189:18:19","nodeType":"VariableDeclaration","scope":6132,"src":"19170:37:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":6029,"name":"uint256","nodeType":"ElementaryTypeName","src":"19170:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6030,"nodeType":"ArrayTypeName","src":"19170:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":6031,"nodeType":"ArrayTypeName","src":"19170:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"documentation":" Validate all the orders potentially used in the execution and\n initialize the arrays for pending fulfillments.","id":6040,"initialValue":{"arguments":[{"id":6034,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"19236:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"}},{"expression":{"id":6035,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"19244:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":6036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19254:3:19","memberName":"BID","nodeType":"MemberAccess","referencedDeclaration":7017,"src":"19244:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":6037,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"19259:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6038,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"19271:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":6033,"name":"_validateOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"19220:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr_$_t_enum$_OrderType_$7019_$_t_bytes_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$","typeString":"function (struct Order memory[] memory,enum OrderType,bytes memory,struct Fees memory) view returns (bool[] memory,uint256[] memory[] memory)"}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19220:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"19117:159:19"},{"assignments":[6042],"declarations":[{"constant":false,"id":6042,"mutability":"mutable","name":"exchangesLength","nameLocation":"19295:15:19","nodeType":"VariableDeclaration","scope":6132,"src":"19287:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6041,"name":"uint256","nodeType":"ElementaryTypeName","src":"19287:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6045,"initialValue":{"expression":{"id":6043,"name":"exchanges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"19313:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange memory[] memory"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19323:6:19","memberName":"length","nodeType":"MemberAccess","src":"19313:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19287:42:19"},{"assignments":[6047,6050],"declarations":[{"constant":false,"id":6047,"mutability":"mutable","name":"executionBatch","nameLocation":"19421:14:19","nodeType":"VariableDeclaration","scope":6132,"src":"19408:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6046,"name":"bytes","nodeType":"ElementaryTypeName","src":"19408:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6050,"mutability":"mutable","name":"fungibleTransfers","nameLocation":"19474:17:19","nodeType":"VariableDeclaration","scope":6132,"src":"19449:42:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers"},"typeName":{"id":6049,"nodeType":"UserDefinedTypeName","pathNode":{"id":6048,"name":"FungibleTransfers","nameLocations":["19449:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":7103,"src":"19449:17:19"},"referencedDeclaration":7103,"src":"19449:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_storage_ptr","typeString":"struct FungibleTransfers"}},"visibility":"internal"}],"id":6058,"initialValue":{"arguments":[{"id":6052,"name":"exchangesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"19521:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6053,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"19538:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19548:3:19","memberName":"BID","nodeType":"MemberAccess","referencedDeclaration":7017,"src":"19538:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"expression":{"id":6055,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19553:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19557:6:19","memberName":"sender","nodeType":"MemberAccess","src":"19553:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6051,"name":"_initializeBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"19504:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_enum$_OrderType_$7019_$_t_address_$returns$_t_bytes_memory_ptr_$_t_struct$_FungibleTransfers_$7103_memory_ptr_$","typeString":"function (uint256,enum OrderType,address) pure returns (bytes memory,struct FungibleTransfers memory)"}},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19504:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_struct$_FungibleTransfers_$7103_memory_ptr_$","typeString":"tuple(bytes memory,struct FungibleTransfers memory)"}},"nodeType":"VariableDeclarationStatement","src":"19394:170:19"},{"assignments":[6061],"declarations":[{"constant":false,"id":6061,"mutability":"mutable","name":"order","nameLocation":"19588:5:19","nodeType":"VariableDeclaration","scope":6132,"src":"19575:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":6060,"nodeType":"UserDefinedTypeName","pathNode":{"id":6059,"name":"Order","nameLocations":["19575:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"19575:5:19"},"referencedDeclaration":7064,"src":"19575:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"}],"id":6062,"nodeType":"VariableDeclarationStatement","src":"19575:18:19"},{"assignments":[6065],"declarations":[{"constant":false,"id":6065,"mutability":"mutable","name":"exchange","nameLocation":"19619:8:19","nodeType":"VariableDeclaration","scope":6132,"src":"19603:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange"},"typeName":{"id":6064,"nodeType":"UserDefinedTypeName","pathNode":{"id":6063,"name":"Exchange","nameLocations":["19603:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"19603:8:19"},"referencedDeclaration":7031,"src":"19603:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"visibility":"internal"}],"id":6066,"nodeType":"VariableDeclarationStatement","src":"19603:24:19"},{"body":{"id":6122,"nodeType":"Block","src":"19677:1056:19","statements":[{"expression":{"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6073,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"19691:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6074,"name":"exchanges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"19702:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange memory[] memory"}},"id":6076,"indexExpression":{"id":6075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"19712:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19702:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"src":"19691:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":6078,"nodeType":"ExpressionStatement","src":"19691:23:19"},{"expression":{"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6079,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"19728:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6080,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"19736:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order memory[] memory"}},"id":6083,"indexExpression":{"expression":{"id":6081,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"19743:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":6082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19752:5:19","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7021,"src":"19743:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19736:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"src":"19728:30:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},"id":6085,"nodeType":"ExpressionStatement","src":"19728:30:19"},{"condition":{"arguments":[{"id":6087,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"19948:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"expression":{"id":6088,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"19975:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19985:3:19","memberName":"BID","nodeType":"MemberAccess","referencedDeclaration":7017,"src":"19975:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},{"id":6090,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"20010:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},{"id":6091,"name":"validOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"20040:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":6092,"name":"pendingAmountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"20073:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}],"id":6086,"name":"_validateListingFromBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"19901:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$7064_memory_ptr_$_t_enum$_OrderType_$7019_$_t_struct$_Exchange_$7031_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Order memory,enum OrderType,struct Exchange memory,bool[] memory,uint256[] memory[] memory) view returns (bool)"}},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19901:208:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6117,"nodeType":"IfStatement","src":"19880:783:19","trueBody":{"id":6116,"nodeType":"Block","src":"20124:539:19","statements":[{"expression":{"arguments":[{"id":6095,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"20242:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6096,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"20278:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},{"id":6097,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"20317:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"id":6098,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"20344:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},{"id":6099,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"20374:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"},{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}],"id":6094,"name":"_insertExecutionBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"20201:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_struct$_FungibleTransfers_$7103_memory_ptr_$_t_struct$_Order_$7064_memory_ptr_$_t_struct$_Exchange_$7031_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$returns$__$","typeString":"function (bytes memory,struct FungibleTransfers memory,struct Order memory,struct Exchange memory,struct Fees memory) pure"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20201:195:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6101,"nodeType":"ExpressionStatement","src":"20201:195:19"},{"id":6115,"nodeType":"UncheckedBlock","src":"20469:180:19","statements":[{"expression":{"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6102,"name":"pendingAmountTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"20501:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":6108,"indexExpression":{"expression":{"id":6103,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"20520:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":6104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20529:5:19","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7021,"src":"20520:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20501:34:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6109,"indexExpression":{"expression":{"expression":{"id":6105,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"20561:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":6106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20570:7:19","memberName":"listing","nodeType":"MemberAccess","referencedDeclaration":7027,"src":"20561:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing memory"}},"id":6107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20578:5:19","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":7033,"src":"20561:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20501:104:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"expression":{"id":6110,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"20609:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_memory_ptr","typeString":"struct Exchange memory"}},"id":6111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20618:5:19","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":7030,"src":"20609:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_memory_ptr","typeString":"struct Taker memory"}},"id":6112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20624:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"20609:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20501:129:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6114,"nodeType":"ExpressionStatement","src":"20501:129:19"}]}]}},{"id":6121,"nodeType":"UncheckedBlock","src":"20677:46:19","statements":[{"expression":{"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20705:3:19","subExpression":{"id":6118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"20707:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6120,"nodeType":"ExpressionStatement","src":"20705:3:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6070,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"19654:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6071,"name":"exchangesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"19658:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19654:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6123,"initializationExpression":{"assignments":[6068],"declarations":[{"constant":false,"id":6068,"mutability":"mutable","name":"i","nameLocation":"19651:1:19","nodeType":"VariableDeclaration","scope":6123,"src":"19643:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6067,"name":"uint256","nodeType":"ElementaryTypeName","src":"19643:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6069,"nodeType":"VariableDeclarationStatement","src":"19643:9:19"},"nodeType":"ForStatement","src":"19638:1095:19"},{"expression":{"arguments":[{"id":6125,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"20815:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6126,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"20843:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},{"id":6127,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"20874:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"}},{"expression":{"id":6128,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"20892:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$7019_$","typeString":"type(enum OrderType)"}},"id":6129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20902:3:19","memberName":"BID","nodeType":"MemberAccess","referencedDeclaration":7017,"src":"20892:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"},{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees memory"},{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}],"id":6124,"name":"_executeBatchTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"20780:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_struct$_FungibleTransfers_$7103_memory_ptr_$_t_struct$_Fees_$7137_memory_ptr_$_t_enum$_OrderType_$7019_$returns$__$","typeString":"function (bytes memory,struct FungibleTransfers memory,struct Fees memory,enum OrderType)"}},"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20780:135:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6131,"nodeType":"ExpressionStatement","src":"20780:135:19"}]},"documentation":{"id":6000,"nodeType":"StructuredDocumentation","src":"18354:368:19","text":" @notice Take multiple bids; efficiently verifying and executing the transfers in bulk\n @param orders List of orders\n @param exchanges List of exchanges indicating the listing to take and the parameters to match it with\n @param takerFee Taker fee to be taken on each exchange\n @param signatures Bytes array of order signatures"},"id":6133,"implemented":true,"kind":"function","modifiers":[],"name":"_takeBid","nameLocation":"18736:8:19","nodeType":"FunctionDefinition","parameters":{"id":6014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6004,"mutability":"mutable","name":"orders","nameLocation":"18769:6:19","nodeType":"VariableDeclaration","scope":6133,"src":"18754:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_memory_ptr_$dyn_memory_ptr","typeString":"struct Order[]"},"typeName":{"baseType":{"id":6002,"nodeType":"UserDefinedTypeName","pathNode":{"id":6001,"name":"Order","nameLocations":["18754:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"18754:5:19"},"referencedDeclaration":7064,"src":"18754:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"id":6003,"nodeType":"ArrayTypeName","src":"18754:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_storage_$dyn_storage_ptr","typeString":"struct Order[]"}},"visibility":"internal"},{"constant":false,"id":6008,"mutability":"mutable","name":"exchanges","nameLocation":"18803:9:19","nodeType":"VariableDeclaration","scope":6133,"src":"18785:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange[]"},"typeName":{"baseType":{"id":6006,"nodeType":"UserDefinedTypeName","pathNode":{"id":6005,"name":"Exchange","nameLocations":["18785:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"18785:8:19"},"referencedDeclaration":7031,"src":"18785:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"id":6007,"nodeType":"ArrayTypeName","src":"18785:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_storage_$dyn_storage_ptr","typeString":"struct Exchange[]"}},"visibility":"internal"},{"constant":false,"id":6011,"mutability":"mutable","name":"takerFee","nameLocation":"18837:8:19","nodeType":"VariableDeclaration","scope":6133,"src":"18822:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":6010,"nodeType":"UserDefinedTypeName","pathNode":{"id":6009,"name":"FeeRate","nameLocations":["18822:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"18822:7:19"},"referencedDeclaration":7142,"src":"18822:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":6013,"mutability":"mutable","name":"signatures","nameLocation":"18868:10:19","nodeType":"VariableDeclaration","scope":6133,"src":"18855:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6012,"name":"bytes","nodeType":"ElementaryTypeName","src":"18855:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18744:140:19"},"returnParameters":{"id":6015,"nodeType":"ParameterList","parameters":[],"src":"18894:0:19"},"scope":6290,"src":"18727:2195:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6242,"nodeType":"Block","src":"21621:1929:19","statements":[{"assignments":[6150],"declarations":[{"constant":false,"id":6150,"mutability":"mutable","name":"arrayLength","nameLocation":"21759:11:19","nodeType":"VariableDeclaration","scope":6242,"src":"21751:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6149,"name":"uint256","nodeType":"ElementaryTypeName","src":"21751:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6156,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6151,"name":"Transfer_size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"21773:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6152,"name":"exchangesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"21789:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21773:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6154,"name":"One_word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"21807:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21773:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21751:64:19"},{"assignments":[6158],"declarations":[{"constant":false,"id":6158,"mutability":"mutable","name":"executionBatchLength","nameLocation":"21833:20:19","nodeType":"VariableDeclaration","scope":6242,"src":"21825:28:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"21825:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6162,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6159,"name":"ExecutionBatch_base_size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"21856:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6160,"name":"arrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"21883:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21856:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21825:69:19"},{"expression":{"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6163,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"21904:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6166,"name":"executionBatchLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"21931:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"21921:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6164,"name":"bytes","nodeType":"ElementaryTypeName","src":"21925:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21921:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"21904:48:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6169,"nodeType":"ExpressionStatement","src":"21904:48:19"},{"AST":{"nodeType":"YulBlock","src":"21971:720:19","statements":[{"nodeType":"YulVariableDeclaration","src":"21985:120:19","value":{"arguments":[{"name":"executionBatch","nodeType":"YulIdentifier","src":"22029:14:19"},{"name":"ExecutionBatch_calldata_offset","nodeType":"YulIdentifier","src":"22061:30:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22008:3:19"},"nodeType":"YulFunctionCall","src":"22008:97:19"},"variables":[{"name":"calldataPointer","nodeType":"YulTypedName","src":"21989:15:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"22129:15:19"},{"name":"ExecutionBatch_taker_offset","nodeType":"YulIdentifier","src":"22146:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22125:3:19"},"nodeType":"YulFunctionCall","src":"22125:49:19"},{"name":"taker","nodeType":"YulIdentifier","src":"22176:5:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22118:6:19"},"nodeType":"YulFunctionCall","src":"22118:64:19"},"nodeType":"YulExpressionStatement","src":"22118:64:19"},{"expression":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"22223:15:19"},{"name":"ExecutionBatch_orderType_offset","nodeType":"YulIdentifier","src":"22240:31:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22219:3:19"},"nodeType":"YulFunctionCall","src":"22219:53:19"},{"name":"orderType","nodeType":"YulIdentifier","src":"22290:9:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22195:6:19"},"nodeType":"YulFunctionCall","src":"22195:118:19"},"nodeType":"YulExpressionStatement","src":"22195:118:19"},{"expression":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"22354:15:19"},{"name":"ExecutionBatch_transfers_pointer_offset","nodeType":"YulIdentifier","src":"22371:39:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22350:3:19"},"nodeType":"YulFunctionCall","src":"22350:61:19"},{"name":"ExecutionBatch_transfers_offset","nodeType":"YulIdentifier","src":"22429:31:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22326:6:19"},"nodeType":"YulFunctionCall","src":"22326:148:19"},"nodeType":"YulExpressionStatement","src":"22326:148:19"},{"expression":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"22544:15:19"},{"name":"ExecutionBatch_transfers_offset","nodeType":"YulIdentifier","src":"22561:31:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22540:3:19"},"nodeType":"YulFunctionCall","src":"22540:53:19"},{"name":"exchangesLength","nodeType":"YulIdentifier","src":"22611:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22516:6:19"},"nodeType":"YulFunctionCall","src":"22516:124:19"},"nodeType":"YulExpressionStatement","src":"22516:124:19"}]},"evmVersion":"london","externalReferences":[{"declaration":6887,"isOffset":false,"isSlot":false,"src":"22061:30:19","valueSize":1},{"declaration":6896,"isOffset":false,"isSlot":false,"src":"22240:31:19","valueSize":1},{"declaration":6893,"isOffset":false,"isSlot":false,"src":"22146:27:19","valueSize":1},{"declaration":6905,"isOffset":false,"isSlot":false,"src":"22429:31:19","valueSize":1},{"declaration":6905,"isOffset":false,"isSlot":false,"src":"22561:31:19","valueSize":1},{"declaration":6899,"isOffset":false,"isSlot":false,"src":"22371:39:19","valueSize":1},{"declaration":6136,"isOffset":false,"isSlot":false,"src":"22611:15:19","valueSize":1},{"declaration":6144,"isOffset":false,"isSlot":false,"src":"22029:14:19","valueSize":1},{"declaration":6139,"isOffset":false,"isSlot":false,"src":"22290:9:19","valueSize":1},{"declaration":6141,"isOffset":false,"isSlot":false,"src":"22176:5:19","valueSize":1}],"id":6170,"nodeType":"InlineAssembly","src":"21962:729:19"},{"assignments":[6175],"declarations":[{"constant":false,"id":6175,"mutability":"mutable","name":"executions","nameLocation":"22782:10:19","nodeType":"VariableDeclaration","scope":6242,"src":"22757:35:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution[]"},"typeName":{"baseType":{"id":6173,"nodeType":"UserDefinedTypeName","pathNode":{"id":6172,"name":"AtomicExecution","nameLocations":["22757:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":7119,"src":"22757:15:19"},"referencedDeclaration":7119,"src":"22757:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_storage_ptr","typeString":"struct AtomicExecution"}},"id":6174,"nodeType":"ArrayTypeName","src":"22757:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_storage_$dyn_storage_ptr","typeString":"struct AtomicExecution[]"}},"visibility":"internal"}],"id":6182,"initialValue":{"arguments":[{"id":6180,"name":"exchangesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"22830:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"22795:21:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct AtomicExecution memory[] memory)"},"typeName":{"baseType":{"id":6177,"nodeType":"UserDefinedTypeName","pathNode":{"id":6176,"name":"AtomicExecution","nameLocations":["22799:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":7119,"src":"22799:15:19"},"referencedDeclaration":7119,"src":"22799:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_storage_ptr","typeString":"struct AtomicExecution"}},"id":6178,"nodeType":"ArrayTypeName","src":"22799:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_storage_$dyn_storage_ptr","typeString":"struct AtomicExecution[]"}}},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22795:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"22757:98:19"},{"assignments":[6187],"declarations":[{"constant":false,"id":6187,"mutability":"mutable","name":"feeRecipients","nameLocation":"22882:13:19","nodeType":"VariableDeclaration","scope":6242,"src":"22865:30:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6185,"name":"address","nodeType":"ElementaryTypeName","src":"22865:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6186,"nodeType":"ArrayTypeName","src":"22865:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":6193,"initialValue":{"arguments":[{"id":6191,"name":"exchangesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"22912:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"22898:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":6188,"name":"address","nodeType":"ElementaryTypeName","src":"22902:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6189,"nodeType":"ArrayTypeName","src":"22902:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22898:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"22865:63:19"},{"assignments":[6198],"declarations":[{"constant":false,"id":6198,"mutability":"mutable","name":"makers","nameLocation":"22955:6:19","nodeType":"VariableDeclaration","scope":6242,"src":"22938:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6196,"name":"address","nodeType":"ElementaryTypeName","src":"22938:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6197,"nodeType":"ArrayTypeName","src":"22938:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":6204,"initialValue":{"arguments":[{"id":6202,"name":"exchangesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"22978:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"22964:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":6199,"name":"address","nodeType":"ElementaryTypeName","src":"22968:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6200,"nodeType":"ArrayTypeName","src":"22968:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22964:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"22938:56:19"},{"assignments":[6209],"declarations":[{"constant":false,"id":6209,"mutability":"mutable","name":"makerTransfers","nameLocation":"23021:14:19","nodeType":"VariableDeclaration","scope":6242,"src":"23004:31:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6207,"name":"uint256","nodeType":"ElementaryTypeName","src":"23004:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6208,"nodeType":"ArrayTypeName","src":"23004:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6215,"initialValue":{"arguments":[{"id":6213,"name":"exchangesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"23052:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23038:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6210,"name":"uint256","nodeType":"ElementaryTypeName","src":"23042:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6211,"nodeType":"ArrayTypeName","src":"23042:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23038:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23004:64:19"},{"assignments":[6220],"declarations":[{"constant":false,"id":6220,"mutability":"mutable","name":"feeTransfers","nameLocation":"23095:12:19","nodeType":"VariableDeclaration","scope":6242,"src":"23078:29:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6218,"name":"uint256","nodeType":"ElementaryTypeName","src":"23078:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6219,"nodeType":"ArrayTypeName","src":"23078:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6226,"initialValue":{"arguments":[{"id":6224,"name":"exchangesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"23124:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23110:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6221,"name":"uint256","nodeType":"ElementaryTypeName","src":"23114:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6222,"nodeType":"ArrayTypeName","src":"23114:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23110:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23078:62:19"},{"expression":{"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6227,"name":"fungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"23150:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23220:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23256:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23286:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23317:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6233,"name":"feeRecipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"23347:13:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"hexValue":"30","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23383:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6235,"name":"makers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6198,"src":"23406:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":6236,"name":"feeTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"23440:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":6237,"name":"makerTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"23482:14:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":6238,"name":"executions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"23522:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_memory_ptr_$dyn_memory_ptr","typeString":"struct AtomicExecution memory[] memory"}],"id":6228,"name":"FungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"23170:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FungibleTransfers_$7103_storage_ptr_$","typeString":"type(struct FungibleTransfers storage pointer)"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["23202:16:19","23235:19:19","23271:13:19","23301:14:19","23332:13:19","23374:7:19","23398:6:19","23426:12:19","23466:14:19","23510:10:19"],"names":["totalProtocolFee","totalSellerTransfer","totalTakerFee","feeRecipientId","feeRecipients","makerId","makers","feeTransfers","makerTransfers","executions"],"nodeType":"FunctionCall","src":"23170:373:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"src":"23150:393:19","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers memory"}},"id":6241,"nodeType":"ExpressionStatement","src":"23150:393:19"}]},"documentation":{"id":6134,"nodeType":"StructuredDocumentation","src":"21111:230:19","text":" @notice Initialize the ExecutionBatch and FungibleTransfers objects for bulk execution\n @param exchangesLength Number of exchanges\n @param orderType Order type\n @param taker Order taker address"},"id":6243,"implemented":true,"kind":"function","modifiers":[],"name":"_initializeBatch","nameLocation":"21355:16:19","nodeType":"FunctionDefinition","parameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6136,"mutability":"mutable","name":"exchangesLength","nameLocation":"21389:15:19","nodeType":"VariableDeclaration","scope":6243,"src":"21381:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6135,"name":"uint256","nodeType":"ElementaryTypeName","src":"21381:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6139,"mutability":"mutable","name":"orderType","nameLocation":"21424:9:19","nodeType":"VariableDeclaration","scope":6243,"src":"21414:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":6138,"nodeType":"UserDefinedTypeName","pathNode":{"id":6137,"name":"OrderType","nameLocations":["21414:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"21414:9:19"},"referencedDeclaration":7019,"src":"21414:9:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":6141,"mutability":"mutable","name":"taker","nameLocation":"21451:5:19","nodeType":"VariableDeclaration","scope":6243,"src":"21443:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6140,"name":"address","nodeType":"ElementaryTypeName","src":"21443:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21371:91:19"},"returnParameters":{"id":6148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6144,"mutability":"mutable","name":"executionBatch","nameLocation":"21536:14:19","nodeType":"VariableDeclaration","scope":6243,"src":"21523:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6143,"name":"bytes","nodeType":"ElementaryTypeName","src":"21523:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6147,"mutability":"mutable","name":"fungibleTransfers","nameLocation":"21589:17:19","nodeType":"VariableDeclaration","scope":6243,"src":"21564:42:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_memory_ptr","typeString":"struct FungibleTransfers"},"typeName":{"id":6146,"nodeType":"UserDefinedTypeName","pathNode":{"id":6145,"name":"FungibleTransfers","nameLocations":["21564:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":7103,"src":"21564:17:19"},"referencedDeclaration":7103,"src":"21564:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_FungibleTransfers_$7103_storage_ptr","typeString":"struct FungibleTransfers"}},"visibility":"internal"}],"src":"21509:107:19"},"scope":6290,"src":"21346:2204:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6288,"nodeType":"Block","src":"24068:1125:19","statements":[{"assignments":[6262],"declarations":[{"constant":false,"id":6262,"mutability":"mutable","name":"arrayLength","nameLocation":"24206:11:19","nodeType":"VariableDeclaration","scope":6288,"src":"24198:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6261,"name":"uint256","nodeType":"ElementaryTypeName","src":"24198:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6266,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6263,"name":"Transfer_size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24220:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6264,"name":"One_word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"24236:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24220:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24198:46:19"},{"assignments":[6268],"declarations":[{"constant":false,"id":6268,"mutability":"mutable","name":"executionBatchLength","nameLocation":"24262:20:19","nodeType":"VariableDeclaration","scope":6288,"src":"24254:28:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6267,"name":"uint256","nodeType":"ElementaryTypeName","src":"24254:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6272,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6269,"name":"ExecutionBatch_base_size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"24285:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6270,"name":"arrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"24312:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24285:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24254:69:19"},{"expression":{"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6273,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"24333:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6276,"name":"executionBatchLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"24360:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24350:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6274,"name":"bytes","nodeType":"ElementaryTypeName","src":"24354:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24350:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"24333:48:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6279,"nodeType":"ExpressionStatement","src":"24333:48:19"},{"AST":{"nodeType":"YulBlock","src":"24400:660:19","statements":[{"nodeType":"YulVariableDeclaration","src":"24414:120:19","value":{"arguments":[{"name":"executionBatch","nodeType":"YulIdentifier","src":"24458:14:19"},{"name":"ExecutionBatch_calldata_offset","nodeType":"YulIdentifier","src":"24490:30:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24437:3:19"},"nodeType":"YulFunctionCall","src":"24437:97:19"},"variables":[{"name":"calldataPointer","nodeType":"YulTypedName","src":"24418:15:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"24558:15:19"},{"name":"ExecutionBatch_taker_offset","nodeType":"YulIdentifier","src":"24575:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24554:3:19"},"nodeType":"YulFunctionCall","src":"24554:49:19"},{"name":"taker","nodeType":"YulIdentifier","src":"24605:5:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24547:6:19"},"nodeType":"YulFunctionCall","src":"24547:64:19"},"nodeType":"YulExpressionStatement","src":"24547:64:19"},{"expression":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"24652:15:19"},{"name":"ExecutionBatch_orderType_offset","nodeType":"YulIdentifier","src":"24669:31:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24648:3:19"},"nodeType":"YulFunctionCall","src":"24648:53:19"},{"name":"orderType","nodeType":"YulIdentifier","src":"24719:9:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24624:6:19"},"nodeType":"YulFunctionCall","src":"24624:118:19"},"nodeType":"YulExpressionStatement","src":"24624:118:19"},{"expression":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"24783:15:19"},{"name":"ExecutionBatch_transfers_pointer_offset","nodeType":"YulIdentifier","src":"24800:39:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24779:3:19"},"nodeType":"YulFunctionCall","src":"24779:61:19"},{"name":"ExecutionBatch_transfers_offset","nodeType":"YulIdentifier","src":"24858:31:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24755:6:19"},"nodeType":"YulFunctionCall","src":"24755:148:19"},"nodeType":"YulExpressionStatement","src":"24755:148:19"},{"expression":{"arguments":[{"arguments":[{"name":"calldataPointer","nodeType":"YulIdentifier","src":"24956:15:19"},{"name":"ExecutionBatch_transfers_offset","nodeType":"YulIdentifier","src":"24973:31:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24952:3:19"},"nodeType":"YulFunctionCall","src":"24952:53:19"},{"kind":"number","nodeType":"YulLiteral","src":"25007:1:19","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24945:6:19"},"nodeType":"YulFunctionCall","src":"24945:64:19"},"nodeType":"YulExpressionStatement","src":"24945:64:19"}]},"evmVersion":"london","externalReferences":[{"declaration":6887,"isOffset":false,"isSlot":false,"src":"24490:30:19","valueSize":1},{"declaration":6896,"isOffset":false,"isSlot":false,"src":"24669:31:19","valueSize":1},{"declaration":6893,"isOffset":false,"isSlot":false,"src":"24575:27:19","valueSize":1},{"declaration":6905,"isOffset":false,"isSlot":false,"src":"24858:31:19","valueSize":1},{"declaration":6905,"isOffset":false,"isSlot":false,"src":"24973:31:19","valueSize":1},{"declaration":6899,"isOffset":false,"isSlot":false,"src":"24800:39:19","valueSize":1},{"declaration":6259,"isOffset":false,"isSlot":false,"src":"24458:14:19","valueSize":1},{"declaration":6250,"isOffset":false,"isSlot":false,"src":"24719:9:19","valueSize":1},{"declaration":6256,"isOffset":false,"isSlot":false,"src":"24605:5:19","valueSize":1}],"id":6280,"nodeType":"InlineAssembly","src":"24391:669:19"},{"expression":{"arguments":[{"id":6282,"name":"executionBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"25147:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6283,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"25163:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"}},{"id":6284,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"25170:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6285,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"25179:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6281,"name":"_insertNonfungibleTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"25120:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_struct$_Order_$7064_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes memory,struct Order memory,uint256,uint256) pure returns (uint256)"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25120:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6287,"nodeType":"ExpressionStatement","src":"25120:66:19"}]},"documentation":{"id":6244,"nodeType":"StructuredDocumentation","src":"23556:284:19","text":" @notice Initialize the ExecutionBatch object for a single execution\n @param order Order to take a Listing from\n @param orderType Order type\n @param tokenId Token id\n @param amount ERC721/ERC1155 amount\n @param taker Order taker address"},"id":6289,"implemented":true,"kind":"function","modifiers":[],"name":"_initializeSingleExecution","nameLocation":"23854:26:19","nodeType":"FunctionDefinition","parameters":{"id":6257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6247,"mutability":"mutable","name":"order","nameLocation":"23903:5:19","nodeType":"VariableDeclaration","scope":6289,"src":"23890:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":6246,"nodeType":"UserDefinedTypeName","pathNode":{"id":6245,"name":"Order","nameLocations":["23890:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"23890:5:19"},"referencedDeclaration":7064,"src":"23890:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":6250,"mutability":"mutable","name":"orderType","nameLocation":"23928:9:19","nodeType":"VariableDeclaration","scope":6289,"src":"23918:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":6249,"nodeType":"UserDefinedTypeName","pathNode":{"id":6248,"name":"OrderType","nameLocations":["23918:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"23918:9:19"},"referencedDeclaration":7019,"src":"23918:9:19","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":6252,"mutability":"mutable","name":"tokenId","nameLocation":"23955:7:19","nodeType":"VariableDeclaration","scope":6289,"src":"23947:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6251,"name":"uint256","nodeType":"ElementaryTypeName","src":"23947:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6254,"mutability":"mutable","name":"amount","nameLocation":"23980:6:19","nodeType":"VariableDeclaration","scope":6289,"src":"23972:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6253,"name":"uint256","nodeType":"ElementaryTypeName","src":"23972:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6256,"mutability":"mutable","name":"taker","nameLocation":"24004:5:19","nodeType":"VariableDeclaration","scope":6289,"src":"23996:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6255,"name":"address","nodeType":"ElementaryTypeName","src":"23996:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23880:135:19"},"returnParameters":{"id":6260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6259,"mutability":"mutable","name":"executionBatch","nameLocation":"24052:14:19","nodeType":"VariableDeclaration","scope":6289,"src":"24039:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6258,"name":"bytes","nodeType":"ElementaryTypeName","src":"24039:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24038:29:19"},"scope":6290,"src":"23845:1348:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6291,"src":"791:24404:19","usedErrors":[6323,6325,6327,6329,6331,6408,6410,6412,6414,6416,6522,6524,6526,6528]}],"src":"32:25164:19"}},"contracts/interfaces/IDelegate.sol":{"id":20,"ast":{"absolutePath":"contracts/interfaces/IDelegate.sol","exportedSymbols":{"AssetType":[7015],"IDelegate":[6314],"OrderType":[7019],"Transfer":[7076]},"id":6315,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6292,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:20"},{"absolutePath":"contracts/lib/Structs.sol","file":"../lib/Structs.sol","id":6296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6315,"sourceUnit":7150,"src":"57:68:20","symbolAliases":[{"foreign":{"id":6293,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"66:9:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6294,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"77:9:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6295,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"88:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IDelegate","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6314,"linearizedBaseContracts":[6314],"name":"IDelegate","nameLocation":"137:9:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a1ccb98e","id":6313,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"162:8:20","nodeType":"FunctionDefinition","parameters":{"id":6308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6298,"mutability":"mutable","name":"caller","nameLocation":"188:6:20","nodeType":"VariableDeclaration","scope":6313,"src":"180:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6297,"name":"address","nodeType":"ElementaryTypeName","src":"180:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6301,"mutability":"mutable","name":"orderType","nameLocation":"214:9:20","nodeType":"VariableDeclaration","scope":6313,"src":"204:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":6300,"nodeType":"UserDefinedTypeName","pathNode":{"id":6299,"name":"OrderType","nameLocations":["204:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"204:9:20"},"referencedDeclaration":7019,"src":"204:9:20","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":6305,"mutability":"mutable","name":"transfers","nameLocation":"253:9:20","nodeType":"VariableDeclaration","scope":6313,"src":"233:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transfer_$7076_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Transfer[]"},"typeName":{"baseType":{"id":6303,"nodeType":"UserDefinedTypeName","pathNode":{"id":6302,"name":"Transfer","nameLocations":["233:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":7076,"src":"233:8:20"},"referencedDeclaration":7076,"src":"233:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_storage_ptr","typeString":"struct Transfer"}},"id":6304,"nodeType":"ArrayTypeName","src":"233:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transfer_$7076_storage_$dyn_storage_ptr","typeString":"struct Transfer[]"}},"visibility":"internal"},{"constant":false,"id":6307,"mutability":"mutable","name":"length","nameLocation":"280:6:20","nodeType":"VariableDeclaration","scope":6313,"src":"272:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6306,"name":"uint256","nodeType":"ElementaryTypeName","src":"272:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"170:122:20"},"returnParameters":{"id":6312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"successful","nameLocation":"325:10:20","nodeType":"VariableDeclaration","scope":6313,"src":"311:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":6309,"name":"bool","nodeType":"ElementaryTypeName","src":"311:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6310,"nodeType":"ArrayTypeName","src":"311:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"310:26:20"},"scope":6314,"src":"153:184:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6315,"src":"127:212:20","usedErrors":[]}],"src":"32:308:20"}},"contracts/interfaces/IExecutor.sol":{"id":21,"ast":{"absolutePath":"contracts/interfaces/IExecutor.sol","exportedSymbols":{"FeeRate":[7142],"Fees":[7137],"IExecutor":[6396],"OrderType":[7019],"Transfer":[7076]},"id":6397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6316,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:21"},{"absolutePath":"contracts/lib/Structs.sol","file":"../lib/Structs.sol","id":6321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6397,"sourceUnit":7150,"src":"57:88:21","symbolAliases":[{"foreign":{"id":6317,"name":"Fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"70:4:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6318,"name":"FeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"80:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6319,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"93:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6320,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"107:9:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IExecutor","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":6396,"linearizedBaseContracts":[6396],"name":"IExecutor","nameLocation":"157:9:21","nodeType":"ContractDefinition","nodes":[{"errorSelector":"b12d13eb","id":6323,"name":"ETHTransferFailed","nameLocation":"179:17:21","nodeType":"ErrorDefinition","parameters":{"id":6322,"nodeType":"ParameterList","parameters":[],"src":"196:2:21"},"src":"173:26:21"},{"errorSelector":"ebf03b83","id":6325,"name":"PoolTransferFailed","nameLocation":"210:18:21","nodeType":"ErrorDefinition","parameters":{"id":6324,"nodeType":"ParameterList","parameters":[],"src":"228:2:21"},"src":"204:27:21"},{"errorSelector":"bcfdca59","id":6327,"name":"PoolWithdrawFromFailed","nameLocation":"242:22:21","nodeType":"ErrorDefinition","parameters":{"id":6326,"nodeType":"ParameterList","parameters":[],"src":"264:2:21"},"src":"236:31:21"},{"errorSelector":"3929ee69","id":6329,"name":"PoolDepositFailed","nameLocation":"278:17:21","nodeType":"ErrorDefinition","parameters":{"id":6328,"nodeType":"ParameterList","parameters":[],"src":"295:2:21"},"src":"272:26:21"},{"errorSelector":"56f1733f","id":6331,"name":"OrderFulfilled","nameLocation":"309:14:21","nodeType":"ErrorDefinition","parameters":{"id":6330,"nodeType":"ParameterList","parameters":[],"src":"323:2:21"},"src":"303:23:21"},{"anonymous":false,"eventSelector":"f2f66294df6fae7ac681cbe2f6d91c6904485929679dce263e8f6539b7d5c559","id":6351,"name":"Execution","nameLocation":"338:9:21","nodeType":"EventDefinition","parameters":{"id":6350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6334,"indexed":false,"mutability":"mutable","name":"transfer","nameLocation":"366:8:21","nodeType":"VariableDeclaration","scope":6351,"src":"357:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_memory_ptr","typeString":"struct Transfer"},"typeName":{"id":6333,"nodeType":"UserDefinedTypeName","pathNode":{"id":6332,"name":"Transfer","nameLocations":["357:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":7076,"src":"357:8:21"},"referencedDeclaration":7076,"src":"357:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7076_storage_ptr","typeString":"struct Transfer"}},"visibility":"internal"},{"constant":false,"id":6336,"indexed":false,"mutability":"mutable","name":"orderHash","nameLocation":"392:9:21","nodeType":"VariableDeclaration","scope":6351,"src":"384:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"384:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6338,"indexed":false,"mutability":"mutable","name":"listingIndex","nameLocation":"419:12:21","nodeType":"VariableDeclaration","scope":6351,"src":"411:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6337,"name":"uint256","nodeType":"ElementaryTypeName","src":"411:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6340,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"449:5:21","nodeType":"VariableDeclaration","scope":6351,"src":"441:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6339,"name":"uint256","nodeType":"ElementaryTypeName","src":"441:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6343,"indexed":false,"mutability":"mutable","name":"makerFee","nameLocation":"472:8:21","nodeType":"VariableDeclaration","scope":6351,"src":"464:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_memory_ptr","typeString":"struct FeeRate"},"typeName":{"id":6342,"nodeType":"UserDefinedTypeName","pathNode":{"id":6341,"name":"FeeRate","nameLocations":["464:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"464:7:21"},"referencedDeclaration":7142,"src":"464:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":6346,"indexed":false,"mutability":"mutable","name":"fees","nameLocation":"495:4:21","nodeType":"VariableDeclaration","scope":6351,"src":"490:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_memory_ptr","typeString":"struct Fees"},"typeName":{"id":6345,"nodeType":"UserDefinedTypeName","pathNode":{"id":6344,"name":"Fees","nameLocations":["490:4:21"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"490:4:21"},"referencedDeclaration":7137,"src":"490:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$7137_storage_ptr","typeString":"struct Fees"}},"visibility":"internal"},{"constant":false,"id":6349,"indexed":false,"mutability":"mutable","name":"orderType","nameLocation":"519:9:21","nodeType":"VariableDeclaration","scope":6351,"src":"509:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":6348,"nodeType":"UserDefinedTypeName","pathNode":{"id":6347,"name":"OrderType","nameLocations":["509:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"509:9:21"},"referencedDeclaration":7019,"src":"509:9:21","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"}],"src":"347:187:21"},"src":"332:203:21"},{"anonymous":false,"eventSelector":"0de8ec6f3c5ad776bdb633c254951684876acf499858b05f68028e0622571367","id":6367,"name":"ExecutionAcceptCollectionOffer","nameLocation":"547:30:21","nodeType":"EventDefinition","parameters":{"id":6366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6353,"indexed":false,"mutability":"mutable","name":"offerCollectionHash","nameLocation":"595:19:21","nodeType":"VariableDeclaration","scope":6367,"src":"587:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"587:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6355,"indexed":false,"mutability":"mutable","name":"accepter","nameLocation":"632:8:21","nodeType":"VariableDeclaration","scope":6367,"src":"624:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6354,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6357,"indexed":false,"mutability":"mutable","name":"bidder","nameLocation":"658:6:21","nodeType":"VariableDeclaration","scope":6367,"src":"650:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6356,"name":"address","nodeType":"ElementaryTypeName","src":"650:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6359,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"682:7:21","nodeType":"VariableDeclaration","scope":6367,"src":"674:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6358,"name":"uint256","nodeType":"ElementaryTypeName","src":"674:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6361,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"707:6:21","nodeType":"VariableDeclaration","scope":6367,"src":"699:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6360,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6363,"indexed":false,"mutability":"mutable","name":"pricePerItem","nameLocation":"731:12:21","nodeType":"VariableDeclaration","scope":6367,"src":"723:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6362,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6365,"indexed":false,"mutability":"mutable","name":"remaining","nameLocation":"761:9:21","nodeType":"VariableDeclaration","scope":6367,"src":"753:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6364,"name":"uint256","nodeType":"ElementaryTypeName","src":"753:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:199:21"},"src":"541:236:21"},{"anonymous":false,"eventSelector":"1d5e12b51dee5e4d34434576c3fb99714a85f57b0fd546ada4b0bddd736d12b2","id":6375,"name":"Execution721Packed","nameLocation":"789:18:21","nodeType":"EventDefinition","parameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6369,"indexed":false,"mutability":"mutable","name":"orderHash","nameLocation":"825:9:21","nodeType":"VariableDeclaration","scope":6375,"src":"817:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"817:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6371,"indexed":false,"mutability":"mutable","name":"tokenIdListingIndexTrader","nameLocation":"852:25:21","nodeType":"VariableDeclaration","scope":6375,"src":"844:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6370,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6373,"indexed":false,"mutability":"mutable","name":"collectionPriceSide","nameLocation":"895:19:21","nodeType":"VariableDeclaration","scope":6375,"src":"887:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6372,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"807:113:21"},"src":"783:138:21"},{"anonymous":false,"eventSelector":"0fcf17fac114131b10f37b183c6a60f905911e52802caeeb3e6ea210398b81ab","id":6385,"name":"Execution721TakerFeePacked","nameLocation":"933:26:21","nodeType":"EventDefinition","parameters":{"id":6384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"indexed":false,"mutability":"mutable","name":"orderHash","nameLocation":"977:9:21","nodeType":"VariableDeclaration","scope":6385,"src":"969:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"969:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6379,"indexed":false,"mutability":"mutable","name":"tokenIdListingIndexTrader","nameLocation":"1004:25:21","nodeType":"VariableDeclaration","scope":6385,"src":"996:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6378,"name":"uint256","nodeType":"ElementaryTypeName","src":"996:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6381,"indexed":false,"mutability":"mutable","name":"collectionPriceSide","nameLocation":"1047:19:21","nodeType":"VariableDeclaration","scope":6385,"src":"1039:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1039:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6383,"indexed":false,"mutability":"mutable","name":"takerFeeRecipientRate","nameLocation":"1084:21:21","nodeType":"VariableDeclaration","scope":6385,"src":"1076:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"959:152:21"},"src":"927:185:21"},{"anonymous":false,"eventSelector":"7dc5c0699ac8dd5250cbe368a2fc3b4a2daadb120ad07f6cccea29f83482686e","id":6395,"name":"Execution721MakerFeePacked","nameLocation":"1124:26:21","nodeType":"EventDefinition","parameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6387,"indexed":false,"mutability":"mutable","name":"orderHash","nameLocation":"1168:9:21","nodeType":"VariableDeclaration","scope":6395,"src":"1160:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1160:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6389,"indexed":false,"mutability":"mutable","name":"tokenIdListingIndexTrader","nameLocation":"1195:25:21","nodeType":"VariableDeclaration","scope":6395,"src":"1187:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6388,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6391,"indexed":false,"mutability":"mutable","name":"collectionPriceSide","nameLocation":"1238:19:21","nodeType":"VariableDeclaration","scope":6395,"src":"1230:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6393,"indexed":false,"mutability":"mutable","name":"makerFeeRecipientRate","nameLocation":"1275:21:21","nodeType":"VariableDeclaration","scope":6395,"src":"1267:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1150:152:21"},"src":"1118:185:21"}],"scope":6397,"src":"147:1158:21","usedErrors":[6323,6325,6327,6329,6331]}],"src":"32:1274:21"}},"contracts/interfaces/ISignatures.sol":{"id":22,"ast":{"absolutePath":"contracts/interfaces/ISignatures.sol","exportedSymbols":{"ISignatures":[6478],"Listing":[7040],"Order":[7064],"OrderType":[7019],"TakeAsk":[6960],"TakeAskSingle":[6974],"TakeBid":[6988],"TakeBidSingle":[7012]},"id":6479,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6398,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:22"},{"absolutePath":"contracts/lib/Structs.sol","file":"../lib/Structs.sol","id":6406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6479,"sourceUnit":7150,"src":"57:109:22","symbolAliases":[{"foreign":{"id":6399,"name":"TakeAsk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"65:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6400,"name":"TakeBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"74:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6401,"name":"TakeAskSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"83:13:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6402,"name":"TakeBidSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"98:13:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6403,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"113:5:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6404,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"120:9:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6405,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"131:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ISignatures","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6478,"linearizedBaseContracts":[6478],"name":"ISignatures","nameLocation":"178:11:22","nodeType":"ContractDefinition","nodes":[{"errorSelector":"82b42900","id":6408,"name":"Unauthorized","nameLocation":"202:12:22","nodeType":"ErrorDefinition","parameters":{"id":6407,"nodeType":"ParameterList","parameters":[],"src":"214:2:22"},"src":"196:21:22"},{"errorSelector":"58bd553e","id":6410,"name":"ExpiredOracleSignature","nameLocation":"228:22:22","nodeType":"ErrorDefinition","parameters":{"id":6409,"nodeType":"ParameterList","parameters":[],"src":"250:2:22"},"src":"222:31:22"},{"errorSelector":"db8d1fb7","id":6412,"name":"UnauthorizedOracle","nameLocation":"264:18:22","nodeType":"ErrorDefinition","parameters":{"id":6411,"nodeType":"ParameterList","parameters":[],"src":"282:2:22"},"src":"258:27:22"},{"errorSelector":"2f58c7cd","id":6414,"name":"InvalidOracleSignature","nameLocation":"296:22:22","nodeType":"ErrorDefinition","parameters":{"id":6413,"nodeType":"ParameterList","parameters":[],"src":"318:2:22"},"src":"290:31:22"},{"errorSelector":"eb127982","id":6416,"name":"InvalidDomain","nameLocation":"332:13:22","nodeType":"ErrorDefinition","parameters":{"id":6415,"nodeType":"ParameterList","parameters":[],"src":"345:2:22"},"src":"326:22:22"},{"functionSelector":"addd5099","id":6423,"implemented":false,"kind":"function","modifiers":[],"name":"oracles","nameLocation":"363:7:22","nodeType":"FunctionDefinition","parameters":{"id":6419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6418,"mutability":"mutable","name":"oracle","nameLocation":"379:6:22","nodeType":"VariableDeclaration","scope":6423,"src":"371:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6417,"name":"address","nodeType":"ElementaryTypeName","src":"371:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"370:16:22"},"returnParameters":{"id":6422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6423,"src":"410:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6420,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:9:22"},"scope":6478,"src":"354:65:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7ecebe00","id":6430,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"434:6:22","nodeType":"FunctionDefinition","parameters":{"id":6426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6425,"mutability":"mutable","name":"user","nameLocation":"449:4:22","nodeType":"VariableDeclaration","scope":6430,"src":"441:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6424,"name":"address","nodeType":"ElementaryTypeName","src":"441:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"440:14:22"},"returnParameters":{"id":6429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6430,"src":"478:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6427,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"477:9:22"},"scope":6478,"src":"425:62:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a4b2c674","id":6435,"implemented":false,"kind":"function","modifiers":[],"name":"blockRange","nameLocation":"502:10:22","nodeType":"FunctionDefinition","parameters":{"id":6431,"nodeType":"ParameterList","parameters":[],"src":"512:2:22"},"returnParameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6435,"src":"538:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6432,"name":"uint256","nodeType":"ElementaryTypeName","src":"538:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"537:9:22"},"scope":6478,"src":"493:54:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"708ef9aa","id":6438,"implemented":false,"kind":"function","modifiers":[],"name":"verifyDomain","nameLocation":"562:12:22","nodeType":"FunctionDefinition","parameters":{"id":6436,"nodeType":"ParameterList","parameters":[],"src":"574:2:22"},"returnParameters":{"id":6437,"nodeType":"ParameterList","parameters":[],"src":"590:0:22"},"scope":6478,"src":"553:38:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f47b7740","id":6445,"implemented":false,"kind":"function","modifiers":[],"name":"information","nameLocation":"606:11:22","nodeType":"FunctionDefinition","parameters":{"id":6439,"nodeType":"ParameterList","parameters":[],"src":"617:2:22"},"returnParameters":{"id":6444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"version","nameLocation":"681:7:22","nodeType":"VariableDeclaration","scope":6445,"src":"667:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6440,"name":"string","nodeType":"ElementaryTypeName","src":"667:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6443,"mutability":"mutable","name":"domainSeparator","nameLocation":"698:15:22","nodeType":"VariableDeclaration","scope":6445,"src":"690:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"690:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"666:48:22"},"scope":6478,"src":"597:118:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"87cc694d","id":6453,"implemented":false,"kind":"function","modifiers":[],"name":"hashListing","nameLocation":"730:11:22","nodeType":"FunctionDefinition","parameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"listing","nameLocation":"766:7:22","nodeType":"VariableDeclaration","scope":6453,"src":"751:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_memory_ptr","typeString":"struct Listing"},"typeName":{"id":6447,"nodeType":"UserDefinedTypeName","pathNode":{"id":6446,"name":"Listing","nameLocations":["751:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"751:7:22"},"referencedDeclaration":7040,"src":"751:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"}],"src":"741:38:22"},"returnParameters":{"id":6452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6453,"src":"803:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"803:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"802:9:22"},"scope":6478,"src":"721:91:22","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"51114ffa","id":6464,"implemented":false,"kind":"function","modifiers":[],"name":"hashOrder","nameLocation":"827:9:22","nodeType":"FunctionDefinition","parameters":{"id":6460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6456,"mutability":"mutable","name":"order","nameLocation":"859:5:22","nodeType":"VariableDeclaration","scope":6464,"src":"846:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":6455,"nodeType":"UserDefinedTypeName","pathNode":{"id":6454,"name":"Order","nameLocations":["846:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"846:5:22"},"referencedDeclaration":7064,"src":"846:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":6459,"mutability":"mutable","name":"orderType","nameLocation":"884:9:22","nodeType":"VariableDeclaration","scope":6464,"src":"874:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":6458,"nodeType":"UserDefinedTypeName","pathNode":{"id":6457,"name":"OrderType","nameLocations":["874:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"874:9:22"},"referencedDeclaration":7019,"src":"874:9:22","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"}],"src":"836:63:22"},"returnParameters":{"id":6463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6464,"src":"923:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"923:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"922:9:22"},"scope":6478,"src":"818:114:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6bf68190","id":6477,"implemented":false,"kind":"function","modifiers":[],"name":"hashOfferCollection","nameLocation":"947:19:22","nodeType":"FunctionDefinition","parameters":{"id":6473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"mutability":"mutable","name":"order","nameLocation":"989:5:22","nodeType":"VariableDeclaration","scope":6477,"src":"976:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_memory_ptr","typeString":"struct Order"},"typeName":{"id":6466,"nodeType":"UserDefinedTypeName","pathNode":{"id":6465,"name":"Order","nameLocations":["976:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"976:5:22"},"referencedDeclaration":7064,"src":"976:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":6470,"mutability":"mutable","name":"orderType","nameLocation":"1014:9:22","nodeType":"VariableDeclaration","scope":6477,"src":"1004:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"},"typeName":{"id":6469,"nodeType":"UserDefinedTypeName","pathNode":{"id":6468,"name":"OrderType","nameLocations":["1004:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":7019,"src":"1004:9:22"},"referencedDeclaration":7019,"src":"1004:9:22","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$7019","typeString":"enum OrderType"}},"visibility":"internal"},{"constant":false,"id":6472,"mutability":"mutable","name":"pricePerItem","nameLocation":"1041:12:22","nodeType":"VariableDeclaration","scope":6477,"src":"1033:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1033:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"966:93:22"},"returnParameters":{"id":6476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6477,"src":"1083:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1083:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1082:9:22"},"scope":6478,"src":"938:154:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6479,"src":"168:1354:22","usedErrors":[6408,6410,6412,6414,6416]}],"src":"32:1491:22"}},"contracts/interfaces/IValidation.sol":{"id":23,"ast":{"absolutePath":"contracts/interfaces/IValidation.sol","exportedSymbols":{"FeeRate":[7142],"IValidation":[6501]},"id":6502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6480,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:23"},{"absolutePath":"contracts/lib/Structs.sol","file":"../lib/Structs.sol","id":6482,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6502,"sourceUnit":7150,"src":"57:45:23","symbolAliases":[{"foreign":{"id":6481,"name":"FeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"66:7:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IValidation","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6501,"linearizedBaseContracts":[6501],"name":"IValidation","nameLocation":"114:11:23","nodeType":"ContractDefinition","nodes":[{"functionSelector":"b0e21e8a","id":6489,"implemented":false,"kind":"function","modifiers":[],"name":"protocolFee","nameLocation":"141:11:23","nodeType":"FunctionDefinition","parameters":{"id":6483,"nodeType":"ParameterList","parameters":[],"src":"152:2:23"},"returnParameters":{"id":6488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6489,"src":"178:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6484,"name":"address","nodeType":"ElementaryTypeName","src":"178:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6489,"src":"187:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6486,"name":"uint16","nodeType":"ElementaryTypeName","src":"187:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"177:17:23"},"scope":6501,"src":"132:63:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3c2ab6bf","id":6500,"implemented":false,"kind":"function","modifiers":[],"name":"amountTaken","nameLocation":"210:11:23","nodeType":"FunctionDefinition","parameters":{"id":6496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6491,"mutability":"mutable","name":"user","nameLocation":"230:4:23","nodeType":"VariableDeclaration","scope":6500,"src":"222:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6490,"name":"address","nodeType":"ElementaryTypeName","src":"222:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6493,"mutability":"mutable","name":"hash","nameLocation":"244:4:23","nodeType":"VariableDeclaration","scope":6500,"src":"236:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"236:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6495,"mutability":"mutable","name":"listingIndex","nameLocation":"258:12:23","nodeType":"VariableDeclaration","scope":6500,"src":"250:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6494,"name":"uint256","nodeType":"ElementaryTypeName","src":"250:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"221:50:23"},"returnParameters":{"id":6499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6500,"src":"295:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6497,"name":"uint256","nodeType":"ElementaryTypeName","src":"295:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"294:9:23"},"scope":6501,"src":"201:103:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6502,"src":"104:202:23","usedErrors":[]}],"src":"32:275:23"}},"contracts/interfaces/IZeZuExchange.sol":{"id":24,"ast":{"absolutePath":"contracts/interfaces/IZeZuExchange.sol","exportedSymbols":{"AssetType":[7015],"Cancel":[7149],"Exchange":[7031],"FeeRate":[7142],"Fees":[7137],"FungibleTransfers":[7103],"IZeZuExchange":[6633],"Listing":[7040],"Order":[7064],"OrderType":[7019],"StateUpdate":[7130],"TakeAsk":[6960],"TakeAskSingle":[6974],"TakeBid":[6988],"TakeBidSingle":[7012],"TakeCollectionOffer":[7000],"Transfer":[7076]},"id":6634,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6503,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:24"},{"absolutePath":"contracts/lib/Structs.sol","file":"../lib/Structs.sol","id":6520,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6634,"sourceUnit":7150,"src":"57:216:24","symbolAliases":[{"foreign":{"id":6504,"name":"TakeAsk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"65:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6505,"name":"TakeBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"74:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6506,"name":"TakeAskSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"83:13:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6507,"name":"TakeBidSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"98:13:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6508,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"113:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6509,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"120:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6510,"name":"Fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"130:4:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6511,"name":"FeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"136:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6512,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"145:9:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6513,"name":"OrderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"156:9:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6514,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"167:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6515,"name":"FungibleTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"177:17:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6516,"name":"StateUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"196:11:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6517,"name":"Cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"209:6:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6518,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"217:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6519,"name":"TakeCollectionOffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"226:19:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IZeZuExchange","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6633,"linearizedBaseContracts":[6633],"name":"IZeZuExchange","nameLocation":"285:13:24","nodeType":"ContractDefinition","nodes":[{"errorSelector":"356680b7","id":6522,"name":"InsufficientFunds","nameLocation":"311:17:24","nodeType":"ErrorDefinition","parameters":{"id":6521,"nodeType":"ParameterList","parameters":[],"src":"328:2:24"},"src":"305:26:24"},{"errorSelector":"045c4b02","id":6524,"name":"TokenTransferFailed","nameLocation":"342:19:24","nodeType":"ErrorDefinition","parameters":{"id":6523,"nodeType":"ParameterList","parameters":[],"src":"361:2:24"},"src":"336:28:24"},{"errorSelector":"af610693","id":6526,"name":"InvalidOrder","nameLocation":"375:12:24","nodeType":"ErrorDefinition","parameters":{"id":6525,"nodeType":"ParameterList","parameters":[],"src":"387:2:24"},"src":"369:21:24"},{"errorSelector":"499fddb1","id":6528,"name":"ProtocolFeeTooHigh","nameLocation":"401:18:24","nodeType":"ErrorDefinition","parameters":{"id":6527,"nodeType":"ParameterList","parameters":[],"src":"419:2:24"},"src":"395:27:24"},{"anonymous":false,"eventSelector":"1d9e390a0f55a4e3251a1de541b3da1cb012fd85d9b4f0098bcffb70c4f4032d","id":6534,"name":"NewProtocolFee","nameLocation":"434:14:24","nodeType":"EventDefinition","parameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6530,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"465:9:24","nodeType":"VariableDeclaration","scope":6534,"src":"449:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6529,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6532,"indexed":true,"mutability":"mutable","name":"rate","nameLocation":"491:4:24","nodeType":"VariableDeclaration","scope":6534,"src":"476:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6531,"name":"uint16","nodeType":"ElementaryTypeName","src":"476:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"448:48:24"},"src":"428:69:24"},{"anonymous":false,"eventSelector":"5425363a03f182281120f5919107c49c7a1a623acc1cbc6df468b6f0c11fcf8c","id":6538,"name":"NewGovernor","nameLocation":"508:11:24","nodeType":"EventDefinition","parameters":{"id":6537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6536,"indexed":true,"mutability":"mutable","name":"governor","nameLocation":"536:8:24","nodeType":"VariableDeclaration","scope":6538,"src":"520:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6535,"name":"address","nodeType":"ElementaryTypeName","src":"520:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"519:26:24"},"src":"502:44:24"},{"anonymous":false,"eventSelector":"7706177c541ba1b858371bfc568aa77450b4713bbdbba62c730d4484ab6c1251","id":6542,"name":"NewBlockRange","nameLocation":"557:13:24","nodeType":"EventDefinition","parameters":{"id":6541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6540,"indexed":false,"mutability":"mutable","name":"blockRange","nameLocation":"579:10:24","nodeType":"VariableDeclaration","scope":6542,"src":"571:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6539,"name":"uint256","nodeType":"ElementaryTypeName","src":"571:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"570:20:24"},"src":"551:40:24"},{"anonymous":false,"eventSelector":"f4092a7c54e135dc5f273d6675327b7b7838392537d2f7b63f7acbec8c7cd296","id":6552,"name":"CancelTrade","nameLocation":"602:11:24","nodeType":"EventDefinition","parameters":{"id":6551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6544,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"639:4:24","nodeType":"VariableDeclaration","scope":6552,"src":"623:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6543,"name":"address","nodeType":"ElementaryTypeName","src":"623:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6546,"indexed":false,"mutability":"mutable","name":"hash","nameLocation":"661:4:24","nodeType":"VariableDeclaration","scope":6552,"src":"653:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"653:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6548,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"683:5:24","nodeType":"VariableDeclaration","scope":6552,"src":"675:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6547,"name":"uint256","nodeType":"ElementaryTypeName","src":"675:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6550,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"706:6:24","nodeType":"VariableDeclaration","scope":6552,"src":"698:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6549,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"613:105:24"},"src":"596:123:24"},{"anonymous":false,"eventSelector":"a82a649bbd060c9099cd7b7326e2b0dc9e9af0836480e0f849dc9eaa79710b3b","id":6558,"name":"NonceIncremented","nameLocation":"730:16:24","nodeType":"EventDefinition","parameters":{"id":6557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6554,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"763:4:24","nodeType":"VariableDeclaration","scope":6558,"src":"747:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6553,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6556,"indexed":false,"mutability":"mutable","name":"newNonce","nameLocation":"777:8:24","nodeType":"VariableDeclaration","scope":6558,"src":"769:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6555,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"746:40:24"},"src":"724:63:24"},{"anonymous":false,"eventSelector":"cc852792b7afae13c99037685c90dd3be44073d4bc32aa8c1b72fd07a2ac537c","id":6564,"name":"SetOracle","nameLocation":"798:9:24","nodeType":"EventDefinition","parameters":{"id":6563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"824:4:24","nodeType":"VariableDeclaration","scope":6564,"src":"808:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6559,"name":"address","nodeType":"ElementaryTypeName","src":"808:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6562,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"835:8:24","nodeType":"VariableDeclaration","scope":6564,"src":"830:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6561,"name":"bool","nodeType":"ElementaryTypeName","src":"830:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"807:37:24"},"src":"792:53:24"},{"functionSelector":"3a16b768","id":6571,"implemented":false,"kind":"function","modifiers":[],"name":"setProtocolFee","nameLocation":"900:14:24","nodeType":"FunctionDefinition","parameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"mutability":"mutable","name":"recipient","nameLocation":"923:9:24","nodeType":"VariableDeclaration","scope":6571,"src":"915:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6565,"name":"address","nodeType":"ElementaryTypeName","src":"915:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6568,"mutability":"mutable","name":"rate","nameLocation":"941:4:24","nodeType":"VariableDeclaration","scope":6571,"src":"934:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6567,"name":"uint16","nodeType":"ElementaryTypeName","src":"934:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"914:32:24"},"returnParameters":{"id":6570,"nodeType":"ParameterList","parameters":[],"src":"955:0:24"},"scope":6633,"src":"891:65:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c42cf535","id":6576,"implemented":false,"kind":"function","modifiers":[],"name":"setGovernor","nameLocation":"971:11:24","nodeType":"FunctionDefinition","parameters":{"id":6574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6573,"mutability":"mutable","name":"_governor","nameLocation":"991:9:24","nodeType":"VariableDeclaration","scope":6576,"src":"983:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6572,"name":"address","nodeType":"ElementaryTypeName","src":"983:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"982:19:24"},"returnParameters":{"id":6575,"nodeType":"ParameterList","parameters":[],"src":"1010:0:24"},"scope":6633,"src":"962:49:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3f8fc233","id":6583,"implemented":false,"kind":"function","modifiers":[],"name":"cancelTrades","nameLocation":"1156:12:24","nodeType":"FunctionDefinition","parameters":{"id":6581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6580,"mutability":"mutable","name":"cancels","nameLocation":"1185:7:24","nodeType":"VariableDeclaration","scope":6583,"src":"1169:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cancel_$7149_memory_ptr_$dyn_memory_ptr","typeString":"struct Cancel[]"},"typeName":{"baseType":{"id":6578,"nodeType":"UserDefinedTypeName","pathNode":{"id":6577,"name":"Cancel","nameLocations":["1169:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":7149,"src":"1169:6:24"},"referencedDeclaration":7149,"src":"1169:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_Cancel_$7149_storage_ptr","typeString":"struct Cancel"}},"id":6579,"nodeType":"ArrayTypeName","src":"1169:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cancel_$7149_storage_$dyn_storage_ptr","typeString":"struct Cancel[]"}},"visibility":"internal"}],"src":"1168:25:24"},"returnParameters":{"id":6582,"nodeType":"ParameterList","parameters":[],"src":"1202:0:24"},"scope":6633,"src":"1147:56:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"627cdcb9","id":6586,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1218:14:24","nodeType":"FunctionDefinition","parameters":{"id":6584,"nodeType":"ParameterList","parameters":[],"src":"1232:2:24"},"returnParameters":{"id":6585,"nodeType":"ParameterList","parameters":[],"src":"1243:0:24"},"scope":6633,"src":"1209:35:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1ec1fd88","id":6592,"implemented":false,"kind":"function","modifiers":[],"name":"takeAsk","nameLocation":"1443:7:24","nodeType":"FunctionDefinition","parameters":{"id":6590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6589,"mutability":"mutable","name":"inputs","nameLocation":"1466:6:24","nodeType":"VariableDeclaration","scope":6592,"src":"1451:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_memory_ptr","typeString":"struct TakeAsk"},"typeName":{"id":6588,"nodeType":"UserDefinedTypeName","pathNode":{"id":6587,"name":"TakeAsk","nameLocations":["1451:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":6960,"src":"1451:7:24"},"referencedDeclaration":6960,"src":"1451:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_storage_ptr","typeString":"struct TakeAsk"}},"visibility":"internal"}],"src":"1450:23:24"},"returnParameters":{"id":6591,"nodeType":"ParameterList","parameters":[],"src":"1490:0:24"},"scope":6633,"src":"1434:57:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"7c7c5507","id":6598,"implemented":false,"kind":"function","modifiers":[],"name":"takeBid","nameLocation":"1506:7:24","nodeType":"FunctionDefinition","parameters":{"id":6596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6595,"mutability":"mutable","name":"inputs","nameLocation":"1529:6:24","nodeType":"VariableDeclaration","scope":6598,"src":"1514:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBid_$6988_memory_ptr","typeString":"struct TakeBid"},"typeName":{"id":6594,"nodeType":"UserDefinedTypeName","pathNode":{"id":6593,"name":"TakeBid","nameLocations":["1514:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":6988,"src":"1514:7:24"},"referencedDeclaration":6988,"src":"1514:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBid_$6988_storage_ptr","typeString":"struct TakeBid"}},"visibility":"internal"}],"src":"1513:23:24"},"returnParameters":{"id":6597,"nodeType":"ParameterList","parameters":[],"src":"1545:0:24"},"scope":6633,"src":"1497:49:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"455fce13","id":6604,"implemented":false,"kind":"function","modifiers":[],"name":"takeAskSingle","nameLocation":"1561:13:24","nodeType":"FunctionDefinition","parameters":{"id":6602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6601,"mutability":"mutable","name":"inputs","nameLocation":"1596:6:24","nodeType":"VariableDeclaration","scope":6604,"src":"1575:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_memory_ptr","typeString":"struct TakeAskSingle"},"typeName":{"id":6600,"nodeType":"UserDefinedTypeName","pathNode":{"id":6599,"name":"TakeAskSingle","nameLocations":["1575:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":6974,"src":"1575:13:24"},"referencedDeclaration":6974,"src":"1575:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_storage_ptr","typeString":"struct TakeAskSingle"}},"visibility":"internal"}],"src":"1574:29:24"},"returnParameters":{"id":6603,"nodeType":"ParameterList","parameters":[],"src":"1620:0:24"},"scope":6633,"src":"1552:69:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"069827e2","id":6610,"implemented":false,"kind":"function","modifiers":[],"name":"takeBidSingle","nameLocation":"1636:13:24","nodeType":"FunctionDefinition","parameters":{"id":6608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6607,"mutability":"mutable","name":"inputs","nameLocation":"1671:6:24","nodeType":"VariableDeclaration","scope":6610,"src":"1650:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBidSingle_$7012_memory_ptr","typeString":"struct TakeBidSingle"},"typeName":{"id":6606,"nodeType":"UserDefinedTypeName","pathNode":{"id":6605,"name":"TakeBidSingle","nameLocations":["1650:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":7012,"src":"1650:13:24"},"referencedDeclaration":7012,"src":"1650:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_TakeBidSingle_$7012_storage_ptr","typeString":"struct TakeBidSingle"}},"visibility":"internal"}],"src":"1649:29:24"},"returnParameters":{"id":6609,"nodeType":"ParameterList","parameters":[],"src":"1687:0:24"},"scope":6633,"src":"1627:61:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6ee45533","id":6616,"implemented":false,"kind":"function","modifiers":[],"name":"takeCollectionOffer","nameLocation":"1703:19:24","nodeType":"FunctionDefinition","parameters":{"id":6614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6613,"mutability":"mutable","name":"input","nameLocation":"1750:5:24","nodeType":"VariableDeclaration","scope":6616,"src":"1723:32:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeCollectionOffer_$7000_memory_ptr","typeString":"struct TakeCollectionOffer"},"typeName":{"id":6612,"nodeType":"UserDefinedTypeName","pathNode":{"id":6611,"name":"TakeCollectionOffer","nameLocations":["1723:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":7000,"src":"1723:19:24"},"referencedDeclaration":7000,"src":"1723:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_TakeCollectionOffer_$7000_storage_ptr","typeString":"struct TakeCollectionOffer"}},"visibility":"internal"}],"src":"1722:34:24"},"returnParameters":{"id":6615,"nodeType":"ParameterList","parameters":[],"src":"1765:0:24"},"scope":6633,"src":"1694:72:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bcd4f51a","id":6624,"implemented":false,"kind":"function","modifiers":[],"name":"takeAskSinglePool","nameLocation":"1968:17:24","nodeType":"FunctionDefinition","parameters":{"id":6622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"inputs","nameLocation":"2016:6:24","nodeType":"VariableDeclaration","scope":6624,"src":"1995:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_memory_ptr","typeString":"struct TakeAskSingle"},"typeName":{"id":6618,"nodeType":"UserDefinedTypeName","pathNode":{"id":6617,"name":"TakeAskSingle","nameLocations":["1995:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":6974,"src":"1995:13:24"},"referencedDeclaration":6974,"src":"1995:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAskSingle_$6974_storage_ptr","typeString":"struct TakeAskSingle"}},"visibility":"internal"},{"constant":false,"id":6621,"mutability":"mutable","name":"amountToWithdraw","nameLocation":"2040:16:24","nodeType":"VariableDeclaration","scope":6624,"src":"2032:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6620,"name":"uint256","nodeType":"ElementaryTypeName","src":"2032:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1985:77:24"},"returnParameters":{"id":6623,"nodeType":"ParameterList","parameters":[],"src":"2079:0:24"},"scope":6633,"src":"1959:121:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"46d7dd05","id":6632,"implemented":false,"kind":"function","modifiers":[],"name":"takeAskPool","nameLocation":"2095:11:24","nodeType":"FunctionDefinition","parameters":{"id":6630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6627,"mutability":"mutable","name":"inputs","nameLocation":"2131:6:24","nodeType":"VariableDeclaration","scope":6632,"src":"2116:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_memory_ptr","typeString":"struct TakeAsk"},"typeName":{"id":6626,"nodeType":"UserDefinedTypeName","pathNode":{"id":6625,"name":"TakeAsk","nameLocations":["2116:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":6960,"src":"2116:7:24"},"referencedDeclaration":6960,"src":"2116:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_TakeAsk_$6960_storage_ptr","typeString":"struct TakeAsk"}},"visibility":"internal"},{"constant":false,"id":6629,"mutability":"mutable","name":"amountToWithdraw","nameLocation":"2155:16:24","nodeType":"VariableDeclaration","scope":6632,"src":"2147:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2147:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2106:71:24"},"returnParameters":{"id":6631,"nodeType":"ParameterList","parameters":[],"src":"2194:0:24"},"scope":6633,"src":"2086:109:24","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":6634,"src":"275:1922:24","usedErrors":[6522,6524,6526,6528]}],"src":"32:2166:24"}},"contracts/lib/Constants.sol":{"id":25,"ast":{"absolutePath":"contracts/lib/Constants.sol","exportedSymbols":{"AssetType_ERC1155":[6656],"AssetType_ERC721":[6653],"BidExchange_askIndex_offset":[6818],"BidExchange_maker_offset":[6824],"BidExchange_proof_offset":[6821],"BidExchange_size":[6815],"BidExchange_taker_offset":[6827],"Bytes1_shift":[6638],"Bytes20_shift":[6644],"Bytes4_shift":[6641],"Delegate_transfer_calldata_offset":[6770],"Delegate_transfer_selector":[6767],"ERC1155_safeTransferFrom_amount_offset":[6758],"ERC1155_safeTransferFrom_data_offset":[6764],"ERC1155_safeTransferFrom_data_pointer_offset":[6761],"ERC1155_safeTransferFrom_from_offset":[6749],"ERC1155_safeTransferFrom_id_offset":[6755],"ERC1155_safeTransferFrom_selector":[6695],"ERC1155_safeTransferFrom_size":[6704],"ERC1155_safeTransferFrom_to_offset":[6752],"ERC20_transferFrom_amount_offset":[6737],"ERC20_transferFrom_from_offset":[6731],"ERC20_transferFrom_selector":[6689],"ERC20_transferFrom_size":[6698],"ERC20_transferFrom_to_offset":[6734],"ERC721_safeTransferFrom_from_offset":[6740],"ERC721_safeTransferFrom_id_offset":[6746],"ERC721_safeTransferFrom_selector":[6692],"ERC721_safeTransferFrom_size":[6701],"ERC721_safeTransferFrom_to_offset":[6743],"Exchange_askIndex_offset":[6803],"Exchange_maker_offset":[6809],"Exchange_proof_offset":[6806],"Exchange_size":[6800],"Exchange_taker_offset":[6812],"ExecutionBatch_base_size":[6890],"ExecutionBatch_calldata_offset":[6887],"ExecutionBatch_length_offset":[6902],"ExecutionBatch_orderType_offset":[6896],"ExecutionBatch_selector_offset":[6884],"ExecutionBatch_taker_offset":[6893],"ExecutionBatch_transfers_offset":[6905],"ExecutionBatch_transfers_pointer_offset":[6899],"Listing_amount_offset":[6839],"Listing_index_offset":[6833],"Listing_price_offset":[6842],"Listing_size":[6830],"Listing_tokenId_offset":[6836],"Memory_pointer":[6650],"One_word":[6647],"OracleSignatures_blockNumber_offset":[6716],"OracleSignatures_oracle_offset":[6719],"OracleSignatures_s_offset":[6710],"OracleSignatures_size":[6707],"OracleSignatures_v_offset":[6713],"OrderType_ASK":[6659],"OrderType_BID":[6662],"Order_assetType_offset":[6791],"Order_collection_offset":[6779],"Order_expirationTime_offset":[6788],"Order_listingsRoot_offset":[6782],"Order_makerFee_offset":[6794],"Order_numberOfListings_offset":[6785],"Order_salt_offset":[6797],"Order_size":[6773],"Order_trader_offset":[6776],"Pool_deposit_selector":[6680],"Pool_deposit_size":[6686],"Pool_deposit_user_offset":[6683],"Pool_withdrawFrom_amount_offset":[6674],"Pool_withdrawFrom_from_offset":[6668],"Pool_withdrawFrom_selector":[6665],"Pool_withdrawFrom_size":[6677],"Pool_withdrawFrom_to_offset":[6671],"Signatures_s_offset":[6725],"Signatures_size":[6722],"Signatures_v_offset":[6728],"StateUpdate_leaf_offset":[6860],"StateUpdate_salt_offset":[6857],"StateUpdate_size":[6854],"StateUpdate_value_offset":[6863],"Taker_amount_offset":[6851],"Taker_size":[6845],"Taker_tokenId_offset":[6848],"Transfer_amount_offset":[6875],"Transfer_assetType_offset":[6881],"Transfer_collection_offset":[6878],"Transfer_id_offset":[6872],"Transfer_size":[6866],"Transfer_trader_offset":[6869]},"id":6906,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6635,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:25"},{"constant":true,"id":6638,"mutability":"constant","name":"Bytes1_shift","nameLocation":"74:12:25","nodeType":"VariableDeclaration","scope":6906,"src":"57:36:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6636,"name":"uint256","nodeType":"ElementaryTypeName","src":"57:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30786638","id":6637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"89:4:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"0xf8"},"visibility":"internal"},{"constant":true,"id":6641,"mutability":"constant","name":"Bytes4_shift","nameLocation":"112:12:25","nodeType":"VariableDeclaration","scope":6906,"src":"95:36:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6639,"name":"uint256","nodeType":"ElementaryTypeName","src":"95:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30786530","id":6640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"127:4:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"0xe0"},"visibility":"internal"},{"constant":true,"id":6644,"mutability":"constant","name":"Bytes20_shift","nameLocation":"150:13:25","nodeType":"VariableDeclaration","scope":6906,"src":"133:37:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6642,"name":"uint256","nodeType":"ElementaryTypeName","src":"133:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783630","id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"166:4:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"},"visibility":"internal"},{"constant":true,"id":6647,"mutability":"constant","name":"One_word","nameLocation":"189:8:25","nodeType":"VariableDeclaration","scope":6906,"src":"172:32:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6645,"name":"uint256","nodeType":"ElementaryTypeName","src":"172:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"200:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":6650,"mutability":"constant","name":"Memory_pointer","nameLocation":"224:14:25","nodeType":"VariableDeclaration","scope":6906,"src":"207:38:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6648,"name":"uint256","nodeType":"ElementaryTypeName","src":"207:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783430","id":6649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"241:4:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"visibility":"internal"},{"constant":true,"id":6653,"mutability":"constant","name":"AssetType_ERC721","nameLocation":"265:16:25","nodeType":"VariableDeclaration","scope":6906,"src":"248:37:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6651,"name":"uint256","nodeType":"ElementaryTypeName","src":"248:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":6652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"284:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":6656,"mutability":"constant","name":"AssetType_ERC1155","nameLocation":"304:17:25","nodeType":"VariableDeclaration","scope":6906,"src":"287:38:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6654,"name":"uint256","nodeType":"ElementaryTypeName","src":"287:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"324:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":6659,"mutability":"constant","name":"OrderType_ASK","nameLocation":"345:13:25","nodeType":"VariableDeclaration","scope":6906,"src":"328:34:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6657,"name":"uint256","nodeType":"ElementaryTypeName","src":"328:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":6658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"361:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":6662,"mutability":"constant","name":"OrderType_BID","nameLocation":"381:13:25","nodeType":"VariableDeclaration","scope":6906,"src":"364:34:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6660,"name":"uint256","nodeType":"ElementaryTypeName","src":"364:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"397:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":6665,"mutability":"constant","name":"Pool_withdrawFrom_selector","nameLocation":"418:26:25","nodeType":"VariableDeclaration","scope":6906,"src":"401:112:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6663,"name":"uint256","nodeType":"ElementaryTypeName","src":"401:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307839353535613934323030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":6664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"447:66:25","typeDescriptions":{"typeIdentifier":"t_rational_67545964613901942172862183077664752502165970591125865833036489688647659945984_by_1","typeString":"int_const 6754...(69 digits omitted)...5984"},"value":"0x9555a94200000000000000000000000000000000000000000000000000000000"},"visibility":"internal"},{"constant":true,"id":6668,"mutability":"constant","name":"Pool_withdrawFrom_from_offset","nameLocation":"532:29:25","nodeType":"VariableDeclaration","scope":6906,"src":"515:53:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6666,"name":"uint256","nodeType":"ElementaryTypeName","src":"515:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783034","id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"564:4:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x04"},"visibility":"internal"},{"constant":true,"id":6671,"mutability":"constant","name":"Pool_withdrawFrom_to_offset","nameLocation":"587:27:25","nodeType":"VariableDeclaration","scope":6906,"src":"570:51:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6669,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783234","id":6670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"617:4:25","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"0x24"},"visibility":"internal"},{"constant":true,"id":6674,"mutability":"constant","name":"Pool_withdrawFrom_amount_offset","nameLocation":"640:31:25","nodeType":"VariableDeclaration","scope":6906,"src":"623:55:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6672,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783434","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:4:25","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"0x44"},"visibility":"internal"},{"constant":true,"id":6677,"mutability":"constant","name":"Pool_withdrawFrom_size","nameLocation":"697:22:25","nodeType":"VariableDeclaration","scope":6906,"src":"680:46:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6675,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783634","id":6676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"722:4:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"0x64"},"visibility":"internal"},{"constant":true,"id":6680,"mutability":"constant","name":"Pool_deposit_selector","nameLocation":"746:21:25","nodeType":"VariableDeclaration","scope":6906,"src":"729:107:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6678,"name":"uint256","nodeType":"ElementaryTypeName","src":"729:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307866333430666130313030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"770:66:25","typeDescriptions":{"typeIdentifier":"t_rational_110026825881426193279908600449895606160991820677118730779328024479053578764288_by_1","typeString":"int_const 1100...(70 digits omitted)...4288"},"value":"0xf340fa0100000000000000000000000000000000000000000000000000000000"},"visibility":"internal"},{"constant":true,"id":6683,"mutability":"constant","name":"Pool_deposit_user_offset","nameLocation":"855:24:25","nodeType":"VariableDeclaration","scope":6906,"src":"838:48:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6681,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783034","id":6682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"882:4:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x04"},"visibility":"internal"},{"constant":true,"id":6686,"mutability":"constant","name":"Pool_deposit_size","nameLocation":"905:17:25","nodeType":"VariableDeclaration","scope":6906,"src":"888:41:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6684,"name":"uint256","nodeType":"ElementaryTypeName","src":"888:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783234","id":6685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"925:4:25","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"0x24"},"visibility":"internal"},{"constant":true,"id":6689,"mutability":"constant","name":"ERC20_transferFrom_selector","nameLocation":"949:27:25","nodeType":"VariableDeclaration","scope":6906,"src":"932:113:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6687,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307832336238373264643030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":6688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"979:66:25","typeDescriptions":{"typeIdentifier":"t_rational_16156842317565293874272834530371880720966471053262404558597773956279093428224_by_1","typeString":"int_const 1615...(69 digits omitted)...8224"},"value":"0x23b872dd00000000000000000000000000000000000000000000000000000000"},"visibility":"internal"},{"constant":true,"id":6692,"mutability":"constant","name":"ERC721_safeTransferFrom_selector","nameLocation":"1064:32:25","nodeType":"VariableDeclaration","scope":6906,"src":"1047:118:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1047:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307834323834326530653030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":6691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1099:66:25","typeDescriptions":{"typeIdentifier":"t_rational_30086189676817534070187568966758292448956037977930781372244262607175567802368_by_1","typeString":"int_const 3008...(69 digits omitted)...2368"},"value":"0x42842e0e00000000000000000000000000000000000000000000000000000000"},"visibility":"internal"},{"constant":true,"id":6695,"mutability":"constant","name":"ERC1155_safeTransferFrom_selector","nameLocation":"1184:33:25","nodeType":"VariableDeclaration","scope":6906,"src":"1167:119:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6693,"name":"uint256","nodeType":"ElementaryTypeName","src":"1167:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307866323432343332613030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":6694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1220:66:25","typeDescriptions":{"typeIdentifier":"t_rational_109576784812748834340197573905731726730118698833493337707389013487240318287872_by_1","typeString":"int_const 1095...(70 digits omitted)...7872"},"value":"0xf242432a00000000000000000000000000000000000000000000000000000000"},"visibility":"internal"},{"constant":true,"id":6698,"mutability":"constant","name":"ERC20_transferFrom_size","nameLocation":"1305:23:25","nodeType":"VariableDeclaration","scope":6906,"src":"1288:47:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1288:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783634","id":6697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1331:4:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"0x64"},"visibility":"internal"},{"constant":true,"id":6701,"mutability":"constant","name":"ERC721_safeTransferFrom_size","nameLocation":"1354:28:25","nodeType":"VariableDeclaration","scope":6906,"src":"1337:52:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1337:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783634","id":6700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:4:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"0x64"},"visibility":"internal"},{"constant":true,"id":6704,"mutability":"constant","name":"ERC1155_safeTransferFrom_size","nameLocation":"1408:29:25","nodeType":"VariableDeclaration","scope":6906,"src":"1391:53:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30786334","id":6703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1440:4:25","typeDescriptions":{"typeIdentifier":"t_rational_196_by_1","typeString":"int_const 196"},"value":"0xc4"},"visibility":"internal"},{"constant":true,"id":6707,"mutability":"constant","name":"OracleSignatures_size","nameLocation":"1464:21:25","nodeType":"VariableDeclaration","scope":6906,"src":"1447:45:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1447:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783539","id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1488:4:25","typeDescriptions":{"typeIdentifier":"t_rational_89_by_1","typeString":"int_const 89"},"value":"0x59"},"visibility":"internal"},{"constant":true,"id":6710,"mutability":"constant","name":"OracleSignatures_s_offset","nameLocation":"1511:25:25","nodeType":"VariableDeclaration","scope":6906,"src":"1494:49:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1494:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":6709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1539:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":6713,"mutability":"constant","name":"OracleSignatures_v_offset","nameLocation":"1562:25:25","nodeType":"VariableDeclaration","scope":6906,"src":"1545:49:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783430","id":6712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1590:4:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"visibility":"internal"},{"constant":true,"id":6716,"mutability":"constant","name":"OracleSignatures_blockNumber_offset","nameLocation":"1613:35:25","nodeType":"VariableDeclaration","scope":6906,"src":"1596:59:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1596:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":6715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:4:25","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"id":6719,"mutability":"constant","name":"OracleSignatures_oracle_offset","nameLocation":"1674:30:25","nodeType":"VariableDeclaration","scope":6906,"src":"1657:54:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1657:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783435","id":6718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1707:4:25","typeDescriptions":{"typeIdentifier":"t_rational_69_by_1","typeString":"int_const 69"},"value":"0x45"},"visibility":"internal"},{"constant":true,"id":6722,"mutability":"constant","name":"Signatures_size","nameLocation":"1731:15:25","nodeType":"VariableDeclaration","scope":6906,"src":"1714:39:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":6721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1749:4:25","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"id":6725,"mutability":"constant","name":"Signatures_s_offset","nameLocation":"1772:19:25","nodeType":"VariableDeclaration","scope":6906,"src":"1755:43:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1755:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":6724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1794:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":6728,"mutability":"constant","name":"Signatures_v_offset","nameLocation":"1817:19:25","nodeType":"VariableDeclaration","scope":6906,"src":"1800:43:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1800:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783430","id":6727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:4:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"visibility":"internal"},{"constant":true,"id":6731,"mutability":"constant","name":"ERC20_transferFrom_from_offset","nameLocation":"1863:30:25","nodeType":"VariableDeclaration","scope":6906,"src":"1846:53:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6729,"name":"uint256","nodeType":"ElementaryTypeName","src":"1846:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307834","id":6730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:3:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"visibility":"internal"},{"constant":true,"id":6734,"mutability":"constant","name":"ERC20_transferFrom_to_offset","nameLocation":"1918:28:25","nodeType":"VariableDeclaration","scope":6906,"src":"1901:52:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1901:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783234","id":6733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1949:4:25","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"0x24"},"visibility":"internal"},{"constant":true,"id":6737,"mutability":"constant","name":"ERC20_transferFrom_amount_offset","nameLocation":"1972:32:25","nodeType":"VariableDeclaration","scope":6906,"src":"1955:56:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1955:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783434","id":6736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:4:25","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"0x44"},"visibility":"internal"},{"constant":true,"id":6740,"mutability":"constant","name":"ERC721_safeTransferFrom_from_offset","nameLocation":"2031:35:25","nodeType":"VariableDeclaration","scope":6906,"src":"2014:58:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6738,"name":"uint256","nodeType":"ElementaryTypeName","src":"2014:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307834","id":6739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2069:3:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"visibility":"internal"},{"constant":true,"id":6743,"mutability":"constant","name":"ERC721_safeTransferFrom_to_offset","nameLocation":"2091:33:25","nodeType":"VariableDeclaration","scope":6906,"src":"2074:57:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6741,"name":"uint256","nodeType":"ElementaryTypeName","src":"2074:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783234","id":6742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2127:4:25","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"0x24"},"visibility":"internal"},{"constant":true,"id":6746,"mutability":"constant","name":"ERC721_safeTransferFrom_id_offset","nameLocation":"2150:33:25","nodeType":"VariableDeclaration","scope":6906,"src":"2133:57:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6744,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783434","id":6745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:4:25","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"0x44"},"visibility":"internal"},{"constant":true,"id":6749,"mutability":"constant","name":"ERC1155_safeTransferFrom_from_offset","nameLocation":"2210:36:25","nodeType":"VariableDeclaration","scope":6906,"src":"2193:59:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307834","id":6748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2249:3:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"visibility":"internal"},{"constant":true,"id":6752,"mutability":"constant","name":"ERC1155_safeTransferFrom_to_offset","nameLocation":"2271:34:25","nodeType":"VariableDeclaration","scope":6906,"src":"2254:58:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2254:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783234","id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2308:4:25","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"0x24"},"visibility":"internal"},{"constant":true,"id":6755,"mutability":"constant","name":"ERC1155_safeTransferFrom_id_offset","nameLocation":"2331:34:25","nodeType":"VariableDeclaration","scope":6906,"src":"2314:58:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6753,"name":"uint256","nodeType":"ElementaryTypeName","src":"2314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783434","id":6754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2368:4:25","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"0x44"},"visibility":"internal"},{"constant":true,"id":6758,"mutability":"constant","name":"ERC1155_safeTransferFrom_amount_offset","nameLocation":"2391:38:25","nodeType":"VariableDeclaration","scope":6906,"src":"2374:62:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6756,"name":"uint256","nodeType":"ElementaryTypeName","src":"2374:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783634","id":6757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2432:4:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"0x64"},"visibility":"internal"},{"constant":true,"id":6761,"mutability":"constant","name":"ERC1155_safeTransferFrom_data_pointer_offset","nameLocation":"2455:44:25","nodeType":"VariableDeclaration","scope":6906,"src":"2438:68:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6759,"name":"uint256","nodeType":"ElementaryTypeName","src":"2438:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783834","id":6760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2502:4:25","typeDescriptions":{"typeIdentifier":"t_rational_132_by_1","typeString":"int_const 132"},"value":"0x84"},"visibility":"internal"},{"constant":true,"id":6764,"mutability":"constant","name":"ERC1155_safeTransferFrom_data_offset","nameLocation":"2525:36:25","nodeType":"VariableDeclaration","scope":6906,"src":"2508:60:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2508:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30786134","id":6763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2564:4:25","typeDescriptions":{"typeIdentifier":"t_rational_164_by_1","typeString":"int_const 164"},"value":"0xa4"},"visibility":"internal"},{"constant":true,"id":6767,"mutability":"constant","name":"Delegate_transfer_selector","nameLocation":"2588:26:25","nodeType":"VariableDeclaration","scope":6906,"src":"2571:112:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6765,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307861316363623938653030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":6766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2617:66:25","typeDescriptions":{"typeIdentifier":"t_rational_73184086074507261921031708753322348532070642120222496767670926241234369380352_by_1","typeString":"int_const 7318...(69 digits omitted)...0352"},"value":"0xa1ccb98e00000000000000000000000000000000000000000000000000000000"},"visibility":"internal"},{"constant":true,"id":6770,"mutability":"constant","name":"Delegate_transfer_calldata_offset","nameLocation":"2702:33:25","nodeType":"VariableDeclaration","scope":6906,"src":"2685:57:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6768,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783163","id":6769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2738:4:25","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"0x1c"},"visibility":"internal"},{"constant":true,"id":6773,"mutability":"constant","name":"Order_size","nameLocation":"2762:10:25","nodeType":"VariableDeclaration","scope":6906,"src":"2745:35:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2745:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078313030","id":6772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2775:5:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"visibility":"internal"},{"constant":true,"id":6776,"mutability":"constant","name":"Order_trader_offset","nameLocation":"2799:19:25","nodeType":"VariableDeclaration","scope":6906,"src":"2782:43:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6774,"name":"uint256","nodeType":"ElementaryTypeName","src":"2782:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":6775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2821:4:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"id":6779,"mutability":"constant","name":"Order_collection_offset","nameLocation":"2844:23:25","nodeType":"VariableDeclaration","scope":6906,"src":"2827:47:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6777,"name":"uint256","nodeType":"ElementaryTypeName","src":"2827:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":6778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":6782,"mutability":"constant","name":"Order_listingsRoot_offset","nameLocation":"2893:25:25","nodeType":"VariableDeclaration","scope":6906,"src":"2876:49:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6780,"name":"uint256","nodeType":"ElementaryTypeName","src":"2876:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783430","id":6781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2921:4:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"visibility":"internal"},{"constant":true,"id":6785,"mutability":"constant","name":"Order_numberOfListings_offset","nameLocation":"2944:29:25","nodeType":"VariableDeclaration","scope":6906,"src":"2927:53:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6783,"name":"uint256","nodeType":"ElementaryTypeName","src":"2927:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783630","id":6784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2976:4:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"},"visibility":"internal"},{"constant":true,"id":6788,"mutability":"constant","name":"Order_expirationTime_offset","nameLocation":"2999:27:25","nodeType":"VariableDeclaration","scope":6906,"src":"2982:51:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6786,"name":"uint256","nodeType":"ElementaryTypeName","src":"2982:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783830","id":6787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3029:4:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"visibility":"internal"},{"constant":true,"id":6791,"mutability":"constant","name":"Order_assetType_offset","nameLocation":"3052:22:25","nodeType":"VariableDeclaration","scope":6906,"src":"3035:46:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6789,"name":"uint256","nodeType":"ElementaryTypeName","src":"3035:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30786130","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3077:4:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"0xa0"},"visibility":"internal"},{"constant":true,"id":6794,"mutability":"constant","name":"Order_makerFee_offset","nameLocation":"3100:21:25","nodeType":"VariableDeclaration","scope":6906,"src":"3083:45:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6792,"name":"uint256","nodeType":"ElementaryTypeName","src":"3083:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30786330","id":6793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3124:4:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"0xc0"},"visibility":"internal"},{"constant":true,"id":6797,"mutability":"constant","name":"Order_salt_offset","nameLocation":"3147:17:25","nodeType":"VariableDeclaration","scope":6906,"src":"3130:41:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6795,"name":"uint256","nodeType":"ElementaryTypeName","src":"3130:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30786530","id":6796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3167:4:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"0xe0"},"visibility":"internal"},{"constant":true,"id":6800,"mutability":"constant","name":"Exchange_size","nameLocation":"3191:13:25","nodeType":"VariableDeclaration","scope":6906,"src":"3174:37:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6798,"name":"uint256","nodeType":"ElementaryTypeName","src":"3174:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783830","id":6799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3207:4:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"visibility":"internal"},{"constant":true,"id":6803,"mutability":"constant","name":"Exchange_askIndex_offset","nameLocation":"3230:24:25","nodeType":"VariableDeclaration","scope":6906,"src":"3213:48:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":6802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3257:4:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"id":6806,"mutability":"constant","name":"Exchange_proof_offset","nameLocation":"3280:21:25","nodeType":"VariableDeclaration","scope":6906,"src":"3263:45:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6804,"name":"uint256","nodeType":"ElementaryTypeName","src":"3263:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":6805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3304:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":6809,"mutability":"constant","name":"Exchange_maker_offset","nameLocation":"3327:21:25","nodeType":"VariableDeclaration","scope":6906,"src":"3310:45:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6807,"name":"uint256","nodeType":"ElementaryTypeName","src":"3310:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783430","id":6808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3351:4:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"visibility":"internal"},{"constant":true,"id":6812,"mutability":"constant","name":"Exchange_taker_offset","nameLocation":"3374:21:25","nodeType":"VariableDeclaration","scope":6906,"src":"3357:45:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6810,"name":"uint256","nodeType":"ElementaryTypeName","src":"3357:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783630","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3398:4:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"},"visibility":"internal"},{"constant":true,"id":6815,"mutability":"constant","name":"BidExchange_size","nameLocation":"3422:16:25","nodeType":"VariableDeclaration","scope":6906,"src":"3405:40:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6813,"name":"uint256","nodeType":"ElementaryTypeName","src":"3405:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783830","id":6814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3441:4:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"visibility":"internal"},{"constant":true,"id":6818,"mutability":"constant","name":"BidExchange_askIndex_offset","nameLocation":"3464:27:25","nodeType":"VariableDeclaration","scope":6906,"src":"3447:51:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6816,"name":"uint256","nodeType":"ElementaryTypeName","src":"3447:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":6817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3494:4:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"id":6821,"mutability":"constant","name":"BidExchange_proof_offset","nameLocation":"3517:24:25","nodeType":"VariableDeclaration","scope":6906,"src":"3500:48:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6819,"name":"uint256","nodeType":"ElementaryTypeName","src":"3500:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":6820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3544:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":6824,"mutability":"constant","name":"BidExchange_maker_offset","nameLocation":"3567:24:25","nodeType":"VariableDeclaration","scope":6906,"src":"3550:48:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6822,"name":"uint256","nodeType":"ElementaryTypeName","src":"3550:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783430","id":6823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3594:4:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"visibility":"internal"},{"constant":true,"id":6827,"mutability":"constant","name":"BidExchange_taker_offset","nameLocation":"3617:24:25","nodeType":"VariableDeclaration","scope":6906,"src":"3600:48:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3600:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783630","id":6826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3644:4:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"},"visibility":"internal"},{"constant":true,"id":6830,"mutability":"constant","name":"Listing_size","nameLocation":"3668:12:25","nodeType":"VariableDeclaration","scope":6906,"src":"3651:36:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6828,"name":"uint256","nodeType":"ElementaryTypeName","src":"3651:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783830","id":6829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3683:4:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"visibility":"internal"},{"constant":true,"id":6833,"mutability":"constant","name":"Listing_index_offset","nameLocation":"3706:20:25","nodeType":"VariableDeclaration","scope":6906,"src":"3689:44:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6831,"name":"uint256","nodeType":"ElementaryTypeName","src":"3689:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":6832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3729:4:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"id":6836,"mutability":"constant","name":"Listing_tokenId_offset","nameLocation":"3752:22:25","nodeType":"VariableDeclaration","scope":6906,"src":"3735:46:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6834,"name":"uint256","nodeType":"ElementaryTypeName","src":"3735:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":6835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3777:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":6839,"mutability":"constant","name":"Listing_amount_offset","nameLocation":"3800:21:25","nodeType":"VariableDeclaration","scope":6906,"src":"3783:45:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6837,"name":"uint256","nodeType":"ElementaryTypeName","src":"3783:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783430","id":6838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:4:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"visibility":"internal"},{"constant":true,"id":6842,"mutability":"constant","name":"Listing_price_offset","nameLocation":"3847:20:25","nodeType":"VariableDeclaration","scope":6906,"src":"3830:44:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6840,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783630","id":6841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3870:4:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"},"visibility":"internal"},{"constant":true,"id":6845,"mutability":"constant","name":"Taker_size","nameLocation":"3894:10:25","nodeType":"VariableDeclaration","scope":6906,"src":"3877:34:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6843,"name":"uint256","nodeType":"ElementaryTypeName","src":"3877:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783430","id":6844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3907:4:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"visibility":"internal"},{"constant":true,"id":6848,"mutability":"constant","name":"Taker_tokenId_offset","nameLocation":"3930:20:25","nodeType":"VariableDeclaration","scope":6906,"src":"3913:44:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6846,"name":"uint256","nodeType":"ElementaryTypeName","src":"3913:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":6847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3953:4:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"id":6851,"mutability":"constant","name":"Taker_amount_offset","nameLocation":"3976:19:25","nodeType":"VariableDeclaration","scope":6906,"src":"3959:43:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6849,"name":"uint256","nodeType":"ElementaryTypeName","src":"3959:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":6850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3998:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":6854,"mutability":"constant","name":"StateUpdate_size","nameLocation":"4022:16:25","nodeType":"VariableDeclaration","scope":6906,"src":"4005:40:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6852,"name":"uint256","nodeType":"ElementaryTypeName","src":"4005:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783830","id":6853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4041:4:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"visibility":"internal"},{"constant":true,"id":6857,"mutability":"constant","name":"StateUpdate_salt_offset","nameLocation":"4064:23:25","nodeType":"VariableDeclaration","scope":6906,"src":"4047:47:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6855,"name":"uint256","nodeType":"ElementaryTypeName","src":"4047:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":6856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4090:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":6860,"mutability":"constant","name":"StateUpdate_leaf_offset","nameLocation":"4113:23:25","nodeType":"VariableDeclaration","scope":6906,"src":"4096:47:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6858,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783430","id":6859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:4:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"visibility":"internal"},{"constant":true,"id":6863,"mutability":"constant","name":"StateUpdate_value_offset","nameLocation":"4162:24:25","nodeType":"VariableDeclaration","scope":6906,"src":"4145:48:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6861,"name":"uint256","nodeType":"ElementaryTypeName","src":"4145:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783630","id":6862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4189:4:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"},"visibility":"internal"},{"constant":true,"id":6866,"mutability":"constant","name":"Transfer_size","nameLocation":"4213:13:25","nodeType":"VariableDeclaration","scope":6906,"src":"4196:37:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6864,"name":"uint256","nodeType":"ElementaryTypeName","src":"4196:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30786130","id":6865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4229:4:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"0xa0"},"visibility":"internal"},{"constant":true,"id":6869,"mutability":"constant","name":"Transfer_trader_offset","nameLocation":"4252:22:25","nodeType":"VariableDeclaration","scope":6906,"src":"4235:46:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6867,"name":"uint256","nodeType":"ElementaryTypeName","src":"4235:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":6868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4277:4:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"id":6872,"mutability":"constant","name":"Transfer_id_offset","nameLocation":"4300:18:25","nodeType":"VariableDeclaration","scope":6906,"src":"4283:42:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6870,"name":"uint256","nodeType":"ElementaryTypeName","src":"4283:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4321:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":6875,"mutability":"constant","name":"Transfer_amount_offset","nameLocation":"4344:22:25","nodeType":"VariableDeclaration","scope":6906,"src":"4327:46:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6873,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783430","id":6874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4369:4:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"visibility":"internal"},{"constant":true,"id":6878,"mutability":"constant","name":"Transfer_collection_offset","nameLocation":"4392:26:25","nodeType":"VariableDeclaration","scope":6906,"src":"4375:50:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6876,"name":"uint256","nodeType":"ElementaryTypeName","src":"4375:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783630","id":6877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4421:4:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"},"visibility":"internal"},{"constant":true,"id":6881,"mutability":"constant","name":"Transfer_assetType_offset","nameLocation":"4444:25:25","nodeType":"VariableDeclaration","scope":6906,"src":"4427:49:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6879,"name":"uint256","nodeType":"ElementaryTypeName","src":"4427:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783830","id":6880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4472:4:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"visibility":"internal"},{"constant":true,"id":6884,"mutability":"constant","name":"ExecutionBatch_selector_offset","nameLocation":"4496:30:25","nodeType":"VariableDeclaration","scope":6906,"src":"4479:54:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6882,"name":"uint256","nodeType":"ElementaryTypeName","src":"4479:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":6883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4529:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":6887,"mutability":"constant","name":"ExecutionBatch_calldata_offset","nameLocation":"4552:30:25","nodeType":"VariableDeclaration","scope":6906,"src":"4535:54:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6885,"name":"uint256","nodeType":"ElementaryTypeName","src":"4535:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783430","id":6886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4585:4:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"visibility":"internal"},{"constant":true,"id":6890,"mutability":"constant","name":"ExecutionBatch_base_size","nameLocation":"4608:24:25","nodeType":"VariableDeclaration","scope":6906,"src":"4591:48:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6888,"name":"uint256","nodeType":"ElementaryTypeName","src":"4591:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30786130","id":6889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4635:4:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"0xa0"},"visibility":"internal"},{"constant":true,"id":6893,"mutability":"constant","name":"ExecutionBatch_taker_offset","nameLocation":"4727:27:25","nodeType":"VariableDeclaration","scope":6906,"src":"4710:51:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6891,"name":"uint256","nodeType":"ElementaryTypeName","src":"4710:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":6892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4757:4:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"id":6896,"mutability":"constant","name":"ExecutionBatch_orderType_offset","nameLocation":"4780:31:25","nodeType":"VariableDeclaration","scope":6906,"src":"4763:55:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6894,"name":"uint256","nodeType":"ElementaryTypeName","src":"4763:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":6895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4814:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":6899,"mutability":"constant","name":"ExecutionBatch_transfers_pointer_offset","nameLocation":"4837:39:25","nodeType":"VariableDeclaration","scope":6906,"src":"4820:63:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6897,"name":"uint256","nodeType":"ElementaryTypeName","src":"4820:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783430","id":6898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4879:4:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"visibility":"internal"},{"constant":true,"id":6902,"mutability":"constant","name":"ExecutionBatch_length_offset","nameLocation":"4902:28:25","nodeType":"VariableDeclaration","scope":6906,"src":"4885:52:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6900,"name":"uint256","nodeType":"ElementaryTypeName","src":"4885:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783630","id":6901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:4:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"},"visibility":"internal"},{"constant":true,"id":6905,"mutability":"constant","name":"ExecutionBatch_transfers_offset","nameLocation":"4956:31:25","nodeType":"VariableDeclaration","scope":6906,"src":"4939:55:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6903,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783830","id":6904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4990:4:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"visibility":"internal"}],"src":"32:4964:25"}},"contracts/lib/ReentrancyGuardUpgradeable.sol":{"id":26,"ast":{"absolutePath":"contracts/lib/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"ReentrancyGuardUpgradeable":[6942]},"id":6943,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":6907,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"42:23:26"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6908,"nodeType":"StructuredDocumentation","src":"67:200:26","text":"@notice Upgradeable gas optimized reentrancy protection for smart contracts.\n @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/ReentrancyGuard.sol)"},"fullyImplemented":true,"id":6942,"linearizedBaseContracts":[6942],"name":"ReentrancyGuardUpgradeable","nameLocation":"285:26:26","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6910,"mutability":"mutable","name":"locked","nameLocation":"334:6:26","nodeType":"VariableDeclaration","scope":6942,"src":"318:22:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6909,"name":"uint256","nodeType":"ElementaryTypeName","src":"318:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":6917,"nodeType":"Block","src":"385:27:26","statements":[{"expression":{"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6913,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"395:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":6914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"404:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"395:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6916,"nodeType":"ExpressionStatement","src":"395:10:26"}]},"id":6918,"implemented":true,"kind":"function","modifiers":[],"name":"__Reentrancy_init","nameLocation":"356:17:26","nodeType":"FunctionDefinition","parameters":{"id":6911,"nodeType":"ParameterList","parameters":[],"src":"373:2:26"},"returnParameters":{"id":6912,"nodeType":"ParameterList","parameters":[],"src":"385:0:26"},"scope":6942,"src":"347:65:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6936,"nodeType":"Block","src":"450:105:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6921,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"468:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"478:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"468:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5245454e5452414e4359","id":6924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"481:12:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_180a23d5434c537ca84b1e47f534d18e25bd055e02a65ce20bae4afd9c835f59","typeString":"literal_string \"REENTRANCY\""},"value":"REENTRANCY"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_180a23d5434c537ca84b1e47f534d18e25bd055e02a65ce20bae4afd9c835f59","typeString":"literal_string \"REENTRANCY\""}],"id":6920,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"460:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"460:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6926,"nodeType":"ExpressionStatement","src":"460:34:26"},{"expression":{"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6927,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"505:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":6928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"514:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"505:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6930,"nodeType":"ExpressionStatement","src":"505:10:26"},{"id":6931,"nodeType":"PlaceholderStatement","src":"526:1:26"},{"expression":{"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6932,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"538:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":6933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"547:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"538:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6935,"nodeType":"ExpressionStatement","src":"538:10:26"}]},"id":6937,"name":"nonReentrant","nameLocation":"427:12:26","nodeType":"ModifierDefinition","parameters":{"id":6919,"nodeType":"ParameterList","parameters":[],"src":"439:2:26"},"src":"418:137:26","virtual":true,"visibility":"internal"},{"constant":false,"id":6941,"mutability":"mutable","name":"__gap","nameLocation":"581:5:26","nodeType":"VariableDeclaration","scope":6942,"src":"561:25:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":6938,"name":"uint256","nodeType":"ElementaryTypeName","src":"561:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6940,"length":{"hexValue":"3439","id":6939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"569:2:26","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"561:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":6943,"src":"267:322:26","usedErrors":[]}],"src":"42:548:26"}},"contracts/lib/Structs.sol":{"id":27,"ast":{"absolutePath":"contracts/lib/Structs.sol","exportedSymbols":{"AssetType":[7015],"AtomicExecution":[7119],"Cancel":[7149],"Exchange":[7031],"FeeRate":[7142],"Fees":[7137],"FungibleTransfers":[7103],"Listing":[7040],"Order":[7064],"OrderType":[7019],"StateUpdate":[7130],"TakeAsk":[6960],"TakeAskSingle":[6974],"TakeBid":[6988],"TakeBidSingle":[7012],"TakeCollectionOffer":[7000],"Taker":[7045],"Transfer":[7076]},"id":7150,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6944,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:27"},{"canonicalName":"TakeAsk","id":6960,"members":[{"constant":false,"id":6948,"mutability":"mutable","name":"orders","nameLocation":"87:6:27","nodeType":"VariableDeclaration","scope":6960,"src":"79:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_storage_$dyn_storage_ptr","typeString":"struct Order[]"},"typeName":{"baseType":{"id":6946,"nodeType":"UserDefinedTypeName","pathNode":{"id":6945,"name":"Order","nameLocations":["79:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"79:5:27"},"referencedDeclaration":7064,"src":"79:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"id":6947,"nodeType":"ArrayTypeName","src":"79:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_storage_$dyn_storage_ptr","typeString":"struct Order[]"}},"visibility":"internal"},{"constant":false,"id":6952,"mutability":"mutable","name":"exchanges","nameLocation":"110:9:27","nodeType":"VariableDeclaration","scope":6960,"src":"99:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_storage_$dyn_storage_ptr","typeString":"struct Exchange[]"},"typeName":{"baseType":{"id":6950,"nodeType":"UserDefinedTypeName","pathNode":{"id":6949,"name":"Exchange","nameLocations":["99:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"99:8:27"},"referencedDeclaration":7031,"src":"99:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"id":6951,"nodeType":"ArrayTypeName","src":"99:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_storage_$dyn_storage_ptr","typeString":"struct Exchange[]"}},"visibility":"internal"},{"constant":false,"id":6955,"mutability":"mutable","name":"takerFee","nameLocation":"133:8:27","nodeType":"VariableDeclaration","scope":6960,"src":"125:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"},"typeName":{"id":6954,"nodeType":"UserDefinedTypeName","pathNode":{"id":6953,"name":"FeeRate","nameLocations":["125:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"125:7:27"},"referencedDeclaration":7142,"src":"125:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":6957,"mutability":"mutable","name":"signatures","nameLocation":"153:10:27","nodeType":"VariableDeclaration","scope":6960,"src":"147:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6956,"name":"bytes","nodeType":"ElementaryTypeName","src":"147:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6959,"mutability":"mutable","name":"tokenRecipient","nameLocation":"177:14:27","nodeType":"VariableDeclaration","scope":6960,"src":"169:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6958,"name":"address","nodeType":"ElementaryTypeName","src":"169:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TakeAsk","nameLocation":"65:7:27","nodeType":"StructDefinition","scope":7150,"src":"58:136:27","visibility":"public"},{"canonicalName":"TakeAskSingle","id":6974,"members":[{"constant":false,"id":6963,"mutability":"mutable","name":"order","nameLocation":"229:5:27","nodeType":"VariableDeclaration","scope":6974,"src":"223:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"},"typeName":{"id":6962,"nodeType":"UserDefinedTypeName","pathNode":{"id":6961,"name":"Order","nameLocations":["223:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"223:5:27"},"referencedDeclaration":7064,"src":"223:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":6966,"mutability":"mutable","name":"exchange","nameLocation":"249:8:27","nodeType":"VariableDeclaration","scope":6974,"src":"240:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"},"typeName":{"id":6965,"nodeType":"UserDefinedTypeName","pathNode":{"id":6964,"name":"Exchange","nameLocations":["240:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"240:8:27"},"referencedDeclaration":7031,"src":"240:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"visibility":"internal"},{"constant":false,"id":6969,"mutability":"mutable","name":"takerFee","nameLocation":"271:8:27","nodeType":"VariableDeclaration","scope":6974,"src":"263:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"},"typeName":{"id":6968,"nodeType":"UserDefinedTypeName","pathNode":{"id":6967,"name":"FeeRate","nameLocations":["263:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"263:7:27"},"referencedDeclaration":7142,"src":"263:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":6971,"mutability":"mutable","name":"signature","nameLocation":"291:9:27","nodeType":"VariableDeclaration","scope":6974,"src":"285:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6970,"name":"bytes","nodeType":"ElementaryTypeName","src":"285:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6973,"mutability":"mutable","name":"tokenRecipient","nameLocation":"314:14:27","nodeType":"VariableDeclaration","scope":6974,"src":"306:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6972,"name":"address","nodeType":"ElementaryTypeName","src":"306:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TakeAskSingle","nameLocation":"203:13:27","nodeType":"StructDefinition","scope":7150,"src":"196:135:27","visibility":"public"},{"canonicalName":"TakeBid","id":6988,"members":[{"constant":false,"id":6978,"mutability":"mutable","name":"orders","nameLocation":"362:6:27","nodeType":"VariableDeclaration","scope":6988,"src":"354:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_storage_$dyn_storage_ptr","typeString":"struct Order[]"},"typeName":{"baseType":{"id":6976,"nodeType":"UserDefinedTypeName","pathNode":{"id":6975,"name":"Order","nameLocations":["354:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"354:5:27"},"referencedDeclaration":7064,"src":"354:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"id":6977,"nodeType":"ArrayTypeName","src":"354:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$7064_storage_$dyn_storage_ptr","typeString":"struct Order[]"}},"visibility":"internal"},{"constant":false,"id":6982,"mutability":"mutable","name":"exchanges","nameLocation":"385:9:27","nodeType":"VariableDeclaration","scope":6988,"src":"374:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_storage_$dyn_storage_ptr","typeString":"struct Exchange[]"},"typeName":{"baseType":{"id":6980,"nodeType":"UserDefinedTypeName","pathNode":{"id":6979,"name":"Exchange","nameLocations":["374:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"374:8:27"},"referencedDeclaration":7031,"src":"374:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"id":6981,"nodeType":"ArrayTypeName","src":"374:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Exchange_$7031_storage_$dyn_storage_ptr","typeString":"struct Exchange[]"}},"visibility":"internal"},{"constant":false,"id":6985,"mutability":"mutable","name":"takerFee","nameLocation":"408:8:27","nodeType":"VariableDeclaration","scope":6988,"src":"400:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"},"typeName":{"id":6984,"nodeType":"UserDefinedTypeName","pathNode":{"id":6983,"name":"FeeRate","nameLocations":["400:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"400:7:27"},"referencedDeclaration":7142,"src":"400:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":6987,"mutability":"mutable","name":"signatures","nameLocation":"428:10:27","nodeType":"VariableDeclaration","scope":6988,"src":"422:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6986,"name":"bytes","nodeType":"ElementaryTypeName","src":"422:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"TakeBid","nameLocation":"340:7:27","nodeType":"StructDefinition","scope":7150,"src":"333:108:27","visibility":"public"},{"canonicalName":"TakeCollectionOffer","id":7000,"members":[{"constant":false,"id":6991,"mutability":"mutable","name":"order","nameLocation":"483:5:27","nodeType":"VariableDeclaration","scope":7000,"src":"477:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"},"typeName":{"id":6990,"nodeType":"UserDefinedTypeName","pathNode":{"id":6989,"name":"Order","nameLocations":["477:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"477:5:27"},"referencedDeclaration":7064,"src":"477:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":6994,"mutability":"mutable","name":"listing","nameLocation":"502:7:27","nodeType":"VariableDeclaration","scope":7000,"src":"494:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"},"typeName":{"id":6993,"nodeType":"UserDefinedTypeName","pathNode":{"id":6992,"name":"Listing","nameLocations":["494:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"494:7:27"},"referencedDeclaration":7040,"src":"494:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"},{"constant":false,"id":6997,"mutability":"mutable","name":"takerFee","nameLocation":"523:8:27","nodeType":"VariableDeclaration","scope":7000,"src":"515:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"},"typeName":{"id":6996,"nodeType":"UserDefinedTypeName","pathNode":{"id":6995,"name":"FeeRate","nameLocations":["515:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"515:7:27"},"referencedDeclaration":7142,"src":"515:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":6999,"mutability":"mutable","name":"signature","nameLocation":"543:9:27","nodeType":"VariableDeclaration","scope":7000,"src":"537:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6998,"name":"bytes","nodeType":"ElementaryTypeName","src":"537:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"TakeCollectionOffer","nameLocation":"451:19:27","nodeType":"StructDefinition","scope":7150,"src":"444:111:27","visibility":"public"},{"canonicalName":"TakeBidSingle","id":7012,"members":[{"constant":false,"id":7003,"mutability":"mutable","name":"order","nameLocation":"590:5:27","nodeType":"VariableDeclaration","scope":7012,"src":"584:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"},"typeName":{"id":7002,"nodeType":"UserDefinedTypeName","pathNode":{"id":7001,"name":"Order","nameLocations":["584:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":7064,"src":"584:5:27"},"referencedDeclaration":7064,"src":"584:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$7064_storage_ptr","typeString":"struct Order"}},"visibility":"internal"},{"constant":false,"id":7006,"mutability":"mutable","name":"exchange","nameLocation":"610:8:27","nodeType":"VariableDeclaration","scope":7012,"src":"601:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"},"typeName":{"id":7005,"nodeType":"UserDefinedTypeName","pathNode":{"id":7004,"name":"Exchange","nameLocations":["601:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7031,"src":"601:8:27"},"referencedDeclaration":7031,"src":"601:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Exchange_$7031_storage_ptr","typeString":"struct Exchange"}},"visibility":"internal"},{"constant":false,"id":7009,"mutability":"mutable","name":"takerFee","nameLocation":"632:8:27","nodeType":"VariableDeclaration","scope":7012,"src":"624:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"},"typeName":{"id":7008,"nodeType":"UserDefinedTypeName","pathNode":{"id":7007,"name":"FeeRate","nameLocations":["624:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"624:7:27"},"referencedDeclaration":7142,"src":"624:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":7011,"mutability":"mutable","name":"signature","nameLocation":"652:9:27","nodeType":"VariableDeclaration","scope":7012,"src":"646:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7010,"name":"bytes","nodeType":"ElementaryTypeName","src":"646:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"TakeBidSingle","nameLocation":"564:13:27","nodeType":"StructDefinition","scope":7150,"src":"557:107:27","visibility":"public"},{"canonicalName":"AssetType","id":7015,"members":[{"id":7013,"name":"ERC721","nameLocation":"687:6:27","nodeType":"EnumValue","src":"687:6:27"},{"id":7014,"name":"ERC1155","nameLocation":"699:7:27","nodeType":"EnumValue","src":"699:7:27"}],"name":"AssetType","nameLocation":"671:9:27","nodeType":"EnumDefinition","src":"666:42:27"},{"canonicalName":"OrderType","id":7019,"members":[{"id":7016,"name":"ASK","nameLocation":"731:3:27","nodeType":"EnumValue","src":"731:3:27"},{"id":7017,"name":"BID","nameLocation":"740:3:27","nodeType":"EnumValue","src":"740:3:27"},{"id":7018,"name":"OFFER_COLLECTION","nameLocation":"749:16:27","nodeType":"EnumValue","src":"749:16:27"}],"name":"OrderType","nameLocation":"715:9:27","nodeType":"EnumDefinition","src":"710:57:27"},{"canonicalName":"Exchange","id":7031,"members":[{"constant":false,"id":7021,"mutability":"mutable","name":"index","nameLocation":"813:5:27","nodeType":"VariableDeclaration","scope":7031,"src":"805:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7020,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7024,"mutability":"mutable","name":"proof","nameLocation":"842:5:27","nodeType":"VariableDeclaration","scope":7031,"src":"832:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"832:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7023,"nodeType":"ArrayTypeName","src":"832:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":7027,"mutability":"mutable","name":"listing","nameLocation":"869:7:27","nodeType":"VariableDeclaration","scope":7031,"src":"861:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"},"typeName":{"id":7026,"nodeType":"UserDefinedTypeName","pathNode":{"id":7025,"name":"Listing","nameLocations":["861:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":7040,"src":"861:7:27"},"referencedDeclaration":7040,"src":"861:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$7040_storage_ptr","typeString":"struct Listing"}},"visibility":"internal"},{"constant":false,"id":7030,"mutability":"mutable","name":"taker","nameLocation":"896:5:27","nodeType":"VariableDeclaration","scope":7031,"src":"890:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_storage_ptr","typeString":"struct Taker"},"typeName":{"id":7029,"nodeType":"UserDefinedTypeName","pathNode":{"id":7028,"name":"Taker","nameLocations":["890:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":7045,"src":"890:5:27"},"referencedDeclaration":7045,"src":"890:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Taker_$7045_storage_ptr","typeString":"struct Taker"}},"visibility":"internal"}],"name":"Exchange","nameLocation":"776:8:27","nodeType":"StructDefinition","scope":7150,"src":"769:143:27","visibility":"public"},{"canonicalName":"Listing","id":7040,"members":[{"constant":false,"id":7033,"mutability":"mutable","name":"index","nameLocation":"957:5:27","nodeType":"VariableDeclaration","scope":7040,"src":"949:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7032,"name":"uint256","nodeType":"ElementaryTypeName","src":"949:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7035,"mutability":"mutable","name":"tokenId","nameLocation":"984:7:27","nodeType":"VariableDeclaration","scope":7040,"src":"976:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7034,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7037,"mutability":"mutable","name":"amount","nameLocation":"1013:6:27","nodeType":"VariableDeclaration","scope":7040,"src":"1005:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7036,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7039,"mutability":"mutable","name":"price","nameLocation":"1041:5:27","nodeType":"VariableDeclaration","scope":7040,"src":"1033:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1033:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Listing","nameLocation":"921:7:27","nodeType":"StructDefinition","scope":7150,"src":"914:143:27","visibility":"public"},{"canonicalName":"Taker","id":7045,"members":[{"constant":false,"id":7042,"mutability":"mutable","name":"tokenId","nameLocation":"1100:7:27","nodeType":"VariableDeclaration","scope":7045,"src":"1092:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7044,"mutability":"mutable","name":"amount","nameLocation":"1129:6:27","nodeType":"VariableDeclaration","scope":7045,"src":"1121:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1121:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Taker","nameLocation":"1066:5:27","nodeType":"StructDefinition","scope":7150,"src":"1059:87:27","visibility":"public"},{"canonicalName":"Order","id":7064,"members":[{"constant":false,"id":7047,"mutability":"mutable","name":"trader","nameLocation":"1190:6:27","nodeType":"VariableDeclaration","scope":7064,"src":"1182:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7046,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7049,"mutability":"mutable","name":"collection","nameLocation":"1218:10:27","nodeType":"VariableDeclaration","scope":7064,"src":"1210:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7048,"name":"address","nodeType":"ElementaryTypeName","src":"1210:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7051,"mutability":"mutable","name":"listingsRoot","nameLocation":"1250:12:27","nodeType":"VariableDeclaration","scope":7064,"src":"1242:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1242:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7053,"mutability":"mutable","name":"numberOfListings","nameLocation":"1284:16:27","nodeType":"VariableDeclaration","scope":7064,"src":"1276:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7052,"name":"uint256","nodeType":"ElementaryTypeName","src":"1276:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7055,"mutability":"mutable","name":"expirationTime","nameLocation":"1322:14:27","nodeType":"VariableDeclaration","scope":7064,"src":"1314:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7058,"mutability":"mutable","name":"assetType","nameLocation":"1360:9:27","nodeType":"VariableDeclaration","scope":7064,"src":"1350:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"},"typeName":{"id":7057,"nodeType":"UserDefinedTypeName","pathNode":{"id":7056,"name":"AssetType","nameLocations":["1350:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":7015,"src":"1350:9:27"},"referencedDeclaration":7015,"src":"1350:9:27","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"}},"visibility":"internal"},{"constant":false,"id":7061,"mutability":"mutable","name":"makerFee","nameLocation":"1391:8:27","nodeType":"VariableDeclaration","scope":7064,"src":"1383:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"},"typeName":{"id":7060,"nodeType":"UserDefinedTypeName","pathNode":{"id":7059,"name":"FeeRate","nameLocations":["1383:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"1383:7:27"},"referencedDeclaration":7142,"src":"1383:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":7063,"mutability":"mutable","name":"salt","nameLocation":"1421:4:27","nodeType":"VariableDeclaration","scope":7064,"src":"1413:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Order","nameLocation":"1155:5:27","nodeType":"StructDefinition","scope":7150,"src":"1148:288:27","visibility":"public"},{"canonicalName":"Transfer","id":7076,"members":[{"constant":false,"id":7066,"mutability":"mutable","name":"trader","nameLocation":"1734:6:27","nodeType":"VariableDeclaration","scope":7076,"src":"1726:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7065,"name":"address","nodeType":"ElementaryTypeName","src":"1726:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7068,"mutability":"mutable","name":"id","nameLocation":"1762:2:27","nodeType":"VariableDeclaration","scope":7076,"src":"1754:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1754:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7070,"mutability":"mutable","name":"amount","nameLocation":"1786:6:27","nodeType":"VariableDeclaration","scope":7076,"src":"1778:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7072,"mutability":"mutable","name":"collection","nameLocation":"1814:10:27","nodeType":"VariableDeclaration","scope":7076,"src":"1806:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7071,"name":"address","nodeType":"ElementaryTypeName","src":"1806:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7075,"mutability":"mutable","name":"assetType","nameLocation":"1848:9:27","nodeType":"VariableDeclaration","scope":7076,"src":"1838:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"},"typeName":{"id":7074,"nodeType":"UserDefinedTypeName","pathNode":{"id":7073,"name":"AssetType","nameLocations":["1838:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":7015,"src":"1838:9:27"},"referencedDeclaration":7015,"src":"1838:9:27","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$7015","typeString":"enum AssetType"}},"visibility":"internal"}],"name":"Transfer","nameLocation":"1697:8:27","nodeType":"StructDefinition","scope":7150,"src":"1690:178:27","visibility":"public"},{"canonicalName":"FungibleTransfers","id":7103,"members":[{"constant":false,"id":7078,"mutability":"mutable","name":"totalProtocolFee","nameLocation":"1909:16:27","nodeType":"VariableDeclaration","scope":7103,"src":"1901:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7077,"name":"uint256","nodeType":"ElementaryTypeName","src":"1901:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7080,"mutability":"mutable","name":"totalSellerTransfer","nameLocation":"1939:19:27","nodeType":"VariableDeclaration","scope":7103,"src":"1931:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1931:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7082,"mutability":"mutable","name":"totalTakerFee","nameLocation":"1972:13:27","nodeType":"VariableDeclaration","scope":7103,"src":"1964:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7081,"name":"uint256","nodeType":"ElementaryTypeName","src":"1964:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7084,"mutability":"mutable","name":"feeRecipientId","nameLocation":"1999:14:27","nodeType":"VariableDeclaration","scope":7103,"src":"1991:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7083,"name":"uint256","nodeType":"ElementaryTypeName","src":"1991:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7086,"mutability":"mutable","name":"makerId","nameLocation":"2027:7:27","nodeType":"VariableDeclaration","scope":7103,"src":"2019:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7085,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7089,"mutability":"mutable","name":"feeRecipients","nameLocation":"2050:13:27","nodeType":"VariableDeclaration","scope":7103,"src":"2040:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7087,"name":"address","nodeType":"ElementaryTypeName","src":"2040:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7088,"nodeType":"ArrayTypeName","src":"2040:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7092,"mutability":"mutable","name":"makers","nameLocation":"2079:6:27","nodeType":"VariableDeclaration","scope":7103,"src":"2069:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7090,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7091,"nodeType":"ArrayTypeName","src":"2069:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7095,"mutability":"mutable","name":"makerTransfers","nameLocation":"2101:14:27","nodeType":"VariableDeclaration","scope":7103,"src":"2091:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7093,"name":"uint256","nodeType":"ElementaryTypeName","src":"2091:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7094,"nodeType":"ArrayTypeName","src":"2091:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7098,"mutability":"mutable","name":"feeTransfers","nameLocation":"2131:12:27","nodeType":"VariableDeclaration","scope":7103,"src":"2121:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7096,"name":"uint256","nodeType":"ElementaryTypeName","src":"2121:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7097,"nodeType":"ArrayTypeName","src":"2121:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7102,"mutability":"mutable","name":"executions","nameLocation":"2167:10:27","nodeType":"VariableDeclaration","scope":7103,"src":"2149:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_storage_$dyn_storage_ptr","typeString":"struct AtomicExecution[]"},"typeName":{"baseType":{"id":7100,"nodeType":"UserDefinedTypeName","pathNode":{"id":7099,"name":"AtomicExecution","nameLocations":["2149:15:27"],"nodeType":"IdentifierPath","referencedDeclaration":7119,"src":"2149:15:27"},"referencedDeclaration":7119,"src":"2149:15:27","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicExecution_$7119_storage_ptr","typeString":"struct AtomicExecution"}},"id":7101,"nodeType":"ArrayTypeName","src":"2149:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AtomicExecution_$7119_storage_$dyn_storage_ptr","typeString":"struct AtomicExecution[]"}},"visibility":"internal"}],"name":"FungibleTransfers","nameLocation":"1877:17:27","nodeType":"StructDefinition","scope":7150,"src":"1870:310:27","visibility":"public"},{"canonicalName":"AtomicExecution","id":7119,"members":[{"constant":false,"id":7105,"mutability":"mutable","name":"makerId","nameLocation":"2233:7:27","nodeType":"VariableDeclaration","scope":7119,"src":"2225:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7107,"mutability":"mutable","name":"sellerAmount","nameLocation":"2262:12:27","nodeType":"VariableDeclaration","scope":7119,"src":"2254:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7106,"name":"uint256","nodeType":"ElementaryTypeName","src":"2254:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7109,"mutability":"mutable","name":"makerFeeRecipientId","nameLocation":"2296:19:27","nodeType":"VariableDeclaration","scope":7119,"src":"2288:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2288:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7111,"mutability":"mutable","name":"makerFeeAmount","nameLocation":"2337:14:27","nodeType":"VariableDeclaration","scope":7119,"src":"2329:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2329:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7113,"mutability":"mutable","name":"takerFeeAmount","nameLocation":"2373:14:27","nodeType":"VariableDeclaration","scope":7119,"src":"2365:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2365:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7115,"mutability":"mutable","name":"protocolFeeAmount","nameLocation":"2409:17:27","nodeType":"VariableDeclaration","scope":7119,"src":"2401:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7114,"name":"uint256","nodeType":"ElementaryTypeName","src":"2401:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7118,"mutability":"mutable","name":"stateUpdate","nameLocation":"2452:11:27","nodeType":"VariableDeclaration","scope":7119,"src":"2440:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_storage_ptr","typeString":"struct StateUpdate"},"typeName":{"id":7117,"nodeType":"UserDefinedTypeName","pathNode":{"id":7116,"name":"StateUpdate","nameLocations":["2440:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":7130,"src":"2440:11:27"},"referencedDeclaration":7130,"src":"2440:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_StateUpdate_$7130_storage_ptr","typeString":"struct StateUpdate"}},"visibility":"internal"}],"name":"AtomicExecution","nameLocation":"2189:15:27","nodeType":"StructDefinition","scope":7150,"src":"2182:292:27","visibility":"public"},{"canonicalName":"StateUpdate","id":7130,"members":[{"constant":false,"id":7121,"mutability":"mutable","name":"trader","nameLocation":"2523:6:27","nodeType":"VariableDeclaration","scope":7130,"src":"2515:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7120,"name":"address","nodeType":"ElementaryTypeName","src":"2515:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7123,"mutability":"mutable","name":"hash","nameLocation":"2551:4:27","nodeType":"VariableDeclaration","scope":7130,"src":"2543:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2543:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7125,"mutability":"mutable","name":"index","nameLocation":"2577:5:27","nodeType":"VariableDeclaration","scope":7130,"src":"2569:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2569:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7127,"mutability":"mutable","name":"value","nameLocation":"2604:5:27","nodeType":"VariableDeclaration","scope":7130,"src":"2596:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2596:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7129,"mutability":"mutable","name":"maxAmount","nameLocation":"2631:9:27","nodeType":"VariableDeclaration","scope":7130,"src":"2623:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2623:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StateUpdate","nameLocation":"2483:11:27","nodeType":"StructDefinition","scope":7150,"src":"2476:175:27","visibility":"public"},{"canonicalName":"Fees","id":7137,"members":[{"constant":false,"id":7133,"mutability":"mutable","name":"protocolFee","nameLocation":"2693:11:27","nodeType":"VariableDeclaration","scope":7137,"src":"2685:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"},"typeName":{"id":7132,"nodeType":"UserDefinedTypeName","pathNode":{"id":7131,"name":"FeeRate","nameLocations":["2685:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"2685:7:27"},"referencedDeclaration":7142,"src":"2685:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"},{"constant":false,"id":7136,"mutability":"mutable","name":"takerFee","nameLocation":"2726:8:27","nodeType":"VariableDeclaration","scope":7137,"src":"2718:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"},"typeName":{"id":7135,"nodeType":"UserDefinedTypeName","pathNode":{"id":7134,"name":"FeeRate","nameLocations":["2718:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":7142,"src":"2718:7:27"},"referencedDeclaration":7142,"src":"2718:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeRate_$7142_storage_ptr","typeString":"struct FeeRate"}},"visibility":"internal"}],"name":"Fees","nameLocation":"2660:4:27","nodeType":"StructDefinition","scope":7150,"src":"2653:92:27","visibility":"public"},{"canonicalName":"FeeRate","id":7142,"members":[{"constant":false,"id":7139,"mutability":"mutable","name":"recipient","nameLocation":"2790:9:27","nodeType":"VariableDeclaration","scope":7142,"src":"2782:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7138,"name":"address","nodeType":"ElementaryTypeName","src":"2782:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7141,"mutability":"mutable","name":"rate","nameLocation":"2820:4:27","nodeType":"VariableDeclaration","scope":7142,"src":"2813:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7140,"name":"uint16","nodeType":"ElementaryTypeName","src":"2813:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"FeeRate","nameLocation":"2754:7:27","nodeType":"StructDefinition","scope":7150,"src":"2747:88:27","visibility":"public"},{"canonicalName":"Cancel","id":7149,"members":[{"constant":false,"id":7144,"mutability":"mutable","name":"hash","nameLocation":"2865:4:27","nodeType":"VariableDeclaration","scope":7149,"src":"2857:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2857:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7146,"mutability":"mutable","name":"index","nameLocation":"2883:5:27","nodeType":"VariableDeclaration","scope":7149,"src":"2875:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2875:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7148,"mutability":"mutable","name":"amount","nameLocation":"2902:6:27","nodeType":"VariableDeclaration","scope":7149,"src":"2894:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2894:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Cancel","nameLocation":"2844:6:27","nodeType":"StructDefinition","scope":7150,"src":"2837:74:27","visibility":"public"}],"src":"32:2880:27"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"irOptimized":""}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ERC1967Proxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","zk_version":"1.3.14"},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC1967Proxy.sol:ERC1967Proxy\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t@CPI0_8[0], r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_4[0], r2, r2\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_47\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_58\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t31, r4, r3\n\tand\t@CPI0_0[0], r4, stack[@returndatasize]\n\tand\t@CPI0_0[0], r4, r4\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_68\n\tadd\tr0, r0, r5\n.BB0_54:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_54\n.BB0_68:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_56\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_56:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_62\n\tjump\t@.BB0_57\n.BB0_1:\n\tadd\t159, r1, r2\n\tsub.s\t32, r0, r8\n\tand\tr2, r8, r2\n\tadd\t@CPI0_1[0], r2, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tjump.gt\t@.BB0_3\n.BB0_2:\n\tadd\t@CPI0_22[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_47:\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tand\t31, r1, r4\n\tshr.s!\t5, r1, r1\n\tjump.eq\t@.BB0_71\n\tadd\tr0, r0, r5\n.BB0_49:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_49\n.BB0_71:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_51\n\tshl.s\t3, r4, r4\n\tshl.s\t5, r1, r1\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tptr.add\tr3, r1, r3\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB0_51:\n\tadd\tstack[@calldatasize], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_63\n.BB0_58:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB0_69\n\tadd\tr0, r0, r4\n.BB0_60:\n\tshl.s\t5, r4, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_60\n.BB0_69:\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_62\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n\tjump\t@.BB0_62\n.BB0_3:\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_73\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_73:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_7:\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r4\n\tsub!\tr4, r0, r5\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_8\n\tld.1\t128, r9\n\tand\t@CPI0_4[0], r9, r10\n\tsub.s!\t@CPI0_4[0], r9, r2\n\tjump.gt\t@.BB0_8\n\tld.1\t160, r2\n\tsub.s!\t@CPI0_5[0], r2, r3\n\tjump.gt\t@.BB0_8\n\tadd\t128, r1, r3\n\tadd\t159, r2, r1\n\tadd\t@CPI0_3[0], r0, r4\n\tsub!\tr1, r3, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_3[0], r3, r6\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr1, r6, r1\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr4, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_8\n\tadd\t128, r2, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_5[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\t63, r1, r4\n\tand\tr4, r8, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1\t64, r4\n\tst.1.inc\tr7, r1, r6\n\tadd\t160, r2, r2\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_8\n\tadd\tr7, r0, stack-[4]\n\tadd\tr10, r0, stack-[6]\n\tadd\tr8, r0, stack-[2]\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_19\n\tadd\tr0, r0, r3\n.BB0_18:\n\tadd\tr3, r6, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_18\n.BB0_19:\n\tadd\tr6, r1, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r9\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr9, r0, stack-[5]\n\tadd\tr6, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[6], r0, r5\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_22\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_20[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_63:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t31, r4, r3\n\tand\t@CPI0_0[0], r4, stack[@returndatasize]\n\tand\t@CPI0_0[0], r4, r4\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_70\n\tadd\tr0, r0, r5\n.BB0_65:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_65\n.BB0_70:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_67\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_67:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_57\n.BB0_62:\n\tadd\t96, r0, r1\n\tshl\tstack[@returndatasize], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_57:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_22:\n\tadd\t@CPI0_8[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_9[0], r2, r2\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_11[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[4], r0, r4\n\tadd\tstack-[5], r0, r6\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_8\n\tld.1\tr4, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_24\n.BB0_25:\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_18[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_24:\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_12[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\t64, r3, r1\n\tadd\t@CPI0_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tadd\tr3, r0, stack-[6]\n\tst.1.inc\tr3, r1, r2\n\tadd\t@CPI0_14[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tld.1\tr4, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r6, r3\n\tjump.ne\t@.BB0_28\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_29\n.BB0_28:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tr6, r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_29:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_38\n.BB0_30:\n\tld.1.inc\tr1, r1, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_34\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_33\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[5]\n\tadd\t@CPI0_16[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r3\n\tadd\tr3, r0, stack-[6]\n\tadd\t36, r4, r1\n\tst.1\tr1, r3\n\tadd\t68, r4, r2\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_memory_to_memory_with_cleanup, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tadd\t31, r1, r1\n\tadd\tstack-[2], r0, r2\n\tand\tr1, r2, r1\n\tadd\t68, r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[5], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_38:\n\tsub.s!\t@CPI0_5[0], r3, r1\n\tadd\tstack-[2], r0, r4\n\tjump.gt\t@.BB0_2\n\tadd\t63, r3, r1\n\tand\tr1, r4, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1\t64, r4\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_72\n\tadd\tr0, r0, r7\n.BB0_43:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_43\n.BB0_72:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_30\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_30\n.BB0_34:\n\tsub!\tr1, r0, r1\n\tadd\tstack-[5], r0, r2\n\tjump.ne\t@.BB0_25\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_25\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_33:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\ncopy_memory_to_memory_with_cleanup:\n.func_begin1:\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr4, r2, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tret\n.func_end1:\n\n__farcall:\n.func_begin2:\n.tmp0:\n\tfar_call\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__delegatecall:\n.func_begin4:\n.tmp6:\n\tfar_call.delegate\tr1, r2, @.BB4_2\n.tmp7:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp8:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551616\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_4:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_5:\n\t.cell 18446744073709551615\nCPI0_6:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_7:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_8:\n\t.cell 24440054405305269366569402256811496959409073762505157381672968839269610695612\nCPI0_9:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_10:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_11:\n\t.cell -30536698362301869620703524882028299911890425965968411027149867401609008632517\nCPI0_12:\n\t.cell 18446744073709551519\nCPI0_13:\n\t.cell 14654901866877395549149391597484105336708473837108585137082493300548441210880\nCPI0_14:\n\t.cell 29577713123142787666065354962605974352286555015652805685687967870311454567532\nCPI0_15:\n\t.cell 29577713123142787666064487680123823951345158729797978021083438401868913442816\nCPI0_16:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_17:\n\t.cell 7922816251426433759354395033600\nCPI0_18:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_19:\n\t.cell 50411903926665684337970802942352511357568373430877458990420567558264874598400\nCPI0_20:\n\t.cell 31354931755624933654031447922210259146857421806447843296373930569683382247534\nCPI0_21:\n\t.cell 10458117451882892562347801444352\nCPI0_22:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_23:\n\t.cell 2852213850513516153367582212096\n","bytecode":{"object":""},"methodIdentifiers":{}},"irOptimized":"/// @use-src 1:\"@openzeppelin/contracts/interfaces/IERC1967.sol\", 3:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 4:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 5:\"@openzeppelin/contracts/proxy/Proxy.sol\", 12:\"@openzeppelin/contracts/utils/Address.sol\", 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"ERC1967Proxy_180\" {\n    code {\n        {\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            let _1 := 64\n            mstore(_1, memoryguard(0x80))\n            let programSize := datasize(\"ERC1967Proxy_180\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _2 := add(memoryDataOffset, argSize)\n            if slt(sub(_2, memoryDataOffset), _1)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            let value := mload(memoryDataOffset)\n            let _3 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _3))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            let _4 := 32\n            let offset := mload(add(memoryDataOffset, _4))\n            let _5 := sub(shl(64, 1), 1)\n            if gt(offset, _5)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            let _6 := add(memoryDataOffset, offset)\n            if iszero(slt(add(_6, 0x1f), _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            let _7 := mload(_6)\n            let array := allocate_memory(array_allocation_size_bytes(_7))\n            mstore(array, _7)\n            let dst := add(array, _4)\n            if gt(add(add(_6, _7), _4), _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            copy_memory_to_memory_with_cleanup(add(_6, _4), dst, _7)\n            if /** @src 12:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 12:1702:1721  \"account.code.length\" */ extcodesize(value))\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            {\n                let memPtr := mload(_1)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), _4)\n                mstore(add(memPtr, 36), 45)\n                mstore(add(memPtr, 68), \"ERC1967: new implementation is n\")\n                mstore(add(memPtr, 100), \"ot a contract\")\n                revert(memPtr, 132)\n            }\n            /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n            let _8 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n            sstore(_8, or(and(sload(_8), not(/** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ sub(shl(160, 1), 1))), /** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _3))\n            /// @src -1:-1:-1\n            let _9 := 0\n            /// @src 4:1889:1916  \"Upgraded(newImplementation)\"\n            log2(/** @src -1:-1:-1 */ _9, _9, /** @src 4:1889:1916  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _3)\n            /// @src 4:2208:2223  \"data.length > 0\"\n            let _10 := iszero(/** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ mload(/** @src 4:2208:2219  \"data.length\" */ array))\n            /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n            let expr := /** @src 4:2208:2223  \"data.length > 0\" */ iszero(_10)\n            /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n            if _10\n            {\n                expr := /** @src -1:-1:-1 */ _9\n            }\n            /// @src 4:2204:2316  \"if (data.length > 0 || forceCall) {...\"\n            if expr\n            {\n                /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n                let memPtr_1 := mload(_1)\n                let newFreePtr := add(memPtr_1, 96)\n                if or(gt(newFreePtr, _5), lt(newFreePtr, memPtr_1))\n                {\n                    mstore(/** @src -1:-1:-1 */ _9, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ _9, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ 0x24)\n                }\n                mstore(_1, newFreePtr)\n                mstore(memPtr_1, 39)\n                mstore(add(memPtr_1, _4), \"Address: low-level delegate call\")\n                mstore(add(memPtr_1, _1), \" failed\")\n                /// @src 12:7265:7290  \"target.delegatecall(data)\"\n                let expr_component := delegatecall(gas(), value, dst, mload(array), /** @src -1:-1:-1 */ _9, _9)\n                /// @src 12:7265:7290  \"target.delegatecall(data)\"\n                let data := /** @src -1:-1:-1 */ _9\n                /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _11 := returndatasize()\n                    let memPtr_2 := allocate_memory(array_allocation_size_bytes(_11))\n                    mstore(memPtr_2, _11)\n                    data := memPtr_2\n                    returndatacopy(add(memPtr_2, _4), /** @src -1:-1:-1 */ _9, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ returndatasize())\n                }\n                /// @src 12:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                pop(fun_verifyCallResultFromTarget(value, expr_component, /** @src 12:7265:7290  \"target.delegatecall(data)\" */ data, /** @src 12:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ memPtr_1))\n            }\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            let _12 := mload(_1)\n            let _13 := datasize(\"ERC1967Proxy_180_deployed\")\n            codecopy(_12, dataoffset(\"ERC1967Proxy_180_deployed\"), _13)\n            return(_12, _13)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function array_allocation_size_bytes(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            size := add(and(add(length, 31), not(31)), 0x20)\n        }\n        function copy_memory_to_memory_with_cleanup(src, dst, length)\n        {\n            let i := 0\n            for { } lt(i, length) { i := add(i, 32) }\n            {\n                mstore(add(dst, i), mload(add(src, i)))\n            }\n            mstore(add(dst, length), 0)\n        }\n        /// @ast-id 1496 @src 12:7671:8299  \"function verifyCallResultFromTarget(...\"\n        function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos, var_errorMessage_mpos) -> var_mpos\n        {\n            /// @src 12:7851:7863  \"bytes memory\"\n            var_mpos := /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ 96\n            /// @src 12:7875:8293  \"if (success) {...\"\n            switch var_success\n            case 0 {\n                /// @src 12:8976:9355  \"if (returndata.length > 0) {...\"\n                switch /** @src 12:8980:9001  \"returndata.length > 0\" */ iszero(iszero(/** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ mload(/** @src 12:8980:8997  \"returndata.length\" */ var_returndata_mpos)))\n                case /** @src 12:8976:9355  \"if (returndata.length > 0) {...\" */ 0 {\n                    /// @src 12:9324:9344  \"revert(errorMessage)\"\n                    let _1 := /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ mload(64)\n                    /// @src 12:9324:9344  \"revert(errorMessage)\"\n                    mstore(_1, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ shl(229, 4594637))\n                    mstore(/** @src 12:9324:9344  \"revert(errorMessage)\" */ add(_1, 4), /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ 32)\n                    let length := mload(var_errorMessage_mpos)\n                    mstore(add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ 36), length)\n                    copy_memory_to_memory_with_cleanup(add(var_errorMessage_mpos, 32), add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ 68), length)\n                    /// @src 12:9324:9344  \"revert(errorMessage)\"\n                    revert(_1, add(sub(/** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ and(add(length, 31), not(31))), /** @src 12:9324:9344  \"revert(errorMessage)\" */ _1), /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ 68))\n                }\n                default /// @src 12:8976:9355  \"if (returndata.length > 0) {...\"\n                {\n                    /// @src 12:9152:9294  \"assembly {...\"\n                    revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                }\n            }\n            default /// @src 12:7875:8293  \"if (success) {...\"\n            {\n                /// @src 12:7902:8188  \"if (returndata.length == 0) {...\"\n                if /** @src 12:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ mload(/** @src 12:7906:7923  \"returndata.length\" */ var_returndata_mpos))\n                /// @src 12:7902:8188  \"if (returndata.length == 0) {...\"\n                {\n                    /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n                    if /** @src 12:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 12:1702:1721  \"account.code.length\" */ extcodesize(var_target))\n                    /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n                    {\n                        let memPtr := mload(64)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 32)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                        revert(memPtr, 100)\n                    }\n                }\n                /// @src 12:8201:8218  \"return returndata\"\n                var_mpos := var_returndata_mpos\n                leave\n            }\n        }\n    }\n    /// @use-src 3:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 4:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 5:\"@openzeppelin/contracts/proxy/Proxy.sol\", 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"ERC1967Proxy_180_deployed\" {\n        code {\n            {\n                /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n                mstore(64, 128)\n                if iszero(calldatasize())\n                {\n                    /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                    let value := and(sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), sub(shl(160, 1), 1))\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 5:1018:1837  \"assembly {...\"\n                    calldatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ calldatasize())\n                    /// @src 5:1018:1837  \"assembly {...\"\n                    let usr$result := delegatecall(gas(), value, /** @src -1:-1:-1 */ _1, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ calldatasize(), /** @src -1:-1:-1 */ _1, _1)\n                    /// @src 5:1018:1837  \"assembly {...\"\n                    returndatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                    switch usr$result\n                    case 0 {\n                        revert(/** @src -1:-1:-1 */ _1, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                    }\n                    default {\n                        return(/** @src -1:-1:-1 */ _1, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                    }\n                }\n                /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                let value_1 := and(sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), sub(shl(160, 1), 1))\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 5:1018:1837  \"assembly {...\"\n                calldatacopy(/** @src -1:-1:-1 */ _2, _2, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ calldatasize())\n                /// @src 5:1018:1837  \"assembly {...\"\n                let usr$result_1 := delegatecall(gas(), value_1, /** @src -1:-1:-1 */ _2, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ calldatasize(), /** @src -1:-1:-1 */ _2, _2)\n                /// @src 5:1018:1837  \"assembly {...\"\n                returndatacopy(/** @src -1:-1:-1 */ _2, _2, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                switch usr$result_1\n                case 0 {\n                    revert(/** @src -1:-1:-1 */ _2, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                }\n                default {\n                    return(/** @src -1:-1:-1 */ _2, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209ca133d36d29b42c567be9d299b5faae85226de768f25d4969dd4ba1696f2b9c64736f6c63430008110033\"\n    }\n}\n","hash":"010000a3c26f7e148fa0d3030fe34adfd50269536f7a34793bb996a2942eaeff","factoryDependencies":{}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ERC1967Upgrade":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol":{"BeaconProxy":{"abi":[{"inputs":[{"internalType":"address","name":"beacon","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","zk_version":"1.3.14"},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"BeaconProxy.sol:BeaconProxy\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t@CPI0_10[0], r0, r2\n\tsload\tr2, r2\n\tadd\t@CPI0_8[0], r0, r3\n\tst.1\t128, r3\n\tand\t@CPI0_4[0], r2, r2\n\tcontext.gas_left\tr3\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_83\n\tsub.s!\t4, r2, r1\n\tjump.ne\t@.BB0_113\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_123\n.BB0_1:\n\tadd\t159, r1, r2\n\tsub.s\t32, r0, r8\n\tand\tr2, r8, r2\n\tadd\t@CPI0_1[0], r2, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tjump.gt\t@.BB0_3\n.BB0_2:\n\tadd\t@CPI0_26[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_27[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_83:\n\tsub.s!\t4, r2, r1\n\tjump.ne\t@.BB0_85\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_95\n.BB0_3:\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_149\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_149:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_7:\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r4\n\tsub!\tr4, r0, r5\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_8\n\tld.1\t128, r9\n\tsub.s!\t@CPI0_4[0], r9, r2\n\tjump.gt\t@.BB0_8\n\tld.1\t160, r2\n\tsub.s!\t@CPI0_5[0], r2, r3\n\tjump.gt\t@.BB0_8\n\tadd\t128, r1, r3\n\tadd\t159, r2, r1\n\tadd\t@CPI0_3[0], r0, r4\n\tsub!\tr1, r3, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_3[0], r3, r6\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr1, r6, r1\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr4, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_8\n\tadd\t128, r2, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_5[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\t63, r1, r4\n\tand\tr4, r8, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1\t64, r4\n\tst.1.inc\tr7, r1, r6\n\tadd\t160, r2, r2\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_8\n\tadd\tr7, r0, stack-[5]\n\tadd\tr8, r0, stack-[4]\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_19\n\tadd\tr0, r0, r3\n.BB0_18:\n\tadd\tr3, r6, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_18\n.BB0_19:\n\tadd\tr6, r1, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r9\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr6, r0, stack-[3]\n\tadd\tr9, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_22\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_24[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_18[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_113:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_138\n\tadd\tr0, r0, r7\n.BB0_115:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_115\n.BB0_138:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_117\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_117:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_118\n.BB0_123:\n\tadd\t159, r4, r1\n\tand\t224, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_8\n\tld.1\t128, r2\n\tsub.s!\t@CPI0_4[0], r2, r1\n\tjump.gt\t@.BB0_8\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_136\n\tadd\tr0, r0, r5\n.BB0_126:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_126\n.BB0_136:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_128\n\tshl.s\t3, r4, r4\n\tshl.s\t5, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tptr.add\tr1, r3, r1\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_128:\n\tadd\tstack[@calldatasize], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.eq\t@.BB0_108\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t31, r4, r3\n\tand\t@CPI0_0[0], r4, stack[@returndatasize]\n\tand\t@CPI0_0[0], r4, r4\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_135\n\tadd\tr0, r0, r5\n.BB0_131:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_131\n.BB0_135:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_133\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_133:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_112\n\tjump\t@.BB0_107\n.BB0_85:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_143\n\tadd\tr0, r0, r7\n.BB0_87:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_87\n.BB0_143:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_89\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_89:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_90\n.BB0_95:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_8\n\tld.1\t128, r2\n\tsub.s!\t@CPI0_4[0], r2, r1\n\tjump.le\t@.BB0_97\n.BB0_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_118:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_137\n\tadd\tr0, r0, r5\n.BB0_120:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_120\n.BB0_137:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_122\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_122:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_90:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_142\n\tadd\tr0, r0, r5\n.BB0_92:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_92\n.BB0_142:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_94\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_94:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_97:\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_141\n\tadd\tr0, r0, r5\n.BB0_99:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_99\n.BB0_141:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_101\n\tshl.s\t3, r4, r4\n\tshl.s\t5, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tptr.add\tr1, r3, r1\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_101:\n\tadd\tstack[@calldatasize], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_102\n.BB0_108:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB0_139\n\tadd\tr0, r0, r4\n.BB0_110:\n\tshl.s\t5, r4, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_110\n.BB0_139:\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_112\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n\tjump\t@.BB0_112\n.BB0_102:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t31, r4, r3\n\tand\t@CPI0_0[0], r4, stack[@returndatasize]\n\tand\t@CPI0_0[0], r4, r4\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_140\n\tadd\tr0, r0, r5\n.BB0_104:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_104\n.BB0_140:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_106\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_106:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_107\n.BB0_112:\n\tadd\t96, r0, r1\n\tshl\tstack[@returndatasize], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_107:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_22:\n\tld.1\t64, r10\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\tr10, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_4[0], r3, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[6]\n\tjump.ne\t@.BB0_24\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_34\n.BB0_24:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\tr10, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_148\n\tadd\tr0, r0, r7\n.BB0_26:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_26\n.BB0_148:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_28\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_28:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_29\n.BB0_34:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_5[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_2\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_8\n\tld.1\tr10, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_8\n\tadd\t@CPI0_6[0], r0, r2\n\tst.2\t0, r2\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_41\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_22[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t48, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_18[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_29:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_147\n\tadd\tr0, r0, r5\n.BB0_31:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_31\n.BB0_147:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_33\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_33:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_41:\n\tadd\t@CPI0_10[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_11[0], r2, r2\n\tadd\tstack-[6], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_13[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tadd\tstack-[5], r0, r1\n\tjump.eq\t@.BB0_8\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_43\n.BB0_45:\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_20[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_43:\n\tadd\t@CPI0_8[0], r0, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[6], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_46\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_56\n.BB0_46:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[2], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_146\n\tadd\tr0, r0, r7\n.BB0_48:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_48\n.BB0_146:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_50\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[2], r0, r8\n\tadd\tr8, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_50:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_51\n.BB0_56:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd\tstack-[5], r0, r4\n\tjump.gt\t@.BB0_2\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[6], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_8\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_8\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\t64, r3, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tst.1.inc\tr3, r1, r2\n\tadd\t@CPI0_16[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tld.1\tr4, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_62\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_64\n.BB0_51:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_145\n\tadd\tr0, r0, r5\n.BB0_53:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_53\n.BB0_145:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_55\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_55:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_62:\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[3], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_64:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_73\n.BB0_65:\n\tld.1.inc\tr1, r1, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_69\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_68\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[5]\n\tadd\t@CPI0_18[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r3\n\tadd\tr3, r0, stack-[6]\n\tadd\t36, r4, r1\n\tst.1\tr1, r3\n\tadd\t68, r4, r2\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_memory_to_memory_with_cleanup, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tadd\t31, r1, r1\n\tadd\tstack-[4], r0, r2\n\tand\tr1, r2, r1\n\tadd\t68, r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[5], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_73:\n\tsub.s!\t@CPI0_5[0], r3, r1\n\tadd\tstack-[4], r0, r4\n\tjump.gt\t@.BB0_2\n\tadd\t63, r3, r1\n\tand\tr1, r4, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1\t64, r4\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_144\n\tadd\tr0, r0, r7\n.BB0_78:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_78\n.BB0_144:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_65\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_65\n.BB0_69:\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_45\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_45\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_18[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_19[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_68:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\ncopy_memory_to_memory_with_cleanup:\n.func_begin1:\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr4, r2, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tret\n.func_end1:\n\n__farcall:\n.func_begin2:\n.tmp0:\n\tfar_call\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__delegatecall:\n.func_begin4:\n.tmp6:\n\tfar_call.delegate\tr1, r2, @.BB4_2\n.tmp7:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp8:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551616\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_4:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_5:\n\t.cell 18446744073709551615\nCPI0_6:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_7:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_8:\n\t.cell 41783904696501392981958754530355920803367001723273469674524225868246137438208\nCPI0_9:\n\t.cell 316912650057057350374175801344\nCPI0_10:\n\t.cell -41639854469081393421572961404638983640191539595133337668121158094050516845232\nCPI0_11:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_12:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_13:\n\t.cell 13095319879579673774906362677273367217168541374819154535076586949019890703678\nCPI0_14:\n\t.cell 18446744073709551519\nCPI0_15:\n\t.cell 14654901866877395549149391597484105336708473837108585137082493300548441210880\nCPI0_16:\n\t.cell 29577713123142787666065354962605974352286555015652805685687967870311454567532\nCPI0_17:\n\t.cell 29577713123142787666064487680123823951345158729797978021083438401868913442816\nCPI0_18:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_19:\n\t.cell 7922816251426433759354395033600\nCPI0_20:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_21:\n\t.cell 52073278890030315923523476883424681616233462227077536547330151392245272543232\nCPI0_22:\n\t.cell 31354931755624933654030298518784209954935927771430599339171644794217423577193\nCPI0_23:\n\t.cell 10458117451882892562347801444352\nCPI0_24:\n\t.cell 52670383151690221431031452997458026654535389562501630567081304160140192120832\nCPI0_25:\n\t.cell 31354931755624933654031447922210102339626598020010440975952794547341664415598\nCPI0_26:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_27:\n\t.cell 2852213850513516153367582212096\nCPI0_28:\n\t.cell 316912652418240591808998408192\n","bytecode":{"object":""},"methodIdentifiers":{}},"irOptimized":"/// @use-src 1:\"@openzeppelin/contracts/interfaces/IERC1967.sol\", 4:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 5:\"@openzeppelin/contracts/proxy/Proxy.sol\", 6:\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\", 12:\"@openzeppelin/contracts/utils/Address.sol\", 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"BeaconProxy_602\" {\n    code {\n        {\n            /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n            let _1 := memoryguard(0x80)\n            let _2 := 64\n            mstore(_2, _1)\n            let programSize := datasize(\"BeaconProxy_602\")\n            let argSize := sub(codesize(), programSize)\n            finalize_allocation(_1, argSize)\n            codecopy(_1, programSize, argSize)\n            let _3 := add(_1, argSize)\n            if slt(sub(_3, _1), _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n            let value0 := abi_decode_address_fromMemory(_1)\n            let _4 := 32\n            let offset := mload(add(_1, _4))\n            let _5 := sub(shl(64, 1), 1)\n            if gt(offset, _5)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n            let _6 := add(_1, offset)\n            if iszero(slt(add(_6, 0x1f), _3))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n            let _7 := mload(_6)\n            let _8 := array_allocation_size_bytes(_7)\n            let memPtr := mload(_2)\n            finalize_allocation(memPtr, _8)\n            mstore(memPtr, _7)\n            let dst := add(memPtr, _4)\n            if gt(add(add(_6, _7), _4), _3)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n            copy_memory_to_memory_with_cleanup(add(_6, _4), dst, _7)\n            if /** @src 12:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 12:1702:1721  \"account.code.length\" */ extcodesize(value0))\n            /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n            {\n                let memPtr_1 := mload(_2)\n                mstore(memPtr_1, shl(229, 4594637))\n                mstore(add(memPtr_1, 4), _4)\n                mstore(add(memPtr_1, 36), 37)\n                mstore(add(memPtr_1, 68), \"ERC1967: new beacon is not a con\")\n                mstore(add(memPtr_1, 100), \"tract\")\n                revert(memPtr_1, 132)\n            }\n            let _9 := and(/** @src 4:5240:5258  \"IBeacon(newBeacon)\" */ value0, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ sub(shl(160, 1), 1))\n            /// @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\"\n            let _10 := /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ mload(_2)\n            let _11 := shl(224, 0x5c60da1b)\n            /// @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\"\n            mstore(_10, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _11)\n            /// @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\"\n            let _12 := staticcall(gas(), _9, _10, 4, _10, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _4)\n            /// @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\"\n            if iszero(_12)\n            {\n                /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                let pos := mload(_2)\n                returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ returndatasize())\n                revert(pos, returndatasize())\n            }\n            /// @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\"\n            let expr := /** @src -1:-1:-1 */ 0\n            /// @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\"\n            if _12\n            {\n                let _13 := /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _4\n                /// @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\"\n                if gt(/** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _4, /** @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\" */ returndatasize()) { _13 := returndatasize() }\n                finalize_allocation(_10, _13)\n                /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                if slt(sub(/** @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\" */ add(_10, _13), /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _10), _4)\n                {\n                    revert(/** @src -1:-1:-1 */ expr, expr)\n                }\n                /// @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\"\n                expr := /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ abi_decode_address_fromMemory(_10)\n            }\n            if /** @src 12:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 12:1702:1721  \"account.code.length\" */ extcodesize(expr))\n            /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n            {\n                let memPtr_2 := mload(_2)\n                mstore(memPtr_2, shl(229, 4594637))\n                mstore(add(memPtr_2, /** @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\" */ 4), /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _4)\n                mstore(add(memPtr_2, 36), 48)\n                mstore(add(memPtr_2, 68), \"ERC1967: beacon implementation i\")\n                mstore(add(memPtr_2, 100), \"s not a contract\")\n                revert(memPtr_2, 132)\n            }\n            /// @src 4:4719:4785  \"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\"\n            let _14 := 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\n            sstore(_14, or(and(sload(_14), not(/** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ sub(shl(160, 1), 1))), /** @src 4:4719:4785  \"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\" */ _9))\n            /// @src 4:5870:5895  \"BeaconUpgraded(newBeacon)\"\n            let _15 := /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ mload(_2)\n            /// @src 4:5870:5895  \"BeaconUpgraded(newBeacon)\"\n            log2(/** @src -1:-1:-1 */ 0, 0, /** @src 4:5870:5895  \"BeaconUpgraded(newBeacon)\" */ 0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e, _9)\n            /// @src 4:5909:5924  \"data.length > 0\"\n            let _16 := iszero(/** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ mload(/** @src 4:5909:5920  \"data.length\" */ memPtr))\n            /// @src 4:5909:5937  \"data.length > 0 || forceCall\"\n            let expr_1 := /** @src 4:5909:5924  \"data.length > 0\" */ iszero(_16)\n            /// @src 4:5909:5937  \"data.length > 0 || forceCall\"\n            if _16\n            {\n                expr_1 := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 4:5905:6035  \"if (data.length > 0 || forceCall) {...\"\n            if expr_1\n            {\n                /// @src 4:5982:6017  \"IBeacon(newBeacon).implementation()\"\n                mstore(_15, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _11)\n                /// @src 4:5982:6017  \"IBeacon(newBeacon).implementation()\"\n                let _17 := staticcall(gas(), _9, _15, /** @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\" */ 4, /** @src 4:5982:6017  \"IBeacon(newBeacon).implementation()\" */ _15, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _4)\n                /// @src 4:5982:6017  \"IBeacon(newBeacon).implementation()\"\n                if iszero(_17)\n                {\n                    /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                    let pos_1 := mload(_2)\n                    returndatacopy(pos_1, /** @src -1:-1:-1 */ 0, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 4:5982:6017  \"IBeacon(newBeacon).implementation()\"\n                let expr_2 := /** @src -1:-1:-1 */ 0\n                /// @src 4:5982:6017  \"IBeacon(newBeacon).implementation()\"\n                if _17\n                {\n                    let _18 := /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _4\n                    /// @src 4:5982:6017  \"IBeacon(newBeacon).implementation()\"\n                    if gt(/** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _4, /** @src 4:5982:6017  \"IBeacon(newBeacon).implementation()\" */ returndatasize()) { _18 := returndatasize() }\n                    finalize_allocation(_15, _18)\n                    /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                    if slt(sub(/** @src 4:5982:6017  \"IBeacon(newBeacon).implementation()\" */ add(_15, _18), /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _15), _4)\n                    {\n                        revert(/** @src -1:-1:-1 */ expr_2, expr_2)\n                    }\n                    /// @src 4:5982:6017  \"IBeacon(newBeacon).implementation()\"\n                    expr_2 := /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ abi_decode_address_fromMemory(_15)\n                }\n                let memPtr_3 := mload(_2)\n                let newFreePtr := add(memPtr_3, 96)\n                if or(gt(newFreePtr, _5), lt(newFreePtr, memPtr_3))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 4:5240:5275  \"IBeacon(newBeacon).implementation()\" */ 4, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ 0x24)\n                }\n                mstore(_2, newFreePtr)\n                mstore(memPtr_3, 39)\n                mstore(add(memPtr_3, _4), \"Address: low-level delegate call\")\n                mstore(add(memPtr_3, _2), \" failed\")\n                /// @src 12:7265:7290  \"target.delegatecall(data)\"\n                let expr_component := delegatecall(gas(), expr_2, dst, mload(memPtr), /** @src -1:-1:-1 */ 0, 0)\n                /// @src 12:7265:7290  \"target.delegatecall(data)\"\n                let data := /** @src -1:-1:-1 */ 0\n                /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _19 := returndatasize()\n                    let _20 := array_allocation_size_bytes(_19)\n                    let memPtr_4 := mload(_2)\n                    finalize_allocation(memPtr_4, _20)\n                    mstore(memPtr_4, _19)\n                    data := memPtr_4\n                    returndatacopy(add(memPtr_4, _4), /** @src -1:-1:-1 */ 0, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ returndatasize())\n                }\n                /// @src 12:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                pop(fun_verifyCallResultFromTarget(expr_2, expr_component, /** @src 12:7265:7290  \"target.delegatecall(data)\" */ data, /** @src 12:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ memPtr_3))\n            }\n            /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n            let _21 := mload(_2)\n            let _22 := datasize(\"BeaconProxy_602_deployed\")\n            codecopy(_21, dataoffset(\"BeaconProxy_602_deployed\"), _22)\n            return(_21, _22)\n        }\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n        function array_allocation_size_bytes(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            size := add(and(add(length, 31), not(31)), 0x20)\n        }\n        function copy_memory_to_memory_with_cleanup(src, dst, length)\n        {\n            let i := 0\n            for { } lt(i, length) { i := add(i, 32) }\n            {\n                mstore(add(dst, i), mload(add(src, i)))\n            }\n            mstore(add(dst, length), 0)\n        }\n        /// @ast-id 1496 @src 12:7671:8299  \"function verifyCallResultFromTarget(...\"\n        function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos, var_errorMessage_mpos) -> var_mpos\n        {\n            /// @src 12:7851:7863  \"bytes memory\"\n            var_mpos := /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ 96\n            /// @src 12:7875:8293  \"if (success) {...\"\n            switch var_success\n            case 0 {\n                /// @src 12:8976:9355  \"if (returndata.length > 0) {...\"\n                switch /** @src 12:8980:9001  \"returndata.length > 0\" */ iszero(iszero(/** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ mload(/** @src 12:8980:8997  \"returndata.length\" */ var_returndata_mpos)))\n                case /** @src 12:8976:9355  \"if (returndata.length > 0) {...\" */ 0 {\n                    /// @src 12:9324:9344  \"revert(errorMessage)\"\n                    let _1 := /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ mload(64)\n                    /// @src 12:9324:9344  \"revert(errorMessage)\"\n                    mstore(_1, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ shl(229, 4594637))\n                    mstore(/** @src 12:9324:9344  \"revert(errorMessage)\" */ add(_1, 4), /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ 32)\n                    let length := mload(var_errorMessage_mpos)\n                    mstore(add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ 36), length)\n                    copy_memory_to_memory_with_cleanup(add(var_errorMessage_mpos, 32), add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ 68), length)\n                    /// @src 12:9324:9344  \"revert(errorMessage)\"\n                    revert(_1, add(sub(/** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ and(add(length, 31), not(31))), /** @src 12:9324:9344  \"revert(errorMessage)\" */ _1), /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ 68))\n                }\n                default /// @src 12:8976:9355  \"if (returndata.length > 0) {...\"\n                {\n                    /// @src 12:9152:9294  \"assembly {...\"\n                    revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                }\n            }\n            default /// @src 12:7875:8293  \"if (success) {...\"\n            {\n                /// @src 12:7902:8188  \"if (returndata.length == 0) {...\"\n                if /** @src 12:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ mload(/** @src 12:7906:7923  \"returndata.length\" */ var_returndata_mpos))\n                /// @src 12:7902:8188  \"if (returndata.length == 0) {...\"\n                {\n                    /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                    if /** @src 12:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 12:1702:1721  \"account.code.length\" */ extcodesize(var_target))\n                    /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                    {\n                        let memPtr := mload(64)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 32)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                        revert(memPtr, 100)\n                    }\n                }\n                /// @src 12:8201:8218  \"return returndata\"\n                var_mpos := var_returndata_mpos\n                leave\n            }\n        }\n    }\n    /// @use-src 4:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 5:\"@openzeppelin/contracts/proxy/Proxy.sol\", 6:\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\", 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"BeaconProxy_602_deployed\" {\n        code {\n            {\n                /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                let _1 := 128\n                mstore(64, _1)\n                if iszero(calldatasize())\n                {\n                    /// @src 4:4719:4785  \"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\"\n                    let value := /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ and(/** @src 4:4719:4785  \"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\" */ sload(0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50), /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ sub(shl(160, 1), 1))\n                    /// @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\"\n                    mstore(/** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _1, shl(224, 0x5c60da1b))\n                    /// @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\"\n                    let _2 := staticcall(gas(), value, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _1, /** @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\" */ 4, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _1, /** @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\" */ 32)\n                    if iszero(_2)\n                    {\n                        /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                        let pos := mload(64)\n                        returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\"\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\"\n                    if _2\n                    {\n                        let _3 := 32\n                        if gt(_3, returndatasize()) { _3 := returndatasize() }\n                        /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                        let newFreePtr := add(_1, and(add(_3, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(/** @src -1:-1:-1 */ expr, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\" */ 4, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ 0x41)\n                            revert(/** @src -1:-1:-1 */ expr, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        /// @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\"\n                        expr := abi_decode_address_fromMemory_676(add(/** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ _1, /** @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\" */ _3))\n                    }\n                    /// @src 5:2407:2424  \"_implementation()\"\n                    fun_delegate(expr)\n                }\n                /// @src 5:2629:2693  \"fallback() external payable virtual {...\"\n                fun_fallback()\n            }\n            /// @ast-id 514 @src 5:2322:2432  \"function _fallback() internal virtual {...\"\n            function fun_fallback()\n            {\n                /// @src 4:4719:4785  \"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\"\n                let value := /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ and(/** @src 4:4719:4785  \"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\" */ sload(0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50), /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ sub(shl(160, 1), 1))\n                /// @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\"\n                let _1 := /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ mload(64)\n                /// @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\"\n                mstore(_1, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ shl(224, 0x5c60da1b))\n                /// @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\"\n                let _2 := staticcall(gas(), value, _1, 4, _1, 32)\n                if iszero(_2)\n                {\n                    /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\"\n                if _2\n                {\n                    let _3 := 32\n                    if gt(_3, returndatasize()) { _3 := returndatasize() }\n                    /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                    let newFreePtr := add(_1, and(add(_3, 31), not(31)))\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ expr, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\" */ 4, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ expr, /** @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    /// @src 6:1537:1575  \"IBeacon(_getBeacon()).implementation()\"\n                    expr := abi_decode_address_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 5:2407:2424  \"_implementation()\"\n                fun_delegate(expr)\n            }\n            /// @ast-id 495 @src 5:948:1843  \"function _delegate(address implementation) internal virtual {...\"\n            function fun_delegate(var_implementation)\n            {\n                /// @src 5:1018:1837  \"assembly {...\"\n                let _1 := 0\n                calldatacopy(_1, _1, calldatasize())\n                let usr$result := delegatecall(gas(), var_implementation, _1, calldatasize(), _1, _1)\n                returndatacopy(_1, _1, returndatasize())\n                switch usr$result\n                case 0 { revert(_1, returndatasize()) }\n                default { return(_1, returndatasize()) }\n            }\n            /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n            function abi_decode_address_fromMemory_676(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(127)), 32) { revert(0, 0) }\n                let value := mload(128)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                value0 := value\n            }\n            function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:580:2095  \"contract BeaconProxy is Proxy, ERC1967Upgrade {...\"\n                value0 := value\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220611bd2157b2787f00d1af00286efc575c6929e4daf68a8cae565841c04d4d5fa64736f6c63430008110033\"\n    }\n}\n","hash":"010001274ea099c53792c34dd08a2343fe2433c05c9fc381cfe9a042fba80fe2","factoryDependencies":{}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"irOptimized":""}},"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol":{"UpgradeableBeacon":{"abi":[{"inputs":[{"internalType":"address","name":"implementation_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon.\"},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":\"UpgradeableBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362f12aebd1022d643235e6a7fa6ccfb38c13f3a0d1b006d5d1aea51af4bb852\",\"dweb:/ipfs/QmSUQ7pM4UnBawMfP2Di8EqawxaoU195DgsSLxHejvSpPz\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","zk_version":"1.3.14"},"storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":624,"contract":"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon","label":"_implementation","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"UpgradeableBeacon.sol:UpgradeableBeacon\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[2]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.le\t@.BB0_18\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_36\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_40\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_3[0], r1, r6\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_27\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_49\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_22[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\t159, r1, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tsub.s!\t@CPI0_1[0], r2, r3\n\tjump.lt\t@.BB0_5\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_5:\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_50\n\tadd\tr0, r0, r5\n.BB0_7:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_7\n.BB0_50:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_9:\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t128, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_4[0], r1, r2\n\tcontext.caller\tr6\n\tor\tr2, r6, r2\n\tsstore\tr0, r2\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[1]\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tand\t@CPI0_3[0], r1, r5\n\tor\t@CPI0_5[0], r2, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_15\n\tadd\tstack-[1], r0, r3\n\tadd\t100, r3, r1\n\tadd\t@CPI0_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\t@CPI0_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\t51, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_12[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_18:\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.eq\t@.BB0_23\n\tsub.s!\t@CPI0_21[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_36:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_27\n\tand\t@CPI0_4[0], r1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_32:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_40:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_23:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_3[0], r1, r4\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.le\t@.BB0_26\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_26:\n\tsload\tr0, r2\n\tand\t@CPI0_3[0], r2, r2\n\tcontext.caller\tr3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_27\n\tadd\t@CPI0_7[0], r0, r2\n\tst.2\t0, r2\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr4, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_31\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t51, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_27:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_25[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_15:\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_4[0], r2, r2\n\tadd\tstack-[2], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_9[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_49:\n\tand\t@CPI0_4[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_32\n\tjump\t@.BB0_2\n.BB0_31:\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_4[0], r2, r2\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_27[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_32\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n__staticcall:\n.func_begin2:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB2_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 18446744073709551616\nCPI0_2:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_5:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_6:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_7:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_8:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_9:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_10:\n\t.cell 49811680237407914558914397959370896052959524747815683327630762560030846746624\nCPI0_11:\n\t.cell 38645192964397054357706676298023216250697978039394142265845879078930848442735\nCPI0_12:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_13:\n\t.cell 10458117451882892562347801444352\nCPI0_14:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_15:\n\t.cell 2852213850513516153367582212096\nCPI0_16:\n\t.cell 1901074597\nCPI0_17:\n\t.cell 1901074598\nCPI0_18:\n\t.cell 2376452955\nCPI0_19:\n\t.cell 4076725131\nCPI0_20:\n\t.cell 911855590\nCPI0_21:\n\t.cell 1549851163\nCPI0_22:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_23:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_24:\n\t.cell 2535301200456458802993406410752\nCPI0_25:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_26:\n\t.cell 7922816251426433759354395033600\nCPI0_27:\n\t.cell -30536698362301869620703524882028299911890425965968411027149867401609008632517\n","bytecode":{"object":"00020000000000020002000000000002000100000001035500000060011002700000006d0010019d00000001012001900000004a0000c13d0000008001000039000000400010043f0000000001000031000000040110008c000001390000413d0000000101000367000000000101043b000000e0011002700000007d0210009c000000c00000a13d0000007e0210009c000000e00000613d0000007f0210009c000001070000613d000000800110009c000001390000c13d0000000001000416000000000101004b000001390000c13d000000040100008a00000000011000310000006f02000041000000200310008c000000000300001900000000030240190000006f01100197000000000401004b000000000200a0190000006f0110009c00000000010300190000000001026019000000000101004b000001390000c13d00000004010000390000000101100367000000000101043b0000007006100197000000700110009c000001390000213d000000000100041a00000070021001970000000005000411000000000252004b000001670000c13d000000000206004b000001830000c13d000000400100043d000000640210003900000083030000410000000000320435000000440210003900000084030000410000000000320435000000240210003900000026030000390000000000320435000000790200004100000000002104350000000402100039000000200300003900000000003204350000006d020000410000006d0310009c000000000102801900000040011002100000007a011001c7000001b1000104300000000001000416000000000101004b000001390000c13d00000000010000310000009f02100039000000200300008a000000000232016f0000006e0320009c000000590000413d0000007b0100004100000000001004350000004101000039000000040010043f0000007c01000041000001b100010430000000400020043f0000001f0210018f00000001030003670000000504100272000000670000613d00000000050000190000000506500210000000000763034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b0000005f0000413d000000000502004b000000760000613d0000000504400210000000000343034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000006f02000041000000200310008c000000000300001900000000030240190000006f01100197000000000401004b000000000200a0190000006f0110009c00000000010300190000000001026019000000000101004b000001390000c13d000000800100043d000200000001001d000000700110009c000001390000213d000000000100041a00000071021001970000000006000411000000000262019f000000000020041b000000400200043d000100000002001d0000006d0200004100000000030004140000006d0430009c0000000002034019000000c002200210000000700510019700000072012001c70000800d020000390000000303000039000000730400004101af01a50000040f0000000101200190000001390000613d00000074010000410000000000100439000000020100002900000004001004430000006d0100004100000000020004140000006d0320009c0000000001024019000000c00110021000000075011001c7000080020200003901af01aa0000040f0000000102200190000001390000613d000000000101043b000000000101004b000001780000c13d0000000103000029000000640130003900000077020000410000000000210435000000440130003900000078020000410000000000210435000000240130003900000033020000390000000000210435000000790100004100000000001304350000000401300039000000200200003900000000002104350000006d010000410000006d0230009c000000000103401900000040011002100000007a011001c7000001b100010430000000810210009c000001220000613d000000820110009c000001390000c13d0000000001000416000000000101004b000001390000c13d000000040100008a00000000011000310000006f02000041000000000301004b000000000300001900000000030240190000006f01100197000000000401004b000000000200a0190000006f0110009c00000000010300190000000001026019000000000101004b000001390000c13d0000000101000039000000000101041a0000007001100197000000400200043d00000000001204350000006d010000410000006d0320009c0000000001024019000000400110021000000085011001c7000001b00001042e0000000001000416000000000101004b000001390000c13d000000040100008a00000000011000310000006f02000041000000000301004b000000000300001900000000030240190000006f01100197000000000401004b000000000200a0190000006f0110009c00000000010300190000000001026019000000000101004b000001390000c13d000000000100041a00000070021001970000000005000411000000000252004b000001670000c13d0000007101100197000000000010041b0000006d0100004100000000020004140000006d0320009c0000000001024019000000c00110021000000072011001c70000800d0200003900000003030000390000007304000041000000000600001901af01a50000040f0000000101200190000001390000613d0000000001000019000001b00001042e0000000001000416000000000101004b000001390000c13d000000040100008a00000000011000310000006f02000041000000000301004b000000000300001900000000030240190000006f01100197000000000401004b000000000200a0190000006f0110009c00000000010300190000000001026019000000000101004b000001390000c13d000000000100041a0000007001100197000000400200043d00000000001204350000006d010000410000006d0320009c0000000001024019000000400110021000000085011001c7000001b00001042e0000000001000416000000000101004b000001390000c13d000000040100008a00000000011000310000006f02000041000000200310008c000000000300001900000000030240190000006f01100197000000000401004b000000000200a0190000006f0110009c00000000010300190000000001026019000000000101004b000001390000c13d00000004010000390000000101100367000000000101043b0000007004100197000000700210009c0000013b0000a13d0000000001000019000001b100010430000000000200041a00000070022001970000000003000411000000000232004b000001670000c13d0000007402000041000000000020043900000004001004430000006d0100004100000000020004140000006d0320009c0000000001024019000000c00110021000000075011001c70000800202000039000200000004001d01af01aa0000040f00000002050000290000000102200190000001390000613d000000000101043b000000000101004b000001930000c13d000000400100043d000000640210003900000077030000410000000000320435000000440210003900000078030000410000000000320435000000240210003900000033030000390000000000320435000000790200004100000000002104350000000402100039000000200300003900000000003204350000006d020000410000006d0310009c000000000102801900000040011002100000007a011001c7000001b100010430000000400100043d00000044021000390000008603000041000000000032043500000079020000410000000000210435000000240210003900000020030000390000000000320435000000040210003900000000003204350000006d020000410000006d0310009c0000000001028019000000400110021000000087011001c7000001b1000104300000000101000039000000000201041a00000071022001970000000203000029000000000232019f000000000021041b0000002001000039000001000010044300000120000004430000007601000041000001b00001042e0000007101100197000000000161019f000000000010041b0000006d0100004100000000020004140000006d0320009c0000000001024019000000c00110021000000072011001c70000800d020000390000000303000039000000730400004101af01a50000040f0000000101200190000001050000c13d000001390000013d0000000101000039000000000201041a0000007102200197000000000252019f000000000021041b0000006d0100004100000000020004140000006d0320009c0000000001024019000000c00110021000000072011001c70000800d020000390000000203000039000000880400004101af01a50000040f0000000101200190000001390000613d000001050000013d000001a8002104210000000102000039000000000001042d0000000002000019000000000001042d000001ad002104230000000102000039000000000001042d0000000002000019000000000001042d000001af00000432000001b00001042e000001b1000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000100000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e01806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b83020000020000000000000000000000000000002400000000000000000000000000000002000000000000000000000000000000400000010000000000000000006e206973206e6f74206120636f6e7472616374000000000000000000000000005570677261646561626c65426561636f6e3a20696d706c656d656e746174696f08c379a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000840000000000000000000000004e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000000000000000000000715018a500000000000000000000000000000000000000000000000000000000715018a6000000000000000000000000000000000000000000000000000000008da5cb5b00000000000000000000000000000000000000000000000000000000f2fde38b000000000000000000000000000000000000000000000000000000003659cfe6000000000000000000000000000000000000000000000000000000005c60da1b64647265737300000000000000000000000000000000000000000000000000004f776e61626c653a206e6577206f776e657220697320746865207a65726f206100000000000000000000000000000000000000200000000000000000000000004f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65720000000000000000000000000000000000000064000000000000000000000000bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b0000000000000000000000000000000000000000000000000000000000000000925bd9b3c22b0cd242cbc5d2029c8bce602ea14351f3a3ea8fbdcb04068517c5"},"methodIdentifiers":{"implementation()":"5c60da1b","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeTo(address)":"3659cfe6"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 7:\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\", 8:\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\", 12:\"@openzeppelin/contracts/utils/Address.sol\", 13:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"UpgradeableBeacon_687\" {\n    code {\n        {\n            /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"UpgradeableBeacon_687\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n            let value := mload(_1)\n            let _2 := sub(shl(160, 1), 1)\n            let _3 := and(value, _2)\n            if iszero(eq(value, _3))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n            let _4 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n            let _5 := not(sub(shl(160, 1), 1))\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ or(and(_4, _5), /** @src 13:719:729  \"msg.sender\" */ caller()))\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _6 := /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ mload(64)\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ and(_4, _2), /** @src 13:719:729  \"msg.sender\" */ caller())\n            /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n            if /** @src 12:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 12:1702:1721  \"account.code.length\" */ extcodesize(value))\n            /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n            {\n                mstore(_6, shl(229, 4594637))\n                mstore(add(_6, 4), 32)\n                mstore(add(_6, 36), 51)\n                mstore(add(_6, 68), \"UpgradeableBeacon: implementatio\")\n                mstore(add(_6, 100), \"n is not a contract\")\n                revert(_6, 132)\n            }\n            sstore(/** @src 8:1995:2030  \"_implementation = newImplementation\" */ 0x01, /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ or(and(sload(/** @src 8:1995:2030  \"_implementation = newImplementation\" */ 0x01), /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ _5), _3))\n            let _7 := mload(64)\n            let _8 := datasize(\"UpgradeableBeacon_687_deployed\")\n            codecopy(_7, dataoffset(\"UpgradeableBeacon_687_deployed\"), _8)\n            return(_7, _8)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 8:\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\", 12:\"@openzeppelin/contracts/utils/Address.sol\", 13:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"UpgradeableBeacon_687_deployed\" {\n        code {\n            {\n                /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    switch shr(224, calldataload(_1))\n                    case 0x3659cfe6 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        let value := calldataload(4)\n                        let _2 := and(value, sub(shl(160, 1), 1))\n                        if iszero(eq(value, _2)) { revert(_1, _1) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n                        if /** @src 12:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 12:1702:1721  \"account.code.length\" */ extcodesize(value))\n                        /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 51)\n                            mstore(add(memPtr, 68), \"UpgradeableBeacon: implementatio\")\n                            mstore(add(memPtr, 100), \"n is not a contract\")\n                            revert(memPtr, 132)\n                        }\n                        sstore(/** @src 8:1995:2030  \"_implementation = newImplementation\" */ 0x01, /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ or(and(sload(/** @src 8:1995:2030  \"_implementation = newImplementation\" */ 0x01), /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _2))\n                        /// @src 8:1602:1629  \"Upgraded(newImplementation)\"\n                        log2(/** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ _1, _1, /** @src 8:1602:1629  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _2)\n                        /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n                        return(_1, _1)\n                    }\n                    case 0x5c60da1b {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value_1 := and(sload(/** @src 8:1188:1203  \"_implementation\" */ 0x01), /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, value_1)\n                        return(memPos, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n                        let _3 := sload(_1)\n                        sstore(_1, and(_3, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ _1, _1, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ and(_3, sub(shl(160, 1), 1)), _1)\n                        return(_1, _1)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value_2 := and(sload(_1), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, value_2)\n                        return(memPos_1, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        let value_3 := calldataload(4)\n                        let _4 := sub(shl(160, 1), 1)\n                        let _5 := and(value_3, _4)\n                        if iszero(eq(value_3, _5)) { revert(_1, _1) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n                        if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ _5)\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 38)\n                            mstore(add(memPtr_1, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_1, 100), \"ddress\")\n                            revert(memPtr_1, 132)\n                        }\n                        let _6 := sload(_1)\n                        sstore(_1, or(and(_6, shl(160, 0xffffffffffffffffffffffff)), _5))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ _1, _1, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ and(_6, _4), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _5)\n                        /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n                        return(_1, _1)\n                    }\n                }\n                revert(0, 0)\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n                let value := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x00), /** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\" */ value, /** @src 13:719:729  \"msg.sender\" */ caller()))\n                /// @src 8:543:2039  \"contract UpgradeableBeacon is IBeacon, Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212206896354d8c8ed84ec5f1197bbc44e71e117cfcb3ffedbaed31cf38749f1d0b6a64736f6c63430008110033\"\n    }\n}\n","hash":"0100008beeb2334dcdf15667c91b515cf28129e454a8ad6bd66210e2c5eade9c","factoryDependencies":{}}},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"ProxyAdmin":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"newAdmin","type":"address"}],"name":"changeProxyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"}],"name":"upgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"kind\":\"dev\",\"methods\":{\"changeProxyAdmin(address,address)\":{\"details\":\"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`.\"},\"getProxyAdmin(address)\":{\"details\":\"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"getProxyImplementation(address)\":{\"details\":\"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgrade(address,address)\":{\"details\":\"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":\"ProxyAdmin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x8e99882a991853dc446278576c8cb9b3a5ded84642e9bcc917b1677807c2f18c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310153c1a4c739002ffbc1351ed1dd7488a0d20f5dd816353332fc2c1d81e0a3\",\"dweb:/ipfs/QmcvwXQVUBRTEAoNcvwSVFmhpHUXQ21s2Hfj79hq2uQNVM\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017\",\"dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","zk_version":"1.3.14"},"storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ProxyAdmin.sol:ProxyAdmin\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s!\t4, r2, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r3\n\tshr.s\t224, r3, r3\n\tsub.s!\t@CPI0_6[0], r3, r4\n\tjump.gt\t@.BB0_12\n\tsub.s!\t@CPI0_12[0], r3, r1\n\tjump.gt\t@.BB0_10\n\tsub.s!\t@CPI0_15[0], r3, r1\n\tjump.eq\t@.BB0_17\n\tsub.s!\t@CPI0_16[0], r3, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_37\n\tand\t@CPI0_1[0], r1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_39\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_1[0], r2, r1\n\tcontext.caller\tr6\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tand\t@CPI0_3[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tsub.s!\t@CPI0_7[0], r3, r4\n\tjump.gt\t@.BB0_15\n\tsub.s!\t@CPI0_10[0], r3, r4\n\tjump.eq\t@.BB0_59\n\tsub.s!\t@CPI0_11[0], r3, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_3[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_3[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_37\n\tadd\t@CPI0_26[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tadd\tr3, r0, stack-[2]\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr4, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tadd\tstack-[3], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r5\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_103\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\tr4, r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_98\n.BB0_103:\n\tsub.s!\t@CPI0_20[0], r5, r1\n\tjump.gt\t@.BB0_25\n\tst.1\t64, r5\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tsub.s!\t@CPI0_13[0], r3, r1\n\tjump.eq\t@.BB0_40\n\tsub.s!\t@CPI0_14[0], r3, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_15:\n\tsub.s!\t@CPI0_8[0], r3, r1\n\tjump.eq\t@.BB0_105\n\tsub.s!\t@CPI0_9[0], r3, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_3[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t@CPI0_18[0], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_117\n\tadd\tstack[@returndatasize], r0, r1\n\tadd\tr0, r0, r2\n\tjump\t@.BB0_118\n.BB0_17:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_3[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\t128, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_22\n\tadd\tstack[@returndatasize], r0, r1\n\tadd\tr0, r0, r2\n\tjump\t@.BB0_23\n.BB0_59:\n\tsub.s\t4, r2, r3\n\tadd\t@CPI0_17[0], r0, r4\n\tsub.s!\t96, r3, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_17[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI0_17[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r8\n\tsub.s!\t@CPI0_3[0], r8, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r3\n\tld\tr3, r9\n\tsub.s!\t@CPI0_3[0], r9, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_20[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r4\n\tadd\t@CPI0_17[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_17[0], r2, r2\n\tand\t@CPI0_17[0], r4, r4\n\tsub!\tr4, r2, r7\n\tadd.ge\tr0, r0, r5\n\txor\tr4, r2, r2\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tadd\tr6, r0, r2\n\tadd.eq\tr5, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r3, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.gt\t@.BB0_25\n\tadd\t191, r1, r2\n\tsub.s\t32, r0, r10\n\tand\tr2, r10, r2\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.gt\t@.BB0_25\n\tst.1\t64, r2\n\tst.1\t128, r1\n\tadd\t36, r3, r3\n\tadd\tr1, r3, r2\n\tadd\tstack[@calldatasize], r0, r4\n\tsub!\tr2, r4, r2\n\tjump.gt\t@.BB0_2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_131\n\tadd\tr0, r0, r5\n.BB0_69:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_69\n.BB0_131:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_71\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_71:\n\tadd\tr10, r0, stack-[2]\n\tadd\tr9, r0, stack-[3]\n\tadd\t160, r1, r1\n\tst.1\tr1, r0\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_37\n\tadd\t@CPI0_26[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r8\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr8, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t68, r4, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[3]\n\tadd\t100, r4, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_77\n\tadd\tr0, r0, r3\n.BB0_76:\n\tadd\tr3, r2, r4\n\tadd\t160, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_76\n.BB0_77:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.get_context_u128\tr3\n\tcontext.gas_left\tr2\n\tadd\tstack-[1], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_87\n\tadd\t31, r1, r1\n\tadd\tstack-[2], r0, r4\n\tand\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tadd\tstack-[3], r0, r6\n\tsub.s!\t@CPI0_0[0], r6, r5\n\tadd\tr4, r0, r5\n\tadd.lt\tr6, r0, r5\n\tshl.s\t64, r5, r5\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r6\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r5, r1\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_81\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tjump\t@.BB0_79\n.BB0_40:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_3[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_3[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_37\n\tadd\t@CPI0_26[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tadd\tr3, r0, stack-[2]\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr4, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tadd\tstack-[3], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r5\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_54\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\tr4, r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_49\n.BB0_54:\n\tsub.s!\t@CPI0_20[0], r5, r1\n\tjump.gt\t@.BB0_25\n\tst.1\t64, r5\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_105:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_3[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_37\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_111\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_22[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_24[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_37:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_32[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_24[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_22:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_35[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\txor\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_23:\n\tadd\t96, r0, r3\n\tsub!\tr1, r0, r4\n\tjump.ne\t@.BB0_24\n.BB0_32:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r3, r1\n\tld.1\tr3, r2\n\tadd\tr2, r1, r2\n\tnear_call\tr0, @abi_decode_address_payable_fromMemory, @DEFAULT_UNWIND\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_24:\n\tsub.s!\t@CPI0_36[0], r1, r3\n\tjump.ge\t@.BB0_25\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r4\n\tld.1\t64, r3\n\tadd\tr3, r4, r4\n\tsub!\tr4, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_20[0], r4, r6\n\tjump.gt\t@.BB0_25\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_25\n\tst.1\t64, r4\n\tst.1.inc\tr3, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_128\n\tadd\tr0, r0, r7\n.BB0_30:\n\tshl.s\t5, r7, r8\n\tadd\tr1, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_30\n.BB0_128:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_32\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr1, r6, r1\n\tshl.s\t3, r5, r5\n\tld.1\tr1, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr1, r4\n\tjump\t@.BB0_32\n.BB0_117:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_19[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\txor\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_118:\n\tadd\t96, r0, r3\n\tsub!\tr1, r0, r4\n\tjump.ne\t@.BB0_119\n.BB0_126:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r3, r1\n\tld.1\tr3, r2\n\tadd\tr2, r1, r2\n\tnear_call\tr0, @abi_decode_address_payable_fromMemory, @DEFAULT_UNWIND\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_119:\n\tsub.s!\t@CPI0_20[0], r1, r3\n\tjump.le\t@.BB0_120\n.BB0_25:\n\tadd\t@CPI0_37[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_111:\n\tand\t@CPI0_1[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_39:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_120:\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r4\n\tld.1\t64, r3\n\tadd\tr3, r4, r4\n\tsub!\tr4, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_20[0], r4, r6\n\tjump.gt\t@.BB0_25\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_25\n\tst.1\t64, r4\n\tst.1.inc\tr3, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_133\n\tadd\tr0, r0, r7\n.BB0_124:\n\tshl.s\t5, r7, r8\n\tadd\tr1, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_124\n.BB0_133:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_126\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr1, r6, r1\n\tshl.s\t3, r5, r5\n\tld.1\tr1, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr1, r4\n\tjump\t@.BB0_126\n.BB0_49:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_129\n\tadd\tr0, r0, r5\n.BB0_51:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_51\n.BB0_129:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_53\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_53:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_98:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_132\n\tadd\tr0, r0, r5\n.BB0_100:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_100\n.BB0_132:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_102\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_102:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_81:\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[1], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB0_79:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_82\n.BB0_87:\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.gt\t@.BB0_25\n\tadd\tstack-[3], r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_82:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_130\n\tadd\tr0, r0, r5\n.BB0_84:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_84\n.BB0_130:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_86\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_86:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_decode_address_payable_fromMemory:\n.func_begin1:\n\tsub\tr2, r1, r2\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t31, r2, r4\n\tadd\tr0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI1_0[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI1_0[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB1_1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_1[0], r1, r2\n\tjump.gt\t@.BB1_1\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__farcall:\n.func_begin2:\n.tmp0:\n\tfar_call\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_2:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_3:\nCPI1_1:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_5:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_6:\n\t.cell 2518900892\nCPI0_7:\n\t.cell 4076725130\nCPI0_8:\n\t.cell 4076725131\nCPI0_9:\n\t.cell 4088913581\nCPI0_10:\n\t.cell 2518900893\nCPI0_11:\n\t.cell 2577960644\nCPI0_12:\n\t.cell 2130650973\nCPI0_13:\n\t.cell 2130650974\nCPI0_14:\n\t.cell 2376452955\nCPI0_15:\n\t.cell 541990010\nCPI0_16:\n\t.cell 1901074598\nCPI0_17:\nCPI1_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_18:\n\t.cell -3474254564581621626188260025310941719202095730505663504633513953338824065024\nCPI0_19:\n\t.cell 316912650057057350374175801344\nCPI0_20:\n\t.cell 18446744073709551615\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI0_22:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_23:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_24:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_25:\n\t.cell 10458117451882892562347801444352\nCPI0_26:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_27:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_28:\n\t.cell 24583578074543180268843569895713186669491495773330943018694496374928902717440\nCPI0_29:\n\t.cell 2852213850513516153367582212096\nCPI0_30:\n\t.cell 35787394285270172926002399276345764320359862283067404231778073799726653767680\nCPI0_31:\n\t.cell -51040281588262172729994757417671590548574929652371291425639197795456095617024\nCPI0_32:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_33:\n\t.cell 7922816251426433759354395033600\nCPI0_34:\n\t.cell 41783904696501392981958754530355920803367001723273469674524225868246137438208\nCPI0_35:\n\t.cell 316912652418240591808998408192\nCPI0_36:\n\t.cell 18446744073709551616\nCPI0_37:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\n","bytecode":{"object":""},"methodIdentifiers":{"changeProxyAdmin(address,address)":"7eff275e","getProxyAdmin(address)":"f3b7dead","getProxyImplementation(address)":"204e1c7a","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgrade(address,address)":"99a88ec4","upgradeAndCall(address,address,bytes)":"9623609d"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 9:\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\", 13:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"ProxyAdmin_823\" {\n    code {\n        {\n            /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x00)\n            /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n            sstore(/** @src 0:2518:2524  \"_owner\" */ 0x00, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ or(and(_2, not(sub(shl(160, 1), 1))), /** @src 13:719:729  \"msg.sender\" */ caller()))\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 0:2518:2524  \"_owner\" */ 0x00, 0x00, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), /** @src 13:719:729  \"msg.sender\" */ caller())\n            /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n            let _3 := datasize(\"ProxyAdmin_823_deployed\")\n            codecopy(_1, dataoffset(\"ProxyAdmin_823_deployed\"), _3)\n            return(_1, _3)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 9:\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\", 13:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"ProxyAdmin_823_deployed\" {\n        code {\n            {\n                /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x204e1c7a {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let _5 := sub(shl(160, 1), 1)\n                        let _6 := and(abi_decode_contract_ITransparentUpgradeableProxy(), _5)\n                        mstore(_1, shl(224, 0x5c60da1b))\n                        /// @src 9:965:1005  \"address(proxy).staticcall(hex\\\"5c60da1b\\\")\"\n                        let expr_component := staticcall(gas(), _6, _1, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _3, _4, _4)\n                        /// @src 9:965:1005  \"address(proxy).staticcall(hex\\\"5c60da1b\\\")\"\n                        let expr_component_mpos := extract_returndata()\n                        /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        if iszero(expr_component) { revert(_4, _4) }\n                        let _7 := and(/** @src 9:1048:1081  \"abi.decode(returndata, (address))\" */ abi_decode_address_payable_fromMemory(add(expr_component_mpos, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 32), /** @src 9:1048:1081  \"abi.decode(returndata, (address))\" */ add(add(expr_component_mpos, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ mload(/** @src 9:1048:1081  \"abi.decode(returndata, (address))\" */ expr_component_mpos)), /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 32)), _5)\n                        let memPos := mload(_2)\n                        mstore(memPos, _7)\n                        return(memPos, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        let _8 := sload(_4)\n                        sstore(_4, and(_8, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _4, _4, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ and(_8, sub(shl(160, 1), 1)), _4)\n                        return(_4, _4)\n                    }\n                    case 0x7eff275e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_contract_ITransparentUpgradeableProxy()\n                        let value1 := abi_decode_address()\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        let _9 := sub(shl(160, 1), 1)\n                        let _10 := and(/** @src 9:1957:1974  \"proxy.changeAdmin\" */ value0, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _9)\n                        /// @src 9:1957:1984  \"proxy.changeAdmin(newAdmin)\"\n                        if iszero(extcodesize(_10))\n                        {\n                            /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 9:1957:1984  \"proxy.changeAdmin(newAdmin)\"\n                        let _11 := /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ mload(_2)\n                        /// @src 9:1957:1984  \"proxy.changeAdmin(newAdmin)\"\n                        mstore(_11, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ shl(228, 0x08f28397))\n                        mstore(/** @src 9:1957:1984  \"proxy.changeAdmin(newAdmin)\" */ add(_11, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _3), and(value1, _9))\n                        /// @src 9:1957:1984  \"proxy.changeAdmin(newAdmin)\"\n                        let _12 := call(gas(), _10, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _4, /** @src 9:1957:1984  \"proxy.changeAdmin(newAdmin)\" */ _11, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 36, /** @src 9:1957:1984  \"proxy.changeAdmin(newAdmin)\" */ _11, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _4)\n                        /// @src 9:1957:1984  \"proxy.changeAdmin(newAdmin)\"\n                        if iszero(_12)\n                        {\n                            /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            let pos := mload(_2)\n                            returndatacopy(pos, _4, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 9:1957:1984  \"proxy.changeAdmin(newAdmin)\"\n                        if _12\n                        {\n                            finalize_allocation_3427(_11)\n                            /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            _4 := _4\n                        }\n                        return(_4, _4)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value := and(sload(_4), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, value)\n                        return(memPos_1, 32)\n                    }\n                    case 0x9623609d {\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_contract_ITransparentUpgradeableProxy()\n                        let value1_1 := abi_decode_address()\n                        let offset := calldataload(68)\n                        if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let _13 := calldataload(add(_3, offset))\n                        let _14 := array_allocation_size_bytes(_13)\n                        let memPtr := mload(_2)\n                        finalize_allocation(memPtr, _14)\n                        mstore(memPtr, _13)\n                        let _15 := 32\n                        if gt(add(add(offset, _13), 36), calldatasize()) { revert(_4, _4) }\n                        calldatacopy(add(memPtr, _15), add(offset, 36), _13)\n                        mstore(add(add(memPtr, _13), _15), _4)\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        let _16 := sub(shl(160, 1), 1)\n                        let _17 := and(/** @src 9:2788:2810  \"proxy.upgradeToAndCall\" */ value0_1, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _16)\n                        /// @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        if iszero(extcodesize(_17))\n                        {\n                            /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        let _18 := /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ mload(_2)\n                        /// @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        mstore(_18, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ shl(225, 0x278f7943))\n                        mstore(/** @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ add(_18, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _3), and(value1_1, _16))\n                        mstore(add(/** @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 36), _2)\n                        let length := mload(memPtr)\n                        mstore(add(/** @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 68), length)\n                        let i := _4\n                        for { } lt(i, length) { i := add(i, _15) }\n                        {\n                            mstore(add(add(/** @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ i), 100), mload(add(add(memPtr, i), _15)))\n                        }\n                        mstore(add(add(/** @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ length), 100), _4)\n                        /// @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        let _19 := call(gas(), _17, /** @src 9:2818:2827  \"msg.value\" */ callvalue(), /** @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, add(sub(/** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ add(/** @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ and(add(length, 0x1f), not(31))), /** @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18), /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 100), /** @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _4)\n                        /// @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        if iszero(_19)\n                        {\n                            /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            let pos_1 := mload(_2)\n                            returndatacopy(pos_1, _4, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 9:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        if _19\n                        {\n                            finalize_allocation_3427(_18)\n                            /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        return(_4, _4)\n                    }\n                    case 0x99a88ec4 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_contract_ITransparentUpgradeableProxy()\n                        let value1_2 := abi_decode_address()\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        let _20 := sub(shl(160, 1), 1)\n                        let _21 := and(/** @src 9:2308:2323  \"proxy.upgradeTo\" */ value0_2, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _20)\n                        /// @src 9:2308:2339  \"proxy.upgradeTo(implementation)\"\n                        if iszero(extcodesize(_21))\n                        {\n                            /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 9:2308:2339  \"proxy.upgradeTo(implementation)\"\n                        let _22 := /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ mload(_2)\n                        /// @src 9:2308:2339  \"proxy.upgradeTo(implementation)\"\n                        mstore(_22, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ shl(225, 0x1b2ce7f3))\n                        mstore(/** @src 9:2308:2339  \"proxy.upgradeTo(implementation)\" */ add(_22, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _3), and(value1_2, _20))\n                        /// @src 9:2308:2339  \"proxy.upgradeTo(implementation)\"\n                        let _23 := call(gas(), _21, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _4, /** @src 9:2308:2339  \"proxy.upgradeTo(implementation)\" */ _22, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 36, /** @src 9:2308:2339  \"proxy.upgradeTo(implementation)\" */ _22, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _4)\n                        /// @src 9:2308:2339  \"proxy.upgradeTo(implementation)\"\n                        if iszero(_23)\n                        {\n                            /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            let pos_2 := mload(_2)\n                            returndatacopy(pos_2, _4, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 9:2308:2339  \"proxy.upgradeTo(implementation)\"\n                        if _23\n                        {\n                            finalize_allocation_3427(_22)\n                            /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        return(_4, _4)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value0_3 := abi_decode_contract_ITransparentUpgradeableProxy()\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        let _24 := sub(shl(160, 1), 1)\n                        let _25 := and(/** @src 0:2162:2184  \"newOwner != address(0)\" */ value0_3, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _24)\n                        if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _25)\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 38)\n                            mstore(add(memPtr_1, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_1, 100), \"ddress\")\n                            revert(memPtr_1, 132)\n                        }\n                        let _26 := sload(0)\n                        sstore(0, or(and(_26, shl(160, 0xffffffffffffffffffffffff)), _25))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 0, 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ and(_26, _24), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _25)\n                        /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        return(_4, _4)\n                    }\n                    case 0xf3b7dead {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let _27 := sub(shl(160, 1), 1)\n                        let _28 := and(abi_decode_contract_ITransparentUpgradeableProxy(), _27)\n                        /// @src 9:1545:1585  \"address(proxy).staticcall(hex\\\"f851a440\\\")\"\n                        let _29 := /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ mload(_2)\n                        mstore(_29, shl(230, 0x03e14691))\n                        /// @src 9:1545:1585  \"address(proxy).staticcall(hex\\\"f851a440\\\")\"\n                        let expr_component_1 := staticcall(gas(), _28, _29, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _3, _4, _4)\n                        /// @src 9:1545:1585  \"address(proxy).staticcall(hex\\\"f851a440\\\")\"\n                        let expr_component_mpos_1 := extract_returndata()\n                        /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        if iszero(expr_component_1) { revert(_4, _4) }\n                        let _30 := and(/** @src 9:1628:1661  \"abi.decode(returndata, (address))\" */ abi_decode_address_payable_fromMemory(add(expr_component_mpos_1, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 32), /** @src 9:1628:1661  \"abi.decode(returndata, (address))\" */ add(add(expr_component_mpos_1, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ mload(/** @src 9:1628:1661  \"abi.decode(returndata, (address))\" */ expr_component_mpos_1)), /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 32)), _27)\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, _30)\n                        return(memPos_2, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_contract_ITransparentUpgradeableProxy() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation_3427(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                let value := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x00), /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ value, /** @src 13:719:729  \"msg.sender\" */ caller()))\n                /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\" */ returndatasize())\n                }\n            }\n            function abi_decode_address_payable_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 9:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                value0 := value\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220a505879d2d24325bb4bd273e7b153ff7d73eda284b99c3417a784068f9440afe64736f6c63430008110033\"\n    }\n}\n","hash":"010001137ade5f53249e4ae88a5e5efc0d2575d5e1d3791ae23722b39908de43","factoryDependencies":{}}},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"ITransparentUpgradeableProxy":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"changeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"ITransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017\",\"dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"admin()":"f851a440","changeAdmin(address)":"8f283970","implementation()":"5c60da1b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"irOptimized":""},"TransparentUpgradeableProxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"address","name":"admin_","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017\",\"dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","zk_version":"1.3.14"},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tcontext.caller\tr2\n\tadd\t@CPI0_16[0], r0, r3\n\tsload\tr3, r3\n\tand\t@CPI0_4[0], r3, r3\n\tsub!\tr1, r0, r4\n\tjump.ne\t@.BB0_51\n\tsub!\tr2, r3, r1\n\tjump.ne\t@.BB0_158\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tand\t@CPI0_20[0], r1, r1\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.ne\t@.BB0_166\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_8\n\tadd\t@CPI0_27[0], r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tsub.s!\t@CPI0_28[0], r1, r1\n\tjump.lt\t@.BB0_8\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI0_4[0], r4, r1\n\tjump.gt\t@.BB0_8\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_29[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\t32, r2, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t64, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr2, r0\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr4, r0, stack-[7]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_22\n\tadd\t@CPI0_8[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_9[0], r2, r2\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_11[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r6\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_8\n\tadd\tstack-[6], r0, r4\n\tld.1\tr4, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_191\n.BB0_213:\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tjump\t@.BB0_165\n.BB0_1:\n\tadd\t159, r1, r2\n\tsub.s\t32, r0, r8\n\tand\tr2, r8, r2\n\tadd\t@CPI0_1[0], r2, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tjump.gt\t@.BB0_3\n.BB0_2:\n\tadd\t@CPI0_45[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_46[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_51:\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_52\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tld\tr2, r3\n\tand\t@CPI0_20[0], r3, r3\n\tsub.s!\t@CPI0_21[0], r3, r4\n\tjump.ne\t@.BB0_70\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_8\n\tadd\t@CPI0_27[0], r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tsub.s!\t@CPI0_28[0], r1, r1\n\tjump.lt\t@.BB0_8\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI0_4[0], r4, r1\n\tjump.gt\t@.BB0_8\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_29[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\t32, r2, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t64, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr2, r0\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr4, r0, stack-[7]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_22\n\tadd\t@CPI0_8[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_9[0], r2, r2\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_11[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r6\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_8\n\tadd\tstack-[6], r0, r4\n\tld.1\tr4, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_134\n.BB0_156:\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tjump\t@.BB0_69\n.BB0_3:\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_224\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_224:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_7:\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r4\n\tsub!\tr4, r0, r5\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_8\n\tld.1\t128, r10\n\tsub.s!\t@CPI0_4[0], r10, r2\n\tjump.gt\t@.BB0_8\n\tld.1\t160, r9\n\tsub.s!\t@CPI0_4[0], r9, r2\n\tjump.gt\t@.BB0_8\n\tld.1\t192, r2\n\tsub.s!\t@CPI0_5[0], r2, r3\n\tjump.gt\t@.BB0_8\n\tadd\t128, r1, r3\n\tadd\t159, r2, r1\n\tadd\t@CPI0_3[0], r0, r4\n\tsub!\tr1, r3, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_3[0], r3, r6\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr1, r6, r1\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr4, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_8\n\tadd\t128, r2, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_5[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\t63, r1, r4\n\tand\tr4, r8, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1\t64, r4\n\tst.1.inc\tr7, r1, r6\n\tadd\t160, r2, r2\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_8\n\tadd\tr7, r0, stack-[5]\n\tadd\tr9, r0, stack-[6]\n\tadd\tr8, r0, stack-[4]\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r3\n.BB0_19:\n\tadd\tr3, r6, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr6, r1, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r10\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr10, r0, stack-[7]\n\tadd\tr6, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_22\n\tand\t@CPI0_4[0], r3, r5\n\tadd\t@CPI0_8[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_9[0], r2, r2\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_11[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[7], r0, r4\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_8\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_25\n.BB0_26:\n\tadd\t@CPI0_16[0], r0, r1\n\tsload\tr1, r4\n\tand\t@CPI0_4[0], r3, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tr3, r0, stack-[7]\n\tst.1\tr2, r3\n\tadd\tr4, r0, stack-[6]\n\tand\t@CPI0_4[0], r4, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_8\n\tadd\tstack-[7], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_47\n\tadd\tstack-[6], r0, r1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_16[0], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_19[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_158:\n\tadd\t@CPI0_8[0], r0, r1\n\tsload\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_4[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_63\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t31, r4, r3\n\tand\t@CPI0_0[0], r4, stack[@returndatasize]\n\tand\t@CPI0_0[0], r4, r4\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_216\n\tadd\tr0, r0, r5\n.BB0_161:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_161\n.BB0_216:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_163\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_163:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_67\n\tjump\t@.BB0_62\n.BB0_52:\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tand\t31, r1, r4\n\tadd\t@CPI0_8[0], r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_4[0], r2, r2\n\tshr.s!\t5, r1, r1\n\tjump.eq\t@.BB0_222\n\tadd\tr0, r0, r5\n.BB0_54:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_54\n.BB0_222:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_56\n\tshl.s\t3, r4, r4\n\tshl.s\t5, r1, r1\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tptr.add\tr3, r1, r3\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB0_56:\n\tadd\tstack[@calldatasize], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_57\n.BB0_63:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB0_220\n\tadd\tr0, r0, r4\n.BB0_65:\n\tshl.s\t5, r4, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_65\n.BB0_220:\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_67\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n\tjump\t@.BB0_67\n.BB0_166:\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.eq\t@.BB0_8\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.ne\t@.BB0_168\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_8\n\tadd\t@CPI0_27[0], r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tsub.s!\t@CPI0_28[0], r1, r1\n\tjump.lt\t@.BB0_8\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_4[0], r3, r1\n\tjump.gt\t@.BB0_8\n\tadd\t@CPI0_16[0], r0, r1\n\tsload\tr1, r4\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\tr4, r0, stack-[6]\n\tand\t@CPI0_4[0], r4, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tr3, r0, stack-[7]\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_8\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB0_47\n\tadd\tstack-[6], r0, r1\n\tand\t@CPI0_9[0], r1, r1\n\tor\tr1, r3, r1\n\tadd\t@CPI0_16[0], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tjump\t@.BB0_165\n.BB0_70:\n\tsub.s!\t@CPI0_22[0], r3, r4\n\tjump.ne\t@.BB0_71\n\tadd\t@CPI0_27[0], r1, r3\n\tsub.s!\t@CPI0_30[0], r3, r3\n\tjump.lt\t@.BB0_8\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r8\n\tsub.s!\t@CPI0_4[0], r8, r3\n\tjump.gt\t@.BB0_8\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_5[0], r3, r4\n\tjump.gt\t@.BB0_8\n\tadd\t35, r3, r4\n\tadd\t@CPI0_3[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_3[0], r1, r1\n\tand\t@CPI0_3[0], r4, r4\n\tsub!\tr4, r1, r7\n\tadd.ge\tr0, r0, r5\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr6, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_8\n\tadd\t4, r3, r1\n\tptr.add\tr2, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t191, r1, r2\n\tsub.s\t32, r0, r5\n\tand\tr2, r5, r2\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tst.1\t64, r2\n\tst.1\t128, r1\n\tadd\t36, r3, r3\n\tadd\tr1, r3, r2\n\tadd\tstack[@calldatasize], r0, r4\n\tsub!\tr2, r4, r2\n\tjump.gt\t@.BB0_8\n\tadd\tr5, r0, stack-[6]\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_219\n\tadd\tr0, r0, r5\n.BB0_97:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_97\n.BB0_219:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_99\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_99:\n\tadd\t160, r1, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r8\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tadd\tr8, r0, stack-[7]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_101\n.BB0_22:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_43[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_44[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_40[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_57:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t31, r4, r3\n\tand\t@CPI0_0[0], r4, stack[@returndatasize]\n\tand\t@CPI0_0[0], r4, r4\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_221\n\tadd\tr0, r0, r5\n.BB0_59:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_59\n.BB0_221:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_61\n\tshl.s\t3, r3, r3\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_61:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_62\n.BB0_67:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_62:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_71:\n\tsub.s!\t@CPI0_23[0], r3, r1\n\tjump.ne\t@.BB0_72\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_8\n\tadd\t@CPI0_27[0], r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tsub.s!\t@CPI0_28[0], r1, r1\n\tjump.lt\t@.BB0_8\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_4[0], r3, r1\n\tjump.gt\t@.BB0_8\n\tadd\t@CPI0_16[0], r0, r1\n\tsload\tr1, r4\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\tr4, r0, stack-[6]\n\tand\t@CPI0_4[0], r4, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tr3, r0, stack-[7]\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_8\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_86\n.BB0_47:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_38[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_39[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_40[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_168:\n\tsub.s!\t@CPI0_24[0], r1, r2\n\tjump.ne\t@.BB0_169\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_8\n\tadd\t@CPI0_16[0], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_4[0], r1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tjump\t@.BB0_165\n.BB0_72:\n\tsub.s!\t@CPI0_24[0], r3, r1\n\tjump.ne\t@.BB0_73\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_8\n\tadd\t@CPI0_16[0], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_4[0], r1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tjump\t@.BB0_69\n.BB0_169:\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tjump.ne\t@.BB0_74\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_8\n\tadd\t@CPI0_8[0], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_4[0], r1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n.BB0_165:\n\tadd\t@CPI0_32[0], r0, r2\n\tsub.s!\t@CPI0_32[0], r1, r3\n\tadd.lt\tr1, r0, r2\n\tld.1\tr1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r2, r2\n\tadd\t@CPI0_33[0], r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_73:\n\tsub.s!\t@CPI0_25[0], r3, r1\n\tjump.ne\t@.BB0_74\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_8\n\tadd\t@CPI0_8[0], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_4[0], r1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tjump\t@.BB0_69\n.BB0_74:\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t66, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t260, r1\n\tadd\t@CPI0_37[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_86:\n\tadd\tstack-[6], r0, r1\n\tand\t@CPI0_9[0], r1, r1\n\tor\tr1, r3, r1\n\tadd\t@CPI0_16[0], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n.BB0_69:\n\tadd\t@CPI0_32[0], r0, r2\n\tsub.s!\t@CPI0_32[0], r1, r3\n\tadd.lt\tr1, r0, r2\n\tld.1\tr1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r2, r2\n\tadd\t@CPI0_33[0], r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_191:\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_12[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\t64, r3, r1\n\tadd\t@CPI0_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tadd\tr3, r0, stack-[4]\n\tst.1\tr3, r1\n\tld.1\tr4, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r6, r3\n\tjump.ne\t@.BB0_193\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_195\n.BB0_134:\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_12[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\t64, r3, r1\n\tadd\t@CPI0_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tadd\tr3, r0, stack-[4]\n\tst.1\tr3, r1\n\tld.1\tr4, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r6, r3\n\tjump.ne\t@.BB0_136\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_138\n.BB0_101:\n\tadd\t@CPI0_8[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_9[0], r2, r2\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_11[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_8\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_12[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[5], r0, r4\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tadd\t64, r4, r1\n\tadd\t@CPI0_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r4, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tst.1\tr4, r1\n\tld.1\t128, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_104\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_106\n.BB0_25:\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_12[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\t64, r3, r1\n\tadd\t@CPI0_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tadd\tr3, r0, stack-[2]\n\tst.1.inc\tr3, r1, r2\n\tadd\t@CPI0_14[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tld.1\tr5, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r3\n\tjump.ne\t@.BB0_29\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_30\n.BB0_193:\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[5], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tr6, r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_195:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_206\n.BB0_196:\n\tld.1.inc\tr1, r1, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_203\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_202\n\tld.1\t64, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[4], r0, r7\n\tld.1\tr7, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tadd\t68, r1, r3\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_201\n\tadd\tr0, r0, r4\n.BB0_200:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_200\n.BB0_201:\n\tadd\t31, r2, r4\n\tsub.s\t32, r0, r5\n\tand\tr4, r5, r4\n\tadd\tr2, r3, r2\n\tst.1\tr2, r0\n\tadd\t68, r4, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_136:\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[5], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tr6, r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_138:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_149\n.BB0_139:\n\tld.1.inc\tr1, r1, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_146\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_145\n\tld.1\t64, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[4], r0, r7\n\tld.1\tr7, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tadd\t68, r1, r3\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_144\n\tadd\tr0, r0, r4\n.BB0_143:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_143\n.BB0_144:\n\tadd\t31, r2, r4\n\tsub.s\t32, r0, r5\n\tand\tr4, r5, r4\n\tadd\tr2, r3, r2\n\tst.1\tr2, r0\n\tadd\t68, r4, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_206:\n\tsub.s!\t@CPI0_5[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1\t64, r4\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_215\n\tadd\tr0, r0, r7\n.BB0_211:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_211\n.BB0_215:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_196\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_196\n.BB0_149:\n\tsub.s!\t@CPI0_5[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1\t64, r4\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_217\n\tadd\tr0, r0, r7\n.BB0_154:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_154\n.BB0_217:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_139\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_139\n.BB0_203:\n\tsub!\tr1, r0, r1\n\tadd\tstack-[7], r0, r2\n\tjump.ne\t@.BB0_213\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_38\n\tjump\t@.BB0_213\n.BB0_146:\n\tsub!\tr1, r0, r1\n\tadd\tstack-[7], r0, r2\n\tjump.ne\t@.BB0_156\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_38\n\tjump\t@.BB0_156\n.BB0_29:\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[3], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_30:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_39\n.BB0_31:\n\tld.1.inc\tr1, r1, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_35\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_34\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[7]\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r3\n\tadd\tr3, r0, stack-[6]\n\tadd\t36, r4, r1\n\tst.1\tr1, r3\n\tadd\t68, r4, r2\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_memory_to_memory_with_cleanup, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tadd\t31, r1, r1\n\tadd\tstack-[4], r0, r2\n\tand\tr1, r2, r1\n\tadd\t68, r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_39:\n\tsub.s!\t@CPI0_5[0], r3, r1\n\tadd\tstack-[4], r0, r4\n\tjump.gt\t@.BB0_2\n\tadd\t63, r3, r1\n\tand\tr1, r4, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1\t64, r4\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_223\n\tadd\tr0, r0, r7\n.BB0_44:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_44\n.BB0_223:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_31\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_31\n.BB0_202:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_145:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_35:\n\tsub!\tr1, r0, r1\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[7], r0, r2\n\tjump.ne\t@.BB0_26\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_26\n\tjump\t@.BB0_38\n.BB0_104:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_106:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_117\n.BB0_107:\n\tld.1.inc\tr1, r1, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_114\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_113\n\tld.1\t64, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[5], r0, r7\n\tld.1\tr7, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tadd\t68, r1, r3\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_112\n\tadd\tr0, r0, r4\n.BB0_111:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_111\n.BB0_112:\n\tadd\t31, r2, r4\n\tadd\tstack-[6], r0, r5\n\tand\tr4, r5, r4\n\tadd\tr2, r3, r2\n\tst.1\tr2, r0\n\tadd\t68, r4, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_117:\n\tsub.s!\t@CPI0_5[0], r3, r1\n\tadd\tstack-[6], r0, r4\n\tjump.gt\t@.BB0_2\n\tadd\t63, r3, r1\n\tand\tr1, r4, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1\t64, r4\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_218\n\tadd\tr0, r0, r7\n.BB0_122:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_122\n.BB0_218:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_107\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_107\n.BB0_114:\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_124\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_8\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_124\n.BB0_38:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_41[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_34:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_124:\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tjump\t@.BB0_69\n.BB0_113:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\ncopy_memory_to_memory_with_cleanup:\n.func_begin1:\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr4, r2, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tret\n.func_end1:\n\n__farcall:\n.func_begin2:\n.tmp0:\n\tfar_call\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__delegatecall:\n.func_begin4:\n.tmp6:\n\tfar_call.delegate\tr1, r2, @.BB4_2\n.tmp7:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp8:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551616\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_4:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_5:\n\t.cell 18446744073709551615\nCPI0_6:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_7:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_8:\n\t.cell 24440054405305269366569402256811496959409073762505157381672968839269610695612\nCPI0_9:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_10:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_11:\n\t.cell -30536698362301869620703524882028299911890425965968411027149867401609008632517\nCPI0_12:\n\t.cell 18446744073709551519\nCPI0_13:\n\t.cell 14654901866877395549149391597484105336708473837108585137082493300548441210880\nCPI0_14:\n\t.cell 29577713123142787666065354962605974352286555015652805685687967870311454567532\nCPI0_15:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_16:\n\t.cell -33836616157800148473937241991990060311975165975819281289460902511640494382845\nCPI0_17:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_18:\n\t.cell 57168638331561637060830620937878871246875502369269713186874178039217247582607\nCPI0_19:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_20:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_21:\n\t.cell 24583578074543180268843569895713186669491495773330943018694496374928902717440\nCPI0_22:\n\t.cell 35787394285270172926002399276345764320359862283067404231778073799726653767680\nCPI0_23:\n\t.cell -51040281588262172729994757417671590548574929652371291425639197795456095617024\nCPI0_24:\n\t.cell -3474254564581621626188260025310941719202095730505663504633513953338824065024\nCPI0_25:\n\t.cell 41783904696501392981958754530355920803367001723273469674524225868246137438208\nCPI0_26:\n\t.cell 18446744073709551551\nCPI0_27:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819964\nCPI0_28:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_29:\n\t.cell 18446744073709551583\nCPI0_30:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819904\nCPI0_31:\n\t.cell 2951479051793528258560\nCPI0_32:\n\t.cell 4294967263\nCPI0_33:\n\t.cell 590295810358705651712\nCPI0_34:\n\t.cell 38196372293526028768745537377834664526780728754846428360608283209572903117933\nCPI0_35:\n\t.cell 47687425813547131531374693542026864319719216742175721048342195994864927208039\nCPI0_36:\n\t.cell 45888551966424197807937402689295079693071411769653575580334356259971920822272\nCPI0_37:\n\t.cell 12993418654700534606776030461952\nCPI0_38:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_39:\n\t.cell 31354931755624933654031447922210079955860470560114867000114460986147043483745\nCPI0_40:\n\t.cell 10458117451882892562347801444352\nCPI0_41:\n\t.cell 29577713123142787666064487680123823951345158729797978021083438401868913442816\nCPI0_42:\n\t.cell 7922816251426433759354395033600\nCPI0_43:\n\t.cell 50411903926665684337970802942352511357568373430877458990420567558264874598400\nCPI0_44:\n\t.cell 31354931755624933654031447922210259146857421806447843296373930569683382247534\nCPI0_45:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_46:\n\t.cell 2852213850513516153367582212096\n","bytecode":{"object":""},"methodIdentifiers":{}},"irOptimized":"/// @use-src 1:\"@openzeppelin/contracts/interfaces/IERC1967.sol\", 3:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 4:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 5:\"@openzeppelin/contracts/proxy/Proxy.sol\", 10:\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\", 12:\"@openzeppelin/contracts/utils/Address.sol\", 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"TransparentUpgradeableProxy_1146\" {\n    code {\n        {\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let _1 := 64\n            mstore(_1, memoryguard(0x80))\n            let programSize := datasize(\"TransparentUpgradeableProxy_1146\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _2 := add(memoryDataOffset, argSize)\n            if slt(sub(_2, memoryDataOffset), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let value0 := abi_decode_address_fromMemory(memoryDataOffset)\n            let _3 := 32\n            let value1 := abi_decode_address_fromMemory(add(memoryDataOffset, _3))\n            let offset := mload(add(memoryDataOffset, _1))\n            let _4 := sub(shl(64, 1), 1)\n            if gt(offset, _4)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let _5 := add(memoryDataOffset, offset)\n            if iszero(slt(add(_5, 0x1f), _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let _6 := mload(_5)\n            let array := allocate_memory(array_allocation_size_bytes(_6))\n            mstore(array, _6)\n            let dst := add(array, _3)\n            if gt(add(add(_5, _6), _3), _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            copy_memory_to_memory_with_cleanup(add(_5, _3), dst, _6)\n            if /** @src 12:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 12:1702:1721  \"account.code.length\" */ extcodesize(value0))\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            {\n                let memPtr := mload(_1)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), _3)\n                mstore(add(memPtr, 36), 45)\n                mstore(add(memPtr, 68), \"ERC1967: new implementation is n\")\n                mstore(add(memPtr, 100), \"ot a contract\")\n                revert(memPtr, 132)\n            }\n            let _7 := sub(shl(160, 1), 1)\n            let _8 := and(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ value0, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _7)\n            /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n            let _9 := not(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n            /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n            let _10 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n            sstore(_10, or(and(sload(_10), _9), _8))\n            /// @src -1:-1:-1\n            let _11 := 0\n            /// @src 4:1889:1916  \"Upgraded(newImplementation)\"\n            log2(/** @src -1:-1:-1 */ _11, _11, /** @src 4:1889:1916  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _8)\n            /// @src 4:2208:2223  \"data.length > 0\"\n            let _12 := iszero(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 4:2208:2219  \"data.length\" */ array))\n            /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n            let expr := /** @src 4:2208:2223  \"data.length > 0\" */ iszero(_12)\n            /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n            if _12\n            {\n                expr := /** @src -1:-1:-1 */ _11\n            }\n            /// @src 4:2204:2316  \"if (data.length > 0 || forceCall) {...\"\n            if expr\n            {\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let memPtr_1 := mload(_1)\n                let newFreePtr := add(memPtr_1, 96)\n                if or(gt(newFreePtr, _4), lt(newFreePtr, memPtr_1))\n                {\n                    mstore(/** @src -1:-1:-1 */ _11, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ _11, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 0x24)\n                }\n                mstore(_1, newFreePtr)\n                mstore(memPtr_1, 39)\n                mstore(add(memPtr_1, _3), \"Address: low-level delegate call\")\n                mstore(add(memPtr_1, _1), \" failed\")\n                /// @src 12:7265:7290  \"target.delegatecall(data)\"\n                let expr_component := delegatecall(gas(), value0, dst, mload(array), /** @src -1:-1:-1 */ _11, _11)\n                /// @src 12:7265:7290  \"target.delegatecall(data)\"\n                let data := /** @src -1:-1:-1 */ _11\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _13 := returndatasize()\n                    let memPtr_2 := allocate_memory(array_allocation_size_bytes(_13))\n                    mstore(memPtr_2, _13)\n                    data := memPtr_2\n                    returndatacopy(add(memPtr_2, _3), /** @src -1:-1:-1 */ _11, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ returndatasize())\n                }\n                /// @src 12:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                pop(fun_verifyCallResultFromTarget(value0, expr_component, /** @src 12:7265:7290  \"target.delegatecall(data)\" */ data, /** @src 12:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ memPtr_1))\n            }\n            /// @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\"\n            let _14 := 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n            let _15 := sload(_14)\n            /// @src 4:4364:4399  \"AdminChanged(_getAdmin(), newAdmin)\"\n            let _16 := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(_1)\n            mstore(_16, and(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ _15, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _7))\n            let _17 := and(value1, _7)\n            mstore(add(_16, _3), _17)\n            /// @src 4:4364:4399  \"AdminChanged(_getAdmin(), newAdmin)\"\n            log1(_16, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _1, /** @src 4:4364:4399  \"AdminChanged(_getAdmin(), newAdmin)\" */ 0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f)\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            if /** @src 4:4051:4073  \"newAdmin != address(0)\" */ iszero(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _17)\n            {\n                let memPtr_3 := mload(_1)\n                mstore(memPtr_3, shl(229, 4594637))\n                mstore(add(memPtr_3, 4), _3)\n                mstore(add(memPtr_3, 36), 38)\n                mstore(add(memPtr_3, 68), \"ERC1967: new admin is the zero a\")\n                mstore(add(memPtr_3, 100), \"ddress\")\n                revert(memPtr_3, 132)\n            }\n            /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n            sstore(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ _14, /** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ or(and(_15, _9), _17))\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let _18 := mload(_1)\n            let _19 := datasize(\"TransparentUpgradeableProxy_1146_deployed\")\n            codecopy(_18, dataoffset(\"TransparentUpgradeableProxy_1146_deployed\"), _19)\n            return(_18, _19)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n        function array_allocation_size_bytes(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            size := add(and(add(length, 31), not(31)), 0x20)\n        }\n        function copy_memory_to_memory_with_cleanup(src, dst, length)\n        {\n            let i := 0\n            for { } lt(i, length) { i := add(i, 32) }\n            {\n                mstore(add(dst, i), mload(add(src, i)))\n            }\n            mstore(add(dst, length), 0)\n        }\n        /// @ast-id 1496 @src 12:7671:8299  \"function verifyCallResultFromTarget(...\"\n        function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos, var_errorMessage_mpos) -> var_mpos\n        {\n            /// @src 12:7851:7863  \"bytes memory\"\n            var_mpos := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 96\n            /// @src 12:7875:8293  \"if (success) {...\"\n            switch var_success\n            case 0 {\n                /// @src 12:8976:9355  \"if (returndata.length > 0) {...\"\n                switch /** @src 12:8980:9001  \"returndata.length > 0\" */ iszero(iszero(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 12:8980:8997  \"returndata.length\" */ var_returndata_mpos)))\n                case /** @src 12:8976:9355  \"if (returndata.length > 0) {...\" */ 0 {\n                    /// @src 12:9324:9344  \"revert(errorMessage)\"\n                    let _1 := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                    /// @src 12:9324:9344  \"revert(errorMessage)\"\n                    mstore(_1, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ shl(229, 4594637))\n                    mstore(/** @src 12:9324:9344  \"revert(errorMessage)\" */ add(_1, 4), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 32)\n                    let length := mload(var_errorMessage_mpos)\n                    mstore(add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 36), length)\n                    copy_memory_to_memory_with_cleanup(add(var_errorMessage_mpos, 32), add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 68), length)\n                    /// @src 12:9324:9344  \"revert(errorMessage)\"\n                    revert(_1, add(sub(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(add(length, 31), not(31))), /** @src 12:9324:9344  \"revert(errorMessage)\" */ _1), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 68))\n                }\n                default /// @src 12:8976:9355  \"if (returndata.length > 0) {...\"\n                {\n                    /// @src 12:9152:9294  \"assembly {...\"\n                    revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                }\n            }\n            default /// @src 12:7875:8293  \"if (success) {...\"\n            {\n                /// @src 12:7902:8188  \"if (returndata.length == 0) {...\"\n                if /** @src 12:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 12:7906:7923  \"returndata.length\" */ var_returndata_mpos))\n                /// @src 12:7902:8188  \"if (returndata.length == 0) {...\"\n                {\n                    /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    if /** @src 12:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 12:1702:1721  \"account.code.length\" */ extcodesize(var_target))\n                    /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    {\n                        let memPtr := mload(64)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 32)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                        revert(memPtr, 100)\n                    }\n                }\n                /// @src 12:8201:8218  \"return returndata\"\n                var_mpos := var_returndata_mpos\n                leave\n            }\n        }\n    }\n    /// @use-src 3:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 4:\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 5:\"@openzeppelin/contracts/proxy/Proxy.sol\", 10:\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\", 12:\"@openzeppelin/contracts/utils/Address.sol\", 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"TransparentUpgradeableProxy_1146_deployed\" {\n        code {\n            {\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                mstore(64, 128)\n                if iszero(calldatasize())\n                {\n                    /// @src 10:4464:5503  \"if (msg.sender == _getAdmin()) {...\"\n                    switch /** @src 10:4468:4493  \"msg.sender == _getAdmin()\" */ eq(/** @src 10:4468:4478  \"msg.sender\" */ caller(), /** @src 10:4468:4493  \"msg.sender == _getAdmin()\" */ cleanup_address(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ sload(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))))\n                    case /** @src 10:4464:5503  \"if (msg.sender == _getAdmin()) {...\" */ 0 { fun__fallback() }\n                    default {\n                        /// @src 10:4509:4525  \"bytes memory ret\"\n                        let var_ret_mpos := /** @src -1:-1:-1 */ 0\n                        /// @src 10:4509:4525  \"bytes memory ret\"\n                        var_ret_mpos := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 96\n                        /// @src 10:4557:4564  \"msg.sig\"\n                        let expr := and(calldataload(/** @src -1:-1:-1 */ 0), /** @src 10:4557:4564  \"msg.sig\" */ shl(224, 0xffffffff))\n                        /// @src 10:4578:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {...\"\n                        switch /** @src 10:4582:4641  \"selector == ITransparentUpgradeableProxy.upgradeTo.selector\" */ eq(expr, /** @src 10:4594:4641  \"ITransparentUpgradeableProxy.upgradeTo.selector\" */ shl(225, 0x1b2ce7f3))\n                        case /** @src 10:4578:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {...\" */ 0 {\n                            /// @src 10:4708:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\"\n                            switch /** @src 10:4712:4778  \"selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector\" */ eq(expr, /** @src 10:4724:4778  \"ITransparentUpgradeableProxy.upgradeToAndCall.selector\" */ shl(225, 0x278f7943))\n                            case /** @src 10:4708:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\" */ 0 {\n                                /// @src 10:4852:5357  \"if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {...\"\n                                switch /** @src 10:4856:4917  \"selector == ITransparentUpgradeableProxy.changeAdmin.selector\" */ eq(expr, /** @src 10:4868:4917  \"ITransparentUpgradeableProxy.changeAdmin.selector\" */ shl(228, 0x08f28397))\n                                case /** @src 10:4852:5357  \"if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {...\" */ 0 {\n                                    /// @src 10:4986:5357  \"if (selector == ITransparentUpgradeableProxy.admin.selector) {...\"\n                                    switch /** @src 10:4990:5045  \"selector == ITransparentUpgradeableProxy.admin.selector\" */ eq(expr, /** @src 10:5002:5045  \"ITransparentUpgradeableProxy.admin.selector\" */ shl(230, 0x03e14691))\n                                    case /** @src 10:4986:5357  \"if (selector == ITransparentUpgradeableProxy.admin.selector) {...\" */ 0 {\n                                        /// @src 10:5108:5357  \"if (selector == ITransparentUpgradeableProxy.implementation.selector) {...\"\n                                        switch /** @src 10:5112:5176  \"selector == ITransparentUpgradeableProxy.implementation.selector\" */ eq(expr, /** @src 10:5124:5176  \"ITransparentUpgradeableProxy.implementation.selector\" */ shl(224, 0x5c60da1b))\n                                        case /** @src 10:5108:5357  \"if (selector == ITransparentUpgradeableProxy.implementation.selector) {...\" */ 0 {\n                                            /// @src 10:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\"\n                                            let _1 := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                                            /// @src 10:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\"\n                                            mstore(_1, shl(229, 4594637))\n                                            revert(_1, sub(abi_encode_stringliteral_f5d2(add(_1, 4)), _1))\n                                        }\n                                        default /// @src 10:5108:5357  \"if (selector == ITransparentUpgradeableProxy.implementation.selector) {...\"\n                                        {\n                                            /// @src 10:5196:5227  \"ret = _dispatchImplementation()\"\n                                            var_ret_mpos := /** @src 10:5202:5227  \"_dispatchImplementation()\" */ fun_dispatchImplementation()\n                                        }\n                                    }\n                                    default /// @src 10:4986:5357  \"if (selector == ITransparentUpgradeableProxy.admin.selector) {...\"\n                                    {\n                                        /// @src 10:5065:5087  \"ret = _dispatchAdmin()\"\n                                        var_ret_mpos := /** @src 10:5071:5087  \"_dispatchAdmin()\" */ fun_dispatchAdmin()\n                                    }\n                                }\n                                default /// @src 10:4852:5357  \"if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {...\"\n                                {\n                                    /// @src 10:4937:4965  \"ret = _dispatchChangeAdmin()\"\n                                    var_ret_mpos := /** @src 10:4943:4965  \"_dispatchChangeAdmin()\" */ fun_dispatchChangeAdmin()\n                                }\n                            }\n                            default /// @src 10:4708:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\"\n                            {\n                                /// @src 10:4798:4831  \"ret = _dispatchUpgradeToAndCall()\"\n                                var_ret_mpos := /** @src 10:4804:4831  \"_dispatchUpgradeToAndCall()\" */ fun_dispatchUpgradeToAndCall()\n                            }\n                        }\n                        default /// @src 10:4578:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {...\"\n                        {\n                            /// @src 10:4661:4687  \"ret = _dispatchUpgradeTo()\"\n                            var_ret_mpos := /** @src 10:4667:4687  \"_dispatchUpgradeTo()\" */ fun_dispatchUpgradeTo()\n                        }\n                        /// @src 10:5370:5445  \"assembly {...\"\n                        return(add(var_ret_mpos, 0x20), mload(var_ret_mpos))\n                    }\n                }\n                /// @src 5:2629:2693  \"fallback() external payable virtual {...\"\n                fun_fallback()\n            }\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function abi_encode_stringliteral_f5d2(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 66)\n                mstore(add(headStart, 64), \"TransparentUpgradeableProxy: adm\")\n                mstore(add(headStart, 96), \"in cannot fallback to proxy targ\")\n                mstore(add(headStart, 128), \"et\")\n                tail := add(headStart, 160)\n            }\n            /// @ast-id 988 @src 10:4407:5509  \"function _fallback() internal virtual override {...\"\n            function fun_fallback()\n            {\n                /// @src 10:4464:5503  \"if (msg.sender == _getAdmin()) {...\"\n                switch /** @src 10:4468:4493  \"msg.sender == _getAdmin()\" */ eq(/** @src 10:4468:4478  \"msg.sender\" */ caller(), /** @src 10:4468:4493  \"msg.sender == _getAdmin()\" */ cleanup_address(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ sload(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))))\n                case /** @src 10:4464:5503  \"if (msg.sender == _getAdmin()) {...\" */ 0 { fun__fallback() }\n                default {\n                    /// @src 10:4509:4525  \"bytes memory ret\"\n                    let var_ret_mpos := /** @src -1:-1:-1 */ 0\n                    /// @src 10:4509:4525  \"bytes memory ret\"\n                    var_ret_mpos := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 96\n                    /// @src 10:4557:4564  \"msg.sig\"\n                    let expr := and(calldataload(/** @src -1:-1:-1 */ 0), /** @src 10:4557:4564  \"msg.sig\" */ shl(224, 0xffffffff))\n                    /// @src 10:4578:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {...\"\n                    switch /** @src 10:4582:4641  \"selector == ITransparentUpgradeableProxy.upgradeTo.selector\" */ eq(expr, /** @src 10:4594:4641  \"ITransparentUpgradeableProxy.upgradeTo.selector\" */ shl(225, 0x1b2ce7f3))\n                    case /** @src 10:4578:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {...\" */ 0 {\n                        /// @src 10:4708:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\"\n                        switch /** @src 10:4712:4778  \"selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector\" */ eq(expr, /** @src 10:4724:4778  \"ITransparentUpgradeableProxy.upgradeToAndCall.selector\" */ shl(225, 0x278f7943))\n                        case /** @src 10:4708:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\" */ 0 {\n                            /// @src 10:4852:5357  \"if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {...\"\n                            switch /** @src 10:4856:4917  \"selector == ITransparentUpgradeableProxy.changeAdmin.selector\" */ eq(expr, /** @src 10:4868:4917  \"ITransparentUpgradeableProxy.changeAdmin.selector\" */ shl(228, 0x08f28397))\n                            case /** @src 10:4852:5357  \"if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {...\" */ 0 {\n                                /// @src 10:4986:5357  \"if (selector == ITransparentUpgradeableProxy.admin.selector) {...\"\n                                switch /** @src 10:4990:5045  \"selector == ITransparentUpgradeableProxy.admin.selector\" */ eq(expr, /** @src 10:5002:5045  \"ITransparentUpgradeableProxy.admin.selector\" */ shl(230, 0x03e14691))\n                                case /** @src 10:4986:5357  \"if (selector == ITransparentUpgradeableProxy.admin.selector) {...\" */ 0 {\n                                    /// @src 10:5108:5357  \"if (selector == ITransparentUpgradeableProxy.implementation.selector) {...\"\n                                    switch /** @src 10:5112:5176  \"selector == ITransparentUpgradeableProxy.implementation.selector\" */ eq(expr, /** @src 10:5124:5176  \"ITransparentUpgradeableProxy.implementation.selector\" */ shl(224, 0x5c60da1b))\n                                    case /** @src 10:5108:5357  \"if (selector == ITransparentUpgradeableProxy.implementation.selector) {...\" */ 0 {\n                                        /// @src 10:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\"\n                                        let _1 := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                                        /// @src 10:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\"\n                                        mstore(_1, shl(229, 4594637))\n                                        revert(_1, sub(abi_encode_stringliteral_f5d2(add(_1, 4)), _1))\n                                    }\n                                    default /// @src 10:5108:5357  \"if (selector == ITransparentUpgradeableProxy.implementation.selector) {...\"\n                                    {\n                                        /// @src 10:5196:5227  \"ret = _dispatchImplementation()\"\n                                        var_ret_mpos := /** @src 10:5202:5227  \"_dispatchImplementation()\" */ fun_dispatchImplementation()\n                                    }\n                                }\n                                default /// @src 10:4986:5357  \"if (selector == ITransparentUpgradeableProxy.admin.selector) {...\"\n                                {\n                                    /// @src 10:5065:5087  \"ret = _dispatchAdmin()\"\n                                    var_ret_mpos := /** @src 10:5071:5087  \"_dispatchAdmin()\" */ fun_dispatchAdmin()\n                                }\n                            }\n                            default /// @src 10:4852:5357  \"if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {...\"\n                            {\n                                /// @src 10:4937:4965  \"ret = _dispatchChangeAdmin()\"\n                                var_ret_mpos := /** @src 10:4943:4965  \"_dispatchChangeAdmin()\" */ fun_dispatchChangeAdmin()\n                            }\n                        }\n                        default /// @src 10:4708:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\"\n                        {\n                            /// @src 10:4798:4831  \"ret = _dispatchUpgradeToAndCall()\"\n                            var_ret_mpos := /** @src 10:4804:4831  \"_dispatchUpgradeToAndCall()\" */ fun_dispatchUpgradeToAndCall()\n                        }\n                    }\n                    default /// @src 10:4578:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {...\"\n                    {\n                        /// @src 10:4661:4687  \"ret = _dispatchUpgradeTo()\"\n                        var_ret_mpos := /** @src 10:4667:4687  \"_dispatchUpgradeTo()\" */ fun_dispatchUpgradeTo()\n                    }\n                    /// @src 10:5370:5445  \"assembly {...\"\n                    return(add(var_ret_mpos, 0x20), mload(var_ret_mpos))\n                }\n            }\n            /// @ast-id 514 @src 5:2322:2432  \"function _fallback() internal virtual {...\"\n            function fun__fallback()\n            {\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let cleaned := and(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ sload(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 5:1018:1837  \"assembly {...\"\n                calldatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 5:1018:1837  \"assembly {...\" */ calldatasize())\n                let usr$result := delegatecall(gas(), cleaned, /** @src -1:-1:-1 */ _1, /** @src 5:1018:1837  \"assembly {...\" */ calldatasize(), /** @src -1:-1:-1 */ _1, _1)\n                /// @src 5:1018:1837  \"assembly {...\"\n                returndatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                switch usr$result\n                case 0 {\n                    revert(/** @src -1:-1:-1 */ _1, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                }\n                default {\n                    return(/** @src -1:-1:-1 */ _1, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                }\n            }\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_3970(memPtr)\n            {\n                let newFreePtr := add(memPtr, and(add(64, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_3971(memPtr)\n            {\n                let newFreePtr := add(memPtr, and(add(64, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_3972(memPtr)\n            {\n                let newFreePtr := add(memPtr, and(add(32, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_3974(memPtr)\n            {\n                let newFreePtr := add(memPtr, and(add(0x20, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_3975(memPtr)\n            {\n                let newFreePtr := add(memPtr, and(add(0x20, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_3976(memPtr)\n            {\n                let newFreePtr := add(memPtr, and(add(96, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            /// @ast-id 1008 @src 10:5860:6025  \"function _dispatchAdmin() private returns (bytes memory) {...\"\n            function fun_dispatchAdmin() -> var_992_mpos\n            {\n                /// @src 10:5903:5915  \"bytes memory\"\n                fun_requireZeroValue()\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let cleaned := and(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ sload(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n                /// @src 10:6001:6018  \"abi.encode(admin)\"\n                let expr_1005_mpos := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                mstore(/** @src 10:6001:6018  \"abi.encode(admin)\" */ add(expr_1005_mpos, 0x20), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ cleaned)\n                /// @src 10:6001:6018  \"abi.encode(admin)\"\n                mstore(expr_1005_mpos, 0x20)\n                finalize_allocation_3970(expr_1005_mpos)\n                /// @src 10:5994:6018  \"return abi.encode(admin)\"\n                var_992_mpos := expr_1005_mpos\n            }\n            /// @ast-id 1028 @src 10:6385:6583  \"function _dispatchImplementation() private returns (bytes memory) {...\"\n            function fun_dispatchImplementation() -> var_1012_mpos\n            {\n                /// @src 10:6437:6449  \"bytes memory\"\n                fun_requireZeroValue()\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let cleaned := and(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ sload(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n                /// @src 10:6550:6576  \"abi.encode(implementation)\"\n                let expr_mpos := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                mstore(/** @src 10:6550:6576  \"abi.encode(implementation)\" */ add(expr_mpos, 0x20), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ cleaned)\n                /// @src 10:6550:6576  \"abi.encode(implementation)\"\n                mstore(expr_mpos, 0x20)\n                finalize_allocation_3971(expr_mpos)\n                /// @src 10:6543:6576  \"return abi.encode(implementation)\"\n                var_1012_mpos := expr_mpos\n            }\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            function abi_decode_address_payable() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_tuple_address_payable(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                value0 := value\n            }\n            function array_allocation_size_string(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function allocate_memory_array_string() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_3972(memPtr_1)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src 10:6827:6835  \"msg.data\" */ 0)\n            }\n            /// @ast-id 1057 @src 10:6694:6910  \"function _dispatchChangeAdmin() private returns (bytes memory) {...\"\n            function fun_dispatchChangeAdmin() -> var_1032_mpos\n            {\n                /// @src 10:6743:6755  \"bytes memory\"\n                fun_requireZeroValue()\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if gt(/** @src 10:6836:6837  \"4\" */ 0x04, /** @src 10:6827:6835  \"msg.data\" */ calldatasize())\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 10:6827:6835  \"msg.data\" */ 0, 0)\n                }\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 10:6816:6851  \"abi.decode(msg.data[4:], (address))\" */ abi_decode_tuple_address_payable(/** @src 10:6827:6835  \"msg.data\" */ calldatasize()), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _1)\n                /// @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\"\n                let _3 := 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n                let _4 := sload(_3)\n                /// @src 4:4364:4399  \"AdminChanged(_getAdmin(), newAdmin)\"\n                let _5 := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                mstore(_5, and(_4, _1))\n                mstore(add(_5, 32), _2)\n                /// @src 4:4364:4399  \"AdminChanged(_getAdmin(), newAdmin)\"\n                log1(_5, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 64, /** @src 4:4364:4399  \"AdminChanged(_getAdmin(), newAdmin)\" */ 0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f)\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if /** @src 4:4051:4073  \"newAdmin != address(0)\" */ iszero(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 10:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\" */ shl(229, 4594637))\n                    /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    mstore(add(memPtr, /** @src 10:6836:6837  \"4\" */ 0x04), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC1967: new admin is the zero a\")\n                    mstore(add(memPtr, 100), \"ddress\")\n                    revert(memPtr, 132)\n                }\n                sstore(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ _3, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ or(and(_4, shl(160, 0xffffffffffffffffffffffff)), _2))\n                /// @src 10:6894:6903  \"return \\\"\\\"\"\n                var_1032_mpos := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ allocate_memory_array_string()\n            }\n            /// @ast-id 1091 @src 10:6985:7240  \"function _dispatchUpgradeTo() private returns (bytes memory) {...\"\n            function fun_dispatchUpgradeTo() -> var_1061_mpos\n            {\n                /// @src 10:7032:7044  \"bytes memory\"\n                fun_requireZeroValue()\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if gt(/** @src 10:7134:7135  \"4\" */ 0x04, /** @src 10:7125:7133  \"msg.data\" */ calldatasize())\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 10:7125:7133  \"msg.data\" */ 0, 0)\n                }\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let _1 := and(/** @src 10:7114:7149  \"abi.decode(msg.data[4:], (address))\" */ abi_decode_tuple_address_payable(/** @src 10:7125:7133  \"msg.data\" */ calldatasize()), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n                let memPtr := mload(64)\n                finalize_allocation_3974(memPtr)\n                mstore(memPtr, /** @src 10:7125:7133  \"msg.data\" */ 0)\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if /** @src 12:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 12:1702:1721  \"account.code.length\" */ extcodesize(_1))\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, /** @src 10:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\" */ shl(229, 4594637))\n                    /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    mstore(add(memPtr_1, /** @src 10:7134:7135  \"4\" */ 0x04), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 0x20)\n                    mstore(add(memPtr_1, 36), 45)\n                    mstore(add(memPtr_1, 68), \"ERC1967: new implementation is n\")\n                    mstore(add(memPtr_1, 100), \"ot a contract\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                let _2 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                sstore(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _2, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ or(and(sload(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _2), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ shl(160, 0xffffffffffffffffffffffff)), _1))\n                /// @src 4:1889:1916  \"Upgraded(newImplementation)\"\n                log2(/** @src 10:7125:7133  \"msg.data\" */ 0, 0, /** @src 4:1889:1916  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _1)\n                /// @src 4:2208:2223  \"data.length > 0\"\n                let _3 := iszero(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 4:2208:2219  \"data.length\" */ memPtr))\n                /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n                let expr := /** @src 4:2208:2223  \"data.length > 0\" */ iszero(_3)\n                /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n                if _3\n                {\n                    expr := /** @src 10:7125:7133  \"msg.data\" */ 0\n                }\n                /// @src 4:2204:2316  \"if (data.length > 0 || forceCall) {...\"\n                if expr\n                {\n                    /// @src 12:6788:6865  \"functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\")\"\n                    pop(fun_functionDelegateCall(/** @src 4:2252:2305  \"Address.functionDelegateCall(newImplementation, data)\" */ _1, memPtr, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398()))\n                }\n                let memPtr_2 := mload(64)\n                finalize_allocation_3975(memPtr_2)\n                mstore(memPtr_2, /** @src 10:7125:7133  \"msg.data\" */ 0)\n                /// @src 10:7224:7233  \"return \\\"\\\"\"\n                var_1061_mpos := memPtr_2\n            }\n            /// @ast-id 279 @src 4:2057:2322  \"function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {...\"\n            function fun_upgradeToAndCall(var_newImplementation, var_data_mpos)\n            {\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if /** @src 12:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 12:1702:1721  \"account.code.length\" */ extcodesize(var_newImplementation))\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 10:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\" */ shl(229, 4594637))\n                    /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 45)\n                    mstore(add(memPtr, 68), \"ERC1967: new implementation is n\")\n                    mstore(add(memPtr, 100), \"ot a contract\")\n                    revert(memPtr, 132)\n                }\n                let _1 := and(var_newImplementation, sub(shl(160, 1), 1))\n                /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                let _2 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                sstore(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _2, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ or(and(sload(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _2), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ shl(160, 0xffffffffffffffffffffffff)), _1))\n                /// @src 4:1889:1916  \"Upgraded(newImplementation)\"\n                log2(/** @src -1:-1:-1 */ 0, 0, /** @src 4:1889:1916  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _1)\n                /// @src 4:2208:2223  \"data.length > 0\"\n                let _3 := iszero(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 4:2208:2219  \"data.length\" */ var_data_mpos))\n                /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n                let expr := /** @src 4:2208:2223  \"data.length > 0\" */ iszero(_3)\n                /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n                if _3\n                {\n                    expr := /** @src 10:7746:7750  \"true\" */ 0x01\n                }\n                /// @src 4:2204:2316  \"if (data.length > 0 || forceCall) {...\"\n                if expr\n                {\n                    /// @src 12:6788:6865  \"functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\")\"\n                    pop(fun_functionDelegateCall(/** @src 4:2252:2305  \"Address.functionDelegateCall(newImplementation, data)\" */ var_newImplementation, var_data_mpos, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398()))\n                }\n            }\n            /// @ast-id 1123 @src 10:7524:7778  \"function _dispatchUpgradeToAndCall() private returns (bytes memory) {...\"\n            function fun_dispatchUpgradeToAndCall() -> var__mpos\n            {\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if gt(/** @src 10:7671:7672  \"4\" */ 0x04, /** @src 10:7662:7670  \"msg.data\" */ calldatasize())\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 10:7662:7670  \"msg.data\" */ 0, 0)\n                }\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if slt(add(/** @src 10:7662:7670  \"msg.data\" */ calldatasize(), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ not(3)), 64)\n                {\n                    revert(/** @src 10:7662:7670  \"msg.data\" */ 0, 0)\n                }\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let value0 := abi_decode_address_payable()\n                let offset := calldataload(36)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src 10:7662:7670  \"msg.data\" */ 0, 0)\n                }\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if iszero(slt(add(offset, 35), /** @src 10:7662:7670  \"msg.data\" */ calldatasize()))\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 10:7662:7670  \"msg.data\" */ 0, 0)\n                }\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let _1 := calldataload(add(/** @src 10:7671:7672  \"4\" */ 0x04, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ offset))\n                let _2 := array_allocation_size_string(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 36), /** @src 10:7662:7670  \"msg.data\" */ calldatasize())\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 10:7662:7670  \"msg.data\" */ 0, 0)\n                }\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                calldatacopy(add(memPtr, 32), add(offset, 36), _1)\n                mstore(add(add(memPtr, _1), 32), /** @src 10:7662:7670  \"msg.data\" */ 0)\n                /// @src 10:7746:7750  \"true\"\n                fun_upgradeToAndCall(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(/** @src 10:7602:7693  \"(address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes))\" */ value0, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1)), /** @src 10:7746:7750  \"true\" */ memPtr)\n                /// @src 10:7762:7771  \"return \\\"\\\"\"\n                var__mpos := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ allocate_memory_array_string()\n            }\n            /// @ast-id 1145 @src 10:8261:8338  \"function _requireZeroValue() private {...\"\n            function fun_requireZeroValue()\n            {\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if iszero(/** @src 10:8316:8330  \"msg.value == 0\" */ iszero(/** @src 10:8316:8325  \"msg.value\" */ callvalue()))\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 10:8329:8330  \"0\" */ 0x00, 0x00)\n                }\n            }\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            function copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_3976(memPtr_1)\n                mstore(memPtr_1, 39)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"Address: low-level delegate call\")\n                mstore(add(memPtr_1, 64), \" failed\")\n            }\n            /// @ast-id 1457 @src 12:7058:7383  \"function functionDelegateCall(...\"\n            function fun_functionDelegateCall(var_target, var_data_1433_mpos, var_errorMessage_mpos) -> var_mpos\n            {\n                /// @src 12:7265:7290  \"target.delegatecall(data)\"\n                let expr_component := delegatecall(gas(), var_target, add(var_data_1433_mpos, 0x20), mload(var_data_1433_mpos), 0, 0)\n                let data := 0\n                /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_string(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, /** @src 12:7265:7290  \"target.delegatecall(data)\" */ 0x20), 0, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ returndatasize())\n                }\n                /// @src 12:7300:7376  \"return verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                var_mpos := /** @src 12:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ fun_verifyCallResultFromTarget(var_target, expr_component, /** @src 12:7265:7290  \"target.delegatecall(data)\" */ data, /** @src 12:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ var_errorMessage_mpos)\n            }\n            /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            function require_helper_stringliteral_cc2e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 10:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\" */ shl(229, 4594637))\n                    /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 1496 @src 12:7671:8299  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos, var_errorMessage_1466_mpos) -> var_1469_mpos\n            {\n                /// @src 12:7851:7863  \"bytes memory\"\n                var_1469_mpos := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 96\n                /// @src 12:7875:8293  \"if (success) {...\"\n                switch var_success\n                case 0 {\n                    /// @src 12:8976:9355  \"if (returndata.length > 0) {...\"\n                    switch /** @src 12:8980:9001  \"returndata.length > 0\" */ iszero(iszero(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 12:8980:8997  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 12:8976:9355  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 12:9324:9344  \"revert(errorMessage)\"\n                        let _1 := /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                        /// @src 12:9324:9344  \"revert(errorMessage)\"\n                        mstore(_1, /** @src 10:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\" */ shl(229, 4594637))\n                        /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                        let _2 := 32\n                        mstore(/** @src 12:9324:9344  \"revert(errorMessage)\" */ add(_1, 4), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _2)\n                        let length := mload(var_errorMessage_1466_mpos)\n                        mstore(add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 36), length)\n                        let i := /** @src 12:9000:9001  \"0\" */ 0x00\n                        /// @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                        for { } lt(i, length) { i := add(i, _2) }\n                        {\n                            mstore(add(add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ i), 68), mload(add(add(var_errorMessage_1466_mpos, i), _2)))\n                        }\n                        mstore(add(add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ length), 68), /** @src 12:9000:9001  \"0\" */ 0x00)\n                        /// @src 12:9324:9344  \"revert(errorMessage)\"\n                        revert(_1, add(sub(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ add(/** @src 12:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(add(length, 31), not(31))), /** @src 12:9324:9344  \"revert(errorMessage)\" */ _1), /** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 68))\n                    }\n                    default /// @src 12:8976:9355  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 12:9152:9294  \"assembly {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n                default /// @src 12:7875:8293  \"if (success) {...\"\n                {\n                    /// @src 12:7902:8188  \"if (returndata.length == 0) {...\"\n                    if /** @src 12:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 10:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 12:7906:7923  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 12:7902:8188  \"if (returndata.length == 0) {...\"\n                    {\n                        /// @src 12:8113:8173  \"require(isContract(target), \\\"Address: call to non-contract\\\")\"\n                        require_helper_stringliteral_cc2e(/** @src 12:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 12:1702:1721  \"account.code.length\" */ extcodesize(/** @src 12:8121:8139  \"isContract(target)\" */ var_target))))\n                    }\n                    /// @src 12:8201:8218  \"return returndata\"\n                    var_1469_mpos := var_returndata_mpos\n                    leave\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e12823cc803f51a5c752a8ce61909fb076f88822c1d97e061990069d12ab41c064736f6c63430008110033\"\n    }\n}\n","hash":"010001bd42f24985a62cfd39d64121cc22748c5e08cb054740476d414d673e14","factoryDependencies":{}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1157,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","zk_version":"1.3.14"},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000f441f830a5cafc2236257ee6eb6cd0a0ed9103d04467f6e96082f1d4ec06c5a9"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 12:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_1541\" {\n    code {\n        {\n            /// @src 12:194:9363  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_1541_deployed\")\n            codecopy(_1, dataoffset(\"Address_1541_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 12:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_1541_deployed\" {\n        code {\n            {\n                /// @src 12:194:9363  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220ce30fbd4d59c78fa4cac8324b32a5b82b36a29017b2b2eb0cc4c3515b066691c64736f6c63430008110033\"\n    }\n}\n","hash":"010000070d25e1d55b7eac402426ebdbd1955995435d3e3d7a0447607f39a0b6","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","zk_version":"1.3.14"},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"StorageSlot.sol:StorageSlot\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000aa8654292f849215aeee6e0ef42a8eb0d39a290f07f5fdf06a8823b85cc71b0f"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"StorageSlot_1673\" {\n    code {\n        {\n            /// @src 14:1420:4105  \"library StorageSlot {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"StorageSlot_1673_deployed\")\n            codecopy(_1, dataoffset(\"StorageSlot_1673_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"StorageSlot_1673_deployed\" {\n        code {\n            {\n                /// @src 14:1420:4105  \"library StorageSlot {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212201df5bb5f9a69070423688271c2f551bf0270073d9f979646784106522d2e437c64736f6c63430008110033\"\n    }\n}\n","hash":"01000007140954fe783c6a272d18d9e8c9a2a13ae01c864a5d1b1c4e61862d7f","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]}},\"version\":1}","zk_version":"1.3.14"},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"MerkleProof.sol:MerkleProof\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004d9f3d6c666fe0170ab878e7e82acce81a852bfa4efe00acece876eaab139dd6"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 15:\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\"\nobject \"MerkleProof_2201\" {\n    code {\n        {\n            /// @src 15:802:9621  \"library MerkleProof {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"MerkleProof_2201_deployed\")\n            codecopy(_1, dataoffset(\"MerkleProof_2201_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 15:\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\"\n    object \"MerkleProof_2201_deployed\" {\n        code {\n            {\n                /// @src 15:802:9621  \"library MerkleProof {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220572daba0276f1c90b0299b357e0463c2e77a7578e1b35c4b07dbb34b34473fdc64736f6c63430008110033\"\n    }\n}\n","hash":"01000007bb5d349bd7a86969d97016252de0471b502e88aa1939abf9428cf655","factoryDependencies":{}}},"contracts/Executor.sol":{"Executor":{"abi":[{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"ExpiredOracleSignature","type":"error"},{"inputs":[],"name":"InvalidDomain","type":"error"},{"inputs":[],"name":"InvalidOracleSignature","type":"error"},{"inputs":[],"name":"OrderFulfilled","type":"error"},{"inputs":[],"name":"PoolDepositFailed","type":"error"},{"inputs":[],"name":"PoolTransferFailed","type":"error"},{"inputs":[],"name":"PoolWithdrawFromFailed","type":"error"},{"inputs":[],"name":"Unauthorized","type":"error"},{"inputs":[],"name":"UnauthorizedOracle","type":"error"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"}],"indexed":false,"internalType":"struct Transfer","name":"transfer","type":"tuple"},{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"listingIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"indexed":false,"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"protocolFee","type":"tuple"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"}],"indexed":false,"internalType":"struct Fees","name":"fees","type":"tuple"},{"indexed":false,"internalType":"enum OrderType","name":"orderType","type":"uint8"}],"name":"Execution","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenIdListingIndexTrader","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collectionPriceSide","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"makerFeeRecipientRate","type":"uint256"}],"name":"Execution721MakerFeePacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenIdListingIndexTrader","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collectionPriceSide","type":"uint256"}],"name":"Execution721Packed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenIdListingIndexTrader","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collectionPriceSide","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"takerFeeRecipientRate","type":"uint256"}],"name":"Execution721TakerFeePacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"offerCollectionHash","type":"bytes32"},{"indexed":false,"internalType":"address","name":"accepter","type":"address"},{"indexed":false,"internalType":"address","name":"bidder","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"pricePerItem","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"remaining","type":"uint256"}],"name":"ExecutionAcceptCollectionOffer","type":"event"},{"inputs":[],"name":"_DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"_hashToSign","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"amountTaken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"blockRange","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"}],"name":"hashListing","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"internalType":"enum OrderType","name":"orderType","type":"uint8"},{"internalType":"uint256","name":"pricePerItem","type":"uint256"}],"name":"hashOfferCollection","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"internalType":"enum OrderType","name":"orderType","type":"uint8"}],"name":"hashOrder","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeAsk","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeAskSingle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeBid","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeBidSingle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"information","outputs":[{"internalType":"string","name":"version","type":"string"},{"internalType":"bytes32","name":"domainSeparator","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"oracles","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFee","outputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signatures","type":"bytes"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"verifyAuthorizationPublic","outputs":[{"internalType":"bool","name":"authorized","type":"bool"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"verifyDomain","outputs":[],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiredOracleSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDomain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOracleSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderFulfilled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolDepositFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolWithdrawFromFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedOracle\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"protocolFee\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct Fees\",\"name\":\"fees\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"name\":\"Execution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdListingIndexTrader\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collectionPriceSide\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"makerFeeRecipientRate\",\"type\":\"uint256\"}],\"name\":\"Execution721MakerFeePacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdListingIndexTrader\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collectionPriceSide\",\"type\":\"uint256\"}],\"name\":\"Execution721Packed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdListingIndexTrader\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collectionPriceSide\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerFeeRecipientRate\",\"type\":\"uint256\"}],\"name\":\"Execution721TakerFeePacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"offerCollectionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accepter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"name\":\"ExecutionAcceptCollectionOffer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"_hashToSign\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amountTaken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"}],\"name\":\"hashListing\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"}],\"name\":\"hashOfferCollection\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"name\":\"hashOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeAsk\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeAskSingle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeBid\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeBidSingle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"information\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"verifyAuthorizationPublic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyDomain\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_hashToSign(bytes32)\":{\"params\":{\"hash\":\"Primary EIP712 object hash\"},\"returns\":{\"_0\":\"EIP712 hash\"}},\"hashListing((uint256,uint256,uint256,uint256))\":{\"params\":{\"listing\":\"Listing to hash\"},\"returns\":{\"_0\":\"Listing hash\"}},\"hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)\":{\"details\":\"Includes two additional parameters not in the struct (orderType, nonce)\",\"params\":{\"order\":\"Order to hash\",\"orderType\":\"OrderType of the Order\"},\"returns\":{\"_0\":\"Order EIP712 hash\"}},\"hashTakeAsk(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"hashTakeAskSingle(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"hashTakeBid(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"hashTakeBidSingle(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"verifyAuthorizationPublic(address,bytes32,bytes,uint256)\":{\"params\":{\"hash\":\"EIP712 hash\",\"index\":\"Index of the signature to verify\",\"signatures\":\"Packed bytes array of order signatures\",\"signer\":\"Address of the alleged signer\"},\"returns\":{\"authorized\":\"Validity of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_hashToSign(bytes32)\":{\"notice\":\"Create an EIP712 hash to sign\"},\"hashListing((uint256,uint256,uint256,uint256))\":{\"notice\":\"Create a hash of a Listing struct\"},\"hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)\":{\"notice\":\"Create an EIP712 hash of an Order\"},\"hashTakeAsk(address)\":{\"notice\":\"Create a hash of TakeAsk calldata with an approved caller\"},\"hashTakeAskSingle(address)\":{\"notice\":\"Create a hash of TakeAskSingle calldata with an approved caller\"},\"hashTakeBid(address)\":{\"notice\":\"Create a hash of TakeBid calldata with an approved caller\"},\"hashTakeBidSingle(address)\":{\"notice\":\"Create a hash of TakeBidSingle calldata with an approved caller\"},\"information()\":{\"notice\":\"Return version and domain separator\"},\"verifyAuthorizationPublic(address,bytes32,bytes,uint256)\":{\"notice\":\"Verify EIP712 signature\"},\"verifyDomain()\":{\"notice\":\"Verify the domain separator produced during deployment of the implementation matches that of the proxy\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Executor.sol\":\"Executor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"contracts/Executor.sol\":{\"keccak256\":\"0xb0ea3fa3283217cf0280de4e83c853b21a5af8a4d8f1bfa35b87d8f6a97db66d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0e3fc2228ca5a7a9c1b27b8cc502dd894794641f65e2639619484b135719839\",\"dweb:/ipfs/QmZiiFtKti1ccAqh2v7e8dNw7D8UMaJPQRP2SpD8AEET79\"]},\"contracts/Signatures.sol\":{\"keccak256\":\"0x20a94f66ba5db684d52632fd48d41adf0c3e5bde4e00d98d696752fdfb09aaf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eded42d14b8d838004326a365e6f9a12ab0efa918b73cb661069765ba4a7068c\",\"dweb:/ipfs/QmY989jks8FQMYKmccrEatxgugqqbh8cYW1dygEpoGeEEa\"]},\"contracts/Validation.sol\":{\"keccak256\":\"0x16a7f7648ad76a83938cc477bc316932b6f679d121a6cfa268df6a7f19c9eda2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43966b59d849574b4c607eff36ac3f2c5cb5271ec5fb6e72bf38db2272f75fa\",\"dweb:/ipfs/QmNm5hLFcGo7nmj8CPWL28pzWLjMwCrhLqgM51xRyXa7aD\"]},\"contracts/interfaces/IDelegate.sol\":{\"keccak256\":\"0x737524908a5251b02f89bc95a3778844bfddb39c508a4c53e9628516a5d9829b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bec53c8d206413ba93295dee812091dfde89e9053452e87a701a09da1f824243\",\"dweb:/ipfs/QmWw3ageFdGRahfmHLnp6tgFZweUofLzrt6DosN283CoM8\"]},\"contracts/interfaces/IExecutor.sol\":{\"keccak256\":\"0xdb72b1682de0245b90e2319167391cba37c60237ac76fc3a1d9f953bea4da7f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13df1fe834f353b6dbbbc4d83dc2239793d4a9ac476d40f323653ca9e380acc8\",\"dweb:/ipfs/Qmd5RRcdLPZ7YKYte1FDXdt1jB6a5biWUZUHwh9hUs7fs5\"]},\"contracts/interfaces/ISignatures.sol\":{\"keccak256\":\"0x03fece8938f6df981a696b12ed380b3ba2399684eeb7b00dc4570803e30666a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d84bcfb92913b2a708495083ab478cbda79c9ebcb4863e36a5eb0131d3b1048\",\"dweb:/ipfs/QmYUYxnAAHeeV87nYKjMTxCT5vQHnmqr4gdmuHRGn23qCs\"]},\"contracts/interfaces/IValidation.sol\":{\"keccak256\":\"0x44116dca8e67e9d9bdefb57ed7cffea09f877a8375cb17604f9c83daa8c80756\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25cced53afd7464688c1c72d2df320f075315d1c27e0520894634bb84a36425f\",\"dweb:/ipfs/QmYhwizVB5en3TfsRhzHYBFrhQgexx4mMxTwLPAvYMxGFA\"]},\"contracts/lib/Constants.sol\":{\"keccak256\":\"0x7009b28d484db28bb474d50562b4042e5bf905e1995ebbcb844853ee5ab64465\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://393fec1bd2cee0eeec2ac2e2116abd7b38526a458c31813d806202f0789c9e05\",\"dweb:/ipfs/Qme2eE9y7qbiDLJWHfxCDWiCv35qEfD36cnWiczDEx7S6D\"]},\"contracts/lib/Structs.sol\":{\"keccak256\":\"0x80a811dca1b3b525d5e4ea9226085ad840edf76d9a3e10794597b447983f2097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7229f5805bca82300713d093ecb376b14bb1c1b909efd85e412c69957b616bf8\",\"dweb:/ipfs/QmcvvG32oBgk3PSCywUZgmzfKoWbzZ2r779CaSyDjCENWL\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":3760,"contract":"contracts/Executor.sol:Executor","label":"oracles","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":3764,"contract":"contracts/Executor.sol:Executor","label":"nonces","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":3766,"contract":"contracts/Executor.sol:Executor","label":"blockRange","offset":0,"slot":"2","type":"t_uint256"},{"astId":4383,"contract":"contracts/Executor.sol:Executor","label":"__gap","offset":0,"slot":"3","type":"t_array(t_uint256)47_storage"},{"astId":4414,"contract":"contracts/Executor.sol:Executor","label":"protocolFee","offset":0,"slot":"50","type":"t_struct(FeeRate)7142_storage"},{"astId":4422,"contract":"contracts/Executor.sol:Executor","label":"amountTaken","offset":0,"slot":"51","type":"t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256)))"},{"astId":4961,"contract":"contracts/Executor.sol:Executor","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":3724,"contract":"contracts/Executor.sol:Executor","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256)))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))","numberOfBytes":"32","value":"t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(FeeRate)7142_storage":{"encoding":"inplace","label":"struct FeeRate","members":[{"astId":7139,"contract":"contracts/Executor.sol:Executor","label":"recipient","offset":0,"slot":"0","type":"t_address"},{"astId":7141,"contract":"contracts/Executor.sol:Executor","label":"rate","offset":20,"slot":"0","type":"t_uint16"}],"numberOfBytes":"32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"_DOMAIN_SEPARATOR()":"dc0c81b5","_hashToSign(bytes32)":"c1dc0285","amountTaken(address,bytes32,uint256)":"3c2ab6bf","blockRange()":"a4b2c674","hashListing((uint256,uint256,uint256,uint256))":"87cc694d","hashOfferCollection((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8,uint256)":"6bf68190","hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)":"51114ffa","hashTakeAsk(address)":"228ed5d2","hashTakeAskSingle(address)":"beafe7ca","hashTakeBid(address)":"7154ec89","hashTakeBidSingle(address)":"b082c3ba","information()":"f47b7740","nonces(address)":"7ecebe00","oracles(address)":"addd5099","protocolFee()":"b0e21e8a","verifyAuthorizationPublic(address,bytes32,bytes,uint256)":"7566cd3c","verifyDomain()":"708ef9aa"}},"irOptimized":""}},"contracts/Signatures.sol":{"Signatures":{"abi":[{"inputs":[],"name":"ExpiredOracleSignature","type":"error"},{"inputs":[],"name":"InvalidDomain","type":"error"},{"inputs":[],"name":"InvalidOracleSignature","type":"error"},{"inputs":[],"name":"Unauthorized","type":"error"},{"inputs":[],"name":"UnauthorizedOracle","type":"error"},{"inputs":[],"name":"_DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"_hashToSign","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"blockRange","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"}],"name":"hashListing","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"internalType":"enum OrderType","name":"orderType","type":"uint8"},{"internalType":"uint256","name":"pricePerItem","type":"uint256"}],"name":"hashOfferCollection","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"internalType":"enum OrderType","name":"orderType","type":"uint8"}],"name":"hashOrder","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeAsk","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeAskSingle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeBid","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeBidSingle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"information","outputs":[{"internalType":"string","name":"version","type":"string"},{"internalType":"bytes32","name":"domainSeparator","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"oracles","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signatures","type":"bytes"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"verifyAuthorizationPublic","outputs":[{"internalType":"bool","name":"authorized","type":"bool"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"verifyDomain","outputs":[],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ExpiredOracleSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDomain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOracleSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedOracle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"_DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"_hashToSign\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"}],\"name\":\"hashListing\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"}],\"name\":\"hashOfferCollection\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"name\":\"hashOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeAsk\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeAskSingle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeBid\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeBidSingle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"information\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"verifyAuthorizationPublic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyDomain\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_hashToSign(bytes32)\":{\"params\":{\"hash\":\"Primary EIP712 object hash\"},\"returns\":{\"_0\":\"EIP712 hash\"}},\"hashListing((uint256,uint256,uint256,uint256))\":{\"params\":{\"listing\":\"Listing to hash\"},\"returns\":{\"_0\":\"Listing hash\"}},\"hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)\":{\"details\":\"Includes two additional parameters not in the struct (orderType, nonce)\",\"params\":{\"order\":\"Order to hash\",\"orderType\":\"OrderType of the Order\"},\"returns\":{\"_0\":\"Order EIP712 hash\"}},\"hashTakeAsk(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"hashTakeAskSingle(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"hashTakeBid(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"hashTakeBidSingle(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"verifyAuthorizationPublic(address,bytes32,bytes,uint256)\":{\"params\":{\"hash\":\"EIP712 hash\",\"index\":\"Index of the signature to verify\",\"signatures\":\"Packed bytes array of order signatures\",\"signer\":\"Address of the alleged signer\"},\"returns\":{\"authorized\":\"Validity of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_hashToSign(bytes32)\":{\"notice\":\"Create an EIP712 hash to sign\"},\"hashListing((uint256,uint256,uint256,uint256))\":{\"notice\":\"Create a hash of a Listing struct\"},\"hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)\":{\"notice\":\"Create an EIP712 hash of an Order\"},\"hashTakeAsk(address)\":{\"notice\":\"Create a hash of TakeAsk calldata with an approved caller\"},\"hashTakeAskSingle(address)\":{\"notice\":\"Create a hash of TakeAskSingle calldata with an approved caller\"},\"hashTakeBid(address)\":{\"notice\":\"Create a hash of TakeBid calldata with an approved caller\"},\"hashTakeBidSingle(address)\":{\"notice\":\"Create a hash of TakeBidSingle calldata with an approved caller\"},\"information()\":{\"notice\":\"Return version and domain separator\"},\"verifyAuthorizationPublic(address,bytes32,bytes,uint256)\":{\"notice\":\"Verify EIP712 signature\"},\"verifyDomain()\":{\"notice\":\"Verify the domain separator produced during deployment of the implementation matches that of the proxy\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Signatures.sol\":\"Signatures\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Signatures.sol\":{\"keccak256\":\"0x20a94f66ba5db684d52632fd48d41adf0c3e5bde4e00d98d696752fdfb09aaf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eded42d14b8d838004326a365e6f9a12ab0efa918b73cb661069765ba4a7068c\",\"dweb:/ipfs/QmY989jks8FQMYKmccrEatxgugqqbh8cYW1dygEpoGeEEa\"]},\"contracts/interfaces/ISignatures.sol\":{\"keccak256\":\"0x03fece8938f6df981a696b12ed380b3ba2399684eeb7b00dc4570803e30666a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d84bcfb92913b2a708495083ab478cbda79c9ebcb4863e36a5eb0131d3b1048\",\"dweb:/ipfs/QmYUYxnAAHeeV87nYKjMTxCT5vQHnmqr4gdmuHRGn23qCs\"]},\"contracts/lib/Constants.sol\":{\"keccak256\":\"0x7009b28d484db28bb474d50562b4042e5bf905e1995ebbcb844853ee5ab64465\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://393fec1bd2cee0eeec2ac2e2116abd7b38526a458c31813d806202f0789c9e05\",\"dweb:/ipfs/Qme2eE9y7qbiDLJWHfxCDWiCv35qEfD36cnWiczDEx7S6D\"]},\"contracts/lib/Structs.sol\":{\"keccak256\":\"0x80a811dca1b3b525d5e4ea9226085ad840edf76d9a3e10794597b447983f2097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7229f5805bca82300713d093ecb376b14bb1c1b909efd85e412c69957b616bf8\",\"dweb:/ipfs/QmcvvG32oBgk3PSCywUZgmzfKoWbzZ2r779CaSyDjCENWL\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":3760,"contract":"contracts/Signatures.sol:Signatures","label":"oracles","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":3764,"contract":"contracts/Signatures.sol:Signatures","label":"nonces","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":3766,"contract":"contracts/Signatures.sol:Signatures","label":"blockRange","offset":0,"slot":"2","type":"t_uint256"},{"astId":4383,"contract":"contracts/Signatures.sol:Signatures","label":"__gap","offset":0,"slot":"3","type":"t_array(t_uint256)47_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"_DOMAIN_SEPARATOR()":"dc0c81b5","_hashToSign(bytes32)":"c1dc0285","blockRange()":"a4b2c674","hashListing((uint256,uint256,uint256,uint256))":"87cc694d","hashOfferCollection((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8,uint256)":"6bf68190","hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)":"51114ffa","hashTakeAsk(address)":"228ed5d2","hashTakeAskSingle(address)":"beafe7ca","hashTakeBid(address)":"7154ec89","hashTakeBidSingle(address)":"b082c3ba","information()":"f47b7740","nonces(address)":"7ecebe00","oracles(address)":"addd5099","verifyAuthorizationPublic(address,bytes32,bytes,uint256)":"7566cd3c","verifyDomain()":"708ef9aa"}},"irOptimized":""}},"contracts/Validation.sol":{"Validation":{"abi":[{"inputs":[],"name":"ExpiredOracleSignature","type":"error"},{"inputs":[],"name":"InvalidDomain","type":"error"},{"inputs":[],"name":"InvalidOracleSignature","type":"error"},{"inputs":[],"name":"Unauthorized","type":"error"},{"inputs":[],"name":"UnauthorizedOracle","type":"error"},{"inputs":[],"name":"_DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"_hashToSign","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"amountTaken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"blockRange","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"}],"name":"hashListing","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"internalType":"enum OrderType","name":"orderType","type":"uint8"},{"internalType":"uint256","name":"pricePerItem","type":"uint256"}],"name":"hashOfferCollection","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"internalType":"enum OrderType","name":"orderType","type":"uint8"}],"name":"hashOrder","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeAsk","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeAskSingle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeBid","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeBidSingle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"information","outputs":[{"internalType":"string","name":"version","type":"string"},{"internalType":"bytes32","name":"domainSeparator","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"oracles","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFee","outputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signatures","type":"bytes"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"verifyAuthorizationPublic","outputs":[{"internalType":"bool","name":"authorized","type":"bool"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"verifyDomain","outputs":[],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ExpiredOracleSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDomain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOracleSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedOracle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"_DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"_hashToSign\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amountTaken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"}],\"name\":\"hashListing\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"}],\"name\":\"hashOfferCollection\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"name\":\"hashOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeAsk\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeAskSingle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeBid\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeBidSingle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"information\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"verifyAuthorizationPublic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyDomain\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_hashToSign(bytes32)\":{\"params\":{\"hash\":\"Primary EIP712 object hash\"},\"returns\":{\"_0\":\"EIP712 hash\"}},\"hashListing((uint256,uint256,uint256,uint256))\":{\"params\":{\"listing\":\"Listing to hash\"},\"returns\":{\"_0\":\"Listing hash\"}},\"hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)\":{\"details\":\"Includes two additional parameters not in the struct (orderType, nonce)\",\"params\":{\"order\":\"Order to hash\",\"orderType\":\"OrderType of the Order\"},\"returns\":{\"_0\":\"Order EIP712 hash\"}},\"hashTakeAsk(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"hashTakeAskSingle(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"hashTakeBid(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"hashTakeBidSingle(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"verifyAuthorizationPublic(address,bytes32,bytes,uint256)\":{\"params\":{\"hash\":\"EIP712 hash\",\"index\":\"Index of the signature to verify\",\"signatures\":\"Packed bytes array of order signatures\",\"signer\":\"Address of the alleged signer\"},\"returns\":{\"authorized\":\"Validity of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_hashToSign(bytes32)\":{\"notice\":\"Create an EIP712 hash to sign\"},\"hashListing((uint256,uint256,uint256,uint256))\":{\"notice\":\"Create a hash of a Listing struct\"},\"hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)\":{\"notice\":\"Create an EIP712 hash of an Order\"},\"hashTakeAsk(address)\":{\"notice\":\"Create a hash of TakeAsk calldata with an approved caller\"},\"hashTakeAskSingle(address)\":{\"notice\":\"Create a hash of TakeAskSingle calldata with an approved caller\"},\"hashTakeBid(address)\":{\"notice\":\"Create a hash of TakeBid calldata with an approved caller\"},\"hashTakeBidSingle(address)\":{\"notice\":\"Create a hash of TakeBidSingle calldata with an approved caller\"},\"information()\":{\"notice\":\"Return version and domain separator\"},\"verifyAuthorizationPublic(address,bytes32,bytes,uint256)\":{\"notice\":\"Verify EIP712 signature\"},\"verifyDomain()\":{\"notice\":\"Verify the domain separator produced during deployment of the implementation matches that of the proxy\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Validation.sol\":\"Validation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"contracts/Signatures.sol\":{\"keccak256\":\"0x20a94f66ba5db684d52632fd48d41adf0c3e5bde4e00d98d696752fdfb09aaf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eded42d14b8d838004326a365e6f9a12ab0efa918b73cb661069765ba4a7068c\",\"dweb:/ipfs/QmY989jks8FQMYKmccrEatxgugqqbh8cYW1dygEpoGeEEa\"]},\"contracts/Validation.sol\":{\"keccak256\":\"0x16a7f7648ad76a83938cc477bc316932b6f679d121a6cfa268df6a7f19c9eda2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43966b59d849574b4c607eff36ac3f2c5cb5271ec5fb6e72bf38db2272f75fa\",\"dweb:/ipfs/QmNm5hLFcGo7nmj8CPWL28pzWLjMwCrhLqgM51xRyXa7aD\"]},\"contracts/interfaces/ISignatures.sol\":{\"keccak256\":\"0x03fece8938f6df981a696b12ed380b3ba2399684eeb7b00dc4570803e30666a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d84bcfb92913b2a708495083ab478cbda79c9ebcb4863e36a5eb0131d3b1048\",\"dweb:/ipfs/QmYUYxnAAHeeV87nYKjMTxCT5vQHnmqr4gdmuHRGn23qCs\"]},\"contracts/interfaces/IValidation.sol\":{\"keccak256\":\"0x44116dca8e67e9d9bdefb57ed7cffea09f877a8375cb17604f9c83daa8c80756\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25cced53afd7464688c1c72d2df320f075315d1c27e0520894634bb84a36425f\",\"dweb:/ipfs/QmYhwizVB5en3TfsRhzHYBFrhQgexx4mMxTwLPAvYMxGFA\"]},\"contracts/lib/Constants.sol\":{\"keccak256\":\"0x7009b28d484db28bb474d50562b4042e5bf905e1995ebbcb844853ee5ab64465\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://393fec1bd2cee0eeec2ac2e2116abd7b38526a458c31813d806202f0789c9e05\",\"dweb:/ipfs/Qme2eE9y7qbiDLJWHfxCDWiCv35qEfD36cnWiczDEx7S6D\"]},\"contracts/lib/Structs.sol\":{\"keccak256\":\"0x80a811dca1b3b525d5e4ea9226085ad840edf76d9a3e10794597b447983f2097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7229f5805bca82300713d093ecb376b14bb1c1b909efd85e412c69957b616bf8\",\"dweb:/ipfs/QmcvvG32oBgk3PSCywUZgmzfKoWbzZ2r779CaSyDjCENWL\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":3760,"contract":"contracts/Validation.sol:Validation","label":"oracles","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":3764,"contract":"contracts/Validation.sol:Validation","label":"nonces","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":3766,"contract":"contracts/Validation.sol:Validation","label":"blockRange","offset":0,"slot":"2","type":"t_uint256"},{"astId":4383,"contract":"contracts/Validation.sol:Validation","label":"__gap","offset":0,"slot":"3","type":"t_array(t_uint256)47_storage"},{"astId":4414,"contract":"contracts/Validation.sol:Validation","label":"protocolFee","offset":0,"slot":"50","type":"t_struct(FeeRate)7142_storage"},{"astId":4422,"contract":"contracts/Validation.sol:Validation","label":"amountTaken","offset":0,"slot":"51","type":"t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256)))"},{"astId":4961,"contract":"contracts/Validation.sol:Validation","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256)))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))","numberOfBytes":"32","value":"t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(FeeRate)7142_storage":{"encoding":"inplace","label":"struct FeeRate","members":[{"astId":7139,"contract":"contracts/Validation.sol:Validation","label":"recipient","offset":0,"slot":"0","type":"t_address"},{"astId":7141,"contract":"contracts/Validation.sol:Validation","label":"rate","offset":20,"slot":"0","type":"t_uint16"}],"numberOfBytes":"32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"_DOMAIN_SEPARATOR()":"dc0c81b5","_hashToSign(bytes32)":"c1dc0285","amountTaken(address,bytes32,uint256)":"3c2ab6bf","blockRange()":"a4b2c674","hashListing((uint256,uint256,uint256,uint256))":"87cc694d","hashOfferCollection((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8,uint256)":"6bf68190","hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)":"51114ffa","hashTakeAsk(address)":"228ed5d2","hashTakeAskSingle(address)":"beafe7ca","hashTakeBid(address)":"7154ec89","hashTakeBidSingle(address)":"b082c3ba","information()":"f47b7740","nonces(address)":"7ecebe00","oracles(address)":"addd5099","protocolFee()":"b0e21e8a","verifyAuthorizationPublic(address,bytes32,bytes,uint256)":"7566cd3c","verifyDomain()":"708ef9aa"}},"irOptimized":""}},"contracts/ZeZuExchange.sol":{"ZeZuExchange":{"abi":[{"inputs":[{"internalType":"address","name":"delegate","type":"address"},{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"ExpiredOracleSignature","type":"error"},{"inputs":[],"name":"InsufficientFunds","type":"error"},{"inputs":[],"name":"InvalidDomain","type":"error"},{"inputs":[],"name":"InvalidOracleSignature","type":"error"},{"inputs":[],"name":"InvalidOrder","type":"error"},{"inputs":[],"name":"OrderFulfilled","type":"error"},{"inputs":[],"name":"PoolDepositFailed","type":"error"},{"inputs":[],"name":"PoolTransferFailed","type":"error"},{"inputs":[],"name":"PoolWithdrawFromFailed","type":"error"},{"inputs":[],"name":"ProtocolFeeTooHigh","type":"error"},{"inputs":[],"name":"TokenTransferFailed","type":"error"},{"inputs":[],"name":"Unauthorized","type":"error"},{"inputs":[],"name":"UnauthorizedOracle","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bytes32","name":"hash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"CancelTrade","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"}],"indexed":false,"internalType":"struct Transfer","name":"transfer","type":"tuple"},{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"listingIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"indexed":false,"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"protocolFee","type":"tuple"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"}],"indexed":false,"internalType":"struct Fees","name":"fees","type":"tuple"},{"indexed":false,"internalType":"enum OrderType","name":"orderType","type":"uint8"}],"name":"Execution","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenIdListingIndexTrader","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collectionPriceSide","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"makerFeeRecipientRate","type":"uint256"}],"name":"Execution721MakerFeePacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenIdListingIndexTrader","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collectionPriceSide","type":"uint256"}],"name":"Execution721Packed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenIdListingIndexTrader","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collectionPriceSide","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"takerFeeRecipientRate","type":"uint256"}],"name":"Execution721TakerFeePacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"offerCollectionHash","type":"bytes32"},{"indexed":false,"internalType":"address","name":"accepter","type":"address"},{"indexed":false,"internalType":"address","name":"bidder","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"pricePerItem","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"remaining","type":"uint256"}],"name":"ExecutionAcceptCollectionOffer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"blockRange","type":"uint256"}],"name":"NewBlockRange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"governor","type":"address"}],"name":"NewGovernor","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"uint16","name":"rate","type":"uint16"}],"name":"NewProtocolFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"newNonce","type":"uint256"}],"name":"NonceIncremented","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"SetOracle","type":"event"},{"inputs":[],"name":"_DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"_hashToSign","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"amountTaken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"blockRange","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Cancel[]","name":"cancels","type":"tuple[]"}],"name":"cancelTrades","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"governor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"}],"name":"hashListing","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"internalType":"enum OrderType","name":"orderType","type":"uint8"},{"internalType":"uint256","name":"pricePerItem","type":"uint256"}],"name":"hashOfferCollection","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"internalType":"enum OrderType","name":"orderType","type":"uint8"}],"name":"hashOrder","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeAsk","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeAskSingle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeBid","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"hashTakeBidSingle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"information","outputs":[{"internalType":"string","name":"version","type":"string"},{"internalType":"bytes32","name":"domainSeparator","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"oracles","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFee","outputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_governor","type":"address"}],"name":"setGovernor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"name":"setProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order[]","name":"orders","type":"tuple[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Taker","name":"taker","type":"tuple"}],"internalType":"struct Exchange[]","name":"exchanges","type":"tuple[]"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signatures","type":"bytes"},{"internalType":"address","name":"tokenRecipient","type":"address"}],"internalType":"struct TakeAsk","name":"inputs","type":"tuple"}],"name":"takeAsk","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order[]","name":"orders","type":"tuple[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Taker","name":"taker","type":"tuple"}],"internalType":"struct Exchange[]","name":"exchanges","type":"tuple[]"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signatures","type":"bytes"},{"internalType":"address","name":"tokenRecipient","type":"address"}],"internalType":"struct TakeAsk","name":"inputs","type":"tuple"},{"internalType":"uint256","name":"amountToWithdraw","type":"uint256"}],"name":"takeAskPool","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Taker","name":"taker","type":"tuple"}],"internalType":"struct Exchange","name":"exchange","type":"tuple"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"address","name":"tokenRecipient","type":"address"}],"internalType":"struct TakeAskSingle","name":"inputs","type":"tuple"}],"name":"takeAskSingle","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Taker","name":"taker","type":"tuple"}],"internalType":"struct Exchange","name":"exchange","type":"tuple"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"address","name":"tokenRecipient","type":"address"}],"internalType":"struct TakeAskSingle","name":"inputs","type":"tuple"},{"internalType":"uint256","name":"amountToWithdraw","type":"uint256"}],"name":"takeAskSinglePool","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order[]","name":"orders","type":"tuple[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Taker","name":"taker","type":"tuple"}],"internalType":"struct Exchange[]","name":"exchanges","type":"tuple[]"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signatures","type":"bytes"}],"internalType":"struct TakeBid","name":"inputs","type":"tuple"}],"name":"takeBid","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Taker","name":"taker","type":"tuple"}],"internalType":"struct Exchange","name":"exchange","type":"tuple"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct TakeBidSingle","name":"inputs","type":"tuple"}],"name":"takeBidSingle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct TakeCollectionOffer","name":"input","type":"tuple"}],"name":"takeCollectionOffer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signatures","type":"bytes"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"verifyAuthorizationPublic","outputs":[{"internalType":"bool","name":"authorized","type":"bool"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"verifyDomain","outputs":[],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiredOracleSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDomain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOracleSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderFulfilled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolDepositFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolWithdrawFromFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedOracle\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CancelTrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"protocolFee\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct Fees\",\"name\":\"fees\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"name\":\"Execution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdListingIndexTrader\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collectionPriceSide\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"makerFeeRecipientRate\",\"type\":\"uint256\"}],\"name\":\"Execution721MakerFeePacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdListingIndexTrader\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collectionPriceSide\",\"type\":\"uint256\"}],\"name\":\"Execution721Packed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdListingIndexTrader\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collectionPriceSide\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerFeeRecipientRate\",\"type\":\"uint256\"}],\"name\":\"Execution721TakerFeePacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"offerCollectionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accepter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"name\":\"ExecutionAcceptCollectionOffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockRange\",\"type\":\"uint256\"}],\"name\":\"NewBlockRange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"}],\"name\":\"NewGovernor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"name\":\"NewProtocolFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceIncremented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"SetOracle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"_hashToSign\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amountTaken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Cancel[]\",\"name\":\"cancels\",\"type\":\"tuple[]\"}],\"name\":\"cancelTrades\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"}],\"name\":\"hashListing\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"}],\"name\":\"hashOfferCollection\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"name\":\"hashOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeAsk\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeAskSingle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeBid\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"hashTakeBidSingle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"information\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"setGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Taker\",\"name\":\"taker\",\"type\":\"tuple\"}],\"internalType\":\"struct Exchange[]\",\"name\":\"exchanges\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"tokenRecipient\",\"type\":\"address\"}],\"internalType\":\"struct TakeAsk\",\"name\":\"inputs\",\"type\":\"tuple\"}],\"name\":\"takeAsk\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Taker\",\"name\":\"taker\",\"type\":\"tuple\"}],\"internalType\":\"struct Exchange[]\",\"name\":\"exchanges\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"tokenRecipient\",\"type\":\"address\"}],\"internalType\":\"struct TakeAsk\",\"name\":\"inputs\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"takeAskPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Taker\",\"name\":\"taker\",\"type\":\"tuple\"}],\"internalType\":\"struct Exchange\",\"name\":\"exchange\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"tokenRecipient\",\"type\":\"address\"}],\"internalType\":\"struct TakeAskSingle\",\"name\":\"inputs\",\"type\":\"tuple\"}],\"name\":\"takeAskSingle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Taker\",\"name\":\"taker\",\"type\":\"tuple\"}],\"internalType\":\"struct Exchange\",\"name\":\"exchange\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"tokenRecipient\",\"type\":\"address\"}],\"internalType\":\"struct TakeAskSingle\",\"name\":\"inputs\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"takeAskSinglePool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Taker\",\"name\":\"taker\",\"type\":\"tuple\"}],\"internalType\":\"struct Exchange[]\",\"name\":\"exchanges\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"internalType\":\"struct TakeBid\",\"name\":\"inputs\",\"type\":\"tuple\"}],\"name\":\"takeBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Taker\",\"name\":\"taker\",\"type\":\"tuple\"}],\"internalType\":\"struct Exchange\",\"name\":\"exchange\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct TakeBidSingle\",\"name\":\"inputs\",\"type\":\"tuple\"}],\"name\":\"takeBidSingle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct TakeCollectionOffer\",\"name\":\"input\",\"type\":\"tuple\"}],\"name\":\"takeCollectionOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"verifyAuthorizationPublic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyDomain\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_hashToSign(bytes32)\":{\"params\":{\"hash\":\"Primary EIP712 object hash\"},\"returns\":{\"_0\":\"EIP712 hash\"}},\"cancelTrades((bytes32,uint256,uint256)[])\":{\"params\":{\"cancels\":\"List of cancels to execute\"}},\"hashListing((uint256,uint256,uint256,uint256))\":{\"params\":{\"listing\":\"Listing to hash\"},\"returns\":{\"_0\":\"Listing hash\"}},\"hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)\":{\"details\":\"Includes two additional parameters not in the struct (orderType, nonce)\",\"params\":{\"order\":\"Order to hash\",\"orderType\":\"OrderType of the Order\"},\"returns\":{\"_0\":\"Order EIP712 hash\"}},\"hashTakeAsk(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"hashTakeAskSingle(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"hashTakeBid(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"hashTakeBidSingle(address)\":{\"params\":{\"_caller\":\"Address approved to execute the calldata\"},\"returns\":{\"_0\":\"Calldata hash\"}},\"setGovernor(address)\":{\"params\":{\"_governor\":\"Address of governor to set\"}},\"setProtocolFee(address,uint16)\":{\"params\":{\"rate\":\"Protocol fee rate\",\"recipient\":\"Protocol fee recipient\"}},\"takeAsk(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256)[],(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256))[],(address,uint16),bytes,address))\":{\"params\":{\"inputs\":\"Inputs for _takeAsk\"}},\"takeAskPool(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256)[],(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256))[],(address,uint16),bytes,address),uint256)\":{\"params\":{\"amountToWithdraw\":\"Amount of ETH to withdraw from the pool\",\"inputs\":\"Inputs for takeAsk\"}},\"takeAskSingle(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256)),(address,uint16),bytes,address))\":{\"params\":{\"inputs\":\"Inputs for _takeAskSingle\"}},\"takeAskSinglePool(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256)),(address,uint16),bytes,address),uint256)\":{\"params\":{\"amountToWithdraw\":\"Amount of ETH to withdraw from the pool\",\"inputs\":\"Inputs for takeAskSingle\"}},\"takeBid(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256)[],(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256))[],(address,uint16),bytes))\":{\"params\":{\"inputs\":\"Inputs for _takeBid\"}},\"takeBidSingle(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256)),(address,uint16),bytes))\":{\"params\":{\"inputs\":\"Inputs for _takeBidSingle\"}},\"verifyAuthorizationPublic(address,bytes32,bytes,uint256)\":{\"params\":{\"hash\":\"EIP712 hash\",\"index\":\"Index of the signature to verify\",\"signatures\":\"Packed bytes array of order signatures\",\"signer\":\"Address of the alleged signer\"},\"returns\":{\"authorized\":\"Validity of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_hashToSign(bytes32)\":{\"notice\":\"Create an EIP712 hash to sign\"},\"cancelTrades((bytes32,uint256,uint256)[])\":{\"notice\":\"Cancel listings by recording their fulfillment\"},\"hashListing((uint256,uint256,uint256,uint256))\":{\"notice\":\"Create a hash of a Listing struct\"},\"hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)\":{\"notice\":\"Create an EIP712 hash of an Order\"},\"hashTakeAsk(address)\":{\"notice\":\"Create a hash of TakeAsk calldata with an approved caller\"},\"hashTakeAskSingle(address)\":{\"notice\":\"Create a hash of TakeAskSingle calldata with an approved caller\"},\"hashTakeBid(address)\":{\"notice\":\"Create a hash of TakeBid calldata with an approved caller\"},\"hashTakeBidSingle(address)\":{\"notice\":\"Create a hash of TakeBidSingle calldata with an approved caller\"},\"incrementNonce()\":{\"notice\":\"Cancels all orders by incrementing caller nonce\"},\"information()\":{\"notice\":\"Return version and domain separator\"},\"setGovernor(address)\":{\"notice\":\"Admin only function to set the governor of the exchange\"},\"setProtocolFee(address,uint16)\":{\"notice\":\"Governor only function to set the protocol fee rate and recipient\"},\"takeAsk(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256)[],(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256))[],(address,uint16),bytes,address))\":{\"notice\":\"Wrapper of _takeAsk that verifies an oracle signature of the calldata before executing\"},\"takeAskPool(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256)[],(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256))[],(address,uint16),bytes,address),uint256)\":{\"notice\":\"Wrapper of takeAsk that withdraws ETH from the caller's pool balance prior to executing\"},\"takeAskSingle(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256)),(address,uint16),bytes,address))\":{\"notice\":\"Wrapper of _takeAskSingle that verifies an oracle signature of the calldata before executing\"},\"takeAskSinglePool(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256)),(address,uint16),bytes,address),uint256)\":{\"notice\":\"Wrapper of takeAskSingle that withdraws ETH from the caller's pool balance prior to executing\"},\"takeBid(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256)[],(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256))[],(address,uint16),bytes))\":{\"notice\":\"Wrapper of _takeBid that verifies an oracle signature of the calldata before executing\"},\"takeBidSingle(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256)),(address,uint16),bytes))\":{\"notice\":\"Wrapper of _takeBidSingle that verifies an oracle signature of the calldata before executing\"},\"verifyAuthorizationPublic(address,bytes32,bytes,uint256)\":{\"notice\":\"Verify EIP712 signature\"},\"verifyDomain()\":{\"notice\":\"Verify the domain separator produced during deployment of the implementation matches that of the proxy\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZeZuExchange.sol\":\"ZeZuExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"contracts/Executor.sol\":{\"keccak256\":\"0xb0ea3fa3283217cf0280de4e83c853b21a5af8a4d8f1bfa35b87d8f6a97db66d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0e3fc2228ca5a7a9c1b27b8cc502dd894794641f65e2639619484b135719839\",\"dweb:/ipfs/QmZiiFtKti1ccAqh2v7e8dNw7D8UMaJPQRP2SpD8AEET79\"]},\"contracts/Signatures.sol\":{\"keccak256\":\"0x20a94f66ba5db684d52632fd48d41adf0c3e5bde4e00d98d696752fdfb09aaf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eded42d14b8d838004326a365e6f9a12ab0efa918b73cb661069765ba4a7068c\",\"dweb:/ipfs/QmY989jks8FQMYKmccrEatxgugqqbh8cYW1dygEpoGeEEa\"]},\"contracts/Validation.sol\":{\"keccak256\":\"0x16a7f7648ad76a83938cc477bc316932b6f679d121a6cfa268df6a7f19c9eda2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43966b59d849574b4c607eff36ac3f2c5cb5271ec5fb6e72bf38db2272f75fa\",\"dweb:/ipfs/QmNm5hLFcGo7nmj8CPWL28pzWLjMwCrhLqgM51xRyXa7aD\"]},\"contracts/ZeZuExchange.sol\":{\"keccak256\":\"0x83173dc6b43ec5797b608fe58b60d183337dfd2cf3ca9fa271a11608c0063924\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e50e29c534b1730059cbcd70750dd3ec5f6113cb3fe4366ef2f932b71f0f960b\",\"dweb:/ipfs/QmQKhy7mP7ow8Z7rWVK9cchcZbgNT2z55Vz2XNDkLnGUE3\"]},\"contracts/interfaces/IDelegate.sol\":{\"keccak256\":\"0x737524908a5251b02f89bc95a3778844bfddb39c508a4c53e9628516a5d9829b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bec53c8d206413ba93295dee812091dfde89e9053452e87a701a09da1f824243\",\"dweb:/ipfs/QmWw3ageFdGRahfmHLnp6tgFZweUofLzrt6DosN283CoM8\"]},\"contracts/interfaces/IExecutor.sol\":{\"keccak256\":\"0xdb72b1682de0245b90e2319167391cba37c60237ac76fc3a1d9f953bea4da7f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13df1fe834f353b6dbbbc4d83dc2239793d4a9ac476d40f323653ca9e380acc8\",\"dweb:/ipfs/Qmd5RRcdLPZ7YKYte1FDXdt1jB6a5biWUZUHwh9hUs7fs5\"]},\"contracts/interfaces/ISignatures.sol\":{\"keccak256\":\"0x03fece8938f6df981a696b12ed380b3ba2399684eeb7b00dc4570803e30666a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d84bcfb92913b2a708495083ab478cbda79c9ebcb4863e36a5eb0131d3b1048\",\"dweb:/ipfs/QmYUYxnAAHeeV87nYKjMTxCT5vQHnmqr4gdmuHRGn23qCs\"]},\"contracts/interfaces/IValidation.sol\":{\"keccak256\":\"0x44116dca8e67e9d9bdefb57ed7cffea09f877a8375cb17604f9c83daa8c80756\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25cced53afd7464688c1c72d2df320f075315d1c27e0520894634bb84a36425f\",\"dweb:/ipfs/QmYhwizVB5en3TfsRhzHYBFrhQgexx4mMxTwLPAvYMxGFA\"]},\"contracts/interfaces/IZeZuExchange.sol\":{\"keccak256\":\"0x700147612d41865f69241153f8c65cf8c35ea751aad7eaecae0896ba7083eb22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284ab447aaa46d163c99ad3cba5008a741fe802b719d82b9de81a8707334239f\",\"dweb:/ipfs/QmWJK4hKAsoZwP8xiT1wFL5F2DCB3ACCtkMDobvZAvcLgp\"]},\"contracts/lib/Constants.sol\":{\"keccak256\":\"0x7009b28d484db28bb474d50562b4042e5bf905e1995ebbcb844853ee5ab64465\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://393fec1bd2cee0eeec2ac2e2116abd7b38526a458c31813d806202f0789c9e05\",\"dweb:/ipfs/Qme2eE9y7qbiDLJWHfxCDWiCv35qEfD36cnWiczDEx7S6D\"]},\"contracts/lib/Structs.sol\":{\"keccak256\":\"0x80a811dca1b3b525d5e4ea9226085ad840edf76d9a3e10794597b447983f2097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7229f5805bca82300713d093ecb376b14bb1c1b909efd85e412c69957b616bf8\",\"dweb:/ipfs/QmcvvG32oBgk3PSCywUZgmzfKoWbzZ2r779CaSyDjCENWL\"]}},\"version\":1}","zk_version":"1.3.14"},"storageLayout":{"storage":[{"astId":3760,"contract":"contracts/ZeZuExchange.sol:ZeZuExchange","label":"oracles","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":3764,"contract":"contracts/ZeZuExchange.sol:ZeZuExchange","label":"nonces","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":3766,"contract":"contracts/ZeZuExchange.sol:ZeZuExchange","label":"blockRange","offset":0,"slot":"2","type":"t_uint256"},{"astId":4383,"contract":"contracts/ZeZuExchange.sol:ZeZuExchange","label":"__gap","offset":0,"slot":"3","type":"t_array(t_uint256)47_storage"},{"astId":4414,"contract":"contracts/ZeZuExchange.sol:ZeZuExchange","label":"protocolFee","offset":0,"slot":"50","type":"t_struct(FeeRate)7142_storage"},{"astId":4422,"contract":"contracts/ZeZuExchange.sol:ZeZuExchange","label":"amountTaken","offset":0,"slot":"51","type":"t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256)))"},{"astId":4961,"contract":"contracts/ZeZuExchange.sol:ZeZuExchange","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":3724,"contract":"contracts/ZeZuExchange.sol:ZeZuExchange","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":1157,"contract":"contracts/ZeZuExchange.sol:ZeZuExchange","label":"_status","offset":0,"slot":"151","type":"t_uint256"},{"astId":4996,"contract":"contracts/ZeZuExchange.sol:ZeZuExchange","label":"governor","offset":0,"slot":"152","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256)))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(bytes32 => mapping(uint256 => uint256)))","numberOfBytes":"32","value":"t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(FeeRate)7142_storage":{"encoding":"inplace","label":"struct FeeRate","members":[{"astId":7139,"contract":"contracts/ZeZuExchange.sol:ZeZuExchange","label":"recipient","offset":0,"slot":"0","type":"t_address"},{"astId":7141,"contract":"contracts/ZeZuExchange.sol:ZeZuExchange","label":"rate","offset":20,"slot":"0","type":"t_uint16"}],"numberOfBytes":"32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ZeZuExchange.sol:ZeZuExchange\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[8]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_78\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.le\t@.BB0_38\n\tsub.s!\t@CPI0_42[0], r1, r2\n\tjump.le\t@.BB0_58\n\tsub.s!\t@CPI0_43[0], r1, r2\n\tjump.gt\t@.BB0_73\n\tsub.s!\t@CPI0_49[0], r1, r2\n\tjump.gt\t@.BB0_71\n\tsub.s!\t@CPI0_52[0], r1, r2\n\tjump.eq\t@.BB0_153\n\tsub.s!\t@CPI0_53[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t50, r0, r1\n\tsload\tr1, r1\n\tshr.s\t160, r1, r2\n\tand\t65535, r2, r2\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tand\t@CPI0_4[0], r1, r1\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_88[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tadd\t320, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\t351, r1, r2\n\tsub.s\t32, r0, r8\n\tand\tr2, r8, r2\n\tadd\t@CPI0_1[0], r2, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tjump.gt\t@.BB0_5\n.BB0_4:\n\tadd\t@CPI0_92[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_93[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_78:\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_5:\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_185\n\tadd\tr0, r0, r5\n.BB0_7:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t320, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_7\n.BB0_185:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t320, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_9:\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t320, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tld.1\t352, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tld.1\t64, r4\n\tadd\t32, r4, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t45, r4, r2\n\tadd\t@CPI0_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t57, r4, r2\n\tadd\t@CPI0_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t72, r4, r2\n\tadd\t@CPI0_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t88, r4, r2\n\tadd\t@CPI0_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t113, r4, r2\n\tadd\t@CPI0_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t82, r0, r2\n\tst.1\tr4, r2\n\tsub.s!\t@CPI0_11[0], r4, r2\n\tjump.gt\t@.BB0_4\n\tadd\t128, r4, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\t64, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tr4, r0, stack-[4]\n\tld.1\tr4, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr8, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r9\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r8\n\tadd\tstack-[4], r0, r3\n\tsub.s!\t@CPI0_13[0], r3, r1\n\tadd\tstack-[5], r0, r10\n\tjump.gt\t@.BB0_4\n\tadd\t224, r3, r1\n\tsub!\tr1, r10, r2\n\tjump.lt\t@.BB0_4\n\tst.1\t64, r1\n\tadd\t38, r0, r1\n\tst.1\tr10, r1\n\tadd\t192, r3, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t160, r3, r11\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\tr11, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t38, r1, r3\n\tadd\t@CPI0_17[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t53, r1, r3\n\tadd\t@CPI0_18[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t72, r1, r3\n\tadd\t@CPI0_19[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t93, r1, r3\n\tadd\t@CPI0_20[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t118, r1, r3\n\tadd\t@CPI0_21[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t141, r1, r3\n\tadd\t@CPI0_22[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t157, r1, r3\n\tadd\t@CPI0_23[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t174, r1, r3\n\tadd\t@CPI0_24[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t187, r1, r3\n\tadd\t@CPI0_25[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t203, r1, r3\n\tadd\t@CPI0_26[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t216, r1, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t217, r1, r3\n\tld.1\tr10, r4\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_19\n\tadd\tr0, r0, r5\n.BB0_18:\n\tadd\tr5, r3, r6\n\tadd\t32, r5, r5\n\tadd\tr5, r10, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_18\n.BB0_19:\n\tadd\tr4, r3, r3\n\tst.1\tr3, r0\n\tsub\tr3, r1, r3\n\tsub.s\t32, r3, r4\n\tst.1\tr1, r4\n\tadd\t31, r3, r3\n\tand\tr3, r9, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_27[0], r3, r5\n\tjump.gt\t@.BB0_4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_4\n\tadd\tr11, r0, stack-[4]\n\tadd\tr8, r0, stack-[3]\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r8\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r10\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_28[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t47, r1, r3\n\tadd\t@CPI0_17[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t62, r1, r3\n\tadd\t@CPI0_18[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t81, r1, r3\n\tadd\t@CPI0_19[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t102, r1, r3\n\tadd\t@CPI0_20[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t127, r1, r3\n\tadd\t@CPI0_21[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t150, r1, r3\n\tadd\t@CPI0_22[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t166, r1, r3\n\tadd\t@CPI0_23[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t183, r1, r3\n\tadd\t@CPI0_24[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t196, r1, r3\n\tadd\t@CPI0_25[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t212, r1, r3\n\tadd\t@CPI0_29[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t226, r1, r3\n\tadd\t@CPI0_30[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t246, r1, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t247, r1, r3\n\tadd\tstack-[5], r0, r9\n\tld.1\tr9, r4\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_25\n\tadd\tr0, r0, r5\n.BB0_24:\n\tadd\tr5, r3, r6\n\tadd\t32, r5, r5\n\tadd\tr5, r9, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_24\n.BB0_25:\n\tadd\tr4, r3, r3\n\tst.1\tr3, r0\n\tsub\tr3, r1, r3\n\tsub.s\t32, r3, r4\n\tst.1\tr1, r4\n\tadd\t31, r3, r3\n\tand\tr3, r8, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_27[0], r3, r5\n\tjump.gt\t@.BB0_4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_4\n\tadd\tr10, r0, stack-[2]\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\tstack-[5], r0, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r3, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t13, r0, r2\n\tst.1.inc\tr1, r2, r1\n\tadd\t@CPI0_32[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_33[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t3, r0, r2\n\tst.1.inc\tr1, r2, r1\n\tadd\t@CPI0_34[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_35[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tld.1\t64, r3\n\tadd\t96, r3, r2\n\tst.1\tr2, r1\n\tadd\t64, r3, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[4]\n\tadd\t32, r3, r2\n\tadd\tstack-[3], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r4\n\tadd\t160, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tst.1\tr2, r1\n\tadd\t160, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\tr4, r1\n\tsub.s!\t@CPI0_38[0], r4, r1\n\tadd\tstack-[2], r0, r3\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[4], r0, r2\n\tadd\t192, r2, r1\n\tst.1\t64, r1\n\tld.1\tr2, r2\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tst.1\t224, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t192, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t160, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t128, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t256, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t288, r1\n\tadd\t1, r0, r1\n\tadd\t151, r0, r2\n\tsstore\tr2, r1\n\tadd\t152, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_39[0], r2, r2\n\tcontext.caller\tr3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tld.1\t160, r2\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tadd\t64, r0, r2\n\tld.1\t192, r3\n\tst.2\t448, r2\n\tst.2\t480, r3\n\tadd\t96, r0, r2\n\tld.1\t224, r3\n\tst.2\t512, r2\n\tst.2\t544, r3\n\tadd\t128, r0, r2\n\tld.1\t256, r3\n\tst.2\t576, r2\n\tst.2\t608, r3\n\tld.1\t288, r2\n\tadd\tstack-[3], r0, r3\n\tst.2\t640, r3\n\tst.2\t672, r2\n\tst.2\t256, r1\n\tadd\t6, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_38:\n\tsub.s!\t@CPI0_63[0], r1, r2\n\tjump.gt\t@.BB0_48\n\tsub.s!\t@CPI0_73[0], r1, r2\n\tjump.le\t@.BB0_40\n\tsub.s!\t@CPI0_74[0], r1, r2\n\tjump.gt\t@.BB0_46\n\tsub.s!\t@CPI0_77[0], r1, r2\n\tjump.eq\t@.BB0_84\n\tsub.s!\t@CPI0_78[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_4[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r6\n\tsub.s!\t65535, r6, r1\n\tjump.gt\t@.BB0_2\n\tadd\t152, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_93\n\tld.1\t64, r1\n\tsub.s!\t501, r6, r2\n\tjump.lt\t@.BB0_96\n\tadd\t@CPI0_100[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_96[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_58:\n\tsub.s!\t@CPI0_54[0], r1, r2\n\tjump.le\t@.BB0_59\n\tsub.s!\t@CPI0_55[0], r1, r2\n\tjump.gt\t@.BB0_65\n\tsub.s!\t@CPI0_58[0], r1, r2\n\tjump.eq\t@.BB0_139\n\tsub.s!\t@CPI0_59[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t128, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tnear_call\tr0, @finalize_allocation_17451, @DEFAULT_UNWIND\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r3\n\tst.1.inc\tr3, r1, r1\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\tr1, r2\n\tadd\t68, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t64, r3, r2\n\tst.1\tr2, r1\n\tadd\t100, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r4\n\tadd\t96, r3, r2\n\tadd\tr3, r0, r1\n\tst.1\tr2, r4\n\tnear_call\tr0, @fun_hashListing, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_48:\n\tsub.s!\t@CPI0_64[0], r1, r2\n\tjump.le\t@.BB0_49\n\tsub.s!\t@CPI0_65[0], r1, r2\n\tjump.gt\t@.BB0_55\n\tsub.s!\t@CPI0_68[0], r1, r2\n\tjump.eq\t@.BB0_120\n\tsub.s!\t@CPI0_69[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @external_fun_hashOfferCollection, @DEFAULT_UNWIND\n.BB0_73:\n\tsub.s!\t@CPI0_44[0], r1, r2\n\tjump.gt\t@.BB0_76\n\tsub.s!\t@CPI0_47[0], r1, r2\n\tjump.eq\t@.BB0_165\n\tsub.s!\t@CPI0_48[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r5\n\tsub.s!\t@CPI0_4[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tadd\t152, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_4[0], r2, r3\n\tcontext.caller\tr4\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB0_172\n\tand\t@CPI0_39[0], r2, r2\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_87[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_98\n\tjump\t@.BB0_2\n.BB0_40:\n\tsub.s!\t@CPI0_79[0], r1, r2\n\tjump.eq\t@.BB0_79\n\tsub.s!\t@CPI0_80[0], r1, r2\n\tjump.eq\t@.BB0_80\n\tsub.s!\t@CPI0_81[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @external_fun_takeAsk, @DEFAULT_UNWIND\n.BB0_59:\n\tsub.s!\t@CPI0_60[0], r1, r2\n\tjump.eq\t@.BB0_129\n\tsub.s!\t@CPI0_61[0], r1, r2\n\tjump.eq\t@.BB0_133\n\tsub.s!\t@CPI0_62[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @external_fun_takeBid, @DEFAULT_UNWIND\n.BB0_49:\n\tsub.s!\t@CPI0_70[0], r1, r2\n\tjump.eq\t@.BB0_117\n\tsub.s!\t@CPI0_71[0], r1, r2\n\tjump.eq\t@.BB0_118\n\tsub.s!\t@CPI0_72[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @external_fun_hashOrder, @DEFAULT_UNWIND\n.BB0_71:\n\tsub.s!\t@CPI0_50[0], r1, r2\n\tjump.eq\t@.BB0_160\n\tsub.s!\t@CPI0_51[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tsub.s\t96, r2, r2\n\tadd\t128, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_46:\n\tsub.s!\t@CPI0_75[0], r1, r2\n\tjump.eq\t@.BB0_99\n\tsub.s!\t@CPI0_76[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI0_3[0], r0, r3\n\tsub.s!\t32, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_3[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_27[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_3[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_3[0], r1, r1\n\tand\t@CPI0_3[0], r4, r4\n\tsub!\tr4, r1, r7\n\tadd.ge\tr0, r0, r5\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr6, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r1\n\tptr.add\tr3, r1, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI0_27[0], r4, r1\n\tjump.gt\t@.BB0_4\n\tshl.s\t5, r4, r1\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_27[0], r3, r6\n\tjump.gt\t@.BB0_4\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r3\n\tst.1\tr1, r4\n\tadd\t36, r2, r2\n\tmul\t96, r4, r3, r5\n\tadd\tr3, r2, r3\n\tadd\tstack[@calldatasize], r0, r5\n\tsub!\tr3, r5, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_114\n\tadd\tr1, r0, r4\n.BB0_113:\n\tsub\tstack[@calldatasize], r2, r5\n\tadd\t@CPI0_3[0], r0, r6\n\tsub.s!\t96, r5, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr6, r0, r7\n\tand\t@CPI0_3[0], r5, r5\n\tsub!\tr5, r0, r8\n\tadd.le\tr0, r0, r6\n\tsub.s!\t@CPI0_3[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_94[0], r5, r6\n\tjump.gt\t@.BB0_4\n\tadd\t32, r4, r4\n\tadd\t96, r5, r6\n\tst.1\t64, r6\n\tptr.add\tstack[@ptr_calldata], r2, r6\n\tld\tr6, r6\n\tst.1.inc\tr5, r6, r6\n\tadd\t32, r2, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t64, r2, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t64, r5, r7\n\tst.1\tr7, r6\n\tst.1\tr4, r5\n\tadd\t96, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_113\n.BB0_114:\n\tnear_call\tr0, @fun_cancelTrades, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_65:\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.eq\t@.BB0_146\n\tsub.s!\t@CPI0_57[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_55:\n\tsub.s!\t@CPI0_66[0], r1, r2\n\tjump.eq\t@.BB0_127\n\tsub.s!\t@CPI0_67[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @external_fun_verifyDomain, @DEFAULT_UNWIND\n.BB0_76:\n\tsub.s!\t@CPI0_45[0], r1, r2\n\tjump.eq\t@.BB0_174\n\tsub.s!\t@CPI0_46[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_31[0], r2, r1\n\tjump.gt\t@.BB0_4\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t32, r2, r1\n\tadd\t@CPI0_34[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t3, r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r0, r3\n\tld.1\t64, r4\n\tst.1.inc\tr4, r3, r3\n\tadd\tr3, r0, stack-[7]\n\tld.1\tr2, r6\n\tadd\t64, r4, r2\n\tst.1\tr2, r6\n\tadd\tr4, r0, stack-[8]\n\tadd\t96, r4, r2\n\tsub!\tr6, r0, r3\n\tjump.eq\t@.BB0_183\n\tadd\tr0, r0, r3\n.BB0_182:\n\tadd\tr3, r2, r4\n\tadd\tr3, r1, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r6, r4\n\tjump.lt\t@.BB0_182\n.BB0_183:\n\tadd\tr6, r2, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_82[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t96, r0, r1\n\tst.2\t36, r1\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r2\n\tadd\tr6, r0, stack-[6]\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[6], r0, r1\n\tadd\t127, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[8], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_153:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tsub.s\t96, r2, r2\n\tadd\t128, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_84:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tsub.s\t96, r2, r2\n\tadd\t128, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_139:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_120:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_89[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_125\n\tadd\t@CPI0_92[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_93[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_165:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_hashToSign, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_79:\n\tnear_call\tr0, @external_fun_takeBidSingle, @DEFAULT_UNWIND\n.BB0_80:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t152, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_129:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tsub.s\t96, r2, r2\n\tadd\t128, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_133:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI0_3[0], r0, r3\n\tsub.s!\t128, r1, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[8]\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_27[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_bytes, @DEFAULT_UNWIND\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr1, r0, stack-[7]\n\tadd\tr2, r0, r1\n\tnear_call\tr0, @fun_hashToSign, @DEFAULT_UNWIND\n\tadd\t100, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tmul\t65, r2, r2, r3\n\tadd\tstack-[7], r0, r3\n\tadd\tr2, r3, r2\n\tadd\t32, r2, r3\n\tld.1\tr3, r4\n\tadd\tr4, r0, stack-[6]\n\tadd\t64, r2, r3\n\tld.1\tr3, r5\n\tadd\tr5, r0, stack-[5]\n\tadd\t96, r2, r2\n\tld.1\tr2, r2\n\tshr.s\t248, r2, r3\n\tadd\tr3, r0, stack-[7]\n\tadd\tr1, r0, r2\n\tadd\tstack-[8], r0, r1\n\tnear_call\tr0, @fun_verify, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[7], r0, r5\n\tnear_call\tr0, @abi_encode_bool_bytes32_bytes32_uint8, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_117:\n\tnear_call\tr0, @external_fun_takeAskSingle, @DEFAULT_UNWIND\n.BB0_118:\n\tnear_call\tr0, @external_fun_takeAskPool, @DEFAULT_UNWIND\n.BB0_160:\n\tnear_call\tr0, @external_fun_takeAskSinglePool, @DEFAULT_UNWIND\n.BB0_99:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\t68, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_146:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_127:\n\tnear_call\tr0, @external_fun_takeCollectionOffer, @DEFAULT_UNWIND\n.BB0_174:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_176\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_176:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI0_82[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t96, r0, r1\n\tst.2\t36, r1\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_172:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_84[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t13, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_85[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_86[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_125:\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_90[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_91[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_98:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_93:\n\tld.1\t64, r1\n\tadd\t@CPI0_95[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_96[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_96:\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tadd\t64, r1, r1\n\tst.1\t64, r1\n\tadd\t50, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_39[0], r2, r2\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tshl.s\t160, r6, r2\n\tand\t@CPI0_97[0], r2, r2\n\tsload\tr1, r3\n\tand\t@CPI0_98[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_99[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_98\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__system_request:\n.func_begin2:\n\tadd\tr1, r0, r3\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI2_0[0], r4, r5\n\tadd.lt\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t96, r2, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI2_1[0], r1, r1\n\tadd\tr3, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_2\n\tld\tr1, r1\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation_17451:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t128, r1, r1\n\tst.1\t64, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation_50147:\n.func_begin4:\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tjump.ge\t@.BB4_1\n\tadd\t416, r1, r1\n\tst.1\t64, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfinalize_allocation_50148:\n.func_begin5:\n\tsub.s!\t@CPI5_0[0], r1, r2\n\tjump.ge\t@.BB5_1\n\tadd\t384, r1, r1\n\tst.1\t64, r1\n\tret\n.BB5_1:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_struct_Order_17494:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t287, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tld.1\t64, r1\n\tsub.s!\t@CPI6_1[0], r1, r2\n\tjump.ge\t@.BB6_3\n\tadd\t256, r1, r2\n\tst.1\t64, r2\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI6_2[0], r2, r3\n\tjump.gt\t@.BB6_1\n\tst.1.inc\tr1, r2, r2\n\tadd\t36, r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI6_2[0], r3, r4\n\tjump.gt\t@.BB6_1\n\tst.1\tr2, r3\n\tadd\t68, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tadd\t100, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t96, r1, r3\n\tst.1\tr3, r2\n\tadd\t128, r1, r2\n\tadd\t132, r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tst.1\tr2, r3\n\tadd\t164, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t1, r2, r3\n\tjump.gt\t@.BB6_1\n\tadd\t160, r1, r3\n\tst.1\tr3, r2\n\tld.1\t64, r2\n\tsub.s!\t@CPI6_3[0], r2, r3\n\tjump.gt\t@.BB6_3\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tadd\t196, r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI6_2[0], r3, r4\n\tjump.gt\t@.BB6_1\n\tst.1.inc\tr2, r3, r3\n\tadd\t228, r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tsub.s!\t65535, r4, r5\n\tjump.gt\t@.BB6_1\n\tst.1\tr3, r4\n\tadd\t192, r1, r3\n\tst.1\tr3, r2\n\tadd\t260, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t224, r1, r3\n\tst.1\tr3, r2\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_3:\n\tadd\t@CPI6_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_bytes:\n.func_begin7:\n\tadd\tr1, r0, r3\n\tadd\t31, r3, r1\n\tadd\t@CPI7_0[0], r0, r4\n\tsub!\tr1, r2, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI7_0[0], r2, r6\n\tand\t@CPI7_0[0], r1, r1\n\tsub!\tr1, r6, r7\n\tadd.le\tr0, r0, r4\n\txor\tr1, r6, r1\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr4, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r3, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI7_1[0], r4, r1\n\tjump.ge\t@.BB7_3\n\tadd\t63, r4, r1\n\tsub.s\t32, r0, r5\n\tand\tr1, r5, r5\n\tld.1\t64, r1\n\tadd\tr1, r5, r5\n\tsub!\tr5, r1, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI7_2[0], r5, r7\n\tjump.gt\t@.BB7_3\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB7_3\n\tst.1\t64, r5\n\tst.1.inc\tr1, r4, r5\n\tadd\t32, r3, r3\n\tadd\tr3, r4, r6\n\tsub!\tr6, r2, r2\n\tjump.gt\t@.BB7_1\n\tand\t31, r4, r2\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB7_12\n\tadd\tr0, r0, r7\n.BB7_9:\n\tshl.s\t5, r7, r8\n\tadd\tr5, r8, r9\n\tptr.add\tr3, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB7_9\n.BB7_12:\n\tsub!\tr2, r0, r7\n\tjump.eq\t@.BB7_11\n\tshl.s\t5, r6, r6\n\tptr.add\tr3, r6, r3\n\tadd\tr5, r6, r5\n\tshl.s\t3, r2, r2\n\tld.1\tr5, r6\n\tshl\tr6, r2, r6\n\tshr\tr6, r2, r6\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r6, r2\n\tst.1\tr5, r2\n.BB7_11:\n\tadd\tr4, r1, r2\n\tadd\t32, r2, r2\n\tst.1\tr2, r0\n\tret\n.BB7_3:\n\tadd\t@CPI7_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nexternal_fun_takeBidSingle:\n.func_begin8:\n\tnop\tstack+=[1]\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB8_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r2\n\tadd\t@CPI8_0[0], r0, r1\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI8_0[0], r2, r4\n\tsub!\tr4, r0, r5\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI8_0[0], r4, r4\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB8_3\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_3:\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tjump.gt\t@.BB8_1\n\tsub\tr2, r1, r2\n\tadd\t@CPI8_0[0], r0, r3\n\tsub.s!\t416, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI8_0[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI8_0[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r15\n\tsub.s!\t@CPI8_2[0], r15, r2\n\tjump.ge\t@.BB8_6\n\tadd\t128, r15, r3\n\tst.1\t64, r3\n\tadd\t4, r1, r2\n\tadd\tstack[@calldatasize], r0, r4\n\tsub\tr4, r2, r5\n\tadd\t@CPI8_0[0], r0, r6\n\tsub.s!\t288, r5, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr6, r0, r7\n\tand\t@CPI8_0[0], r5, r5\n\tsub!\tr5, r0, r8\n\tadd.le\tr0, r0, r6\n\tsub.s!\t@CPI8_0[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB8_1\n\tsub.s!\t@CPI8_3[0], r15, r5\n\tjump.le\t@.BB8_9\n.BB8_6:\n\tadd\t@CPI8_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_9:\n\tadd\t384, r15, r5\n\tst.1\t64, r5\n\tptr.add\tstack[@ptr_calldata], r2, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI8_4[0], r5, r6\n\tjump.gt\t@.BB8_1\n\tst.1\tr3, r5\n\tadd\t36, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI8_4[0], r5, r6\n\tjump.gt\t@.BB8_1\n\tadd\t160, r15, r6\n\tst.1\tr6, r5\n\tadd\t68, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t192, r15, r6\n\tst.1\tr6, r5\n\tadd\t100, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t224, r15, r6\n\tst.1\tr6, r5\n\tadd\t256, r15, r5\n\tadd\t132, r1, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t164, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t1, r5, r6\n\tjump.gt\t@.BB8_1\n\tadd\t288, r15, r6\n\tst.1\tr6, r5\n\tadd\t196, r1, r5\n\tsub\tr4, r5, r4\n\tadd\t@CPI8_0[0], r0, r6\n\tsub.s!\t64, r4, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr6, r0, r7\n\tand\t@CPI8_0[0], r4, r4\n\tsub!\tr4, r0, r8\n\tadd.le\tr0, r0, r6\n\tsub.s!\t@CPI8_0[0], r4, r4\n\tadd\tr7, r0, r4\n\tadd.eq\tr6, r0, r4\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r4\n\tsub.s!\t@CPI8_5[0], r4, r6\n\tjump.gt\t@.BB8_6\n\tadd\t64, r4, r6\n\tst.1\t64, r6\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI8_4[0], r5, r6\n\tjump.gt\t@.BB8_1\n\tst.1.inc\tr4, r5, r5\n\tadd\t228, r1, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tsub.s!\t65535, r6, r7\n\tjump.gt\t@.BB8_1\n\tst.1\tr5, r6\n\tadd\t320, r15, r5\n\tst.1\tr5, r4\n\tadd\t260, r1, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tst.1.inc\tr15, r3, r3\n\tadd\t352, r15, r5\n\tst.1\tr5, r4\n\tadd\t292, r1, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI8_1[0], r4, r5\n\tjump.gt\t@.BB8_1\n\tadd\tr4, r1, r4\n\tadd\t4, r4, r8\n\tadd\tstack[@calldatasize], r0, r6\n\tsub\tr6, r8, r5\n\tadd\t@CPI8_0[0], r0, r7\n\tsub.s!\t256, r5, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr7, r0, r9\n\tand\t@CPI8_0[0], r5, r5\n\tsub!\tr5, r0, r10\n\tadd.le\tr0, r0, r7\n\tsub.s!\t@CPI8_0[0], r5, r5\n\tadd\tr9, r0, r5\n\tadd.eq\tr7, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r5\n\tsub.s!\t@CPI8_6[0], r5, r7\n\tjump.gt\t@.BB8_6\n\tadd\t128, r5, r7\n\tst.1\t64, r7\n\tptr.add\tstack[@ptr_calldata], r8, r7\n\tld\tr7, r7\n\tst.1.inc\tr5, r7, r7\n\tadd\t36, r4, r10\n\tptr.add\tstack[@ptr_calldata], r0, r9\n\tptr.add\tr9, r10, r10\n\tld\tr10, r10\n\tsub.s!\t@CPI8_1[0], r10, r11\n\tjump.gt\t@.BB8_1\n\tadd\tr10, r8, r8\n\tadd\t31, r8, r10\n\tadd\t@CPI8_0[0], r0, r11\n\tsub!\tr10, r6, r12\n\tadd\tr0, r0, r12\n\tadd.ge\tr11, r0, r12\n\tand\t@CPI8_0[0], r10, r10\n\tand\t@CPI8_0[0], r6, r13\n\tsub!\tr10, r13, r14\n\tadd.ge\tr0, r0, r11\n\txor\tr10, r13, r10\n\tsub.s!\t@CPI8_0[0], r10, r10\n\tadd\tr12, r0, r10\n\tadd.eq\tr11, r0, r10\n\tsub!\tr10, r0, r10\n\tjump.ne\t@.BB8_1\n\tptr.add\tr9, r8, r9\n\tld\tr9, r10\n\tsub.s!\t@CPI8_1[0], r10, r9\n\tjump.gt\t@.BB8_6\n\tshl.s\t5, r10, r11\n\tadd\t63, r11, r9\n\tsub.s\t32, r0, r12\n\tand\tr9, r12, r12\n\tld.1\t64, r9\n\tadd\tr9, r12, r12\n\tsub!\tr12, r9, r13\n\tadd\t0, r0, r13\n\tadd.lt\t1, r0, r13\n\tsub.s!\t@CPI8_1[0], r12, r14\n\tjump.gt\t@.BB8_6\n\tand!\t1, r13, r13\n\tjump.ne\t@.BB8_6\n\tst.1\t64, r12\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tadd\tr11, r8, r11\n\tsub!\tr11, r6, r12\n\tjump.gt\t@.BB8_1\n\tsub!\tr10, r0, r10\n\tjump.eq\t@.BB8_28\n\tadd\tr9, r0, r10\n.BB8_27:\n\tptr.add\tstack[@ptr_calldata], r8, r12\n\tld\tr12, r12\n\tadd\t32, r10, r10\n\tst.1\tr10, r12\n\tadd\t32, r8, r8\n\tsub!\tr8, r11, r12\n\tjump.lt\t@.BB8_27\n.BB8_28:\n\tst.1\tr7, r9\n\tadd\t68, r4, r8\n\tsub\tr6, r8, r7\n\tadd\t@CPI8_0[0], r0, r9\n\tsub.s!\t128, r7, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr9, r0, r10\n\tand\t@CPI8_0[0], r7, r7\n\tsub!\tr7, r0, r11\n\tadd.le\tr0, r0, r9\n\tsub.s!\t@CPI8_0[0], r7, r7\n\tadd\tr10, r0, r7\n\tadd.eq\tr9, r0, r7\n\tsub!\tr7, r0, r7\n\tadd\tr15, r0, r12\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r7\n\tsub.s!\t@CPI8_6[0], r7, r9\n\tjump.gt\t@.BB8_6\n\tadd\t128, r7, r9\n\tst.1\t64, r9\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tst.1.inc\tr7, r8, r8\n\tadd\t100, r4, r9\n\tptr.add\tstack[@ptr_calldata], r9, r9\n\tld\tr9, r9\n\tst.1\tr8, r9\n\tadd\t132, r4, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tadd\t64, r7, r9\n\tst.1\tr9, r8\n\tadd\t196, r4, r8\n\tsub\tr6, r8, r6\n\tadd\t@CPI8_0[0], r0, r9\n\tsub.s!\t64, r6, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr9, r0, r10\n\tand\t@CPI8_0[0], r6, r6\n\tsub!\tr6, r0, r11\n\tadd.le\tr0, r0, r9\n\tsub.s!\t@CPI8_0[0], r6, r6\n\tadd\tr10, r0, r6\n\tadd.eq\tr9, r0, r6\n\tadd\t164, r4, r9\n\tptr.add\tstack[@ptr_calldata], r9, r9\n\tld\tr9, r9\n\tadd\t96, r7, r10\n\tst.1\tr10, r9\n\tadd\t64, r5, r9\n\tst.1\tr9, r7\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r6\n\tsub.s!\t@CPI8_5[0], r6, r7\n\tjump.gt\t@.BB8_6\n\tadd\t64, r6, r7\n\tst.1\t64, r7\n\tptr.add\tstack[@ptr_calldata], r8, r7\n\tld\tr7, r7\n\tst.1.inc\tr6, r7, r7\n\tadd\t228, r4, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tst.1\tr7, r4\n\tadd\t96, r5, r4\n\tst.1\tr4, r6\n\tst.1\tr3, r5\n\tadd\t324, r1, r4\n\tadd\t@CPI8_0[0], r0, r3\n\tsub\tstack[@calldatasize], r4, r5\n\tsub.s!\t64, r5, r6\n\tadd\tr0, r0, r6\n\tadd.lt\tr3, r0, r6\n\tand\t@CPI8_0[0], r5, r5\n\tsub!\tr5, r0, r7\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI8_0[0], r5, r5\n\tadd.ne\tr6, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB8_1\n\tld.1\t64, r3\n\tsub.s!\t@CPI8_5[0], r3, r5\n\tjump.gt\t@.BB8_6\n\tadd\t64, r3, r5\n\tst.1\t64, r5\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI8_4[0], r4, r5\n\tjump.gt\t@.BB8_1\n\tst.1.inc\tr3, r4, r4\n\tadd\t356, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t65535, r5, r6\n\tjump.gt\t@.BB8_1\n\tst.1\tr4, r5\n\tadd\t64, r12, r4\n\tst.1\tr4, r3\n\tadd\t388, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tjump.gt\t@.BB8_1\n\tadd\tr2, r1, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\tr12, r0, stack-[1]\n\tnear_call\tr0, @abi_decode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r3\n\tadd\t96, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @fun_takeBidSingle, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end8:\n\nabi_decode_array_struct_Exchange_dyn:\n.func_begin9:\n\tnop\tstack+=[2]\n\tadd\t31, r1, r3\n\tadd\t@CPI9_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI9_0[0], r2, r6\n\tand\t@CPI9_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI9_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB9_1\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r5\n\tsub.s!\t@CPI9_1[0], r5, r3\n\tjump.ge\t@.BB9_3\n\tshl.s\t5, r5, r6\n\tadd\t63, r6, r3\n\tsub.s\t32, r0, r4\n\tadd\tr4, r0, stack-[2]\n\tand\tr3, r4, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r7\n\tadd\tr4, r0, stack-[1]\n\tsub!\tr7, r4, r3\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI9_2[0], r7, r3\n\tjump.gt\t@.BB9_3\n\tand!\t1, r8, r3\n\tjump.ne\t@.BB9_3\n\tst.1\t64, r7\n\tadd\tstack-[1], r0, r3\n\tst.1\tr3, r5\n\tadd\t32, r1, r5\n\tadd\tr5, r6, r6\n\tsub!\tr6, r2, r3\n\tjump.gt\t@.BB9_1\n\tsub!\tr5, r6, r3\n\tjump.ge\t@.BB9_10\n\tadd\tstack-[1], r0, r7\n.BB9_9:\n\tptr.add\tstack[@ptr_calldata], r5, r3\n\tld\tr3, r8\n\tsub.s!\t@CPI9_2[0], r8, r3\n\tjump.gt\t@.BB9_1\n\tadd\tr8, r1, r8\n\tadd\t32, r8, r11\n\tsub\tr2, r11, r3\n\tadd\t@CPI9_0[0], r0, r9\n\tsub.s!\t256, r3, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr9, r0, r10\n\tand\t@CPI9_0[0], r3, r3\n\tsub!\tr3, r0, r12\n\tadd.le\tr0, r0, r9\n\tsub.s!\t@CPI9_0[0], r3, r3\n\tadd\tr10, r0, r3\n\tadd.eq\tr9, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB9_1\n\tld.1\t64, r9\n\tsub.s!\t@CPI9_3[0], r9, r3\n\tjump.gt\t@.BB9_3\n\tadd\t128, r9, r3\n\tst.1\t64, r3\n\tptr.add\tstack[@ptr_calldata], r11, r3\n\tld\tr3, r3\n\tst.1.inc\tr9, r3, r10\n\tadd\t64, r8, r3\n\tptr.add\tstack[@ptr_calldata], r0, r13\n\tptr.add\tr13, r3, r3\n\tld\tr3, r12\n\tsub.s!\t@CPI9_2[0], r12, r3\n\tjump.gt\t@.BB9_1\n\tadd\tr12, r11, r12\n\tadd\t31, r12, r3\n\tadd\t@CPI9_0[0], r0, r11\n\tsub!\tr3, r2, r14\n\tadd\tr0, r0, r14\n\tadd.ge\tr11, r0, r14\n\tand\t@CPI9_0[0], r3, r3\n\tand\t@CPI9_0[0], r2, r15\n\tsub!\tr3, r15, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr11, r0, r4\n\txor\tr3, r15, r3\n\tsub.s!\t@CPI9_0[0], r3, r3\n\tadd\tr14, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB9_1\n\tptr.add\tr13, r12, r3\n\tld\tr3, r13\n\tsub.s!\t@CPI9_2[0], r13, r3\n\tjump.gt\t@.BB9_3\n\tshl.s\t5, r13, r14\n\tadd\t63, r14, r3\n\tadd\tstack-[2], r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r11\n\tadd\tr11, r3, r15\n\tsub!\tr15, r11, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI9_2[0], r15, r4\n\tjump.gt\t@.BB9_3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB9_3\n\tst.1\t64, r15\n\tst.1\tr11, r13\n\tadd\t32, r12, r12\n\tadd\tr14, r12, r13\n\tsub!\tr13, r2, r3\n\tjump.gt\t@.BB9_1\n\tsub!\tr12, r13, r3\n\tjump.ge\t@.BB9_22\n\tadd\tr11, r0, r14\n.BB9_21:\n\tptr.add\tstack[@ptr_calldata], r12, r3\n\tld\tr3, r3\n\tadd\t32, r14, r14\n\tst.1\tr14, r3\n\tadd\t32, r12, r12\n\tsub!\tr12, r13, r3\n\tjump.lt\t@.BB9_21\n.BB9_22:\n\tst.1\tr10, r11\n\tadd\t96, r8, r11\n\tsub\tr2, r11, r3\n\tadd\t@CPI9_0[0], r0, r4\n\tsub.s!\t128, r3, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr4, r0, r10\n\tand\t@CPI9_0[0], r3, r3\n\tsub!\tr3, r0, r12\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI9_0[0], r3, r3\n\tadd\tr10, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB9_1\n\tld.1\t64, r10\n\tsub.s!\t@CPI9_3[0], r10, r3\n\tjump.gt\t@.BB9_3\n\tadd\t128, r10, r3\n\tst.1\t64, r3\n\tptr.add\tstack[@ptr_calldata], r11, r3\n\tld\tr3, r3\n\tst.1.inc\tr10, r3, r3\n\tadd\t128, r8, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tst.1\tr3, r4\n\tadd\t160, r8, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\t64, r10, r4\n\tst.1\tr4, r3\n\tadd\t224, r8, r11\n\tsub\tr2, r11, r3\n\tadd\t@CPI9_0[0], r0, r4\n\tsub.s!\t64, r3, r12\n\tadd\tr0, r0, r12\n\tadd.lt\tr4, r0, r12\n\tand\t@CPI9_0[0], r3, r3\n\tsub!\tr3, r0, r13\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI9_0[0], r3, r3\n\tadd\tr12, r0, r3\n\tadd.eq\tr4, r0, r3\n\tadd\t192, r8, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tadd\t96, r10, r12\n\tst.1\tr12, r4\n\tadd\t64, r9, r4\n\tst.1\tr4, r10\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB9_1\n\tld.1\t64, r10\n\tsub.s!\t@CPI9_4[0], r10, r3\n\tjump.gt\t@.BB9_3\n\tadd\t32, r7, r7\n\tadd\t64, r10, r3\n\tst.1\t64, r3\n\tptr.add\tstack[@ptr_calldata], r11, r3\n\tld\tr3, r3\n\tst.1.inc\tr10, r3, r3\n\tadd\t256, r8, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tst.1\tr3, r4\n\tadd\t96, r9, r3\n\tst.1\tr3, r10\n\tst.1\tr7, r9\n\tadd\t32, r5, r5\n\tsub!\tr5, r6, r3\n\tjump.lt\t@.BB9_9\n.BB9_10:\n\tadd\tstack-[1], r0, r1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_3:\n\tadd\t@CPI9_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nexternal_fun_takeAsk:\n.func_begin10:\n\tnop\tstack+=[40]\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t31, r1, r4\n\tadd\tr0, r0, r4\n\tadd.gt\tr2, r0, r4\n\tand\t@CPI10_0[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB10_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[39]\n\tsub.s!\t@CPI10_1[0], r1, r1\n\tjump.gt\t@.BB10_1\n\tadd\tstack-[39], r0, r1\n\tadd\t4, r1, r1\n\tadd\tr1, r0, stack-[38]\n\tsub\tr3, r1, r1\n\tadd\t@CPI10_0[0], r0, r4\n\tsub.s!\t192, r1, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI10_0[0], r1, r1\n\tsub!\tr1, r0, r6\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr4, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB10_4\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_4:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[37]\n\tsub.s!\t@CPI10_2[0], r1, r1\n\tjump.lt\t@.BB10_6\n.BB10_5:\n\tadd\t@CPI10_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_6:\n\tadd\tstack-[37], r0, r1\n\tadd\t160, r1, r5\n\tst.1\t64, r5\n\tptr.add\tstack[@ptr_calldata], r0, r7\n\tadd\tstack-[38], r0, r1\n\tptr.add\tr7, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI10_1[0], r1, r4\n\tjump.gt\t@.BB10_1\n\tadd\tstack-[38], r0, r2\n\tadd\tr1, r2, r6\n\tadd\t31, r6, r1\n\tadd\t@CPI10_0[0], r0, r4\n\tsub!\tr1, r3, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr4, r0, r8\n\tand\t@CPI10_0[0], r1, r1\n\tand\t@CPI10_0[0], r3, r9\n\tsub!\tr1, r9, r10\n\tadd.ge\tr0, r0, r4\n\txor\tr1, r9, r1\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr8, r0, r1\n\tadd.eq\tr4, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB10_1\n\tptr.add\tr7, r6, r1\n\tld\tr1, r8\n\tsub.s!\t@CPI10_1[0], r8, r1\n\tjump.gt\t@.BB10_5\n\tshl.s\t5, r8, r1\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tadd\tr2, r0, stack-[40]\n\tand\tr1, r2, r1\n\tadd\tr1, r5, r1\n\tsub.s!\t@CPI10_1[0], r1, r4\n\tjump.gt\t@.BB10_5\n\tst.1\t64, r1\n\tst.1\tr5, r8\n\tadd\t32, r6, r6\n\tmul\t288, r8, r1, r4\n\tadd\tr1, r6, r7\n\tsub!\tr7, r3, r1\n\tjump.gt\t@.BB10_1\n\tsub!\tr8, r0, r1\n\tjump.ne\t@.BB10_12\n.BB10_23:\n\tadd\tstack-[37], r0, r1\n\tst.1.inc\tr1, r5, r1\n\tadd\tr1, r0, stack-[36]\n\tadd\tstack-[39], r0, r1\n\tadd\t36, r1, r1\n\tptr.add\tstack[@ptr_calldata], r0, r7\n\tptr.add\tr7, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI10_1[0], r1, r4\n\tjump.gt\t@.BB10_1\n\tadd\tstack-[38], r0, r2\n\tadd\tr1, r2, r6\n\tadd\t31, r6, r1\n\tadd\t@CPI10_0[0], r0, r4\n\tsub!\tr1, r3, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI10_0[0], r1, r1\n\tand\t@CPI10_0[0], r3, r8\n\tsub!\tr1, r8, r9\n\tadd.ge\tr0, r0, r4\n\txor\tr1, r8, r1\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr4, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB10_1\n\tptr.add\tr7, r6, r1\n\tld\tr1, r7\n\tsub.s!\t@CPI10_1[0], r7, r1\n\tjump.gt\t@.BB10_5\n\tshl.s\t5, r7, r9\n\tadd\t63, r9, r1\n\tadd\tstack-[40], r0, r2\n\tand\tr1, r2, r1\n\tld.1\t64, r2\n\tadd\tr2, r1, r5\n\tadd\tr2, r0, stack-[35]\n\tsub!\tr5, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI10_1[0], r5, r4\n\tjump.gt\t@.BB10_5\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB10_5\n\tst.1\t64, r5\n\tadd\tstack-[35], r0, r1\n\tst.1\tr1, r7\n\tadd\t32, r6, r8\n\tadd\tr9, r8, r9\n\tsub!\tr9, r3, r1\n\tjump.gt\t@.BB10_1\n\tsub!\tr8, r9, r1\n\tjump.ge\t@.BB10_48\n\tadd\tstack-[35], r0, r10\n.BB10_31:\n\tptr.add\tstack[@ptr_calldata], r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI10_1[0], r1, r4\n\tjump.gt\t@.BB10_1\n\tadd\tr1, r6, r11\n\tadd\t32, r11, r14\n\tsub\tr3, r14, r1\n\tadd\t@CPI10_0[0], r0, r4\n\tsub.s!\t256, r1, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI10_0[0], r1, r1\n\tsub!\tr1, r0, r7\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr4, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB10_1\n\tld.1\t64, r12\n\tsub.s!\t@CPI10_6[0], r12, r1\n\tjump.gt\t@.BB10_5\n\tadd\t128, r12, r1\n\tst.1\t64, r1\n\tptr.add\tstack[@ptr_calldata], r14, r1\n\tld\tr1, r1\n\tst.1.inc\tr12, r1, r13\n\tadd\t64, r11, r1\n\tptr.add\tstack[@ptr_calldata], r0, r7\n\tptr.add\tr7, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI10_1[0], r1, r4\n\tjump.gt\t@.BB10_1\n\tadd\tr1, r14, r15\n\tadd\t31, r15, r1\n\tadd\t@CPI10_0[0], r0, r4\n\tsub!\tr1, r3, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI10_0[0], r1, r1\n\tand\t@CPI10_0[0], r3, r14\n\tsub!\tr1, r14, r2\n\tadd\tr0, r0, r2\n\tadd.lt\tr4, r0, r2\n\txor\tr1, r14, r1\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB10_1\n\tptr.add\tr7, r15, r1\n\tld\tr1, r7\n\tsub.s!\t@CPI10_1[0], r7, r1\n\tjump.gt\t@.BB10_5\n\tshl.s\t5, r7, r5\n\tadd\t63, r5, r1\n\tadd\tstack-[40], r0, r2\n\tand\tr1, r2, r1\n\tld.1\t64, r14\n\tadd\tr14, r1, r1\n\tsub!\tr1, r14, r2\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI10_1[0], r1, r2\n\tjump.gt\t@.BB10_5\n\tand!\t1, r4, r2\n\tjump.ne\t@.BB10_5\n\tst.1\t64, r1\n\tst.1\tr14, r7\n\tadd\t32, r15, r15\n\tadd\tr5, r15, r7\n\tsub!\tr7, r3, r1\n\tjump.gt\t@.BB10_1\n\tsub!\tr15, r7, r1\n\tjump.ge\t@.BB10_43\n\tadd\tr14, r0, r5\n.BB10_42:\n\tptr.add\tstack[@ptr_calldata], r15, r1\n\tld\tr1, r1\n\tadd\t32, r5, r5\n\tst.1\tr5, r1\n\tadd\t32, r15, r15\n\tsub!\tr15, r7, r1\n\tjump.lt\t@.BB10_42\n.BB10_43:\n\tst.1\tr13, r14\n\tadd\t96, r11, r7\n\tsub\tr3, r7, r1\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t128, r1, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI10_0[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB10_1\n\tld.1\t64, r13\n\tsub.s!\t@CPI10_6[0], r13, r1\n\tjump.gt\t@.BB10_5\n\tadd\t128, r13, r1\n\tst.1\t64, r1\n\tptr.add\tstack[@ptr_calldata], r7, r1\n\tld\tr1, r1\n\tst.1.inc\tr13, r1, r1\n\tadd\t128, r11, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\tr1, r2\n\tadd\t160, r11, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t64, r13, r2\n\tst.1\tr2, r1\n\tadd\t224, r11, r14\n\tsub\tr3, r14, r1\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t64, r1, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI10_0[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tadd\t192, r11, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t96, r13, r4\n\tst.1\tr4, r2\n\tadd\t64, r12, r2\n\tst.1\tr2, r13\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB10_1\n\tld.1\t64, r5\n\tsub.s!\t@CPI10_5[0], r5, r1\n\tjump.gt\t@.BB10_5\n\tadd\t32, r10, r10\n\tadd\t64, r5, r1\n\tst.1\t64, r1\n\tptr.add\tstack[@ptr_calldata], r14, r1\n\tld\tr1, r1\n\tst.1.inc\tr5, r1, r1\n\tadd\t256, r11, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\tr1, r2\n\tadd\t96, r12, r1\n\tst.1\tr1, r5\n\tst.1\tr10, r12\n\tadd\t32, r8, r8\n\tsub!\tr8, r9, r1\n\tjump.lt\t@.BB10_31\n.BB10_48:\n\tadd\tstack-[39], r0, r1\n\tadd\t68, r1, r6\n\tsub\tr3, r6, r1\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t64, r1, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI10_0[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tadd\tstack-[36], r0, r2\n\tadd\tstack-[35], r0, r4\n\tst.1\tr2, r4\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB10_1\n\tld.1\t64, r7\n\tsub.s!\t@CPI10_5[0], r7, r1\n\tjump.gt\t@.BB10_5\n\tadd\t64, r7, r1\n\tst.1\t64, r1\n\tptr.add\tstack[@ptr_calldata], r6, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI10_4[0], r1, r2\n\tjump.gt\t@.BB10_1\n\tst.1.inc\tr7, r1, r1\n\tadd\tstack-[39], r0, r2\n\tadd\t100, r2, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r5\n\tsub.s!\t65535, r5, r2\n\tjump.gt\t@.BB10_1\n\tst.1\tr1, r5\n\tadd\tstack-[37], r0, r1\n\tadd\t64, r1, r6\n\tst.1\tr6, r7\n\tadd\tstack-[39], r0, r1\n\tadd\t132, r1, r1\n\tptr.add\tstack[@ptr_calldata], r0, r7\n\tptr.add\tr7, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI10_1[0], r1, r2\n\tjump.gt\t@.BB10_1\n\tadd\tstack-[38], r0, r2\n\tadd\tr1, r2, r9\n\tadd\t31, r9, r1\n\tadd\t@CPI10_0[0], r0, r2\n\tsub!\tr1, r3, r4\n\tadd\tr0, r0, r4\n\tadd.ge\tr2, r0, r4\n\tand\t@CPI10_0[0], r1, r1\n\tand\t@CPI10_0[0], r3, r5\n\tsub!\tr1, r5, r8\n\tadd.ge\tr0, r0, r2\n\txor\tr1, r5, r1\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB10_1\n\tptr.add\tr7, r9, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI10_1[0], r4, r1\n\tjump.gt\t@.BB10_5\n\tadd\t63, r4, r1\n\tadd\tstack-[40], r0, r2\n\tand\tr1, r2, r1\n\tld.1\t64, r7\n\tadd\tr7, r1, r1\n\tsub!\tr1, r7, r2\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI10_1[0], r1, r2\n\tjump.gt\t@.BB10_5\n\tand!\t1, r5, r2\n\tjump.ne\t@.BB10_5\n\tst.1\t64, r1\n\tst.1.inc\tr7, r4, r8\n\tadd\t32, r9, r1\n\tadd\tr4, r1, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB10_1\n\tand\t31, r4, r3\n\tptr.add\tstack[@ptr_calldata], r1, r9\n\tshr.s!\t5, r4, r10\n\tjump.eq\t@.BB10_246\n\tadd\tr0, r0, r5\n.BB10_60:\n\tshl.s\t5, r5, r1\n\tadd\tr8, r1, r2\n\tptr.add\tr9, r1, r1\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r5, r5\n\tsub!\tr5, r10, r1\n\tjump.lt\t@.BB10_60\n.BB10_246:\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB10_62\n\tshl.s\t5, r10, r1\n\tptr.add\tr9, r1, r2\n\tadd\tr8, r1, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r5, r2\n\tst.1\tr1, r2\n.BB10_62:\n\tadd\tr8, r4, r1\n\tst.1\tr1, r0\n\tadd\tstack-[37], r0, r1\n\tadd\t96, r1, r3\n\tst.1\tr3, r7\n\tadd\tstack-[39], r0, r1\n\tadd\t164, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI10_4[0], r1, r2\n\tjump.gt\t@.BB10_1\n\tadd\tstack-[37], r0, r2\n\tadd\t128, r2, r4\n\tst.1\tr4, r1\n\tadd\t151, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tsload\tr1, r1\n\tsub.s!\t2, r1, r1\n\tjump.ne\t@.BB10_65\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI10_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_8[0], r0, r2\n\tsub.s!\t@CPI10_8[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_12:\n\tadd\tr5, r0, r8\n.BB10_13:\n\tsub\tr3, r6, r1\n\tadd\t@CPI10_0[0], r0, r4\n\tsub.s!\t288, r1, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr4, r0, r9\n\tand\t@CPI10_0[0], r1, r1\n\tsub!\tr1, r0, r10\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr9, r0, r1\n\tadd.eq\tr4, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB10_1\n\tld.1\t64, r9\n\tsub.s!\t@CPI10_3[0], r9, r1\n\tjump.gt\t@.BB10_5\n\tadd\t256, r9, r1\n\tst.1\t64, r1\n\tptr.add\tstack[@ptr_calldata], r6, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI10_4[0], r1, r4\n\tjump.gt\t@.BB10_1\n\tst.1.inc\tr9, r1, r1\n\tadd\t32, r6, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r10\n\tsub.s!\t@CPI10_4[0], r10, r4\n\tjump.gt\t@.BB10_1\n\tst.1\tr1, r10\n\tadd\t64, r6, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t64, r9, r4\n\tst.1\tr4, r1\n\tadd\t96, r6, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t96, r9, r4\n\tst.1\tr4, r1\n\tadd\t128, r9, r1\n\tadd\t128, r6, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tst.1\tr1, r4\n\tadd\t160, r6, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t1, r1, r4\n\tjump.gt\t@.BB10_1\n\tadd\t160, r9, r4\n\tst.1\tr4, r1\n\tadd\t192, r6, r11\n\tsub\tr3, r11, r1\n\tadd\t@CPI10_0[0], r0, r4\n\tsub.s!\t64, r1, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr4, r0, r10\n\tand\t@CPI10_0[0], r1, r1\n\tsub!\tr1, r0, r12\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr10, r0, r1\n\tadd.eq\tr4, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB10_1\n\tld.1\t64, r10\n\tsub.s!\t@CPI10_5[0], r10, r1\n\tjump.gt\t@.BB10_5\n\tadd\t64, r10, r1\n\tst.1\t64, r1\n\tptr.add\tstack[@ptr_calldata], r11, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI10_4[0], r1, r4\n\tjump.gt\t@.BB10_1\n\tst.1.inc\tr10, r1, r1\n\tadd\t224, r6, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r11\n\tsub.s!\t65535, r11, r4\n\tjump.gt\t@.BB10_1\n\tadd\t32, r8, r8\n\tst.1\tr1, r11\n\tadd\t192, r9, r1\n\tst.1\tr1, r10\n\tadd\t256, r6, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t224, r9, r4\n\tst.1\tr4, r1\n\tst.1\tr8, r9\n\tadd\t288, r6, r6\n\tsub!\tr6, r7, r1\n\tjump.lt\t@.BB10_13\n\tjump\t@.BB10_23\n.BB10_65:\n\tadd\t2, r0, r1\n\tadd\tstack-[11], r0, r2\n\tsstore\tr2, r1\n\tld.1\tr3, r1\n\tadd\tr1, r0, stack-[19]\n\tld.1\tr6, r2\n\tadd\tstack-[36], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[37], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[34]\n\tld.1\tr4, r1\n\tand\t@CPI10_4[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[13]\n\tsub.s!\t@CPI10_5[0], r1, r1\n\tjump.gt\t@.BB10_5\n\tadd\tstack-[13], r0, r3\n\tadd\t64, r3, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI10_6[0], r3, r3\n\tjump.gt\t@.BB10_5\n\tadd\tstack-[13], r0, r5\n\tadd\t128, r5, r3\n\tst.1\t64, r3\n\tadd\t50, r0, r3\n\tadd\tr3, r0, stack-[8]\n\tsload\tr3, r3\n\tand\t@CPI10_4[0], r3, r4\n\tst.1\tr1, r4\n\tshr.s\t160, r3, r3\n\tand\t65535, r3, r3\n\tadd\t96, r5, r4\n\tst.1\tr4, r3\n\tst.1.inc\tr5, r1, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\tr1, r2\n\tadd\tstack-[34], r0, r1\n\tld.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tr2, r0, stack-[18]\n\tsub.s!\t@CPI10_1[0], r2, r1\n\tjump.gt\t@.BB10_5\n\tadd\tstack-[18], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\t63, r1, r2\n\tadd\tstack-[40], r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r4\n\tadd\tr4, r2, r3\n\tadd\tr4, r0, stack-[16]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI10_1[0], r3, r5\n\tjump.gt\t@.BB10_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB10_5\n\tst.1\t64, r3\n\tadd\tstack-[16], r0, r3\n\tadd\tstack-[18], r0, r4\n\tst.1.inc\tr3, r4, r9\n\tand\t31, r1, r3\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB10_245\n\tadd\tr0, r0, r6\n.BB10_72:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB10_72\n.BB10_245:\n\tadd\tr9, r0, stack-[15]\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB10_74\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tstack-[15], r0, r6\n\tadd\tr6, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB10_74:\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[33]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI10_1[0], r2, r4\n\tjump.gt\t@.BB10_5\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB10_5\n\tst.1\t64, r2\n\tadd\tstack-[33], r0, r2\n\tadd\tstack-[18], r0, r3\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[14]\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB10_77\n.BB10_124:\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[39]\n\tld.1\t64, r2\n\tsub.s!\t@CPI10_18[0], r2, r1\n\tjump.gt\t@.BB10_5\n\tadd\t320, r2, r1\n\tst.1\t64, r1\n\tadd\t288, r2, r3\n\tadd\t96, r0, r1\n\tst.1\tr3, r1\n\tadd\t256, r2, r3\n\tst.1\tr3, r1\n\tadd\t224, r2, r3\n\tst.1\tr3, r1\n\tadd\t192, r2, r3\n\tst.1\tr3, r1\n\tadd\t160, r2, r3\n\tst.1\tr3, r1\n\tadd\t128, r2, r3\n\tst.1\tr3, r0\n\tadd\t96, r2, r3\n\tst.1\tr3, r0\n\tadd\t64, r2, r3\n\tst.1\tr3, r0\n\tadd\t32, r2, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n\tadd\tstack-[39], r0, r2\n\tmul\t160, r2, r2, r3\n\tsub.s\t193, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.gt\t@.BB10_119\n\tdiv.s\t160, r2, r3, r4\n\tadd\tstack-[39], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB10_119\n\tsub.s!\t@CPI10_19[0], r2, r3\n\tjump.gt\t@.BB10_5\n\tadd\t255, r2, r3\n\tadd\tstack-[40], r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tadd\tr4, r0, stack-[31]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI10_1[0], r3, r5\n\tjump.gt\t@.BB10_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB10_5\n\tadd\t192, r2, r4\n\tst.1\t64, r3\n\tadd\tstack-[31], r0, r3\n\tst.1.inc\tr3, r4, r3\n\tadd\t223, r2, r2\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB10_241\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tadd\tr0, r0, r5\n.BB10_132:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB10_132\n.BB10_241:\n\tsub!\tr0, r0, r2\n\tjump.eq\t@.BB10_134\n.BB10_134:\n\tadd\tstack-[31], r0, r4\n\tadd\t64, r4, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\t192, r4, r2\n\tadd\tstack-[39], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tadd\t128, r0, r5\n\tadd\tr2, r0, stack-[18]\n\tadd\tr5, r0, stack-[26]\n\tst.1\tr2, r5\n\tadd\t96, r4, r2\n\tst.1\tr2, r0\n\tsub.s!\t@CPI10_1[0], r3, r2\n\tjump.gt\t@.BB10_5\n\tadd\tstack-[39], r0, r2\n\tshl.s\t5, r2, r6\n\tadd\t63, r6, r2\n\tadd\tstack-[40], r0, r3\n\tand\tr2, r3, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r3\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI10_1[0], r3, r7\n\tjump.gt\t@.BB10_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB10_5\n\tst.1\t64, r3\n\tadd\tstack-[39], r0, r3\n\tst.1\tr2, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB10_142\n\tadd\tr0, r0, r3\n.BB10_139:\n\tld.1\t64, r5\n\tsub.s!\t@CPI10_20[0], r5, r7\n\tjump.gt\t@.BB10_5\n\tadd\t224, r5, r7\n\tst.1\t64, r7\n\tadd\t160, r5, r7\n\tst.1\tr7, r0\n\tadd\t128, r5, r7\n\tst.1\tr7, r0\n\tadd\t96, r5, r7\n\tst.1\tr7, r0\n\tadd\t64, r5, r7\n\tst.1\tr7, r0\n\tadd\t32, r5, r7\n\tst.1\tr7, r0\n\tst.1\tr5, r0\n\tld.1\t64, r7\n\tsub.s!\t@CPI10_21[0], r7, r8\n\tjump.gt\t@.BB10_5\n\tadd\t160, r7, r8\n\tst.1\t64, r8\n\tadd\t128, r7, r8\n\tst.1\tr8, r0\n\tadd\t96, r7, r8\n\tst.1\tr8, r0\n\tadd\t64, r7, r8\n\tst.1\tr8, r0\n\tadd\t32, r7, r8\n\tst.1\tr8, r0\n\tst.1\tr7, r0\n\tadd\t192, r5, r8\n\tst.1\tr8, r7\n\tadd\t32, r3, r3\n\tadd\tr3, r2, r7\n\tst.1\tr7, r5\n\tsub!\tr3, r6, r5\n\tjump.lt\t@.BB10_139\n.BB10_142:\n\tld.1\t64, r3\n\tadd\tr3, r4, r5\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI10_1[0], r5, r8\n\tjump.gt\t@.BB10_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB10_5\n\tst.1\t64, r5\n\tadd\tstack-[39], r0, r5\n\tst.1.inc\tr3, r5, r7\n\tand\t31, r6, r5\n\tadd\tstack[@calldatasize], r0, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB10_240\n\tadd\tr0, r0, r9\n.BB10_146:\n\tshl.s\t5, r9, r10\n\tadd\tr7, r10, r11\n\tptr.add\tr8, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB10_146\n.BB10_240:\n\tsub!\tr5, r0, r9\n\tjump.eq\t@.BB10_148\n\tshl.s\t5, r6, r9\n\tptr.add\tr8, r9, r8\n\tadd\tr7, r9, r7\n\tshl.s\t3, r5, r9\n\tld.1\tr7, r10\n\tshl\tr10, r9, r10\n\tshr\tr10, r9, r10\n\tld\tr8, r8\n\tsub\t256, r9, r9\n\tshr\tr8, r9, r8\n\tshl\tr8, r9, r8\n\tor\tr8, r10, r8\n\tst.1\tr7, r8\n.BB10_148:\n\tld.1\t64, r7\n\tadd\tr7, r4, r8\n\tsub!\tr8, r7, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI10_1[0], r8, r10\n\tjump.gt\t@.BB10_5\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB10_5\n\tst.1\t64, r8\n\tadd\tstack-[39], r0, r8\n\tst.1.inc\tr7, r8, r8\n\tadd\tstack[@calldatasize], r0, r9\n\tptr.add\tstack[@ptr_calldata], r9, r9\n\tsub!\tr6, r0, r10\n\tjump.eq\t@.BB10_239\n\tadd\tr0, r0, r10\n.BB10_152:\n\tshl.s\t5, r10, r11\n\tadd\tr8, r11, r12\n\tptr.add\tr9, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r6, r11\n\tjump.lt\t@.BB10_152\n.BB10_239:\n\tsub!\tr5, r0, r10\n\tjump.eq\t@.BB10_154\n\tshl.s\t5, r6, r10\n\tptr.add\tr9, r10, r9\n\tadd\tr8, r10, r8\n\tshl.s\t3, r5, r10\n\tld.1\tr8, r11\n\tshl\tr11, r10, r11\n\tshr\tr11, r10, r11\n\tld\tr9, r9\n\tsub\t256, r10, r10\n\tshr\tr9, r10, r9\n\tshl\tr9, r10, r9\n\tor\tr9, r11, r9\n\tst.1\tr8, r9\n.BB10_154:\n\tld.1\t64, r8\n\tadd\tr8, r4, r9\n\tsub!\tr9, r8, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI10_1[0], r9, r11\n\tjump.gt\t@.BB10_5\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB10_5\n\tst.1\t64, r9\n\tadd\tstack-[39], r0, r9\n\tst.1.inc\tr8, r9, r9\n\tadd\tstack[@calldatasize], r0, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tsub!\tr6, r0, r11\n\tjump.eq\t@.BB10_238\n\tadd\tr0, r0, r11\n.BB10_158:\n\tshl.s\t5, r11, r12\n\tadd\tr9, r12, r13\n\tptr.add\tr10, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r6, r12\n\tjump.lt\t@.BB10_158\n.BB10_238:\n\tsub!\tr5, r0, r11\n\tjump.eq\t@.BB10_160\n\tshl.s\t5, r6, r11\n\tptr.add\tr10, r11, r10\n\tadd\tr9, r11, r9\n\tshl.s\t3, r5, r11\n\tld.1\tr9, r12\n\tshl\tr12, r11, r12\n\tshr\tr12, r11, r12\n\tld\tr10, r10\n\tsub\t256, r11, r11\n\tshr\tr10, r11, r10\n\tshl\tr10, r11, r10\n\tor\tr10, r12, r10\n\tst.1\tr9, r10\n.BB10_160:\n\tld.1\t64, r9\n\tadd\tr9, r4, r4\n\tsub!\tr4, r9, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI10_1[0], r4, r11\n\tjump.gt\t@.BB10_5\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB10_5\n\tst.1\t64, r4\n\tadd\tstack-[39], r0, r4\n\tst.1.inc\tr9, r4, r4\n\tadd\tstack[@calldatasize], r0, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tsub!\tr6, r0, r11\n\tjump.eq\t@.BB10_237\n\tadd\tr0, r0, r11\n.BB10_164:\n\tshl.s\t5, r11, r12\n\tadd\tr4, r12, r13\n\tptr.add\tr10, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r6, r12\n\tjump.lt\t@.BB10_164\n.BB10_237:\n\tsub!\tr5, r0, r11\n\tjump.eq\t@.BB10_166\n\tshl.s\t5, r6, r6\n\tptr.add\tr10, r6, r10\n\tadd\tr4, r6, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr10, r10\n\tsub\t256, r5, r5\n\tshr\tr10, r5, r10\n\tshl\tr10, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB10_166:\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[2]\n\tsub.s!\t@CPI10_18[0], r4, r4\n\tjump.gt\t@.BB10_5\n\tadd\tstack-[2], r0, r5\n\tadd\t320, r5, r4\n\tst.1\t64, r4\n\tadd\t256, r5, r4\n\tst.1\tr4, r9\n\tadd\t224, r5, r4\n\tst.1\tr4, r8\n\tadd\t288, r5, r4\n\tadd\tr4, r0, stack-[15]\n\tst.1\tr4, r2\n\tadd\t192, r5, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r7\n\tadd\t160, r5, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\tr2, r3\n\tadd\t64, r5, r2\n\tst.1\tr2, r0\n\tadd\t32, r5, r2\n\tst.1\tr2, r0\n\tadd\t128, r5, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r0\n\tst.1\tr5, r0\n\tadd\t96, r5, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tsub.s!\t@CPI10_3[0], r2, r3\n\tjump.gt\t@.BB10_5\n\tadd\t256, r2, r3\n\tst.1\t64, r3\n\tadd\t160, r2, r3\n\tst.1\tr3, r0\n\tadd\t128, r2, r3\n\tst.1\tr3, r0\n\tadd\t96, r2, r3\n\tst.1\tr3, r0\n\tadd\t64, r2, r3\n\tst.1\tr3, r0\n\tadd\t32, r2, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n\tld.1\t64, r3\n\tsub.s!\t@CPI10_5[0], r3, r4\n\tjump.gt\t@.BB10_5\n\tadd\t64, r3, r4\n\tst.1\t64, r4\n\tadd\t32, r3, r4\n\tst.1\tr4, r0\n\tst.1\tr3, r0\n\tadd\t192, r2, r4\n\tst.1\tr4, r3\n\tadd\t224, r2, r2\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tsub.s!\t@CPI10_6[0], r2, r3\n\tjump.gt\t@.BB10_5\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tst.1\tr2, r0\n\tld.1\t64, r1\n\tsub.s!\t@CPI10_6[0], r1, r3\n\tjump.gt\t@.BB10_5\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t96, r1, r3\n\tst.1\tr3, r0\n\tadd\t64, r1, r3\n\tst.1\tr3, r0\n\tadd\t32, r1, r3\n\tst.1\tr3, r0\n\tst.1\tr1, r0\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI10_5[0], r1, r3\n\tjump.gt\t@.BB10_5\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tadd\t32, r1, r3\n\tst.1\tr3, r0\n\tst.1\tr1, r0\n\tadd\t96, r2, r2\n\tst.1\tr2, r1\n\tadd\t@CPI10_22[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_23[0], r1, r1\n\tadd\t32778, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tadd\tstack-[39], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB10_174\n.BB10_201:\n\tadd\tstack-[31], r0, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tstack-[13], r0, r3\n\tnear_call\tr0, @fun_executeBatchTransfer, @DEFAULT_UNWIND\n\tadd\t@CPI10_22[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.2\t4, r1\n\tadd\t32778, r0, r1\n\tadd\t36, r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transferETH, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tadd\tstack-[11], r0, r2\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB10_77:\n\tadd\t96, r0, r5\n\tadd\tr0, r0, r2\n\tadd\tstack-[14], r0, r4\n.BB10_78:\n\tadd\tr2, r4, r3\n\tst.1\tr3, r5\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB10_78\n\tadd\tr5, r0, stack-[32]\n\tadd\tr0, r0, stack-[39]\n.BB10_80:\n\tadd\tstack-[34], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[39], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB10_81\n\tadd\tstack-[39], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\tstack-[17], r0, r1\n\tadd\tr2, r0, stack-[36]\n\tadd\tr1, r2, r1\n\tld.1\tr1, r2\n\tadd\t96, r2, r2\n\tld.1\tr2, r4\n\tsub.s!\t@CPI10_1[0], r4, r2\n\tjump.gt\t@.BB10_5\n\tshl.s\t5, r4, r3\n\tadd\t63, r3, r2\n\tadd\tstack-[40], r0, r5\n\tand\tr2, r5, r5\n\tld.1\t64, r2\n\tadd\tr2, r5, r5\n\tsub!\tr5, r2, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI10_1[0], r5, r7\n\tjump.gt\t@.BB10_5\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB10_5\n\tst.1\t64, r5\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack[@calldatasize], r0, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB10_244\n\tadd\tr0, r0, r7\n.BB10_87:\n\tshl.s\t5, r7, r8\n\tadd\tr4, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB10_87\n.BB10_244:\n\tand!\t31, r3, r3\n\tjump.eq\t@.BB10_89\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr4, r6, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr5, r5\n\tsub\t256, r3, r3\n\tshr\tr5, r3, r5\n\tshl\tr5, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB10_89:\n\tadd\tstack-[33], r0, r3\n\tld.1\tr3, r3\n\tadd\tstack-[39], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.le\t@.BB10_81\n\tadd\tstack-[14], r0, r3\n\tadd\tstack-[36], r0, r4\n\tadd\tr4, r3, r3\n\tst.1\tr3, r2\n\tadd\tstack-[33], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[39], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB10_81\n\tadd\tstack-[34], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[39], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB10_81\n\tld.1\tr1, r3\n\tadd\t128, r3, r1\n\tadd\tr1, r0, stack-[21]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[26]\n\tadd\t96, r3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[27]\n\tadd\t64, r3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[28]\n\tld.1.inc\tr3, r1, r2\n\tand\t@CPI10_4[0], r1, r1\n\tadd\tr1, r0, stack-[29]\n\tld.1\tr2, r1\n\tand\t@CPI10_4[0], r1, r1\n\tadd\tr1, r0, stack-[25]\n\tadd\tr3, r0, stack-[38]\n\tadd\t160, r3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[24]\n\tsub.s!\t2, r1, r1\n\tjump.ge\t@.BB10_93\n\tadd\tstack-[38], r0, r1\n\tadd\t192, r1, r1\n\tadd\tr1, r0, stack-[20]\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r2, r1\n\tadd\tr2, r0, stack-[31]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[30]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[37]\n\tadd\t@CPI10_7[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[35]\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI10_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_9[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tadd\tstack-[37], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[30], r0, r1\n\tand\t65535, r1, r1\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tadd\tstack-[31], r0, r1\n\tand\t@CPI10_4[0], r1, r1\n\tadd\t64, r4, r3\n\tst.1\tr3, r1\n\tadd\tstack-[32], r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI10_6[0], r4, r1\n\tjump.gt\t@.BB10_5\n\tadd\tstack-[37], r0, r4\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI10_8[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI10_8[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI10_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[31]\n\tadd\tstack-[38], r0, r2\n\tld.1\tr2, r1\n\tand\t@CPI10_4[0], r1, r1\n\tadd\t224, r2, r2\n\tadd\tr2, r0, stack-[22]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[30]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[37]\n\tadd\t@CPI10_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[35], r0, r1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_9[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tadd\tstack-[37], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t352, r4, r1\n\tadd\tstack-[23], r0, r3\n\tst.1\tr1, r3\n\tadd\t288, r4, r1\n\tadd\tstack-[30], r0, r3\n\tst.1\tr1, r3\n\tadd\t256, r4, r1\n\tadd\tstack-[31], r0, r3\n\tst.1\tr1, r3\n\tadd\t224, r4, r1\n\tadd\tstack-[24], r0, r3\n\tst.1\tr1, r3\n\tadd\t192, r4, r1\n\tadd\tstack-[26], r0, r3\n\tst.1\tr1, r3\n\tadd\t160, r4, r1\n\tadd\tstack-[27], r0, r3\n\tst.1\tr1, r3\n\tadd\t128, r4, r1\n\tadd\tstack-[28], r0, r3\n\tst.1\tr1, r3\n\tadd\t96, r4, r1\n\tadd\tstack-[25], r0, r3\n\tst.1\tr1, r3\n\tadd\t64, r4, r1\n\tadd\tstack-[29], r0, r3\n\tst.1\tr1, r3\n\tadd\t352, r0, r1\n\tst.1\tr4, r1\n\tadd\t320, r4, r1\n\tst.1\tr1, r0\n\tsub.s!\t@CPI10_12[0], r4, r1\n\tjump.gt\t@.BB10_5\n\tadd\tstack-[37], r0, r4\n\tadd\t384, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI10_8[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI10_8[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI10_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r2\n\tadd\tstack-[22], r0, r1\n\tadd\tr2, r0, stack-[31]\n\tst.1\tr1, r2\n\tadd\tstack-[38], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[37]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[38]\n\tadd\t32, r1, r2\n\tadd\t@CPI10_13[0], r0, r1\n\tadd\tr2, r0, stack-[30]\n\tst.1\tr2, r1\n\tadd\t@CPI10_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[35], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[32], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_9[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[37], r0, r3\n\tand\t@CPI10_4[0], r3, r3\n\tadd\tr3, r0, stack-[37]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[38], r0, r3\n\tadd\t66, r3, r2\n\tadd\tstack-[31], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r3, r2\n\tst.1\tr2, r1\n\tadd\t66, r0, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI10_6[0], r3, r1\n\tjump.gt\t@.BB10_5\n\tadd\tstack-[38], r0, r3\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tadd\tstack-[30], r0, r4\n\tsub.s!\t@CPI10_8[0], r4, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr3, r3\n\tsub.s!\t@CPI10_8[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI10_8[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI10_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tadd\tstack-[39], r0, r2\n\tmul\t65, r2, r2, r3\n\tadd\tstack-[19], r0, r3\n\tadd\tr2, r3, r2\n\tadd\t96, r2, r3\n\tld.1\tr3, r3\n\tadd\t32, r2, r4\n\tld.1\tr4, r4\n\tadd\t64, r2, r2\n\tld.1\tr2, r2\n\tld\tr1, r1\n\tld.1\t64, r5\n\tadd\t96, r5, r6\n\tst.1\tr6, r2\n\tadd\t64, r5, r2\n\tst.1\tr2, r4\n\tshr.s\t248, r3, r2\n\tadd\t32, r5, r3\n\tst.1\tr3, r2\n\tst.1\tr5, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tsub.s!\t@CPI10_8[0], r5, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr5, r0, r2\n\tst.1\t0, r0\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI10_8[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI10_14[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI10_8[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB10_243\n\tadd\tr0, r0, r6\n.BB10_106:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB10_106\n.BB10_243:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB10_108\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB10_108:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_109\n\tld.1\t0, r1\n\tand!\t@CPI10_4[0], r1, r2\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB10_122\n\tadd\tstack-[37], r0, r1\n\tsub!\tr2, r1, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB10_122\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[38]\n\tadd\t@CPI10_15[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_16[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[38], r0, r2\n\tsub!\tr2, r1, r1\n\tadd\tr0, r0, r1\n\tjump.le\t@.BB10_122\n\tadd\tstack-[20], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t@CPI10_17[0], r1, r2\n\tjump.ge\t@.BB10_119\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t65535, r1, r2\n\tjump.gt\t@.BB10_119\n\tsub.s!\t10001, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n.BB10_122:\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[39], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB10_81\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[36], r0, r3\n\tadd\tr3, r2, r2\n\tand\t1, r1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[39], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[18], r0, r1\n\tadd\tr2, r0, stack-[39]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB10_80\n\tjump\t@.BB10_124\n.BB10_109:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB10_242\n\tadd\tr0, r0, r5\n.BB10_111:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB10_111\n.BB10_242:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB10_113\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB10_113:\n\tadd\t@CPI10_8[0], r0, r1\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tstack-[32], r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_174:\n\tadd\tstack-[31], r0, r2\n\tadd\t160, r2, r2\n\tadd\tr2, r0, stack-[3]\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tr0, r0, stack-[36]\n\tjump\t@.BB10_175\n.BB10_236:\n\tadd\tstack-[9], r0, r4\n\tsub\tr4, r2, r4\n\tadd\tr4, r0, stack-[9]\n\tadd\tstack-[28], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tshl.s\t5, r3, r3\n\tadd\tr1, r3, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r3\n\tadd\tr3, r2, r2\n\tst.1\tr1, r2\n.BB10_233:\n\tadd\tstack-[36], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[39], r0, r1\n\tadd\tr2, r0, stack-[36]\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB10_201\n.BB10_175:\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[36], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB10_81\n\tadd\tstack-[36], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\tr1, r2, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[35]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[38]\n\tadd\tstack-[34], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB10_81\n\tshl.s\t5, r1, r1\n\tadd\tstack-[17], r0, r2\n\tadd\tr2, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[32]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[24]\n\tand\t@CPI10_4[0], r1, r1\n\tadd\tstack-[35], r0, r2\n\tadd\t64, r2, r2\n\tadd\tr2, r0, stack-[30]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[25]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[40]\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[32], r0, r2\n\tadd\t224, r2, r2\n\tadd\tr2, r0, stack-[23]\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[40], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[29]\n\tadd\tstack-[35], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[33], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB10_81\n\tshl.s\t5, r2, r1\n\tadd\t32, r1, r3\n\tadd\tstack-[33], r0, r1\n\tadd\tr3, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r4\n\tadd\tstack-[40], r0, r5\n\tsub!\tr4, r5, r4\n\tjump.le\t@.BB10_81\n\tadd\tstack-[16], r0, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r2, r2\n\tjump.le\t@.BB10_81\n\tadd\tstack-[16], r0, r2\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB10_233\n\tadd\tstack-[40], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tr2, r1, r1\n\tadd\tstack-[35], r0, r2\n\tadd\t96, r2, r2\n\tadd\tr2, r0, stack-[28]\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[21]\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[20]\n\tadd\tstack-[30], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[32], r0, r2\n\tadd\t64, r2, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[27]\n\tadd\tstack-[38], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[38]\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tld.1.inc\tr1, r3, r4\n\tadd\t64, r1, r1\n\tadd\tr4, r0, stack-[22]\n\tld.1\tr4, r4\n\tadd\tr1, r0, stack-[19]\n\tld.1\tr1, r5\n\tld.1\t64, r1\n\tadd\t128, r1, r6\n\tst.1\tr6, r2\n\tadd\t96, r1, r2\n\tst.1\tr2, r5\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\tstack-[26], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI10_21[0], r1, r3\n\tjump.gt\t@.BB10_5\n\tadd\t160, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI10_8[0], r0, r3\n\tsub.s!\t@CPI10_8[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI10_8[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_8[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI10_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[38], r0, r2\n\tld.1.inc\tr2, r2, r3\n\tadd\tr3, r0, stack-[37]\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB10_192\n\tadd\tr0, r0, stack-[40]\n\tjump\t@.BB10_188\n.BB10_190:\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI10_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n.BB10_189:\n\tld\tr1, r1\n\tadd\tstack-[40], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[38], r0, r2\n\tld.1\tr2, r2\n\tadd\tr3, r0, stack-[40]\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB10_192\n.BB10_188:\n\tadd\tstack-[40], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tstack-[37], r0, r3\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r3\n\tjump.ge\t@.BB10_190\n\tst.1\t0, r1\n\tst.1\t32, r2\n\tadd\t@CPI10_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB10_189\n\tjump\t@.BB10_1\n.BB10_192:\n\tadd\tstack-[32], r0, r2\n\tadd\t160, r2, r3\n\tld.1\tr3, r4\n\tsub.s!\t1, r4, r2\n\tjump.gt\t@.BB10_93\n\tadd\tstack-[28], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB10_194\n\tadd\tstack-[27], r0, r4\n\tsub!\tr1, r4, r1\n\tjump.ne\t@.BB10_233\n.BB10_198:\n\tld.1.inc\tr2, r2, r1\n\tadd\tstack-[22], r0, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_233\n\tsub.s\t1, r0, r2\n\tadd\tstack-[29], r0, r4\n\txor\tr4, r2, r4\n\tadd\tstack-[21], r0, r2\n\tadd\tstack-[20], r0, r5\n\tadd\tr2, r5, r2\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB10_233\n\tadd\tstack-[29], r0, r4\n\tadd\tr2, r4, r2\n\tadd\tstack-[25], r0, r4\n\tadd\t64, r4, r4\n\tld.1\tr4, r4\n\tsub!\tr2, r4, r2\n\tjump.gt\t@.BB10_233\n\tadd\tstack-[32], r0, r2\n\tadd\t192, r2, r2\n\tld.1\tr2, r8\n\tld.1\tr1, r5\n\tadd\tstack-[30], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r6\n\tmul\tr6, r5, r1, r2\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r7\n\tadd\tr0, r0, r4\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB10_208\n\tdiv\tr1, r6, r2, r4\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB10_119\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r7\n\tadd\tr0, r0, r4\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB10_208\n\tadd\t32, r8, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tmul\tr2, r1, r4, r6\n\tdiv\tr4, r1, r6, r7\n\tsub!\tr6, r2, r2\n\tjump.ne\t@.BB10_119\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r6\n\tmul\tr6, r1, r2, r7\n\tdiv\tr2, r1, r7, r9\n\tsub!\tr7, r6, r6\n\tjump.ne\t@.BB10_119\n\tadd\tstack-[13], r0, r6\n\tld.1\tr6, r6\n\tadd\t32, r6, r6\n\tld.1\tr6, r6\n\tand\t65535, r6, r6\n\tmul\tr6, r1, r7, r9\n\tdiv\tr7, r1, r9, r10\n\tsub!\tr9, r6, r6\n\tjump.ne\t@.BB10_119\n.BB10_208:\n\tdiv.s\t10000, r2, r6, r2\n\tadd!\tr6, r1, r2\n\tjump.of\t@.BB10_119\n\tadd\tstack-[9], r0, r9\n\tsub!\tr9, r2, r9\n\tjump.lt\t@.BB10_233\n\tld.1\tr8, r8\n\tand\t@CPI10_4[0], r8, r8\n\tadd\tstack-[6], r0, r9\n\tld.1\tr9, r10\n\tadd\tstack-[4], r0, r9\n\tld.1\tr9, r9\n\tld.1.inc\tr9, r11, r9\n\tsub!\tr11, r10, r12\n\tjump.le\t@.BB10_81\n\tshl.s\t5, r10, r12\n\tadd\tr9, r12, r12\n\tld.1\tr12, r13\n\tand\t@CPI10_4[0], r13, r13\n\tsub!\tr8, r13, r14\n\tjump.eq\t@.BB10_213\n\tsub!\tr13, r0, r13\n\tjump.eq\t@.BB10_217\n\tadd\t1, r10, r10\n\tsub!\tr11, r10, r11\n\tjump.le\t@.BB10_81\n\tshl.s\t5, r10, r11\n\tadd\tr9, r11, r9\n\tst.1\tr9, r8\n\tadd\tstack-[6], r0, r8\n\tst.1\tr8, r10\n\tjump\t@.BB10_213\n.BB10_194:\n\tadd\tstack-[27], r0, r4\n\tsub!\tr1, r4, r1\n\tjump.ne\t@.BB10_233\n\tadd\t32, r2, r1\n\tld.1\tr1, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB10_233\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB10_233\n\tjump\t@.BB10_198\n.BB10_217:\n\tst.1\tr12, r8\n.BB10_213:\n\tadd\tstack-[32], r0, r8\n\tld.1\tr8, r8\n\tand\t@CPI10_4[0], r8, r8\n\tadd\tstack-[7], r0, r9\n\tld.1\tr9, r10\n\tadd\tstack-[5], r0, r9\n\tld.1\tr9, r9\n\tld.1.inc\tr9, r11, r9\n\tsub!\tr11, r10, r12\n\tjump.le\t@.BB10_81\n\tshl.s\t5, r10, r12\n\tadd\tr9, r12, r12\n\tld.1\tr12, r13\n\tand\t@CPI10_4[0], r13, r13\n\tsub!\tr8, r13, r14\n\tjump.eq\t@.BB10_222\n\tsub!\tr13, r0, r13\n\tjump.eq\t@.BB10_221\n\tadd\t1, r10, r10\n\tsub!\tr11, r10, r11\n\tjump.le\t@.BB10_81\n\tshl.s\t5, r10, r11\n\tadd\tr9, r11, r9\n\tst.1\tr9, r8\n\tadd\tstack-[7], r0, r8\n\tst.1\tr8, r10\n\tjump\t@.BB10_222\n.BB10_221:\n\tst.1\tr12, r8\n.BB10_222:\n\tadd\tstack-[18], r0, r8\n\tld.1\tr8, r8\n\tadd\tstack-[31], r0, r9\n\tadd\tr8, r9, r9\n\tadd\tstack-[3], r0, r13\n\tld.1\tr13, r8\n\tmul\t160, r8, r10, r11\n\tadd\tr9, r10, r9\n\tadd\tstack-[30], r0, r10\n\tld.1\tr10, r10\n\tadd\t32, r10, r10\n\tld.1\tr10, r10\n\tadd\t128, r9, r11\n\tadd\tstack-[32], r0, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r10\n\tadd\t96, r9, r10\n\tst.1\tr10, r12\n\tadd\tstack-[24], r0, r10\n\tld.1\tr10, r10\n\tadd\t192, r9, r11\n\tst.1\tr11, r10\n\tadd\t224, r9, r10\n\tld.1\tr3, r11\n\tst.1\tr10, r11\n\tadd\t1, r8, r10\n\tst.1\tr13, r10\n\tld.1\tr3, r3\n\tsub.s!\t1, r3, r3\n\tjump.ne\t@.BB10_224\n\tadd\t160, r9, r3\n\tst.1\tr3, r5\n.BB10_224:\n\tadd\tstack-[15], r0, r3\n\tld.1\tr3, r11\n\tld.1\tr11, r3\n\tsub!\tr3, r8, r3\n\tjump.le\t@.BB10_81\n\tadd\tstack-[7], r0, r3\n\tld.1\tr3, r12\n\tadd\tstack-[23], r0, r3\n\tld.1\tr3, r9\n\tadd\tstack-[30], r0, r3\n\tld.1\tr3, r10\n\tshl.s\t5, r8, r3\n\tadd\t32, r3, r3\n\tadd\tr11, r3, r11\n\tld.1\tr11, r11\n\tst.1\tr11, r12\n\tadd\tstack-[15], r0, r11\n\tld.1\tr11, r11\n\tld.1\tr11, r13\n\tsub!\tr13, r8, r13\n\tjump.le\t@.BB10_81\n\tadd\tr11, r3, r11\n\tld.1\tr11, r11\n\tadd\t64, r11, r11\n\tadd\tstack-[6], r0, r13\n\tld.1\tr13, r13\n\tst.1\tr11, r13\n\tadd\tstack-[5], r0, r11\n\tld.1\tr11, r13\n\tld.1\tr13, r11\n\tsub!\tr11, r12, r11\n\tjump.le\t@.BB10_81\n\tld.1\t64, r11\n\tsub.s!\t@CPI10_21[0], r11, r14\n\tjump.gt\t@.BB10_5\n\tshl.s\t5, r12, r12\n\tadd\tr12, r13, r12\n\tadd\t32, r12, r12\n\tld.1\tr12, r12\n\tld.1\tr10, r13\n\tadd\t64, r10, r10\n\tld.1\tr10, r10\n\tadd\t160, r11, r14\n\tst.1\t64, r14\n\tadd\t128, r11, r14\n\tst.1\tr14, r10\n\tadd\t96, r11, r10\n\tst.1\tr10, r5\n\tadd\t64, r11, r5\n\tst.1\tr5, r13\n\tadd\t32, r11, r5\n\tst.1\tr5, r9\n\tand\t@CPI10_4[0], r12, r5\n\tst.1\tr11, r5\n\tadd\tstack-[15], r0, r5\n\tld.1\tr5, r5\n\tld.1\tr5, r9\n\tsub!\tr9, r8, r9\n\tjump.le\t@.BB10_81\n\tadd\tr5, r3, r5\n\tld.1\tr5, r5\n\tadd\t192, r5, r5\n\tst.1\tr5, r11\n\tadd\tstack-[15], r0, r5\n\tld.1\tr5, r9\n\tld.1\tr9, r5\n\tsub!\tr5, r8, r5\n\tjump.le\t@.BB10_81\n\tdiv.s\t10000, r4, r5, r4\n\tdiv.s\t10000, r7, r4, r7\n\tadd\tr5, r4, r7\n\tsub\tr1, r7, r1\n\tadd\tr9, r3, r7\n\tld.1\tr7, r7\n\tadd\t32, r7, r7\n\tst.1\tr7, r1\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r7\n\tsub!\tr7, r8, r7\n\tjump.le\t@.BB10_81\n\tadd\tr1, r3, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r1\n\tst.1\tr1, r5\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r5\n\tsub!\tr5, r8, r5\n\tjump.le\t@.BB10_81\n\tadd\tr1, r3, r1\n\tld.1\tr1, r1\n\tadd\t128, r1, r1\n\tst.1\tr1, r6\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r5\n\tsub!\tr5, r8, r5\n\tjump.le\t@.BB10_81\n\tadd\tr1, r3, r1\n\tld.1\tr1, r1\n\tadd\t160, r1, r1\n\tst.1\tr1, r4\n\tadd\tstack-[35], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[33], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB10_81\n\tshl.s\t5, r1, r1\n\tadd\tstack-[14], r0, r3\n\tadd\tr3, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r4\n\tadd\tstack-[30], r0, r3\n\tld.1\tr3, r3\n\tld.1\tr3, r3\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB10_236\n.BB10_81:\n\tadd\t@CPI10_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_119:\n\tadd\t@CPI10_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_93:\n\tadd\t@CPI10_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nmapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256_of_address:\n.func_begin11:\n\tand\t@CPI11_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nexternal_fun_takeAskSingle:\n.func_begin12:\n\tnop\tstack+=[15]\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI12_0[0], r0, r2\n\tsub.s!\t31, r1, r4\n\tadd\tr0, r0, r4\n\tadd.gt\tr2, r0, r4\n\tand\t@CPI12_0[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI12_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB12_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI12_1[0], r2, r1\n\tjump.gt\t@.BB12_1\n\tadd\t4, r2, r4\n\tsub\tr3, r4, r1\n\tadd\t@CPI12_0[0], r0, r5\n\tsub.s!\t448, r1, r6\n\tadd\tr0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI12_0[0], r1, r1\n\tsub!\tr1, r0, r7\n\tadd.le\tr0, r0, r5\n\tsub.s!\t@CPI12_0[0], r1, r1\n\tadd\tr6, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB12_4\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_4:\n\tld.1\t64, r1\n\tsub.s!\t@CPI12_2[0], r1, r5\n\tjump.ge\t@.BB12_5\n\tadd\t160, r1, r5\n\tst.1\t64, r5\n\tsub.s!\t@CPI12_3[0], r1, r6\n\tjump.le\t@.BB12_7\n.BB12_5:\n\tadd\t@CPI12_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_7:\n\tadd\t416, r1, r6\n\tst.1\t64, r6\n\tptr.add\tstack[@ptr_calldata], r4, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI12_4[0], r6, r7\n\tjump.gt\t@.BB12_1\n\tst.1\tr5, r6\n\tadd\t36, r2, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI12_4[0], r6, r7\n\tjump.gt\t@.BB12_1\n\tadd\t192, r1, r7\n\tst.1\tr7, r6\n\tadd\t68, r2, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t224, r1, r7\n\tst.1\tr7, r6\n\tadd\t100, r2, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t256, r1, r7\n\tst.1\tr7, r6\n\tadd\t288, r1, r6\n\tadd\t132, r2, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t164, r2, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tsub.s!\t1, r6, r7\n\tjump.gt\t@.BB12_1\n\tadd\t320, r1, r7\n\tst.1\tr7, r6\n\tadd\t196, r2, r7\n\tsub\tr3, r7, r6\n\tadd\t@CPI12_0[0], r0, r8\n\tsub.s!\t64, r6, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr8, r0, r9\n\tand\t@CPI12_0[0], r6, r6\n\tsub!\tr6, r0, r10\n\tadd.le\tr0, r0, r8\n\tsub.s!\t@CPI12_0[0], r6, r6\n\tadd\tr9, r0, r6\n\tadd.eq\tr8, r0, r6\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB12_1\n\tld.1\t64, r6\n\tsub.s!\t@CPI12_5[0], r6, r8\n\tjump.gt\t@.BB12_5\n\tadd\t64, r6, r8\n\tst.1\t64, r8\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI12_4[0], r7, r8\n\tjump.gt\t@.BB12_1\n\tst.1.inc\tr6, r7, r7\n\tadd\t228, r2, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tsub.s!\t65535, r8, r9\n\tjump.gt\t@.BB12_1\n\tst.1\tr7, r8\n\tadd\t352, r1, r7\n\tst.1\tr7, r6\n\tadd\t260, r2, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tst.1.inc\tr1, r5, r5\n\tadd\t384, r1, r7\n\tst.1\tr7, r6\n\tadd\t292, r2, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI12_1[0], r6, r7\n\tjump.gt\t@.BB12_1\n\tadd\tr6, r4, r8\n\tsub\tr3, r8, r6\n\tadd\t@CPI12_0[0], r0, r7\n\tsub.s!\t256, r6, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr7, r0, r9\n\tand\t@CPI12_0[0], r6, r6\n\tsub!\tr6, r0, r10\n\tadd.le\tr0, r0, r7\n\tsub.s!\t@CPI12_0[0], r6, r6\n\tadd\tr9, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB12_1\n\tld.1\t64, r7\n\tsub.s!\t@CPI12_6[0], r7, r6\n\tjump.gt\t@.BB12_5\n\tadd\t128, r7, r6\n\tst.1\t64, r6\n\tptr.add\tstack[@ptr_calldata], r8, r6\n\tld\tr6, r6\n\tst.1.inc\tr7, r6, r9\n\tadd\t32, r8, r10\n\tptr.add\tstack[@ptr_calldata], r0, r6\n\tptr.add\tr6, r10, r10\n\tld\tr10, r10\n\tsub.s!\t@CPI12_1[0], r10, r11\n\tjump.gt\t@.BB12_1\n\tadd\tr10, r8, r10\n\tadd\t31, r10, r11\n\tadd\t@CPI12_0[0], r0, r12\n\tsub!\tr11, r3, r13\n\tadd\tr0, r0, r13\n\tadd.ge\tr12, r0, r13\n\tand\t@CPI12_0[0], r11, r11\n\tand\t@CPI12_0[0], r3, r14\n\tsub!\tr11, r14, r15\n\tadd.ge\tr0, r0, r12\n\txor\tr11, r14, r11\n\tsub.s!\t@CPI12_0[0], r11, r11\n\tadd\tr13, r0, r11\n\tadd.eq\tr12, r0, r11\n\tsub!\tr11, r0, r11\n\tjump.ne\t@.BB12_1\n\tptr.add\tr6, r10, r6\n\tld\tr6, r12\n\tsub.s!\t@CPI12_1[0], r12, r6\n\tjump.gt\t@.BB12_5\n\tshl.s\t5, r12, r13\n\tadd\t63, r13, r11\n\tsub.s\t32, r0, r6\n\tadd\tr6, r0, stack-[15]\n\tand\tr11, r6, r14\n\tld.1\t64, r11\n\tadd\tr11, r14, r14\n\tsub!\tr14, r11, r15\n\tadd\t0, r0, r15\n\tadd.lt\t1, r0, r15\n\tsub.s!\t@CPI12_1[0], r14, r6\n\tjump.gt\t@.BB12_5\n\tand!\t1, r15, r6\n\tjump.ne\t@.BB12_5\n\tst.1\t64, r14\n\tst.1\tr11, r12\n\tadd\t32, r10, r10\n\tadd\tr13, r10, r13\n\tsub!\tr13, r3, r6\n\tjump.gt\t@.BB12_1\n\tsub!\tr12, r0, r6\n\tjump.eq\t@.BB12_26\n\tadd\tr11, r0, r12\n.BB12_25:\n\tptr.add\tstack[@ptr_calldata], r10, r6\n\tld\tr6, r6\n\tadd\t32, r12, r12\n\tst.1\tr12, r6\n\tadd\t32, r10, r10\n\tsub!\tr10, r13, r6\n\tjump.lt\t@.BB12_25\n.BB12_26:\n\tst.1\tr9, r11\n\tadd\t64, r8, r10\n\tsub\tr3, r10, r6\n\tadd\t@CPI12_0[0], r0, r9\n\tsub.s!\t128, r6, r11\n\tadd\tr0, r0, r11\n\tadd.lt\tr9, r0, r11\n\tand\t@CPI12_0[0], r6, r6\n\tsub!\tr6, r0, r12\n\tadd.le\tr0, r0, r9\n\tsub.s!\t@CPI12_0[0], r6, r6\n\tadd\tr11, r0, r6\n\tadd.eq\tr9, r0, r6\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB12_1\n\tld.1\t64, r9\n\tsub.s!\t@CPI12_6[0], r9, r6\n\tjump.gt\t@.BB12_5\n\tadd\t128, r9, r6\n\tst.1\t64, r6\n\tptr.add\tstack[@ptr_calldata], r10, r6\n\tld\tr6, r6\n\tst.1.inc\tr9, r6, r6\n\tadd\t96, r8, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tld\tr10, r10\n\tst.1\tr6, r10\n\tadd\t128, r8, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tadd\t64, r9, r10\n\tst.1\tr10, r6\n\tadd\t192, r8, r10\n\tsub\tr3, r10, r6\n\tadd\t@CPI12_0[0], r0, r11\n\tsub.s!\t64, r6, r12\n\tadd\tr0, r0, r12\n\tadd.lt\tr11, r0, r12\n\tand\t@CPI12_0[0], r6, r6\n\tsub!\tr6, r0, r13\n\tadd.le\tr0, r0, r11\n\tsub.s!\t@CPI12_0[0], r6, r6\n\tadd\tr12, r0, r6\n\tadd.eq\tr11, r0, r6\n\tadd\t160, r8, r11\n\tptr.add\tstack[@ptr_calldata], r11, r11\n\tld\tr11, r11\n\tadd\t96, r9, r12\n\tst.1\tr12, r11\n\tadd\t64, r7, r11\n\tst.1\tr11, r9\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB12_1\n\tld.1\t64, r9\n\tsub.s!\t@CPI12_5[0], r9, r6\n\tjump.gt\t@.BB12_5\n\tadd\t64, r9, r6\n\tst.1\t64, r6\n\tptr.add\tstack[@ptr_calldata], r10, r6\n\tld\tr6, r6\n\tst.1.inc\tr9, r6, r6\n\tadd\t224, r8, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tst.1\tr6, r8\n\tadd\t96, r7, r6\n\tst.1\tr6, r9\n\tadd\t324, r2, r9\n\tsub\tr3, r9, r6\n\tadd\t@CPI12_0[0], r0, r8\n\tsub.s!\t64, r6, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr8, r0, r10\n\tand\t@CPI12_0[0], r6, r6\n\tsub!\tr6, r0, r11\n\tadd.le\tr0, r0, r8\n\tsub.s!\t@CPI12_0[0], r6, r6\n\tadd\tr10, r0, r6\n\tadd.eq\tr8, r0, r6\n\tst.1\tr5, r7\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB12_1\n\tld.1\t64, r8\n\tsub.s!\t@CPI12_5[0], r8, r6\n\tjump.gt\t@.BB12_5\n\tadd\t64, r8, r6\n\tst.1\t64, r6\n\tptr.add\tstack[@ptr_calldata], r9, r6\n\tld\tr6, r7\n\tsub.s!\t@CPI12_4[0], r7, r6\n\tjump.gt\t@.BB12_1\n\tst.1.inc\tr8, r7, r7\n\tadd\t356, r2, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r9\n\tsub.s!\t65535, r9, r6\n\tjump.gt\t@.BB12_1\n\tst.1\tr7, r9\n\tadd\t64, r1, r7\n\tst.1\tr7, r8\n\tadd\t388, r2, r6\n\tptr.add\tstack[@ptr_calldata], r0, r8\n\tptr.add\tr8, r6, r6\n\tld\tr6, r9\n\tsub.s!\t@CPI12_1[0], r9, r6\n\tjump.gt\t@.BB12_1\n\tadd\tr9, r4, r9\n\tadd\t31, r9, r4\n\tadd\t@CPI12_0[0], r0, r6\n\tsub!\tr4, r3, r10\n\tadd\tr0, r0, r10\n\tadd.ge\tr6, r0, r10\n\tand\t@CPI12_0[0], r4, r4\n\tand\t@CPI12_0[0], r3, r11\n\tsub!\tr4, r11, r12\n\tadd.ge\tr0, r0, r6\n\txor\tr4, r11, r4\n\tsub.s!\t@CPI12_0[0], r4, r4\n\tadd\tr10, r0, r4\n\tadd.eq\tr6, r0, r4\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB12_1\n\tptr.add\tr8, r9, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI12_1[0], r4, r6\n\tjump.gt\t@.BB12_5\n\tadd\t63, r4, r6\n\tadd\tstack-[15], r0, r8\n\tand\tr6, r8, r8\n\tld.1\t64, r6\n\tadd\tr6, r8, r8\n\tsub!\tr8, r6, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI12_1[0], r8, r11\n\tjump.gt\t@.BB12_5\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB12_5\n\tst.1\t64, r8\n\tst.1.inc\tr6, r4, r8\n\tadd\t32, r9, r9\n\tadd\tr4, r9, r10\n\tsub!\tr10, r3, r3\n\tjump.gt\t@.BB12_1\n\tand\t31, r4, r3\n\tptr.add\tstack[@ptr_calldata], r9, r9\n\tshr.s!\t5, r4, r10\n\tjump.eq\t@.BB12_87\n\tadd\tr0, r0, r11\n.BB12_42:\n\tshl.s\t5, r11, r12\n\tadd\tr8, r12, r13\n\tptr.add\tr9, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r10, r12\n\tjump.lt\t@.BB12_42\n.BB12_87:\n\tsub!\tr3, r0, r11\n\tjump.eq\t@.BB12_44\n\tshl.s\t5, r10, r10\n\tptr.add\tr9, r10, r9\n\tadd\tr8, r10, r10\n\tshl.s\t3, r3, r3\n\tld.1\tr10, r11\n\tshl\tr11, r3, r11\n\tshr\tr11, r3, r11\n\tld\tr9, r9\n\tsub\t256, r3, r3\n\tshr\tr9, r3, r9\n\tshl\tr9, r3, r3\n\tor\tr3, r11, r3\n\tst.1\tr10, r3\n.BB12_44:\n\tadd\tr8, r4, r3\n\tst.1\tr3, r0\n\tadd\t96, r1, r3\n\tst.1\tr3, r6\n\tadd\t420, r2, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI12_4[0], r2, r4\n\tjump.gt\t@.BB12_1\n\tadd\t128, r1, r6\n\tst.1\tr6, r2\n\tadd\t151, r0, r2\n\tadd\tr2, r0, stack-[12]\n\tsload\tr2, r2\n\tsub.s!\t2, r2, r2\n\tjump.ne\t@.BB12_47\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_22[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_8[0], r0, r2\n\tsub.s!\t@CPI12_8[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_47:\n\tadd\t2, r0, r2\n\tadd\tstack-[12], r0, r4\n\tsstore\tr4, r2\n\tld.1\tr3, r3\n\tld.1\tr7, r7\n\tld.1\tr5, r2\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tld.1\tr6, r1\n\tand\t@CPI12_4[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[11]\n\tsub.s!\t@CPI12_5[0], r1, r1\n\tjump.gt\t@.BB12_5\n\tadd\tstack-[11], r0, r4\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI12_6[0], r4, r5\n\tjump.gt\t@.BB12_5\n\tadd\tstack-[11], r0, r4\n\tadd\t128, r4, r5\n\tst.1\t64, r5\n\tadd\t50, r0, r5\n\tadd\tr5, r0, stack-[6]\n\tsload\tr5, r5\n\tand\t@CPI12_4[0], r5, r6\n\tst.1\tr1, r6\n\tshr.s\t160, r5, r5\n\tand\t65535, r5, r5\n\tadd\t96, r4, r6\n\tst.1\tr6, r5\n\tadd\t32, r4, r5\n\tadd\tr5, r0, stack-[5]\n\tst.1\tr5, r7\n\tst.1\tr4, r1\n\tadd\t64, r2, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t96, r2, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[10], r0, r1\n\tnear_call\tr0, @fun_validateOrderAndListing_17481, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[9]\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB12_51\n\tadd\t@CPI12_20[0], r0, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI12_8[0], r0, r1\n\tsub.s!\t@CPI12_8[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_18[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_51:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t@CPI12_7[0], r1, r1\n\tjump.gt\t@.BB12_5\n\tadd\tstack-[8], r0, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tstack-[9], r0, r3\n\tadd\t384, r3, r2\n\tst.1\t64, r2\n\tadd\t352, r0, r2\n\tst.1.inc\tr3, r2, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\tr0, r0, r3\n.BB12_53:\n\tshl.s\t5, r3, r4\n\tadd\tstack-[15], r0, r5\n\tadd\tr5, r4, r5\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tsub.s!\t11, r3, r4\n\tjump.lt\t@.BB12_53\n\tadd\tstack-[9], r0, r4\n\tadd\t192, r4, r2\n\tadd\t1, r0, r3\n\tadd\tr3, r0, stack-[4]\n\tst.1\tr2, r3\n\tadd\t64, r4, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tadd\t128, r0, r3\n\tadd\tr3, r0, stack-[3]\n\tst.1\tr2, r3\n\tadd\t96, r4, r3\n\tst.1\tr3, r0\n\tadd\t160, r4, r3\n\tld.1\tr3, r4\n\tmul\t160, r4, r5, r6\n\tadd\tr2, r5, r2\n\tadd\t128, r2, r5\n\tadd\tstack-[10], r0, r8\n\tld.1.inc\tr8, r6, r7\n\tst.1\tr5, r1\n\tadd\t96, r2, r1\n\tst.1\tr1, r6\n\tld.1\tr7, r1\n\tadd\t192, r2, r5\n\tst.1\tr5, r1\n\tadd\t160, r8, r1\n\tadd\t224, r2, r5\n\tld.1\tr1, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tst.1\tr3, r4\n\tld.1\tr1, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB12_56\n\tadd\t160, r2, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n.BB12_56:\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI12_4[0], r1, r1\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\t224, r2, r2\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI12_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI12_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t@CPI12_5[0], r1, r1\n\tjump.gt\t@.BB12_5\n\tadd\tstack-[13], r0, r3\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\tstack-[4], r0, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr2, r1\n\tadd\t64, r3, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack[@calldatasize], r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tadd\tr0, r0, r2\n.BB12_61:\n\tshl.s\t5, r2, r3\n\tadd\tstack-[14], r0, r4\n\tadd\tr4, r3, r4\n\tptr.add\tr1, r3, r3\n\tld\tr3, r3\n\tst.1\tr4, r3\n\tadd!\t1, r2, r2\n\tjump.of\t@.BB12_61\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI12_10[0], r0, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr2, r1\n\tadd\t@CPI12_11[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI12_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_12[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tadd\tstack-[9], r0, r2\n\tadd\t60, r2, r3\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB12_66\n\tadd\tr0, r0, r1\n.BB12_65:\n\tshl.s\t5, r1, r2\n\tadd\tstack-[13], r0, r4\n\tadd\tr4, r2, r4\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tst.1\tr4, r2\n\tadd\t1, r1, r1\n\tsub.s!\t3, r1, r2\n\tjump.lt\t@.BB12_65\n\tjump\t@.BB12_71\n.BB12_66:\n\tadd\t@CPI12_8[0], r0, r4\n\tsub.s!\t@CPI12_8[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\tstack-[1], r0, r5\n\tsub.s\t28, r5, r5\n\tsub.s!\t@CPI12_8[0], r5, r6\n\tadd.ge\tr4, r0, r5\n\tshl.s\t96, r5, r5\n\tor\tr5, r3, r3\n\tsub.s!\t@CPI12_8[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI12_8[0], r2, r2\n\tsub.s!\t96, r2, r3\n\tadd\t96, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB12_86\n\tadd\tr0, r0, r5\n.BB12_68:\n\tshl.s\t5, r5, r6\n\tadd\tstack-[13], r0, r7\n\tadd\tr7, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB12_68\n.BB12_86:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB12_70\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tstack-[13], r0, r5\n\tadd\tr5, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB12_70:\n\tadd\tr2, r0, stack[@returndatasize]\n.BB12_71:\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB12_73\n\tadd\t@CPI12_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_73:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB12_75\n\tld.1\t64, r1\n\tadd\t@CPI12_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI12_8[0], r0, r2\n\tsub.s!\t@CPI12_8[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_18[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_75:\n\tadd\tstack-[10], r0, r1\n\tadd\t192, r1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tstack-[8], r0, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tmul\tr1, r2, r3, r2\n\tadd\tr3, r0, stack-[15]\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, stack-[6]\n\tadd\tr0, r0, stack-[13]\n\tadd\tr0, r0, stack-[14]\n\tjump.eq\t@.BB12_82\n\tadd\tstack-[15], r0, r2\n\tdiv\tr2, r1, r1, r2\n\tadd\tstack-[7], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB12_77\n\tadd\tstack-[15], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, stack-[6]\n\tadd\tr0, r0, stack-[13]\n\tadd\tr0, r0, stack-[14]\n\tjump.ne\t@.BB12_79\n.BB12_82:\n\tadd\t@CPI12_15[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[7]\n\tst.2\t4, r1\n\tadd\t@CPI12_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_16[0], r1, r1\n\tadd\t32778, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tadd\tstack-[14], r0, r2\n\tdiv.s\t10000, r2, r3, r2\n\tadd\tstack-[15], r0, r2\n\tadd\tr3, r0, stack-[14]\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB12_85\n\tld.1\t64, r1\n\tadd\t@CPI12_17[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI12_8[0], r0, r2\n\tsub.s!\t@CPI12_8[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_18[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_85:\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tdiv.s\t10000, r2, r2, r3\n\tadd\tr2, r0, stack-[6]\n\tand\t@CPI12_4[0], r1, r1\n\tnear_call\tr0, @fun_transferETH, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tand\t@CPI12_4[0], r1, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @fun_transferETH, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r1\n\tdiv.s\t10000, r1, r2, r1\n\tadd\tr2, r0, stack-[14]\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tand\t@CPI12_4[0], r1, r1\n\tnear_call\tr0, @fun_transferETH, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tr2, r1, r1\n\tadd\tstack-[15], r0, r2\n\tsub\tr2, r1, r2\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI12_4[0], r1, r1\n\tnear_call\tr0, @fun_transferETH, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r3\n\tadd\tstack-[9], r0, r1\n\tadd\tstack-[10], r0, r2\n\tadd\tstack-[15], r0, r4\n\tadd\tstack-[11], r0, r5\n\tnear_call\tr0, @fun_emitExecutionEvent_17486, @DEFAULT_UNWIND\n\tadd\t@CPI12_15[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.2\t4, r1\n\tadd\t32778, r0, r1\n\tadd\t36, r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transferETH, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[4], r0, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB12_79:\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\tstack-[15], r0, r3\n\tmul\tr1, r3, r4, r2\n\tadd\tr4, r0, stack-[13]\n\tdiv\tr4, r3, r2, r3\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB12_77\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\tstack-[15], r0, r3\n\tmul\tr1, r3, r4, r2\n\tadd\tr4, r0, stack-[14]\n\tdiv\tr4, r3, r2, r3\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB12_77\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\tstack-[15], r0, r3\n\tmul\tr1, r3, r4, r2\n\tadd\tr4, r0, stack-[6]\n\tdiv\tr4, r3, r2, r3\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB12_82\n.BB12_77:\n\tadd\t@CPI12_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_14[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nexternal_fun_takeAskPool:\n.func_begin13:\n\tnop\tstack+=[41]\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI13_0[0], r0, r3\n\tsub.s!\t63, r1, r4\n\tadd\tr0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI13_0[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI13_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB13_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[40]\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tjump.gt\t@.BB13_1\n\tadd\tstack-[40], r0, r1\n\tadd\t4, r1, r1\n\tadd\tr1, r0, stack-[39]\n\tsub\tr2, r1, r3\n\tadd\t@CPI13_0[0], r0, r4\n\tsub.s!\t192, r3, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI13_0[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI13_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB13_4\n.BB13_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_4:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[38]\n\tsub.s!\t@CPI13_2[0], r1, r3\n\tjump.lt\t@.BB13_6\n.BB13_5:\n\tadd\t@CPI13_28[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_29[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_6:\n\tadd\tstack-[38], r0, r1\n\tadd\t160, r1, r4\n\tst.1\t64, r4\n\tptr.add\tstack[@ptr_calldata], r0, r6\n\tadd\tstack-[39], r0, r1\n\tptr.add\tr6, r1, r3\n\tld\tr3, r5\n\tsub.s!\t@CPI13_1[0], r5, r3\n\tjump.gt\t@.BB13_1\n\tadd\tstack-[39], r0, r1\n\tadd\tr5, r1, r5\n\tadd\t31, r5, r3\n\tadd\t@CPI13_0[0], r0, r7\n\tsub!\tr3, r2, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI13_0[0], r3, r3\n\tand\t@CPI13_0[0], r2, r9\n\tsub!\tr3, r9, r10\n\tadd.ge\tr0, r0, r7\n\txor\tr3, r9, r3\n\tsub.s!\t@CPI13_0[0], r3, r3\n\tadd\tr8, r0, r3\n\tadd.eq\tr7, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB13_1\n\tptr.add\tr6, r5, r3\n\tld\tr3, r7\n\tsub.s!\t@CPI13_1[0], r7, r3\n\tjump.gt\t@.BB13_5\n\tshl.s\t5, r7, r3\n\tadd\t63, r3, r3\n\tsub.s\t32, r0, r1\n\tadd\tr1, r0, stack-[41]\n\tand\tr3, r1, r3\n\tadd\tr3, r4, r6\n\tsub.s!\t@CPI13_1[0], r6, r3\n\tjump.gt\t@.BB13_5\n\tst.1\t64, r6\n\tst.1\tr4, r7\n\tadd\t32, r5, r5\n\tmul\t288, r7, r3, r6\n\tadd\tr3, r5, r6\n\tsub!\tr6, r2, r3\n\tjump.gt\t@.BB13_1\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB13_12\n.BB13_23:\n\tadd\tstack-[38], r0, r1\n\tst.1.inc\tr1, r4, r1\n\tadd\tr1, r0, stack-[37]\n\tadd\tstack-[40], r0, r1\n\tadd\t36, r1, r3\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add\tr5, r3, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI13_1[0], r4, r3\n\tjump.gt\t@.BB13_1\n\tadd\tstack-[39], r0, r1\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r3\n\tadd\t@CPI13_0[0], r0, r6\n\tsub!\tr3, r2, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI13_0[0], r3, r3\n\tand\t@CPI13_0[0], r2, r8\n\tsub!\tr3, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr3, r8, r3\n\tsub.s!\t@CPI13_0[0], r3, r3\n\tadd\tr7, r0, r3\n\tadd.eq\tr6, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB13_1\n\tptr.add\tr5, r4, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI13_1[0], r6, r3\n\tjump.gt\t@.BB13_5\n\tshl.s\t5, r6, r7\n\tadd\t63, r7, r3\n\tadd\tstack-[41], r0, r1\n\tand\tr3, r1, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r8\n\tadd\tr1, r0, stack-[36]\n\tsub!\tr8, r1, r3\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI13_1[0], r8, r3\n\tjump.gt\t@.BB13_5\n\tand!\t1, r5, r3\n\tjump.ne\t@.BB13_5\n\tst.1\t64, r8\n\tadd\tstack-[36], r0, r1\n\tst.1\tr1, r6\n\tadd\t32, r4, r6\n\tadd\tr7, r6, r7\n\tsub!\tr7, r2, r3\n\tjump.gt\t@.BB13_1\n\tsub!\tr6, r7, r3\n\tjump.ge\t@.BB13_48\n\tadd\tstack-[36], r0, r8\n.BB13_31:\n\tptr.add\tstack[@ptr_calldata], r6, r3\n\tld\tr3, r5\n\tsub.s!\t@CPI13_1[0], r5, r3\n\tjump.gt\t@.BB13_1\n\tadd\tr5, r4, r9\n\tadd\t32, r9, r12\n\tsub\tr2, r12, r3\n\tadd\t@CPI13_0[0], r0, r5\n\tsub.s!\t256, r3, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr5, r0, r10\n\tand\t@CPI13_0[0], r3, r3\n\tsub!\tr3, r0, r11\n\tadd.le\tr0, r0, r5\n\tsub.s!\t@CPI13_0[0], r3, r3\n\tadd\tr10, r0, r3\n\tadd.eq\tr5, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB13_1\n\tld.1\t64, r10\n\tsub.s!\t@CPI13_6[0], r10, r3\n\tjump.gt\t@.BB13_5\n\tadd\t128, r10, r3\n\tst.1\t64, r3\n\tptr.add\tstack[@ptr_calldata], r12, r3\n\tld\tr3, r3\n\tst.1.inc\tr10, r3, r11\n\tadd\t64, r9, r3\n\tptr.add\tstack[@ptr_calldata], r0, r14\n\tptr.add\tr14, r3, r3\n\tld\tr3, r5\n\tsub.s!\t@CPI13_1[0], r5, r3\n\tjump.gt\t@.BB13_1\n\tadd\tr5, r12, r13\n\tadd\t31, r13, r3\n\tadd\t@CPI13_0[0], r0, r5\n\tsub!\tr3, r2, r12\n\tadd\tr0, r0, r12\n\tadd.ge\tr5, r0, r12\n\tand\t@CPI13_0[0], r3, r3\n\tand\t@CPI13_0[0], r2, r15\n\tsub!\tr3, r15, r1\n\tadd\tr0, r0, r1\n\tadd.lt\tr5, r0, r1\n\txor\tr3, r15, r3\n\tsub.s!\t@CPI13_0[0], r3, r3\n\tadd.ne\tr12, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB13_1\n\tptr.add\tr14, r13, r1\n\tld\tr1, r14\n\tsub.s!\t@CPI13_1[0], r14, r1\n\tjump.gt\t@.BB13_5\n\tshl.s\t5, r14, r15\n\tadd\t63, r15, r1\n\tadd\tstack-[41], r0, r3\n\tand\tr1, r3, r1\n\tld.1\t64, r12\n\tadd\tr12, r1, r5\n\tsub!\tr5, r12, r1\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI13_1[0], r5, r1\n\tjump.gt\t@.BB13_5\n\tand!\t1, r3, r1\n\tjump.ne\t@.BB13_5\n\tst.1\t64, r5\n\tst.1\tr12, r14\n\tadd\t32, r13, r13\n\tadd\tr15, r13, r14\n\tsub!\tr14, r2, r1\n\tjump.gt\t@.BB13_1\n\tsub!\tr13, r14, r1\n\tjump.ge\t@.BB13_43\n\tadd\tr12, r0, r15\n.BB13_42:\n\tptr.add\tstack[@ptr_calldata], r13, r1\n\tld\tr1, r1\n\tadd\t32, r15, r15\n\tst.1\tr15, r1\n\tadd\t32, r13, r13\n\tsub!\tr13, r14, r1\n\tjump.lt\t@.BB13_42\n.BB13_43:\n\tst.1\tr11, r12\n\tadd\t96, r9, r12\n\tsub\tr2, r12, r1\n\tadd\t@CPI13_0[0], r0, r3\n\tsub.s!\t128, r1, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t@CPI13_0[0], r1, r1\n\tsub!\tr1, r0, r11\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI13_0[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB13_1\n\tld.1\t64, r11\n\tsub.s!\t@CPI13_6[0], r11, r1\n\tjump.gt\t@.BB13_5\n\tadd\t128, r11, r1\n\tst.1\t64, r1\n\tptr.add\tstack[@ptr_calldata], r12, r1\n\tld\tr1, r1\n\tst.1.inc\tr11, r1, r1\n\tadd\t128, r9, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tst.1\tr1, r3\n\tadd\t160, r9, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t64, r11, r3\n\tst.1\tr3, r1\n\tadd\t224, r9, r12\n\tsub\tr2, r12, r1\n\tadd\t@CPI13_0[0], r0, r3\n\tsub.s!\t64, r1, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t@CPI13_0[0], r1, r1\n\tsub!\tr1, r0, r13\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI13_0[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr3, r0, r1\n\tadd\t192, r9, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\t96, r11, r5\n\tst.1\tr5, r3\n\tadd\t64, r10, r3\n\tst.1\tr3, r11\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB13_1\n\tld.1\t64, r11\n\tsub.s!\t@CPI13_5[0], r11, r1\n\tjump.gt\t@.BB13_5\n\tadd\t32, r8, r8\n\tadd\t64, r11, r1\n\tst.1\t64, r1\n\tptr.add\tstack[@ptr_calldata], r12, r1\n\tld\tr1, r1\n\tst.1.inc\tr11, r1, r1\n\tadd\t256, r9, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tst.1\tr1, r3\n\tadd\t96, r10, r1\n\tst.1\tr1, r11\n\tst.1\tr8, r10\n\tadd\t32, r6, r6\n\tsub!\tr6, r7, r1\n\tjump.lt\t@.BB13_31\n.BB13_48:\n\tadd\tstack-[40], r0, r1\n\tadd\t68, r1, r6\n\tsub\tr2, r6, r1\n\tadd\t@CPI13_0[0], r0, r3\n\tsub.s!\t64, r1, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI13_0[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI13_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tadd\tstack-[37], r0, r3\n\tadd\tstack-[36], r0, r4\n\tst.1\tr3, r4\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB13_1\n\tld.1\t64, r4\n\tsub.s!\t@CPI13_5[0], r4, r1\n\tjump.gt\t@.BB13_5\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tptr.add\tstack[@ptr_calldata], r6, r1\n\tld\tr1, r5\n\tsub.s!\t@CPI13_4[0], r5, r1\n\tjump.gt\t@.BB13_1\n\tst.1.inc\tr4, r5, r5\n\tadd\tstack-[40], r0, r1\n\tadd\t100, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r6\n\tsub.s!\t65535, r6, r1\n\tjump.gt\t@.BB13_1\n\tst.1\tr5, r6\n\tadd\tstack-[38], r0, r1\n\tadd\t64, r1, r1\n\tadd\tr1, r0, stack-[35]\n\tst.1\tr1, r4\n\tadd\tstack-[40], r0, r1\n\tadd\t132, r1, r1\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r1, r1\n\tld\tr1, r5\n\tsub.s!\t@CPI13_1[0], r5, r1\n\tjump.gt\t@.BB13_1\n\tadd\tstack-[39], r0, r1\n\tadd\tr5, r1, r6\n\tadd\t31, r6, r1\n\tadd\t@CPI13_0[0], r0, r3\n\tsub!\tr1, r2, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr3, r0, r5\n\tand\t@CPI13_0[0], r1, r1\n\tand\t@CPI13_0[0], r2, r7\n\tsub!\tr1, r7, r8\n\tadd.ge\tr0, r0, r3\n\txor\tr1, r7, r1\n\tsub.s!\t@CPI13_0[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB13_1\n\tptr.add\tr4, r6, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI13_1[0], r3, r1\n\tjump.gt\t@.BB13_5\n\tadd\t63, r3, r1\n\tadd\tstack-[41], r0, r4\n\tand\tr1, r4, r1\n\tld.1\t64, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r4, r1\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI13_1[0], r5, r1\n\tjump.gt\t@.BB13_5\n\tand!\t1, r7, r1\n\tjump.ne\t@.BB13_5\n\tst.1\t64, r5\n\tst.1.inc\tr4, r3, r5\n\tadd\t32, r6, r6\n\tadd\tr3, r6, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB13_1\n\tand\t31, r3, r2\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB13_250\n\tadd\tr0, r0, r8\n.BB13_60:\n\tshl.s\t5, r8, r1\n\tadd\tr5, r1, r9\n\tptr.add\tr6, r1, r1\n\tld\tr1, r1\n\tst.1\tr9, r1\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r1\n\tjump.lt\t@.BB13_60\n.BB13_250:\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB13_62\n\tshl.s\t5, r7, r1\n\tptr.add\tr6, r1, r6\n\tadd\tr5, r1, r1\n\tshl.s\t3, r2, r2\n\tld.1\tr1, r7\n\tshl\tr7, r2, r7\n\tshr\tr7, r2, r7\n\tld\tr6, r6\n\tsub\t256, r2, r2\n\tshr\tr6, r2, r6\n\tshl\tr6, r2, r2\n\tor\tr2, r7, r2\n\tst.1\tr1, r2\n.BB13_62:\n\tadd\tr5, r3, r1\n\tst.1\tr1, r0\n\tadd\tstack-[38], r0, r1\n\tadd\t96, r1, r1\n\tadd\tr1, r0, stack-[39]\n\tst.1\tr1, r4\n\tadd\tstack-[40], r0, r1\n\tadd\t164, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI13_4[0], r1, r2\n\tjump.gt\t@.BB13_1\n\tadd\tstack-[38], r0, r2\n\tadd\t128, r2, r2\n\tadd\tr2, r0, stack-[34]\n\tst.1\tr2, r1\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tld.1\t64, r3\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tadd\t@CPI13_7[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t36, r3, r1\n\tcontext.this\tr2\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[40]\n\tadd\t4, r3, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr1, r2\n\tadd\t@CPI13_8[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[36]\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_10[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB13_67\n\tadd\t@CPI13_9[0], r0, r3\n\tsub.s!\t@CPI13_9[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[40], r0, r5\n\tsub.s!\t@CPI13_9[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI13_11[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tshr.s\t96, r1, r1\n\tand\t@CPI13_9[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_66\n.BB13_67:\n\tadd\t151, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tsload\tr1, r1\n\tsub.s!\t2, r1, r1\n\tjump.ne\t@.BB13_69\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_9[0], r0, r2\n\tsub.s!\t@CPI13_9[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_12:\n\tadd\tr4, r0, r7\n.BB13_13:\n\tsub\tr2, r5, r3\n\tadd\t@CPI13_0[0], r0, r8\n\tsub.s!\t288, r3, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr8, r0, r9\n\tand\t@CPI13_0[0], r3, r3\n\tsub!\tr3, r0, r10\n\tadd.le\tr0, r0, r8\n\tsub.s!\t@CPI13_0[0], r3, r3\n\tadd\tr9, r0, r3\n\tadd.eq\tr8, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB13_1\n\tld.1\t64, r8\n\tsub.s!\t@CPI13_3[0], r8, r3\n\tjump.gt\t@.BB13_5\n\tadd\t256, r8, r3\n\tst.1\t64, r3\n\tptr.add\tstack[@ptr_calldata], r5, r3\n\tld\tr3, r9\n\tsub.s!\t@CPI13_4[0], r9, r3\n\tjump.gt\t@.BB13_1\n\tst.1.inc\tr8, r9, r9\n\tadd\t32, r5, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r10\n\tsub.s!\t@CPI13_4[0], r10, r3\n\tjump.gt\t@.BB13_1\n\tst.1\tr9, r10\n\tadd\t64, r5, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\t64, r8, r9\n\tst.1\tr9, r3\n\tadd\t96, r5, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\t96, r8, r9\n\tst.1\tr9, r3\n\tadd\t128, r8, r3\n\tadd\t128, r5, r9\n\tptr.add\tstack[@ptr_calldata], r9, r9\n\tld\tr9, r9\n\tst.1\tr3, r9\n\tadd\t160, r5, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r9\n\tsub.s!\t1, r9, r3\n\tjump.gt\t@.BB13_1\n\tadd\t160, r8, r3\n\tst.1\tr3, r9\n\tadd\t192, r5, r10\n\tsub\tr2, r10, r3\n\tadd\t@CPI13_0[0], r0, r9\n\tsub.s!\t64, r3, r11\n\tadd\tr0, r0, r11\n\tadd.lt\tr9, r0, r11\n\tand\t@CPI13_0[0], r3, r3\n\tsub!\tr3, r0, r12\n\tadd.le\tr0, r0, r9\n\tsub.s!\t@CPI13_0[0], r3, r3\n\tadd\tr11, r0, r3\n\tadd.eq\tr9, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB13_1\n\tld.1\t64, r9\n\tsub.s!\t@CPI13_5[0], r9, r3\n\tjump.gt\t@.BB13_5\n\tadd\t64, r9, r3\n\tst.1\t64, r3\n\tptr.add\tstack[@ptr_calldata], r10, r3\n\tld\tr3, r10\n\tsub.s!\t@CPI13_4[0], r10, r3\n\tjump.gt\t@.BB13_1\n\tst.1.inc\tr9, r10, r10\n\tadd\t224, r5, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r11\n\tsub.s!\t65535, r11, r3\n\tjump.gt\t@.BB13_1\n\tadd\t32, r7, r7\n\tst.1\tr10, r11\n\tadd\t192, r8, r3\n\tst.1\tr3, r9\n\tadd\t256, r5, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\t224, r8, r9\n\tst.1\tr9, r3\n\tst.1\tr7, r8\n\tadd\t288, r5, r5\n\tsub!\tr5, r6, r3\n\tjump.lt\t@.BB13_13\n\tjump\t@.BB13_23\n.BB13_69:\n\tadd\t2, r0, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[39], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[19]\n\tadd\tstack-[35], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[37], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[9]\n\tadd\tstack-[38], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[33]\n\tadd\tstack-[34], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI13_4[0], r2, r2\n\tadd\tr2, r0, stack-[8]\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI13_5[0], r2, r2\n\tjump.gt\t@.BB13_5\n\tadd\tstack-[14], r0, r3\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tsub.s!\t@CPI13_6[0], r3, r3\n\tjump.gt\t@.BB13_5\n\tadd\tstack-[14], r0, r5\n\tadd\t128, r5, r3\n\tst.1\t64, r3\n\tadd\t50, r0, r3\n\tadd\tr3, r0, stack-[7]\n\tsload\tr3, r3\n\tand\t@CPI13_4[0], r3, r4\n\tst.1\tr2, r4\n\tshr.s\t160, r3, r3\n\tand\t65535, r3, r3\n\tadd\t96, r5, r4\n\tst.1\tr4, r3\n\tst.1.inc\tr5, r2, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1\tr2, r1\n\tadd\tstack-[33], r0, r1\n\tld.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tr2, r0, stack-[18]\n\tsub.s!\t@CPI13_1[0], r2, r1\n\tjump.gt\t@.BB13_5\n\tadd\tstack-[18], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\t63, r1, r2\n\tadd\tstack-[41], r0, r3\n\tand\tr2, r3, r2\n\tld.1\t64, r4\n\tadd\tr4, r2, r3\n\tadd\tr4, r0, stack-[16]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI13_1[0], r3, r5\n\tjump.gt\t@.BB13_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB13_5\n\tst.1\t64, r3\n\tadd\tstack-[16], r0, r3\n\tadd\tstack-[18], r0, r4\n\tst.1.inc\tr3, r4, r9\n\tand\t31, r1, r3\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB13_249\n\tadd\tr0, r0, r6\n.BB13_76:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB13_76\n.BB13_249:\n\tadd\tr9, r0, stack-[15]\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB13_78\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tstack-[15], r0, r6\n\tadd\tr6, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB13_78:\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[32]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI13_1[0], r2, r4\n\tjump.gt\t@.BB13_5\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB13_5\n\tst.1\t64, r2\n\tadd\tstack-[32], r0, r2\n\tadd\tstack-[18], r0, r3\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[39]\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB13_81\n.BB13_128:\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[40]\n\tld.1\t64, r2\n\tsub.s!\t@CPI13_22[0], r2, r1\n\tjump.gt\t@.BB13_5\n\tadd\t320, r2, r1\n\tst.1\t64, r1\n\tadd\t288, r2, r3\n\tadd\t96, r0, r1\n\tst.1\tr3, r1\n\tadd\t256, r2, r3\n\tst.1\tr3, r1\n\tadd\t224, r2, r3\n\tst.1\tr3, r1\n\tadd\t192, r2, r3\n\tst.1\tr3, r1\n\tadd\t160, r2, r3\n\tst.1\tr3, r1\n\tadd\t128, r2, r3\n\tst.1\tr3, r0\n\tadd\t96, r2, r3\n\tst.1\tr3, r0\n\tadd\t64, r2, r3\n\tst.1\tr3, r0\n\tadd\t32, r2, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n\tadd\tstack-[40], r0, r2\n\tmul\t160, r2, r2, r3\n\tsub.s\t193, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.gt\t@.BB13_123\n\tdiv.s\t160, r2, r3, r4\n\tadd\tstack-[40], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB13_123\n\tsub.s!\t@CPI13_23[0], r2, r3\n\tjump.gt\t@.BB13_5\n\tadd\t255, r2, r3\n\tadd\tstack-[41], r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tadd\tr4, r0, stack-[31]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI13_1[0], r3, r5\n\tjump.gt\t@.BB13_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB13_5\n\tadd\t192, r2, r4\n\tst.1\t64, r3\n\tadd\tstack-[31], r0, r3\n\tst.1.inc\tr3, r4, r3\n\tadd\t223, r2, r2\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB13_245\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tadd\tr0, r0, r5\n.BB13_136:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB13_136\n.BB13_245:\n\tsub!\tr0, r0, r2\n\tjump.eq\t@.BB13_138\n.BB13_138:\n\tadd\tstack-[31], r0, r4\n\tadd\t64, r4, r2\n\tadd\tstack-[8], r0, r3\n\tst.1\tr2, r3\n\tadd\t192, r4, r2\n\tadd\tstack-[40], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tadd\t128, r0, r5\n\tadd\tr2, r0, stack-[18]\n\tadd\tr5, r0, stack-[26]\n\tst.1\tr2, r5\n\tadd\t96, r4, r2\n\tst.1\tr2, r0\n\tsub.s!\t@CPI13_1[0], r3, r2\n\tjump.gt\t@.BB13_5\n\tadd\tstack-[40], r0, r2\n\tshl.s\t5, r2, r6\n\tadd\t63, r6, r2\n\tadd\tstack-[41], r0, r3\n\tand\tr2, r3, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r3\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI13_1[0], r3, r7\n\tjump.gt\t@.BB13_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB13_5\n\tst.1\t64, r3\n\tadd\tstack-[40], r0, r3\n\tst.1\tr2, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB13_146\n\tadd\tr0, r0, r3\n.BB13_143:\n\tld.1\t64, r5\n\tsub.s!\t@CPI13_24[0], r5, r7\n\tjump.gt\t@.BB13_5\n\tadd\t224, r5, r7\n\tst.1\t64, r7\n\tadd\t160, r5, r7\n\tst.1\tr7, r0\n\tadd\t128, r5, r7\n\tst.1\tr7, r0\n\tadd\t96, r5, r7\n\tst.1\tr7, r0\n\tadd\t64, r5, r7\n\tst.1\tr7, r0\n\tadd\t32, r5, r7\n\tst.1\tr7, r0\n\tst.1\tr5, r0\n\tld.1\t64, r7\n\tsub.s!\t@CPI13_25[0], r7, r8\n\tjump.gt\t@.BB13_5\n\tadd\t160, r7, r8\n\tst.1\t64, r8\n\tadd\t128, r7, r8\n\tst.1\tr8, r0\n\tadd\t96, r7, r8\n\tst.1\tr8, r0\n\tadd\t64, r7, r8\n\tst.1\tr8, r0\n\tadd\t32, r7, r8\n\tst.1\tr8, r0\n\tst.1\tr7, r0\n\tadd\t192, r5, r8\n\tst.1\tr8, r7\n\tadd\t32, r3, r3\n\tadd\tr3, r2, r7\n\tst.1\tr7, r5\n\tsub!\tr3, r6, r5\n\tjump.lt\t@.BB13_143\n.BB13_146:\n\tld.1\t64, r3\n\tadd\tr3, r4, r5\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI13_1[0], r5, r8\n\tjump.gt\t@.BB13_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB13_5\n\tst.1\t64, r5\n\tadd\tstack-[40], r0, r5\n\tst.1.inc\tr3, r5, r7\n\tand\t31, r6, r5\n\tadd\tstack[@calldatasize], r0, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB13_244\n\tadd\tr0, r0, r9\n.BB13_150:\n\tshl.s\t5, r9, r10\n\tadd\tr7, r10, r11\n\tptr.add\tr8, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB13_150\n.BB13_244:\n\tsub!\tr5, r0, r9\n\tjump.eq\t@.BB13_152\n\tshl.s\t5, r6, r9\n\tptr.add\tr8, r9, r8\n\tadd\tr7, r9, r7\n\tshl.s\t3, r5, r9\n\tld.1\tr7, r10\n\tshl\tr10, r9, r10\n\tshr\tr10, r9, r10\n\tld\tr8, r8\n\tsub\t256, r9, r9\n\tshr\tr8, r9, r8\n\tshl\tr8, r9, r8\n\tor\tr8, r10, r8\n\tst.1\tr7, r8\n.BB13_152:\n\tld.1\t64, r7\n\tadd\tr7, r4, r8\n\tsub!\tr8, r7, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI13_1[0], r8, r10\n\tjump.gt\t@.BB13_5\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB13_5\n\tst.1\t64, r8\n\tadd\tstack-[40], r0, r8\n\tst.1.inc\tr7, r8, r8\n\tadd\tstack[@calldatasize], r0, r9\n\tptr.add\tstack[@ptr_calldata], r9, r9\n\tsub!\tr6, r0, r10\n\tjump.eq\t@.BB13_243\n\tadd\tr0, r0, r10\n.BB13_156:\n\tshl.s\t5, r10, r11\n\tadd\tr8, r11, r12\n\tptr.add\tr9, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r6, r11\n\tjump.lt\t@.BB13_156\n.BB13_243:\n\tsub!\tr5, r0, r10\n\tjump.eq\t@.BB13_158\n\tshl.s\t5, r6, r10\n\tptr.add\tr9, r10, r9\n\tadd\tr8, r10, r8\n\tshl.s\t3, r5, r10\n\tld.1\tr8, r11\n\tshl\tr11, r10, r11\n\tshr\tr11, r10, r11\n\tld\tr9, r9\n\tsub\t256, r10, r10\n\tshr\tr9, r10, r9\n\tshl\tr9, r10, r9\n\tor\tr9, r11, r9\n\tst.1\tr8, r9\n.BB13_158:\n\tld.1\t64, r8\n\tadd\tr8, r4, r9\n\tsub!\tr9, r8, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI13_1[0], r9, r11\n\tjump.gt\t@.BB13_5\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB13_5\n\tst.1\t64, r9\n\tadd\tstack-[40], r0, r9\n\tst.1.inc\tr8, r9, r9\n\tadd\tstack[@calldatasize], r0, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tsub!\tr6, r0, r11\n\tjump.eq\t@.BB13_242\n\tadd\tr0, r0, r11\n.BB13_162:\n\tshl.s\t5, r11, r12\n\tadd\tr9, r12, r13\n\tptr.add\tr10, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r6, r12\n\tjump.lt\t@.BB13_162\n.BB13_242:\n\tsub!\tr5, r0, r11\n\tjump.eq\t@.BB13_164\n\tshl.s\t5, r6, r11\n\tptr.add\tr10, r11, r10\n\tadd\tr9, r11, r9\n\tshl.s\t3, r5, r11\n\tld.1\tr9, r12\n\tshl\tr12, r11, r12\n\tshr\tr12, r11, r12\n\tld\tr10, r10\n\tsub\t256, r11, r11\n\tshr\tr10, r11, r10\n\tshl\tr10, r11, r10\n\tor\tr10, r12, r10\n\tst.1\tr9, r10\n.BB13_164:\n\tld.1\t64, r9\n\tadd\tr9, r4, r4\n\tsub!\tr4, r9, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI13_1[0], r4, r11\n\tjump.gt\t@.BB13_5\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB13_5\n\tst.1\t64, r4\n\tadd\tstack-[40], r0, r4\n\tst.1.inc\tr9, r4, r4\n\tadd\tstack[@calldatasize], r0, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tsub!\tr6, r0, r11\n\tjump.eq\t@.BB13_241\n\tadd\tr0, r0, r11\n.BB13_168:\n\tshl.s\t5, r11, r12\n\tadd\tr4, r12, r13\n\tptr.add\tr10, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r6, r12\n\tjump.lt\t@.BB13_168\n.BB13_241:\n\tsub!\tr5, r0, r11\n\tjump.eq\t@.BB13_170\n\tshl.s\t5, r6, r6\n\tptr.add\tr10, r6, r10\n\tadd\tr4, r6, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr10, r10\n\tsub\t256, r5, r5\n\tshr\tr10, r5, r10\n\tshl\tr10, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB13_170:\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[1]\n\tsub.s!\t@CPI13_22[0], r4, r4\n\tjump.gt\t@.BB13_5\n\tadd\tstack-[1], r0, r5\n\tadd\t320, r5, r4\n\tst.1\t64, r4\n\tadd\t256, r5, r4\n\tst.1\tr4, r9\n\tadd\t224, r5, r4\n\tst.1\tr4, r8\n\tadd\t288, r5, r4\n\tadd\tr4, r0, stack-[15]\n\tst.1\tr4, r2\n\tadd\t192, r5, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\tr2, r7\n\tadd\t160, r5, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\tr2, r3\n\tadd\t64, r5, r2\n\tst.1\tr2, r0\n\tadd\t32, r5, r2\n\tst.1\tr2, r0\n\tadd\t128, r5, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr2, r0\n\tst.1\tr5, r0\n\tadd\t96, r5, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tsub.s!\t@CPI13_3[0], r2, r3\n\tjump.gt\t@.BB13_5\n\tadd\t256, r2, r3\n\tst.1\t64, r3\n\tadd\t160, r2, r3\n\tst.1\tr3, r0\n\tadd\t128, r2, r3\n\tst.1\tr3, r0\n\tadd\t96, r2, r3\n\tst.1\tr3, r0\n\tadd\t64, r2, r3\n\tst.1\tr3, r0\n\tadd\t32, r2, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n\tld.1\t64, r3\n\tsub.s!\t@CPI13_5[0], r3, r4\n\tjump.gt\t@.BB13_5\n\tadd\t64, r3, r4\n\tst.1\t64, r4\n\tadd\t32, r3, r4\n\tst.1\tr4, r0\n\tst.1\tr3, r0\n\tadd\t192, r2, r4\n\tst.1\tr4, r3\n\tadd\t224, r2, r2\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tsub.s!\t@CPI13_6[0], r2, r3\n\tjump.gt\t@.BB13_5\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tst.1\tr2, r0\n\tld.1\t64, r1\n\tsub.s!\t@CPI13_6[0], r1, r3\n\tjump.gt\t@.BB13_5\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t96, r1, r3\n\tst.1\tr3, r0\n\tadd\t64, r1, r3\n\tst.1\tr3, r0\n\tadd\t32, r1, r3\n\tst.1\tr3, r0\n\tst.1\tr1, r0\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI13_5[0], r1, r3\n\tjump.gt\t@.BB13_5\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tadd\t32, r1, r3\n\tst.1\tr3, r0\n\tst.1\tr1, r0\n\tadd\t96, r2, r2\n\tst.1\tr2, r1\n\tadd\t@CPI13_26[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_27[0], r1, r1\n\tadd\t32778, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tadd\tstack-[40], r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB13_178\n.BB13_205:\n\tadd\tstack-[31], r0, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tstack-[14], r0, r3\n\tnear_call\tr0, @fun_executeBatchTransfer, @DEFAULT_UNWIND\n\tadd\t@CPI13_26[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.2\t4, r1\n\tadd\t32778, r0, r1\n\tadd\t36, r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[12], r0, r1\n\tnear_call\tr0, @fun_transferETH, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB13_66:\n\tld.1\t64, r1\n\tadd\t@CPI13_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI13_9[0], r0, r2\n\tsub.s!\t@CPI13_9[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_81:\n\tadd\t96, r0, r2\n\tadd\tr2, r0, stack-[40]\n\tadd\tr0, r0, r2\n.BB13_82:\n\tadd\tstack-[39], r0, r3\n\tadd\tr2, r3, r3\n\tadd\tstack-[40], r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB13_82\n\tadd\tr0, r0, stack-[38]\n.BB13_84:\n\tadd\tstack-[33], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[38], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB13_85\n\tadd\tstack-[38], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\tstack-[17], r0, r1\n\tadd\tr2, r0, stack-[34]\n\tadd\tr1, r2, r1\n\tld.1\tr1, r2\n\tadd\t96, r2, r2\n\tld.1\tr2, r4\n\tsub.s!\t@CPI13_1[0], r4, r2\n\tjump.gt\t@.BB13_5\n\tshl.s\t5, r4, r3\n\tadd\t63, r3, r2\n\tadd\tstack-[41], r0, r5\n\tand\tr2, r5, r5\n\tld.1\t64, r2\n\tadd\tr2, r5, r5\n\tsub!\tr5, r2, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI13_1[0], r5, r7\n\tjump.gt\t@.BB13_5\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB13_5\n\tst.1\t64, r5\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack[@calldatasize], r0, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB13_248\n\tadd\tr0, r0, r7\n.BB13_91:\n\tshl.s\t5, r7, r8\n\tadd\tr4, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB13_91\n.BB13_248:\n\tand!\t31, r3, r3\n\tjump.eq\t@.BB13_93\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr4, r6, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr5, r5\n\tsub\t256, r3, r3\n\tshr\tr5, r3, r5\n\tshl\tr5, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB13_93:\n\tadd\tstack-[32], r0, r3\n\tld.1\tr3, r3\n\tadd\tstack-[38], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.le\t@.BB13_85\n\tadd\tstack-[39], r0, r3\n\tadd\tstack-[34], r0, r4\n\tadd\tr4, r3, r3\n\tst.1\tr3, r2\n\tadd\tstack-[32], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[38], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB13_85\n\tadd\tstack-[33], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[38], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB13_85\n\tld.1\tr1, r3\n\tadd\t128, r3, r1\n\tadd\tr1, r0, stack-[21]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[26]\n\tadd\t96, r3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[27]\n\tadd\t64, r3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[28]\n\tld.1.inc\tr3, r1, r2\n\tand\t@CPI13_4[0], r1, r1\n\tadd\tr1, r0, stack-[29]\n\tld.1\tr2, r1\n\tand\t@CPI13_4[0], r1, r1\n\tadd\tr1, r0, stack-[25]\n\tadd\tr3, r0, stack-[37]\n\tadd\t160, r3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[24]\n\tsub.s!\t2, r1, r1\n\tjump.ge\t@.BB13_97\n\tadd\tstack-[37], r0, r1\n\tadd\t192, r1, r1\n\tadd\tr1, r0, stack-[20]\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r2, r1\n\tadd\tr2, r0, stack-[31]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[30]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[35]\n\tadd\t@CPI13_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[36], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI13_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_10[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tadd\tstack-[35], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[30], r0, r1\n\tand\t65535, r1, r1\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tadd\tstack-[31], r0, r1\n\tand\t@CPI13_4[0], r1, r1\n\tadd\t64, r4, r3\n\tst.1\tr3, r1\n\tadd\tstack-[40], r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI13_6[0], r4, r1\n\tjump.gt\t@.BB13_5\n\tadd\tstack-[35], r0, r4\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI13_9[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_9[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI13_14[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[31]\n\tadd\tstack-[37], r0, r2\n\tld.1\tr2, r1\n\tand\t@CPI13_4[0], r1, r1\n\tadd\t224, r2, r2\n\tadd\tr2, r0, stack-[22]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[30]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[35]\n\tadd\t@CPI13_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[36], r0, r1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_10[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tadd\tstack-[35], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t352, r4, r1\n\tadd\tstack-[23], r0, r3\n\tst.1\tr1, r3\n\tadd\t288, r4, r1\n\tadd\tstack-[30], r0, r3\n\tst.1\tr1, r3\n\tadd\t256, r4, r1\n\tadd\tstack-[31], r0, r3\n\tst.1\tr1, r3\n\tadd\t224, r4, r1\n\tadd\tstack-[24], r0, r3\n\tst.1\tr1, r3\n\tadd\t192, r4, r1\n\tadd\tstack-[26], r0, r3\n\tst.1\tr1, r3\n\tadd\t160, r4, r1\n\tadd\tstack-[27], r0, r3\n\tst.1\tr1, r3\n\tadd\t128, r4, r1\n\tadd\tstack-[28], r0, r3\n\tst.1\tr1, r3\n\tadd\t96, r4, r1\n\tadd\tstack-[25], r0, r3\n\tst.1\tr1, r3\n\tadd\t64, r4, r1\n\tadd\tstack-[29], r0, r3\n\tst.1\tr1, r3\n\tadd\t352, r0, r1\n\tst.1\tr4, r1\n\tadd\t320, r4, r1\n\tst.1\tr1, r0\n\tsub.s!\t@CPI13_16[0], r4, r1\n\tjump.gt\t@.BB13_5\n\tadd\tstack-[35], r0, r4\n\tadd\t384, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI13_9[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_9[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI13_14[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r2\n\tadd\tstack-[22], r0, r1\n\tadd\tr2, r0, stack-[31]\n\tst.1\tr1, r2\n\tadd\tstack-[37], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[35]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[37]\n\tadd\t32, r1, r2\n\tadd\t@CPI13_17[0], r0, r1\n\tadd\tr2, r0, stack-[30]\n\tst.1\tr2, r1\n\tadd\t@CPI13_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[36], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[40], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_10[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[35], r0, r3\n\tand\t@CPI13_4[0], r3, r3\n\tadd\tr3, r0, stack-[35]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tadd\tstack-[37], r0, r3\n\tadd\t66, r3, r2\n\tadd\tstack-[31], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r3, r2\n\tst.1\tr2, r1\n\tadd\t66, r0, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI13_6[0], r3, r1\n\tjump.gt\t@.BB13_5\n\tadd\tstack-[37], r0, r3\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tadd\tstack-[30], r0, r4\n\tsub.s!\t@CPI13_9[0], r4, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr3, r3\n\tsub.s!\t@CPI13_9[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_9[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI13_14[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tadd\tstack-[38], r0, r2\n\tmul\t65, r2, r2, r3\n\tadd\tstack-[19], r0, r3\n\tadd\tr2, r3, r2\n\tadd\t96, r2, r3\n\tld.1\tr3, r3\n\tadd\t32, r2, r4\n\tld.1\tr4, r4\n\tadd\t64, r2, r2\n\tld.1\tr2, r2\n\tld\tr1, r1\n\tld.1\t64, r5\n\tadd\t96, r5, r6\n\tst.1\tr6, r2\n\tadd\t64, r5, r2\n\tst.1\tr2, r4\n\tshr.s\t248, r3, r2\n\tadd\t32, r5, r3\n\tst.1\tr3, r2\n\tst.1\tr5, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tsub.s!\t@CPI13_9[0], r5, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr5, r0, r2\n\tst.1\t0, r0\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_9[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI13_18[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI13_9[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB13_247\n\tadd\tr0, r0, r6\n.BB13_110:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB13_110\n.BB13_247:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB13_112\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB13_112:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_113\n\tld.1\t0, r1\n\tand!\t@CPI13_4[0], r1, r2\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB13_126\n\tadd\tstack-[35], r0, r1\n\tsub!\tr2, r1, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB13_126\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[37]\n\tadd\t@CPI13_19[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_20[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tadd\tstack-[37], r0, r2\n\tsub!\tr2, r1, r1\n\tadd\tr0, r0, r1\n\tjump.le\t@.BB13_126\n\tadd\tstack-[20], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t@CPI13_21[0], r1, r2\n\tjump.ge\t@.BB13_123\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t65535, r1, r2\n\tjump.gt\t@.BB13_123\n\tsub.s!\t10001, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n.BB13_126:\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[38], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB13_85\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[34], r0, r3\n\tadd\tr3, r2, r2\n\tand\t1, r1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[38], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[18], r0, r1\n\tadd\tr2, r0, stack-[38]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB13_84\n\tjump\t@.BB13_128\n.BB13_113:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB13_246\n\tadd\tr0, r0, r5\n.BB13_115:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB13_115\n.BB13_246:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB13_117\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB13_117:\n\tadd\t@CPI13_9[0], r0, r1\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tstack-[40], r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_178:\n\tadd\tstack-[31], r0, r2\n\tadd\t160, r2, r2\n\tadd\tr2, r0, stack-[2]\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tr0, r0, stack-[36]\n\tjump\t@.BB13_179\n.BB13_240:\n\tadd\tstack-[8], r0, r4\n\tsub\tr4, r2, r4\n\tadd\tr4, r0, stack-[8]\n\tadd\tstack-[28], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tshl.s\t5, r3, r3\n\tadd\tr1, r3, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r3\n\tadd\tr3, r2, r2\n\tst.1\tr1, r2\n.BB13_237:\n\tadd\tstack-[36], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[40], r0, r1\n\tadd\tr2, r0, stack-[36]\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB13_205\n.BB13_179:\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[36], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB13_85\n\tadd\tstack-[36], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\tstack-[9], r0, r2\n\tadd\tr1, r2, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[35]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[38]\n\tadd\tstack-[33], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB13_85\n\tshl.s\t5, r1, r1\n\tadd\tstack-[17], r0, r2\n\tadd\tr2, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[34]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[24]\n\tand\t@CPI13_4[0], r1, r1\n\tadd\tstack-[35], r0, r2\n\tadd\t64, r2, r2\n\tadd\tr2, r0, stack-[30]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[25]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[41]\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tadd\tstack-[34], r0, r2\n\tadd\t224, r2, r2\n\tadd\tr2, r0, stack-[23]\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tadd\tstack-[41], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[29]\n\tadd\tstack-[35], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[32], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB13_85\n\tshl.s\t5, r2, r1\n\tadd\t32, r1, r3\n\tadd\tstack-[32], r0, r1\n\tadd\tr3, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r4\n\tadd\tstack-[41], r0, r5\n\tsub!\tr4, r5, r4\n\tjump.le\t@.BB13_85\n\tadd\tstack-[16], r0, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r2, r2\n\tjump.le\t@.BB13_85\n\tadd\tstack-[16], r0, r2\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB13_237\n\tadd\tstack-[41], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tr2, r1, r1\n\tadd\tstack-[35], r0, r2\n\tadd\t96, r2, r2\n\tadd\tr2, r0, stack-[28]\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[21]\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[20]\n\tadd\tstack-[30], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[34], r0, r2\n\tadd\t64, r2, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[27]\n\tadd\tstack-[38], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[38]\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tld.1.inc\tr1, r3, r4\n\tadd\t64, r1, r1\n\tadd\tr4, r0, stack-[22]\n\tld.1\tr4, r4\n\tadd\tr1, r0, stack-[19]\n\tld.1\tr1, r5\n\tld.1\t64, r1\n\tadd\t128, r1, r6\n\tst.1\tr6, r2\n\tadd\t96, r1, r2\n\tst.1\tr2, r5\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\tstack-[26], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI13_25[0], r1, r3\n\tjump.gt\t@.BB13_5\n\tadd\t160, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI13_9[0], r0, r3\n\tsub.s!\t@CPI13_9[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI13_9[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_14[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tadd\tstack-[38], r0, r2\n\tld.1.inc\tr2, r2, r3\n\tadd\tr3, r0, stack-[37]\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB13_196\n\tadd\tr0, r0, stack-[41]\n\tjump\t@.BB13_192\n.BB13_194:\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n.BB13_193:\n\tld\tr1, r1\n\tadd\tstack-[41], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[38], r0, r2\n\tld.1\tr2, r2\n\tadd\tr3, r0, stack-[41]\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB13_196\n.BB13_192:\n\tadd\tstack-[41], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tstack-[37], r0, r3\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r3\n\tjump.ge\t@.BB13_194\n\tst.1\t0, r1\n\tst.1\t32, r2\n\tadd\t@CPI13_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB13_193\n\tjump\t@.BB13_1\n.BB13_196:\n\tadd\tstack-[34], r0, r2\n\tadd\t160, r2, r3\n\tld.1\tr3, r4\n\tsub.s!\t1, r4, r2\n\tjump.gt\t@.BB13_97\n\tadd\tstack-[28], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB13_198\n\tadd\tstack-[27], r0, r4\n\tsub!\tr1, r4, r1\n\tjump.ne\t@.BB13_237\n.BB13_202:\n\tld.1.inc\tr2, r2, r1\n\tadd\tstack-[22], r0, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_237\n\tsub.s\t1, r0, r2\n\tadd\tstack-[29], r0, r4\n\txor\tr4, r2, r4\n\tadd\tstack-[21], r0, r2\n\tadd\tstack-[20], r0, r5\n\tadd\tr2, r5, r2\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB13_237\n\tadd\tstack-[29], r0, r4\n\tadd\tr2, r4, r2\n\tadd\tstack-[25], r0, r4\n\tadd\t64, r4, r4\n\tld.1\tr4, r4\n\tsub!\tr2, r4, r2\n\tjump.gt\t@.BB13_237\n\tadd\tstack-[34], r0, r2\n\tadd\t192, r2, r2\n\tld.1\tr2, r8\n\tld.1\tr1, r5\n\tadd\tstack-[30], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r6\n\tmul\tr6, r5, r1, r2\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r7\n\tadd\tr0, r0, r4\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB13_212\n\tdiv\tr1, r6, r2, r4\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB13_123\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r7\n\tadd\tr0, r0, r4\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB13_212\n\tadd\t32, r8, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tmul\tr2, r1, r4, r6\n\tdiv\tr4, r1, r6, r7\n\tsub!\tr6, r2, r2\n\tjump.ne\t@.BB13_123\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r6\n\tmul\tr6, r1, r2, r7\n\tdiv\tr2, r1, r7, r9\n\tsub!\tr7, r6, r6\n\tjump.ne\t@.BB13_123\n\tadd\tstack-[14], r0, r6\n\tld.1\tr6, r6\n\tadd\t32, r6, r6\n\tld.1\tr6, r6\n\tand\t65535, r6, r6\n\tmul\tr6, r1, r7, r9\n\tdiv\tr7, r1, r9, r10\n\tsub!\tr9, r6, r6\n\tjump.ne\t@.BB13_123\n.BB13_212:\n\tdiv.s\t10000, r2, r6, r2\n\tadd!\tr6, r1, r2\n\tjump.of\t@.BB13_123\n\tadd\tstack-[8], r0, r9\n\tsub!\tr9, r2, r9\n\tjump.lt\t@.BB13_237\n\tld.1\tr8, r8\n\tand\t@CPI13_4[0], r8, r8\n\tadd\tstack-[5], r0, r9\n\tld.1\tr9, r10\n\tadd\tstack-[3], r0, r9\n\tld.1\tr9, r9\n\tld.1.inc\tr9, r11, r9\n\tsub!\tr11, r10, r12\n\tjump.le\t@.BB13_85\n\tshl.s\t5, r10, r12\n\tadd\tr9, r12, r12\n\tld.1\tr12, r13\n\tand\t@CPI13_4[0], r13, r13\n\tsub!\tr8, r13, r14\n\tjump.eq\t@.BB13_217\n\tsub!\tr13, r0, r13\n\tjump.eq\t@.BB13_221\n\tadd\t1, r10, r10\n\tsub!\tr11, r10, r11\n\tjump.le\t@.BB13_85\n\tshl.s\t5, r10, r11\n\tadd\tr9, r11, r9\n\tst.1\tr9, r8\n\tadd\tstack-[5], r0, r8\n\tst.1\tr8, r10\n\tjump\t@.BB13_217\n.BB13_198:\n\tadd\tstack-[27], r0, r4\n\tsub!\tr1, r4, r1\n\tjump.ne\t@.BB13_237\n\tadd\t32, r2, r1\n\tld.1\tr1, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB13_237\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB13_237\n\tjump\t@.BB13_202\n.BB13_221:\n\tst.1\tr12, r8\n.BB13_217:\n\tadd\tstack-[34], r0, r8\n\tld.1\tr8, r8\n\tand\t@CPI13_4[0], r8, r8\n\tadd\tstack-[6], r0, r9\n\tld.1\tr9, r10\n\tadd\tstack-[4], r0, r9\n\tld.1\tr9, r9\n\tld.1.inc\tr9, r11, r9\n\tsub!\tr11, r10, r12\n\tjump.le\t@.BB13_85\n\tshl.s\t5, r10, r12\n\tadd\tr9, r12, r12\n\tld.1\tr12, r13\n\tand\t@CPI13_4[0], r13, r13\n\tsub!\tr8, r13, r14\n\tjump.eq\t@.BB13_226\n\tsub!\tr13, r0, r13\n\tjump.eq\t@.BB13_225\n\tadd\t1, r10, r10\n\tsub!\tr11, r10, r11\n\tjump.le\t@.BB13_85\n\tshl.s\t5, r10, r11\n\tadd\tr9, r11, r9\n\tst.1\tr9, r8\n\tadd\tstack-[6], r0, r8\n\tst.1\tr8, r10\n\tjump\t@.BB13_226\n.BB13_225:\n\tst.1\tr12, r8\n.BB13_226:\n\tadd\tstack-[18], r0, r8\n\tld.1\tr8, r8\n\tadd\tstack-[31], r0, r9\n\tadd\tr8, r9, r9\n\tadd\tstack-[2], r0, r13\n\tld.1\tr13, r8\n\tmul\t160, r8, r10, r11\n\tadd\tr9, r10, r9\n\tadd\tstack-[30], r0, r10\n\tld.1\tr10, r10\n\tadd\t32, r10, r10\n\tld.1\tr10, r10\n\tadd\t128, r9, r11\n\tadd\tstack-[34], r0, r12\n\tld.1\tr12, r12\n\tst.1\tr11, r10\n\tadd\t96, r9, r10\n\tst.1\tr10, r12\n\tadd\tstack-[24], r0, r10\n\tld.1\tr10, r10\n\tadd\t192, r9, r11\n\tst.1\tr11, r10\n\tadd\t224, r9, r10\n\tld.1\tr3, r11\n\tst.1\tr10, r11\n\tadd\t1, r8, r10\n\tst.1\tr13, r10\n\tld.1\tr3, r3\n\tsub.s!\t1, r3, r3\n\tjump.ne\t@.BB13_228\n\tadd\t160, r9, r3\n\tst.1\tr3, r5\n.BB13_228:\n\tadd\tstack-[15], r0, r3\n\tld.1\tr3, r11\n\tld.1\tr11, r3\n\tsub!\tr3, r8, r3\n\tjump.le\t@.BB13_85\n\tadd\tstack-[6], r0, r3\n\tld.1\tr3, r12\n\tadd\tstack-[23], r0, r3\n\tld.1\tr3, r9\n\tadd\tstack-[30], r0, r3\n\tld.1\tr3, r10\n\tshl.s\t5, r8, r3\n\tadd\t32, r3, r3\n\tadd\tr11, r3, r11\n\tld.1\tr11, r11\n\tst.1\tr11, r12\n\tadd\tstack-[15], r0, r11\n\tld.1\tr11, r11\n\tld.1\tr11, r13\n\tsub!\tr13, r8, r13\n\tjump.le\t@.BB13_85\n\tadd\tr11, r3, r11\n\tld.1\tr11, r11\n\tadd\t64, r11, r11\n\tadd\tstack-[5], r0, r13\n\tld.1\tr13, r13\n\tst.1\tr11, r13\n\tadd\tstack-[4], r0, r11\n\tld.1\tr11, r13\n\tld.1\tr13, r11\n\tsub!\tr11, r12, r11\n\tjump.le\t@.BB13_85\n\tld.1\t64, r11\n\tsub.s!\t@CPI13_25[0], r11, r14\n\tjump.gt\t@.BB13_5\n\tshl.s\t5, r12, r12\n\tadd\tr12, r13, r12\n\tadd\t32, r12, r12\n\tld.1\tr12, r12\n\tld.1\tr10, r13\n\tadd\t64, r10, r10\n\tld.1\tr10, r10\n\tadd\t160, r11, r14\n\tst.1\t64, r14\n\tadd\t128, r11, r14\n\tst.1\tr14, r10\n\tadd\t96, r11, r10\n\tst.1\tr10, r5\n\tadd\t64, r11, r5\n\tst.1\tr5, r13\n\tadd\t32, r11, r5\n\tst.1\tr5, r9\n\tand\t@CPI13_4[0], r12, r5\n\tst.1\tr11, r5\n\tadd\tstack-[15], r0, r5\n\tld.1\tr5, r5\n\tld.1\tr5, r9\n\tsub!\tr9, r8, r9\n\tjump.le\t@.BB13_85\n\tadd\tr5, r3, r5\n\tld.1\tr5, r5\n\tadd\t192, r5, r5\n\tst.1\tr5, r11\n\tadd\tstack-[15], r0, r5\n\tld.1\tr5, r9\n\tld.1\tr9, r5\n\tsub!\tr5, r8, r5\n\tjump.le\t@.BB13_85\n\tdiv.s\t10000, r4, r5, r4\n\tdiv.s\t10000, r7, r4, r7\n\tadd\tr5, r4, r7\n\tsub\tr1, r7, r1\n\tadd\tr9, r3, r7\n\tld.1\tr7, r7\n\tadd\t32, r7, r7\n\tst.1\tr7, r1\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r7\n\tsub!\tr7, r8, r7\n\tjump.le\t@.BB13_85\n\tadd\tr1, r3, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r1\n\tst.1\tr1, r5\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r5\n\tsub!\tr5, r8, r5\n\tjump.le\t@.BB13_85\n\tadd\tr1, r3, r1\n\tld.1\tr1, r1\n\tadd\t128, r1, r1\n\tst.1\tr1, r6\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r5\n\tsub!\tr5, r8, r5\n\tjump.le\t@.BB13_85\n\tadd\tr1, r3, r1\n\tld.1\tr1, r1\n\tadd\t160, r1, r1\n\tst.1\tr1, r4\n\tadd\tstack-[35], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[32], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB13_85\n\tshl.s\t5, r1, r1\n\tadd\tstack-[39], r0, r3\n\tadd\tr3, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r4\n\tadd\tstack-[30], r0, r3\n\tld.1\tr3, r3\n\tld.1\tr3, r3\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB13_240\n.BB13_85:\n\tadd\t@CPI13_28[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_29[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_123:\n\tadd\t@CPI13_28[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_29[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_97:\n\tadd\t@CPI13_28[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_29[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nexternal_fun_hashOrder:\n.func_begin14:\n\tnop\tstack+=[11]\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB14_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI14_0[0], r0, r3\n\tsub.s!\t320, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI14_0[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI14_0[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB14_1\n\tnear_call\tr0, @abi_decode_struct_Order_17494, @DEFAULT_UNWIND\n\tadd\tr1, r0, r4\n\tadd\t292, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tsub.s!\t2, r2, r1\n\tjump.le\t@.BB14_4\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_4:\n\tadd\t160, r4, r1\n\tld.1\tr1, r3\n\tsub.s!\t2, r3, r1\n\tjump.lt\t@.BB14_6\n\tadd\t@CPI14_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_6:\n\tadd\t32, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t64, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t96, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t128, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t192, r4, r1\n\tld.1\tr1, r1\n\tadd\tr4, r0, stack-[11]\n\tld.1\tr4, r4\n\tadd\tr4, r0, stack-[8]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tnear_call\tr0, @fun_hashFeeRate, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tadd\t224, r3, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tld.1\tr3, r2\n\tadd\tr1, r0, stack-[2]\n\tand\t@CPI14_1[0], r2, r1\n\tnear_call\tr0, @mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI14_2[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[11]\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r4\n\tadd\t352, r4, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t320, r4, r2\n\tadd\tstack-[4], r0, r3\n\tst.1\tr2, r3\n\tadd\t288, r4, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n\tadd\t256, r4, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t224, r4, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t192, r4, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr2, r3\n\tadd\t160, r4, r2\n\tadd\tstack-[7], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[10], r0, r2\n\tand\t@CPI14_1[0], r2, r2\n\tadd\t96, r4, r3\n\tst.1\tr3, r2\n\tadd\tstack-[8], r0, r2\n\tand\t@CPI14_1[0], r2, r2\n\tadd\t64, r4, r3\n\tst.1\tr3, r2\n\tadd\t352, r0, r2\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr2, r1\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @finalize_allocation_50148, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI14_3[0], r0, r1\n\tsub.s!\t@CPI14_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_4[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end14:\n\nexternal_fun_hashOfferCollection:\n.func_begin15:\n\tnop\tstack+=[11]\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB15_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI15_0[0], r0, r3\n\tsub.s!\t352, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI15_0[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI15_0[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB15_1\n\tnear_call\tr0, @abi_decode_struct_Order_17494, @DEFAULT_UNWIND\n\tadd\tr1, r0, r4\n\tadd\t292, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tsub.s!\t2, r2, r1\n\tjump.le\t@.BB15_4\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_4:\n\tadd\t160, r4, r1\n\tld.1\tr1, r3\n\tsub.s!\t2, r3, r1\n\tjump.lt\t@.BB15_6\n\tadd\t@CPI15_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tadd\t32, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t64, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t96, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t128, r4, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t192, r4, r1\n\tld.1\tr1, r1\n\tadd\tr4, r0, stack-[11]\n\tld.1\tr4, r4\n\tadd\tr4, r0, stack-[8]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr3, r0, stack-[5]\n\tnear_call\tr0, @fun_hashFeeRate, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tadd\t224, r3, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tld.1\tr3, r2\n\tadd\tr1, r0, stack-[2]\n\tand\t@CPI15_1[0], r2, r1\n\tnear_call\tr0, @mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI15_2[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[11]\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tst.2\t36, r1\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r4\n\tadd\t352, r4, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t320, r4, r2\n\tadd\tstack-[4], r0, r3\n\tst.1\tr2, r3\n\tadd\t288, r4, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n\tadd\t256, r4, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t224, r4, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t192, r4, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr2, r3\n\tadd\t160, r4, r2\n\tadd\tstack-[7], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[10], r0, r2\n\tand\t@CPI15_1[0], r2, r2\n\tadd\t96, r4, r3\n\tst.1\tr3, r2\n\tadd\tstack-[8], r0, r2\n\tand\t@CPI15_1[0], r2, r2\n\tadd\t64, r4, r3\n\tst.1\tr3, r2\n\tadd\t32, r4, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr2, r1\n\tadd\t324, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t384, r4, r2\n\tst.1\tr2, r1\n\tadd\t384, r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @finalize_allocation_50147, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tsub.s!\t@CPI15_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_4[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end15:\n\nexternal_fun_takeCollectionOffer:\n.func_begin16:\n\tnop\tstack+=[1]\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB16_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r2\n\tadd\t@CPI16_0[0], r0, r1\n\tsub.s!\t32, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI16_0[0], r2, r4\n\tsub!\tr4, r0, r5\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI16_0[0], r4, r4\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB16_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI16_1[0], r1, r3\n\tjump.gt\t@.BB16_1\n\tsub\tr2, r1, r2\n\tadd\t@CPI16_0[0], r0, r3\n\tsub.s!\t512, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI16_0[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI16_0[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB16_1\n\tld.1\t64, r9\n\tsub.s!\t@CPI16_2[0], r9, r2\n\tjump.ge\t@.BB16_6\n\tadd\t128, r9, r3\n\tst.1\t64, r3\n\tadd\t4, r1, r2\n\tadd\tstack[@calldatasize], r0, r4\n\tsub\tr4, r2, r5\n\tadd\t@CPI16_0[0], r0, r6\n\tsub.s!\t288, r5, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr6, r0, r7\n\tand\t@CPI16_0[0], r5, r5\n\tsub!\tr5, r0, r8\n\tadd.le\tr0, r0, r6\n\tsub.s!\t@CPI16_0[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB16_1\n\tsub.s!\t@CPI16_3[0], r9, r5\n\tjump.le\t@.BB16_9\n.BB16_6:\n\tadd\t@CPI16_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_9:\n\tadd\t384, r9, r5\n\tst.1\t64, r5\n\tptr.add\tstack[@ptr_calldata], r2, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI16_4[0], r5, r6\n\tjump.gt\t@.BB16_1\n\tst.1\tr3, r5\n\tadd\t36, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI16_4[0], r5, r6\n\tjump.gt\t@.BB16_1\n\tadd\t160, r9, r6\n\tst.1\tr6, r5\n\tadd\t68, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t192, r9, r6\n\tst.1\tr6, r5\n\tadd\t100, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t224, r9, r6\n\tst.1\tr6, r5\n\tadd\t256, r9, r5\n\tadd\t132, r1, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t164, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t1, r5, r6\n\tjump.gt\t@.BB16_1\n\tadd\t288, r9, r6\n\tst.1\tr6, r5\n\tadd\t196, r1, r5\n\tsub\tr4, r5, r4\n\tadd\t@CPI16_0[0], r0, r6\n\tsub.s!\t64, r4, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr6, r0, r7\n\tand\t@CPI16_0[0], r4, r4\n\tsub!\tr4, r0, r8\n\tadd.le\tr0, r0, r6\n\tsub.s!\t@CPI16_0[0], r4, r4\n\tadd\tr7, r0, r4\n\tadd.eq\tr6, r0, r4\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB16_1\n\tld.1\t64, r4\n\tsub.s!\t@CPI16_5[0], r4, r6\n\tjump.gt\t@.BB16_6\n\tadd\t64, r4, r6\n\tst.1\t64, r6\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI16_4[0], r5, r6\n\tjump.gt\t@.BB16_1\n\tst.1.inc\tr4, r5, r5\n\tadd\t228, r1, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tsub.s!\t65535, r6, r7\n\tjump.gt\t@.BB16_1\n\tst.1\tr5, r6\n\tadd\t320, r9, r5\n\tst.1\tr5, r4\n\tadd\t260, r1, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tst.1.inc\tr9, r3, r3\n\tadd\t352, r9, r5\n\tst.1\tr5, r4\n\tadd\t292, r1, r5\n\tadd\t@CPI16_0[0], r0, r4\n\tsub\tstack[@calldatasize], r5, r6\n\tsub.s!\t128, r6, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr4, r0, r7\n\tand\t@CPI16_0[0], r6, r6\n\tsub!\tr6, r0, r8\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI16_0[0], r6, r6\n\tadd.ne\tr7, r0, r4\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB16_1\n\tld.1\t64, r4\n\tsub.s!\t@CPI16_6[0], r4, r6\n\tjump.gt\t@.BB16_6\n\tadd\t128, r4, r6\n\tst.1\t64, r6\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tst.1.inc\tr4, r5, r5\n\tadd\t324, r1, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t356, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t64, r4, r6\n\tst.1\tr6, r5\n\tadd\t388, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t96, r4, r6\n\tst.1\tr6, r5\n\tst.1\tr3, r4\n\tadd\t420, r1, r4\n\tadd\t@CPI16_0[0], r0, r3\n\tsub\tstack[@calldatasize], r4, r5\n\tsub.s!\t64, r5, r6\n\tadd\tr0, r0, r6\n\tadd.lt\tr3, r0, r6\n\tand\t@CPI16_0[0], r5, r5\n\tsub!\tr5, r0, r7\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI16_0[0], r5, r5\n\tadd.ne\tr6, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB16_1\n\tld.1\t64, r3\n\tsub.s!\t@CPI16_5[0], r3, r5\n\tjump.gt\t@.BB16_6\n\tadd\t64, r3, r5\n\tst.1\t64, r5\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI16_4[0], r4, r5\n\tjump.gt\t@.BB16_1\n\tst.1.inc\tr3, r4, r4\n\tadd\t452, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t65535, r5, r6\n\tjump.gt\t@.BB16_1\n\tst.1\tr4, r5\n\tadd\t64, r9, r4\n\tst.1\tr4, r3\n\tadd\t484, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI16_1[0], r1, r3\n\tjump.le\t@.BB16_23\n.BB16_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_23:\n\tadd\tr2, r1, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\tr9, r0, stack-[1]\n\tnear_call\tr0, @abi_decode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r3\n\tadd\t96, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @fun_takeCollectionOffer, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end16:\n\nexternal_fun_verifyDomain:\n.func_begin17:\n\tnop\tstack+=[3]\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB17_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI17_0[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI17_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB17_1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI17_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t45, r1, r3\n\tadd\t@CPI17_2[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t57, r1, r3\n\tadd\t@CPI17_3[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t72, r1, r3\n\tadd\t@CPI17_4[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t88, r1, r3\n\tadd\t@CPI17_5[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t113, r1, r3\n\tadd\t@CPI17_6[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t82, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI17_7[0], r1, r3\n\tjump.ge\t@.BB17_4\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI17_8[0], r0, r3\n\tsub.s!\t@CPI17_8[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI17_8[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_8[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI17_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r3\n\tld.1\t64, r1\n\tsub.s!\t@CPI17_10[0], r1, r2\n\tjump.gt\t@.BB17_4\n\tadd\tr3, r0, stack-[3]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t13, r0, r2\n\tst.1.inc\tr1, r2, r1\n\tadd\t@CPI17_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI17_8[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI17_8[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI17_8[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI17_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r3\n\tld.1\t64, r1\n\tsub.s!\t@CPI17_10[0], r1, r2\n\tjump.le\t@.BB17_9\n.BB17_4:\n\tadd\t@CPI17_23[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_24[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_9:\n\tadd\tr3, r0, stack-[2]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t3, r0, r2\n\tst.1.inc\tr1, r2, r1\n\tadd\t@CPI17_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI17_8[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI17_8[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI17_8[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI17_14[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tld.1\t64, r3\n\tadd\t96, r3, r2\n\tst.1\tr2, r1\n\tadd\t64, r3, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[2]\n\tadd\t32, r3, r2\n\tadd\tstack-[3], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI17_15[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI17_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_16[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tcontext.this\tr2\n\tand\t@CPI17_17[0], r2, r2\n\tadd\tstack-[2], r0, r4\n\tadd\t160, r4, r3\n\tst.1\tr3, r2\n\tadd\t128, r4, r2\n\tst.1\tr2, r1\n\tadd\t160, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI17_18[0], r4, r1\n\tjump.gt\t@.BB17_4\n\tadd\t192, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI17_8[0], r0, r1\n\tadd\tstack-[1], r0, r3\n\tsub.s!\t@CPI17_8[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI17_8[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI17_8[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI17_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI17_19[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t96, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI17_8[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_8[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_20[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB17_15\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB17_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_15:\n\tld.1\t64, r1\n\tadd\t@CPI17_21[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI17_8[0], r0, r2\n\tsub.s!\t@CPI17_8[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nabi_encode_bool_bytes32_bytes32_uint8:\n.func_begin18:\n\tand\t255, r5, r5\n\tadd\t96, r1, r6\n\tst.1\tr6, r5\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tsub!\tr2, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end18:\n\nexternal_fun_takeBid:\n.func_begin19:\n\tnop\tstack+=[4]\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB19_1\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI19_0[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI19_0[0], r1, r4\n\tsub!\tr4, r0, r5\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI19_0[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB19_1\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r12\n\tsub.s!\t@CPI19_1[0], r12, r2\n\tjump.gt\t@.BB19_1\n\tsub\tr1, r12, r1\n\tadd\t@CPI19_0[0], r0, r2\n\tsub.s!\t160, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI19_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI19_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB19_1\n\tld.1\t64, r13\n\tsub.s!\t@CPI19_2[0], r13, r1\n\tjump.lt\t@.BB19_7\n.BB19_6:\n\tadd\t@CPI19_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_7:\n\tadd\t128, r13, r1\n\tst.1\t64, r1\n\tadd\t4, r12, r14\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r14, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI19_1[0], r2, r3\n\tjump.gt\t@.BB19_1\n\tadd\tr2, r12, r3\n\tadd\t35, r3, r5\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t@CPI19_0[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI19_0[0], r5, r5\n\tand\t@CPI19_0[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI19_0[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB19_1\n\tadd\t4, r3, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI19_1[0], r5, r4\n\tjump.gt\t@.BB19_6\n\tshl.s\t5, r5, r4\n\tadd\t63, r4, r4\n\tsub.s\t32, r0, r6\n\tand\tr4, r6, r4\n\tadd\tr4, r1, r4\n\tsub.s!\t@CPI19_1[0], r4, r6\n\tjump.gt\t@.BB19_6\n\tst.1\t64, r4\n\tst.1\tr1, r5\n\tadd\t36, r3, r3\n\tmul\t288, r5, r4, r6\n\tadd\tr4, r3, r4\n\tsub!\tr4, r2, r6\n\tjump.gt\t@.BB19_1\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB19_13\n.BB19_24:\n\tst.1.inc\tr13, r1, r3\n\tadd\t36, r12, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI19_1[0], r1, r2\n\tjump.gt\t@.BB19_1\n\tadd\tr14, r1, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\tr12, r0, stack-[3]\n\tadd\tr13, r0, stack-[4]\n\tadd\tr14, r0, stack-[2]\n\tadd\tr3, r0, stack-[1]\n\tnear_call\tr0, @abi_decode_array_struct_Exchange_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r8\n\tadd\tstack-[4], r0, r7\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[1], r0, r2\n\tst.1\tr2, r1\n\tadd\t68, r6, r2\n\tsub\tstack[@calldatasize], r2, r1\n\tadd\t@CPI19_0[0], r0, r3\n\tsub.s!\t64, r1, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI19_0[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI19_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB19_26\n.BB19_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_13:\n\tadd\tr1, r0, r5\n.BB19_14:\n\tsub\tr2, r3, r6\n\tadd\t@CPI19_0[0], r0, r7\n\tsub.s!\t288, r6, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr7, r0, r8\n\tand\t@CPI19_0[0], r6, r6\n\tsub!\tr6, r0, r9\n\tadd.le\tr0, r0, r7\n\tsub.s!\t@CPI19_0[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB19_1\n\tld.1\t64, r6\n\tsub.s!\t@CPI19_3[0], r6, r7\n\tjump.gt\t@.BB19_6\n\tadd\t256, r6, r7\n\tst.1\t64, r7\n\tptr.add\tstack[@ptr_calldata], r3, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI19_4[0], r7, r8\n\tjump.gt\t@.BB19_1\n\tst.1.inc\tr6, r7, r7\n\tadd\t32, r3, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI19_4[0], r8, r9\n\tjump.gt\t@.BB19_1\n\tst.1\tr7, r8\n\tadd\t64, r3, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tadd\t64, r6, r8\n\tst.1\tr8, r7\n\tadd\t96, r3, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tadd\t96, r6, r8\n\tst.1\tr8, r7\n\tadd\t128, r6, r7\n\tadd\t128, r3, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t160, r3, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tsub.s!\t1, r7, r8\n\tjump.gt\t@.BB19_1\n\tadd\t160, r6, r8\n\tst.1\tr8, r7\n\tadd\t192, r3, r8\n\tsub\tr2, r8, r7\n\tadd\t@CPI19_0[0], r0, r9\n\tsub.s!\t64, r7, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr9, r0, r10\n\tand\t@CPI19_0[0], r7, r7\n\tsub!\tr7, r0, r11\n\tadd.le\tr0, r0, r9\n\tsub.s!\t@CPI19_0[0], r7, r7\n\tadd\tr10, r0, r7\n\tadd.eq\tr9, r0, r7\n\tsub!\tr7, r0, r7\n\tjump.ne\t@.BB19_1\n\tld.1\t64, r7\n\tsub.s!\t@CPI19_5[0], r7, r9\n\tjump.gt\t@.BB19_6\n\tadd\t64, r7, r9\n\tst.1\t64, r9\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI19_4[0], r8, r9\n\tjump.gt\t@.BB19_1\n\tst.1.inc\tr7, r8, r8\n\tadd\t224, r3, r9\n\tptr.add\tstack[@ptr_calldata], r9, r9\n\tld\tr9, r9\n\tsub.s!\t65535, r9, r10\n\tjump.gt\t@.BB19_1\n\tadd\t32, r5, r5\n\tst.1\tr8, r9\n\tadd\t192, r6, r8\n\tst.1\tr8, r7\n\tadd\t256, r3, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tadd\t224, r6, r8\n\tst.1\tr8, r7\n\tst.1\tr5, r6\n\tadd\t288, r3, r3\n\tsub!\tr3, r4, r6\n\tjump.lt\t@.BB19_14\n\tjump\t@.BB19_24\n.BB19_26:\n\tld.1\t64, r1\n\tsub.s!\t@CPI19_5[0], r1, r3\n\tjump.gt\t@.BB19_6\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI19_4[0], r2, r3\n\tjump.gt\t@.BB19_1\n\tst.1.inc\tr1, r2, r2\n\tadd\t100, r6, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tsub.s!\t65535, r3, r4\n\tjump.gt\t@.BB19_1\n\tst.1\tr2, r3\n\tadd\t64, r7, r2\n\tst.1\tr2, r1\n\tadd\t132, r6, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI19_1[0], r1, r2\n\tjump.gt\t@.BB19_1\n\tadd\tr8, r1, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tnear_call\tr0, @abi_decode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r3\n\tadd\t96, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @fun_takeBid, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end19:\n\nexternal_fun_takeAskSinglePool:\n.func_begin20:\n\tnop\tstack+=[18]\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI20_0[0], r0, r3\n\tsub.s!\t63, r1, r4\n\tadd\tr0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI20_0[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI20_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB20_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI20_1[0], r1, r3\n\tjump.gt\t@.BB20_1\n\tadd\t4, r1, r3\n\tsub\tr2, r3, r4\n\tadd\t@CPI20_0[0], r0, r5\n\tsub.s!\t448, r4, r6\n\tadd\tr0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI20_0[0], r4, r4\n\tsub!\tr4, r0, r7\n\tadd.le\tr0, r0, r5\n\tsub.s!\t@CPI20_0[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB20_4\n.BB20_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_4:\n\tld.1\t64, r15\n\tsub.s!\t@CPI20_2[0], r15, r4\n\tjump.ge\t@.BB20_5\n\tadd\t160, r15, r4\n\tst.1\t64, r4\n\tsub.s!\t@CPI20_3[0], r15, r5\n\tjump.le\t@.BB20_7\n.BB20_5:\n\tadd\t@CPI20_17[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_18[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_7:\n\tadd\t416, r15, r5\n\tst.1\t64, r5\n\tptr.add\tstack[@ptr_calldata], r3, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI20_4[0], r5, r6\n\tjump.gt\t@.BB20_1\n\tst.1\tr4, r5\n\tadd\t36, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI20_4[0], r5, r6\n\tjump.gt\t@.BB20_1\n\tadd\t192, r15, r6\n\tst.1\tr6, r5\n\tadd\t68, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t224, r15, r6\n\tst.1\tr6, r5\n\tadd\t100, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tadd\t256, r15, r6\n\tst.1\tr6, r5\n\tadd\t288, r15, r5\n\tadd\t132, r1, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t164, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tsub.s!\t1, r5, r6\n\tjump.gt\t@.BB20_1\n\tadd\t320, r15, r6\n\tst.1\tr6, r5\n\tadd\t196, r1, r6\n\tsub\tr2, r6, r5\n\tadd\t@CPI20_0[0], r0, r7\n\tsub.s!\t64, r5, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr7, r0, r8\n\tand\t@CPI20_0[0], r5, r5\n\tsub!\tr5, r0, r9\n\tadd.le\tr0, r0, r7\n\tsub.s!\t@CPI20_0[0], r5, r5\n\tadd\tr8, r0, r5\n\tadd.eq\tr7, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB20_1\n\tld.1\t64, r5\n\tsub.s!\t@CPI20_5[0], r5, r7\n\tjump.gt\t@.BB20_5\n\tadd\t64, r5, r7\n\tst.1\t64, r7\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI20_4[0], r6, r7\n\tjump.gt\t@.BB20_1\n\tst.1.inc\tr5, r6, r6\n\tadd\t228, r1, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tsub.s!\t65535, r7, r8\n\tjump.gt\t@.BB20_1\n\tst.1\tr6, r7\n\tadd\t352, r15, r6\n\tst.1\tr6, r5\n\tadd\t260, r1, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tld\tr5, r5\n\tst.1.inc\tr15, r4, r9\n\tadd\t384, r15, r4\n\tst.1\tr4, r5\n\tadd\t292, r1, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI20_1[0], r4, r5\n\tjump.gt\t@.BB20_1\n\tadd\tr4, r3, r6\n\tsub\tr2, r6, r4\n\tadd\t@CPI20_0[0], r0, r5\n\tsub.s!\t256, r4, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr5, r0, r7\n\tand\t@CPI20_0[0], r4, r4\n\tsub!\tr4, r0, r8\n\tadd.le\tr0, r0, r5\n\tsub.s!\t@CPI20_0[0], r4, r4\n\tadd\tr7, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB20_1\n\tadd\tr9, r0, stack-[18]\n\tld.1\t64, r5\n\tsub.s!\t@CPI20_6[0], r5, r4\n\tjump.gt\t@.BB20_5\n\tadd\t128, r5, r4\n\tst.1\t64, r4\n\tptr.add\tstack[@ptr_calldata], r6, r4\n\tld\tr4, r4\n\tst.1.inc\tr5, r4, r7\n\tadd\t32, r6, r8\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI20_1[0], r8, r9\n\tjump.gt\t@.BB20_1\n\tadd\tr8, r6, r8\n\tadd\t31, r8, r9\n\tadd\t@CPI20_0[0], r0, r10\n\tsub!\tr9, r2, r11\n\tadd\tr0, r0, r11\n\tadd.ge\tr10, r0, r11\n\tand\t@CPI20_0[0], r9, r9\n\tand\t@CPI20_0[0], r2, r12\n\tsub!\tr9, r12, r13\n\tadd.ge\tr0, r0, r10\n\txor\tr9, r12, r9\n\tsub.s!\t@CPI20_0[0], r9, r9\n\tadd\tr11, r0, r9\n\tadd.eq\tr10, r0, r9\n\tsub!\tr9, r0, r9\n\tjump.ne\t@.BB20_1\n\tptr.add\tr4, r8, r4\n\tld\tr4, r10\n\tsub.s!\t@CPI20_1[0], r10, r4\n\tjump.gt\t@.BB20_5\n\tshl.s\t5, r10, r11\n\tadd\t63, r11, r9\n\tsub.s\t32, r0, r4\n\tand\tr9, r4, r12\n\tld.1\t64, r9\n\tadd\tr9, r12, r12\n\tsub!\tr12, r9, r13\n\tadd\t0, r0, r13\n\tadd.lt\t1, r0, r13\n\tsub.s!\t@CPI20_1[0], r12, r14\n\tjump.gt\t@.BB20_5\n\tand!\t1, r13, r13\n\tjump.ne\t@.BB20_5\n\tst.1\t64, r12\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tadd\tr11, r8, r11\n\tsub!\tr11, r2, r12\n\tjump.gt\t@.BB20_1\n\tadd\tr15, r0, stack-[17]\n\tsub!\tr10, r0, r10\n\tjump.eq\t@.BB20_26\n\tadd\tr9, r0, r10\n.BB20_25:\n\tptr.add\tstack[@ptr_calldata], r8, r12\n\tld\tr12, r12\n\tadd\t32, r10, r10\n\tst.1\tr10, r12\n\tadd\t32, r8, r8\n\tsub!\tr8, r11, r12\n\tjump.lt\t@.BB20_25\n.BB20_26:\n\tst.1\tr7, r9\n\tadd\t64, r6, r8\n\tsub\tr2, r8, r7\n\tadd\t@CPI20_0[0], r0, r9\n\tsub.s!\t128, r7, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr9, r0, r10\n\tand\t@CPI20_0[0], r7, r7\n\tsub!\tr7, r0, r11\n\tadd.le\tr0, r0, r9\n\tsub.s!\t@CPI20_0[0], r7, r7\n\tadd\tr10, r0, r7\n\tadd.eq\tr9, r0, r7\n\tsub!\tr7, r0, r7\n\tadd\tstack-[17], r0, r13\n\tjump.ne\t@.BB20_1\n\tld.1\t64, r7\n\tsub.s!\t@CPI20_6[0], r7, r9\n\tjump.gt\t@.BB20_5\n\tadd\t128, r7, r9\n\tst.1\t64, r9\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tst.1.inc\tr7, r8, r8\n\tadd\t96, r6, r9\n\tptr.add\tstack[@ptr_calldata], r9, r9\n\tld\tr9, r9\n\tst.1\tr8, r9\n\tadd\t128, r6, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tadd\t64, r7, r9\n\tst.1\tr9, r8\n\tadd\t192, r6, r8\n\tsub\tr2, r8, r9\n\tadd\t@CPI20_0[0], r0, r10\n\tsub.s!\t64, r9, r11\n\tadd\tr0, r0, r11\n\tadd.lt\tr10, r0, r11\n\tand\t@CPI20_0[0], r9, r9\n\tsub!\tr9, r0, r12\n\tadd.le\tr0, r0, r10\n\tsub.s!\t@CPI20_0[0], r9, r9\n\tadd\tr11, r0, r9\n\tadd.eq\tr10, r0, r9\n\tadd\t160, r6, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tld\tr10, r10\n\tadd\t96, r7, r11\n\tst.1\tr11, r10\n\tadd\t64, r5, r10\n\tst.1\tr10, r7\n\tsub!\tr9, r0, r7\n\tjump.ne\t@.BB20_1\n\tld.1\t64, r7\n\tsub.s!\t@CPI20_5[0], r7, r9\n\tjump.gt\t@.BB20_5\n\tadd\t64, r7, r9\n\tst.1\t64, r9\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tst.1.inc\tr7, r8, r8\n\tadd\t224, r6, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tst.1\tr8, r6\n\tadd\t96, r5, r6\n\tst.1\tr6, r7\n\tadd\t324, r1, r6\n\tsub\tr2, r6, r7\n\tadd\t@CPI20_0[0], r0, r8\n\tsub.s!\t64, r7, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr8, r0, r9\n\tand\t@CPI20_0[0], r7, r7\n\tsub!\tr7, r0, r10\n\tadd.le\tr0, r0, r8\n\tsub.s!\t@CPI20_0[0], r7, r7\n\tadd\tr9, r0, r7\n\tadd.eq\tr8, r0, r7\n\tadd\tstack-[18], r0, r8\n\tst.1\tr8, r5\n\tsub!\tr7, r0, r5\n\tjump.ne\t@.BB20_1\n\tld.1\t64, r5\n\tsub.s!\t@CPI20_5[0], r5, r7\n\tjump.gt\t@.BB20_5\n\tadd\t64, r5, r7\n\tst.1\t64, r7\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI20_4[0], r6, r7\n\tjump.gt\t@.BB20_1\n\tst.1.inc\tr5, r6, r6\n\tadd\t356, r1, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tsub.s!\t65535, r7, r8\n\tjump.gt\t@.BB20_1\n\tst.1\tr6, r7\n\tadd\t64, r13, r6\n\tadd\tr6, r0, stack-[16]\n\tst.1\tr6, r5\n\tadd\t388, r1, r6\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add\tr5, r6, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI20_1[0], r6, r7\n\tjump.gt\t@.BB20_1\n\tadd\tr6, r3, r6\n\tadd\t31, r6, r3\n\tadd\t@CPI20_0[0], r0, r7\n\tsub!\tr3, r2, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI20_0[0], r3, r3\n\tand\t@CPI20_0[0], r2, r9\n\tsub!\tr3, r9, r10\n\tadd.ge\tr0, r0, r7\n\txor\tr3, r9, r3\n\tsub.s!\t@CPI20_0[0], r3, r3\n\tadd\tr8, r0, r3\n\tadd.eq\tr7, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB20_1\n\tptr.add\tr5, r6, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI20_1[0], r3, r5\n\tjump.gt\t@.BB20_5\n\tadd\t63, r3, r5\n\tand\tr5, r4, r5\n\tld.1\t64, r4\n\tadd\tr4, r5, r5\n\tsub!\tr5, r4, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI20_1[0], r5, r8\n\tjump.gt\t@.BB20_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB20_5\n\tst.1\t64, r5\n\tst.1.inc\tr4, r3, r5\n\tadd\t32, r6, r6\n\tadd\tr3, r6, r7\n\tsub!\tr7, r2, r2\n\tjump.gt\t@.BB20_1\n\tand\t31, r3, r2\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB20_91\n\tadd\tr0, r0, r8\n.BB20_42:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB20_42\n.BB20_91:\n\tsub!\tr2, r0, r8\n\tjump.eq\t@.BB20_44\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr5, r7, r7\n\tshl.s\t3, r2, r2\n\tld.1\tr7, r8\n\tshl\tr8, r2, r8\n\tshr\tr8, r2, r8\n\tld\tr6, r6\n\tsub\t256, r2, r2\n\tshr\tr6, r2, r6\n\tshl\tr6, r2, r2\n\tor\tr2, r8, r2\n\tst.1\tr7, r2\n.BB20_44:\n\tadd\tr5, r3, r2\n\tst.1\tr2, r0\n\tadd\tstack-[17], r0, r3\n\tadd\t96, r3, r2\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r4\n\tadd\t420, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI20_4[0], r1, r2\n\tjump.gt\t@.BB20_1\n\tadd\t128, r3, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1\tr2, r1\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tld.1\t64, r3\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tadd\t@CPI20_7[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t36, r3, r1\n\tcontext.this\tr2\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[14]\n\tadd\t4, r3, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr1, r2\n\tadd\t@CPI20_8[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[12]\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI20_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_10[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB20_49\n\tadd\t@CPI20_9[0], r0, r3\n\tsub.s!\t@CPI20_9[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[14], r0, r5\n\tsub.s!\t@CPI20_9[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI20_11[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tshr.s\t96, r1, r1\n\tand\t@CPI20_9[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB20_48\n.BB20_49:\n\tadd\t151, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tsload\tr1, r1\n\tsub.s!\t2, r1, r1\n\tjump.ne\t@.BB20_51\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI20_24[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_9[0], r0, r2\n\tsub.s!\t@CPI20_9[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_51:\n\tadd\t2, r0, r1\n\tadd\tstack-[14], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r3\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[17], r0, r4\n\tld.1\tr4, r4\n\tadd\tr4, r0, stack-[9]\n\tadd\tstack-[13], r0, r4\n\tld.1\tr4, r4\n\tand\t@CPI20_4[0], r4, r4\n\tadd\tr4, r0, stack-[17]\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[15]\n\tsub.s!\t@CPI20_5[0], r4, r4\n\tjump.gt\t@.BB20_5\n\tadd\tstack-[15], r0, r4\n\tadd\t64, r4, r7\n\tst.1\t64, r7\n\tsub.s!\t@CPI20_6[0], r4, r5\n\tjump.gt\t@.BB20_5\n\tadd\tstack-[15], r0, r4\n\tadd\t128, r4, r5\n\tst.1\t64, r5\n\tadd\t50, r0, r5\n\tadd\tr5, r0, stack-[6]\n\tsload\tr5, r5\n\tand\t@CPI20_4[0], r5, r6\n\tst.1\tr7, r6\n\tshr.s\t160, r5, r5\n\tand\t65535, r5, r5\n\tadd\t96, r4, r6\n\tst.1\tr6, r5\n\tadd\t32, r4, r5\n\tadd\tr5, r0, stack-[5]\n\tst.1\tr5, r1\n\tst.1\tr4, r7\n\tadd\t64, r2, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t96, r2, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[9], r0, r1\n\tnear_call\tr0, @fun_validateOrderAndListing_17481, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB20_55\n\tadd\t@CPI20_23[0], r0, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI20_9[0], r0, r1\n\tsub.s!\t@CPI20_9[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_48:\n\tld.1\t64, r1\n\tadd\t@CPI20_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI20_9[0], r0, r2\n\tsub.s!\t@CPI20_9[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_55:\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t@CPI20_14[0], r1, r1\n\tjump.gt\t@.BB20_5\n\tadd\tstack-[8], r0, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tstack-[13], r0, r3\n\tadd\t384, r3, r2\n\tst.1\t64, r2\n\tadd\t352, r0, r2\n\tst.1.inc\tr3, r2, r2\n\tadd\tr2, r0, stack-[18]\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\tr0, r0, r3\n.BB20_57:\n\tshl.s\t5, r3, r4\n\tadd\tstack-[18], r0, r5\n\tadd\tr5, r4, r5\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tsub.s!\t11, r3, r4\n\tjump.lt\t@.BB20_57\n\tadd\tstack-[13], r0, r4\n\tadd\t192, r4, r2\n\tadd\t1, r0, r3\n\tadd\tr3, r0, stack-[4]\n\tst.1\tr2, r3\n\tadd\t64, r4, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tadd\t128, r0, r3\n\tadd\tr3, r0, stack-[3]\n\tst.1\tr2, r3\n\tadd\t96, r4, r3\n\tst.1\tr3, r0\n\tadd\t160, r4, r3\n\tld.1\tr3, r4\n\tmul\t160, r4, r5, r6\n\tadd\tr2, r5, r2\n\tadd\t128, r2, r5\n\tadd\tstack-[9], r0, r8\n\tld.1.inc\tr8, r6, r7\n\tst.1\tr5, r1\n\tadd\t96, r2, r1\n\tst.1\tr1, r6\n\tld.1\tr7, r1\n\tadd\t192, r2, r5\n\tst.1\tr5, r1\n\tadd\t160, r8, r1\n\tadd\t224, r2, r5\n\tld.1\tr1, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tst.1\tr3, r4\n\tld.1\tr1, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB20_60\n\tadd\t160, r2, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n.BB20_60:\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI20_4[0], r1, r1\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tadd\t224, r2, r2\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t@CPI20_5[0], r1, r1\n\tjump.gt\t@.BB20_5\n\tadd\tstack-[16], r0, r3\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\tstack-[4], r0, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr2, r1\n\tadd\t64, r3, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack[@calldatasize], r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tadd\tr0, r0, r2\n.BB20_65:\n\tshl.s\t5, r2, r3\n\tadd\tstack-[17], r0, r4\n\tadd\tr4, r3, r4\n\tptr.add\tr1, r3, r3\n\tld\tr3, r3\n\tst.1\tr4, r3\n\tadd!\t1, r2, r2\n\tjump.of\t@.BB20_65\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI20_16[0], r0, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\tr2, r1\n\tadd\t@CPI20_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI20_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_10[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tadd\tstack-[13], r0, r2\n\tadd\t60, r2, r3\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB20_70\n\tadd\tr0, r0, r1\n.BB20_69:\n\tshl.s\t5, r1, r2\n\tadd\tstack-[16], r0, r4\n\tadd\tr4, r2, r4\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tst.1\tr4, r2\n\tadd\t1, r1, r1\n\tsub.s!\t3, r1, r2\n\tjump.lt\t@.BB20_69\n\tjump\t@.BB20_75\n.BB20_70:\n\tadd\t@CPI20_9[0], r0, r4\n\tsub.s!\t@CPI20_9[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\tstack-[1], r0, r5\n\tsub.s\t28, r5, r5\n\tsub.s!\t@CPI20_9[0], r5, r6\n\tadd.ge\tr4, r0, r5\n\tshl.s\t96, r5, r5\n\tor\tr5, r3, r3\n\tsub.s!\t@CPI20_9[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI20_9[0], r2, r2\n\tsub.s!\t96, r2, r3\n\tadd\t96, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB20_90\n\tadd\tr0, r0, r5\n.BB20_72:\n\tshl.s\t5, r5, r6\n\tadd\tstack-[16], r0, r7\n\tadd\tr7, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB20_72\n.BB20_90:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB20_74\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tstack-[16], r0, r5\n\tadd\tr5, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB20_74:\n\tadd\tr2, r0, stack[@returndatasize]\n.BB20_75:\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB20_77\n\tadd\t@CPI20_17[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_18[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_77:\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB20_79\n\tld.1\t64, r1\n\tadd\t@CPI20_22[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI20_9[0], r0, r2\n\tsub.s!\t@CPI20_9[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_79:\n\tadd\tstack-[9], r0, r1\n\tadd\t192, r1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[8], r0, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tmul\tr1, r2, r3, r2\n\tadd\tr3, r0, stack-[18]\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, stack-[12]\n\tadd\tr0, r0, stack-[16]\n\tadd\tr0, r0, stack-[17]\n\tjump.ne\t@.BB20_80\n.BB20_86:\n\tadd\t@CPI20_19[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI20_9[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_9[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_20[0], r1, r1\n\tadd\t32778, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tadd\tstack-[17], r0, r2\n\tdiv.s\t10000, r2, r3, r2\n\tadd\tstack-[18], r0, r2\n\tadd\tr3, r0, stack-[17]\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB20_89\n\tld.1\t64, r1\n\tadd\t@CPI20_21[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI20_9[0], r0, r2\n\tsub.s!\t@CPI20_9[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_80:\n\tadd\tstack-[18], r0, r2\n\tdiv\tr2, r1, r1, r2\n\tadd\tstack-[7], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB20_81\n\tadd\tstack-[18], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, stack-[12]\n\tadd\tr0, r0, stack-[16]\n\tadd\tr0, r0, stack-[17]\n\tjump.eq\t@.BB20_86\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\tstack-[18], r0, r3\n\tmul\tr1, r3, r4, r2\n\tadd\tr4, r0, stack-[16]\n\tdiv\tr4, r3, r2, r3\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB20_81\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\tstack-[18], r0, r3\n\tmul\tr1, r3, r4, r2\n\tadd\tr4, r0, stack-[17]\n\tdiv\tr4, r3, r2, r3\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB20_81\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\tstack-[18], r0, r3\n\tmul\tr1, r3, r4, r2\n\tadd\tr4, r0, stack-[12]\n\tdiv\tr4, r3, r2, r3\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB20_86\n.BB20_81:\n\tadd\t@CPI20_17[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_18[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_89:\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tdiv.s\t10000, r2, r2, r3\n\tadd\tr2, r0, stack-[12]\n\tand\t@CPI20_4[0], r1, r1\n\tnear_call\tr0, @fun_transferETH, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tand\t@CPI20_4[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @fun_transferETH, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r1\n\tdiv.s\t10000, r1, r2, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tand\t@CPI20_4[0], r1, r1\n\tnear_call\tr0, @fun_transferETH, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[17], r0, r2\n\tadd\tr2, r1, r1\n\tadd\tstack-[18], r0, r2\n\tsub\tr2, r1, r2\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI20_4[0], r1, r1\n\tnear_call\tr0, @fun_transferETH, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r3\n\tadd\tstack-[13], r0, r1\n\tadd\tstack-[9], r0, r2\n\tadd\tstack-[18], r0, r4\n\tadd\tstack-[15], r0, r5\n\tnear_call\tr0, @fun_emitExecutionEvent_17486, @DEFAULT_UNWIND\n\tadd\t@CPI20_19[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.2\t4, r1\n\tadd\t32778, r0, r1\n\tadd\t36, r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[10], r0, r1\n\tnear_call\tr0, @fun_transferETH, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[4], r0, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end20:\n\nfun:\n.func_begin21:\n\tadd\t@CPI21_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI21_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tand\t@CPI21_3[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB21_3\n\tret\n.BB21_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_3:\n\tld.1\t64, r1\n\tadd\t@CPI21_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI21_1[0], r0, r2\n\tsub.s!\t@CPI21_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end21:\n\nfun_hashListing:\n.func_begin22:\n\tadd\t32, r1, r2\n\tld.1\tr2, r2\n\tadd\t64, r1, r3\n\tld.1\tr3, r3\n\tld.1\tr1, r4\n\tadd\t96, r1, r1\n\tld.1\tr1, r5\n\tld.1\t64, r1\n\tadd\t128, r1, r6\n\tst.1\tr6, r5\n\tadd\t96, r1, r5\n\tst.1\tr5, r3\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tadd\t128, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI22_0[0], r1, r3\n\tjump.ge\t@.BB22_1\n\tadd\t160, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI22_1[0], r0, r3\n\tsub.s!\t@CPI22_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI22_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tret\n.BB22_1:\n\tadd\t@CPI22_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI22_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end22:\n\nfun_hashFeeRate:\n.func_begin23:\n\tnop\tstack+=[3]\n\tld.1.inc\tr1, r2, r1\n\tadd\tr2, r0, stack-[2]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI23_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI23_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tadd\tstack-[3], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tand\t65535, r1, r1\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tadd\tstack-[2], r0, r1\n\tand\t@CPI23_3[0], r1, r1\n\tadd\t64, r4, r3\n\tst.1\tr3, r1\n\tadd\t96, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI23_4[0], r4, r1\n\tjump.ge\t@.BB23_3\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI23_1[0], r0, r1\n\tsub.s!\t@CPI23_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI23_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI23_1[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI23_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tret\n.BB23_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_3:\n\tadd\t@CPI23_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI23_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end23:\n\nfun_hashToSign:\n.func_begin24:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[2]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t32, r1, r2\n\tadd\t@CPI24_0[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI24_1[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t96, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI24_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_3[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r3\n\tadd\t66, r3, r2\n\tadd\tstack-[2], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r3, r2\n\tst.1\tr2, r1\n\tadd\t66, r0, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI24_4[0], r3, r1\n\tjump.ge\t@.BB24_3\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t@CPI24_2[0], r0, r1\n\tadd\tstack-[1], r0, r4\n\tsub.s!\t@CPI24_2[0], r4, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr3, r3\n\tsub.s!\t@CPI24_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI24_2[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI24_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_1\n\tld\tr1, r1\n\tret\n.BB24_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_3:\n\tadd\t@CPI24_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end24:\n\nfun_verify:\n.func_begin25:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, stack-[1]\n\tld.1\t64, r1\n\tadd\t96, r1, r6\n\tst.1\tr6, r5\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tand\t255, r3, r3\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tst.1\tr1, r2\n\tst.1\t0, r0\n\tadd\t@CPI25_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI25_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI25_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI25_1[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI25_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB25_11\n\tadd\tr0, r0, r6\n.BB25_2:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB25_2\n.BB25_11:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB25_4\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB25_4:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_5\n\tadd\tstack-[1], r0, r1\n\tand\t@CPI25_2[0], r1, r1\n\tld.1\t0, r2\n\tand\t@CPI25_2[0], r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tsub!\tr2, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tand\tr2, r1, r1\n\tand\t1, r1, r1\n\tret\n.BB25_5:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB25_12\n\tadd\tr0, r0, r5\n.BB25_7:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB25_7\n.BB25_12:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB25_9\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB25_9:\n\tadd\t@CPI25_0[0], r0, r1\n\tsub.s!\t@CPI25_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t96, r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end25:\n\nfun_cancelTrades:\n.func_begin26:\n\tnop\tstack+=[11]\n\tadd\tr1, r0, stack-[4]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[2]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB26_10\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[8]\n\tadd\t51, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tr0, r0, r2\n.BB26_3:\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB26_4\n\tadd\tr2, r0, stack-[5]\n\tshl.s\t5, r2, r1\n\tadd\tstack-[3], r0, r2\n\tadd\tr2, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t64, r1, r1\n\tadd\tr1, r0, stack-[6]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI26_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI26_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI26_3[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB26_6\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tld.1.inc\tr2, r2, r3\n\tadd\tr3, r0, stack-[10]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI26_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI26_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI26_3[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB26_6\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI26_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI26_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI26_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB26_6\n\tadd\tstack-[10], r0, r4\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r3\n\tadd!\tr2, r3, r2\n\tjump.of\t@.BB26_11\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr4, r2\n\tadd\tstack-[6], r0, r3\n\tld.1\tr3, r3\n\tld.1\t64, r4\n\tadd\t64, r4, r5\n\tst.1\tr5, r3\n\tadd\t32, r4, r3\n\tst.1\tr3, r2\n\tst.1\tr4, r1\n\tadd\t@CPI26_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI26_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI26_2[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI26_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI26_5[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB26_6\n\tadd\tstack-[5], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[2], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB26_3\n.BB26_10:\n\tret\n.BB26_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB26_4:\n\tadd\t@CPI26_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI26_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB26_11:\n\tadd\t@CPI26_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI26_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end26:\n\nfun_takeBid:\n.func_begin27:\n\tnop\tstack+=[46]\n\tld.1.inc\tr1, r3, r2\n\tadd\tr3, r0, stack-[40]\n\tadd\t96, r1, r3\n\tld.1\tr3, r3\n\tadd\tr3, r0, stack-[18]\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[19]\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI27_0[0], r2, r2\n\tjump.ge\t@.BB27_1\n\tadd\tstack-[17], r0, r3\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tsub.s!\t@CPI27_1[0], r3, r3\n\tjump.gt\t@.BB27_1\n\tadd\tstack-[17], r0, r5\n\tadd\t128, r5, r3\n\tst.1\t64, r3\n\tadd\t50, r0, r3\n\tadd\tr3, r0, stack-[1]\n\tsload\tr3, r3\n\tand\t@CPI27_2[0], r3, r4\n\tst.1\tr2, r4\n\tshr.s\t160, r3, r3\n\tand\t65535, r3, r3\n\tadd\t96, r5, r4\n\tst.1\tr4, r3\n\tst.1.inc\tr5, r2, r2\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n\tadd\tstack-[40], r0, r1\n\tld.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[36]\n\tadd\tr2, r0, stack-[22]\n\tsub.s!\t@CPI27_3[0], r2, r1\n\tjump.gt\t@.BB27_1\n\tadd\tstack-[22], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\t63, r1, r2\n\tsub.s\t32, r0, r3\n\tadd\tr3, r0, stack-[21]\n\tand\tr2, r3, r2\n\tld.1\t64, r4\n\tadd\tr4, r2, r3\n\tadd\tr4, r0, stack-[39]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI27_3[0], r3, r5\n\tjump.gt\t@.BB27_1\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB27_1\n\tst.1\t64, r3\n\tadd\tstack-[39], r0, r3\n\tadd\tstack-[22], r0, r4\n\tst.1.inc\tr3, r4, r9\n\tand\t31, r1, r3\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB27_271\n\tadd\tr0, r0, r6\n.BB27_8:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB27_8\n.BB27_271:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB27_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr9, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB27_10:\n\tadd\tr9, r0, stack-[25]\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[42]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI27_3[0], r2, r4\n\tjump.gt\t@.BB27_1\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB27_1\n\tst.1\t64, r2\n\tadd\tstack-[42], r0, r2\n\tadd\tstack-[22], r0, r3\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[20]\n\tsub!\tr3, r0, r2\n\tcontext.code_source\tr2\n\tadd\tr2, r0, stack-[43]\n\tjump.eq\t@.BB27_61\n\tadd\t96, r0, r5\n\tadd\tr0, r0, r2\n\tadd\tstack-[20], r0, r4\n.BB27_14:\n\tadd\tr2, r4, r3\n\tst.1\tr3, r5\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB27_14\n\tadd\tr5, r0, stack-[41]\n\tadd\tr0, r0, r3\n.BB27_16:\n\tadd\tstack-[40], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB27_17\n\tadd\tr3, r0, stack-[46]\n\tshl.s\t5, r3, r2\n\tadd\tstack-[36], r0, r1\n\tadd\tr2, r0, stack-[45]\n\tadd\tr1, r2, r1\n\tld.1\tr1, r2\n\tadd\t96, r2, r2\n\tld.1\tr2, r4\n\tsub.s!\t@CPI27_3[0], r4, r2\n\tjump.gt\t@.BB27_1\n\tshl.s\t5, r4, r3\n\tadd\t63, r3, r2\n\tadd\tstack-[21], r0, r5\n\tand\tr2, r5, r5\n\tld.1\t64, r2\n\tadd\tr2, r5, r5\n\tsub!\tr5, r2, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI27_3[0], r5, r7\n\tjump.gt\t@.BB27_1\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB27_1\n\tst.1\t64, r5\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack[@calldatasize], r0, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB27_270\n\tadd\tr0, r0, r7\n.BB27_23:\n\tshl.s\t5, r7, r8\n\tadd\tr4, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB27_23\n.BB27_270:\n\tand!\t31, r3, r3\n\tjump.eq\t@.BB27_25\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr4, r6, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr5, r5\n\tsub\t256, r3, r3\n\tshr\tr5, r3, r5\n\tshl\tr5, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB27_25:\n\tadd\tstack-[42], r0, r3\n\tld.1\tr3, r3\n\tadd\tstack-[46], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.le\t@.BB27_17\n\tadd\tstack-[20], r0, r3\n\tadd\tstack-[45], r0, r5\n\tadd\tr5, r3, r3\n\tst.1\tr3, r2\n\tadd\tstack-[42], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r4, r2\n\tjump.le\t@.BB27_17\n\tadd\tstack-[40], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r4, r2\n\tjump.le\t@.BB27_17\n\tld.1\tr1, r3\n\tadd\t128, r3, r1\n\tadd\tr1, r0, stack-[24]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[31]\n\tadd\t96, r3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[32]\n\tadd\t64, r3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[33]\n\tld.1.inc\tr3, r1, r2\n\tand\t@CPI27_2[0], r1, r1\n\tadd\tr1, r0, stack-[34]\n\tld.1\tr2, r1\n\tand\t@CPI27_2[0], r1, r1\n\tadd\tr1, r0, stack-[30]\n\tadd\t160, r3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[29]\n\tsub.s!\t2, r1, r1\n\tjump.ge\t@.BB27_29\n\tadd\tr3, r0, stack-[44]\n\tadd\t192, r3, r1\n\tadd\tr1, r0, stack-[23]\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r2, r1\n\tadd\tr2, r0, stack-[37]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[35]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[38]\n\tadd\t@CPI27_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[43], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tadd\tstack-[38], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[35], r0, r1\n\tand\t65535, r1, r1\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tadd\tstack-[37], r0, r1\n\tand\t@CPI27_2[0], r1, r1\n\tadd\t64, r4, r3\n\tst.1\tr3, r1\n\tadd\tstack-[41], r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI27_1[0], r4, r1\n\tjump.gt\t@.BB27_1\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI27_5[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI27_5[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI27_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[38]\n\tadd\tstack-[44], r0, r2\n\tld.1\tr2, r1\n\tand\t@CPI27_2[0], r1, r1\n\tadd\t224, r2, r2\n\tadd\tr2, r0, stack-[26]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[37]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[35]\n\tst.1\t32, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[27]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[28]\n\tadd\t@CPI27_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[43], r0, r1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tadd\tstack-[28], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t352, r4, r1\n\tadd\tstack-[27], r0, r3\n\tst.1\tr1, r3\n\tadd\t320, r4, r1\n\tadd\tstack-[35], r0, r3\n\tst.1\tr1, r3\n\tadd\t288, r4, r1\n\tadd\tstack-[37], r0, r3\n\tst.1\tr1, r3\n\tadd\t256, r4, r1\n\tadd\tstack-[38], r0, r3\n\tst.1\tr1, r3\n\tadd\t224, r4, r1\n\tadd\tstack-[29], r0, r3\n\tst.1\tr1, r3\n\tadd\t192, r4, r1\n\tadd\tstack-[31], r0, r3\n\tst.1\tr1, r3\n\tadd\t160, r4, r1\n\tadd\tstack-[32], r0, r3\n\tst.1\tr1, r3\n\tadd\t128, r4, r1\n\tadd\tstack-[33], r0, r3\n\tst.1\tr1, r3\n\tadd\t96, r4, r1\n\tadd\tstack-[30], r0, r3\n\tst.1\tr1, r3\n\tadd\t64, r4, r1\n\tadd\tstack-[34], r0, r3\n\tst.1\tr1, r3\n\tadd\t352, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI27_9[0], r4, r1\n\tjump.gt\t@.BB27_1\n\tadd\t384, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI27_5[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI27_5[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI27_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r2\n\tadd\tstack-[26], r0, r1\n\tadd\tr2, r0, stack-[37]\n\tst.1\tr1, r2\n\tadd\tstack-[44], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[44]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[38]\n\tadd\t32, r1, r2\n\tadd\t@CPI27_10[0], r0, r1\n\tadd\tr2, r0, stack-[35]\n\tst.1\tr2, r1\n\tadd\t@CPI27_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[43], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[41], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[44], r0, r3\n\tand\t@CPI27_2[0], r3, r3\n\tadd\tr3, r0, stack-[44]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tadd\tstack-[38], r0, r3\n\tadd\t66, r3, r2\n\tadd\tstack-[37], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r3, r2\n\tst.1\tr2, r1\n\tadd\t66, r0, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI27_1[0], r3, r1\n\tjump.gt\t@.BB27_1\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tadd\tstack-[35], r0, r4\n\tsub.s!\t@CPI27_5[0], r4, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr3, r3\n\tsub.s!\t@CPI27_5[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI27_5[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI27_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tadd\tstack-[46], r0, r2\n\tmul\t65, r2, r2, r3\n\tadd\tstack-[18], r0, r3\n\tadd\tr2, r3, r2\n\tadd\t96, r2, r3\n\tld.1\tr3, r3\n\tadd\t32, r2, r4\n\tld.1\tr4, r4\n\tadd\t64, r2, r2\n\tld.1\tr2, r2\n\tld\tr1, r1\n\tld.1\t64, r5\n\tadd\t96, r5, r6\n\tst.1\tr6, r2\n\tadd\t64, r5, r2\n\tst.1\tr2, r4\n\tshr.s\t248, r3, r2\n\tadd\t32, r5, r3\n\tst.1\tr3, r2\n\tst.1\tr5, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tsub.s!\t@CPI27_5[0], r5, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr5, r0, r2\n\tst.1\t0, r0\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI27_5[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI27_11[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI27_5[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB27_269\n\tadd\tr0, r0, r6\n.BB27_43:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB27_43\n.BB27_269:\n\tand!\t31, r5, r5\n\tadd\tstack-[25], r0, r8\n\tjump.eq\t@.BB27_45\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB27_45:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_46\n\tld.1\t0, r1\n\tand!\t@CPI27_2[0], r1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[46], r0, r3\n\tjump.eq\t@.BB27_59\n\tadd\tstack-[44], r0, r1\n\tsub!\tr2, r1, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB27_59\n\tadd\tstack-[24], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[44]\n\tadd\t@CPI27_12[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_13[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tadd\tstack-[44], r0, r2\n\tsub!\tr2, r1, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[25], r0, r8\n\tadd\tstack-[46], r0, r3\n\tjump.le\t@.BB27_59\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t@CPI27_14[0], r1, r2\n\tjump.ge\t@.BB27_56\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t65535, r1, r2\n\tjump.gt\t@.BB27_56\n\tsub.s!\t10001, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n.BB27_59:\n\tadd\tstack-[39], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB27_17\n\tadd\tstack-[45], r0, r2\n\tadd\tr2, r8, r2\n\tand\t1, r1, r1\n\tst.1\tr2, r1\n\tadd\t1, r3, r3\n\tadd\tstack-[22], r0, r1\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB27_16\n.BB27_61:\n\tadd\tstack-[19], r0, r1\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[22]\n\tadd\tr1, r0, stack-[34]\n\tld.1\t64, r2\n\tsub.s!\t@CPI27_15[0], r2, r1\n\tjump.gt\t@.BB27_1\n\tadd\t320, r2, r1\n\tst.1\t64, r1\n\tadd\t288, r2, r3\n\tadd\t96, r0, r1\n\tst.1\tr3, r1\n\tadd\t256, r2, r3\n\tst.1\tr3, r1\n\tadd\t224, r2, r3\n\tst.1\tr3, r1\n\tadd\t192, r2, r3\n\tst.1\tr3, r1\n\tadd\t160, r2, r3\n\tst.1\tr3, r1\n\tadd\t128, r2, r3\n\tst.1\tr3, r0\n\tadd\t96, r2, r3\n\tst.1\tr3, r0\n\tadd\t64, r2, r3\n\tst.1\tr3, r0\n\tadd\t32, r2, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n\tadd\tstack-[34], r0, r2\n\tmul\t160, r2, r2, r3\n\tsub.s\t193, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.gt\t@.BB27_56\n\tdiv.s\t160, r2, r3, r4\n\tadd\tstack-[34], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB27_56\n\tsub.s!\t@CPI27_16[0], r2, r3\n\tjump.gt\t@.BB27_1\n\tadd\t255, r2, r3\n\tadd\tstack-[21], r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tadd\tr4, r0, stack-[13]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI27_3[0], r3, r5\n\tjump.gt\t@.BB27_1\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB27_1\n\tadd\t192, r2, r4\n\tst.1\t64, r3\n\tadd\tstack-[13], r0, r3\n\tst.1.inc\tr3, r4, r7\n\tadd\t223, r2, r2\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB27_267\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n.BB27_69:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB27_69\n.BB27_267:\n\tadd\tr7, r0, stack-[3]\n\tcontext.caller\tr3\n\tsub!\tr0, r0, r2\n\tjump.eq\t@.BB27_71\n.BB27_71:\n\tadd\tstack-[13], r0, r4\n\tadd\t96, r4, r2\n\tadd\t1, r0, r5\n\tadd\tr5, r0, stack-[4]\n\tst.1\tr2, r5\n\tadd\t64, r4, r2\n\tadd\tr3, r0, stack-[2]\n\tst.1\tr2, r3\n\tadd\t192, r4, r2\n\tadd\tstack-[34], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tadd\t128, r0, r4\n\tadd\tr2, r0, stack-[10]\n\tadd\tr4, r0, stack-[12]\n\tst.1\tr2, r4\n\tsub.s!\t@CPI27_3[0], r3, r2\n\tjump.gt\t@.BB27_1\n\tadd\tstack-[34], r0, r2\n\tshl.s\t5, r2, r6\n\tadd\t63, r6, r2\n\tadd\tstack-[21], r0, r3\n\tand\tr2, r3, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r3\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI27_3[0], r3, r7\n\tjump.gt\t@.BB27_1\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB27_1\n\tst.1\t64, r3\n\tadd\tstack-[34], r0, r3\n\tst.1\tr2, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB27_79\n\tadd\tr0, r0, r3\n.BB27_76:\n\tld.1\t64, r5\n\tsub.s!\t@CPI27_17[0], r5, r7\n\tjump.gt\t@.BB27_1\n\tadd\t224, r5, r7\n\tst.1\t64, r7\n\tadd\t160, r5, r7\n\tst.1\tr7, r0\n\tadd\t128, r5, r7\n\tst.1\tr7, r0\n\tadd\t96, r5, r7\n\tst.1\tr7, r0\n\tadd\t64, r5, r7\n\tst.1\tr7, r0\n\tadd\t32, r5, r7\n\tst.1\tr7, r0\n\tst.1\tr5, r0\n\tld.1\t64, r7\n\tsub.s!\t@CPI27_18[0], r7, r8\n\tjump.gt\t@.BB27_1\n\tadd\t160, r7, r8\n\tst.1\t64, r8\n\tadd\t128, r7, r8\n\tst.1\tr8, r0\n\tadd\t96, r7, r8\n\tst.1\tr8, r0\n\tadd\t64, r7, r8\n\tst.1\tr8, r0\n\tadd\t32, r7, r8\n\tst.1\tr8, r0\n\tst.1\tr7, r0\n\tadd\t192, r5, r8\n\tst.1\tr8, r7\n\tadd\t32, r3, r3\n\tadd\tr3, r2, r7\n\tst.1\tr7, r5\n\tsub!\tr3, r6, r5\n\tjump.lt\t@.BB27_76\n.BB27_79:\n\tld.1\t64, r3\n\tadd\tr3, r4, r5\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI27_3[0], r5, r8\n\tjump.gt\t@.BB27_1\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB27_1\n\tst.1\t64, r5\n\tadd\tstack-[34], r0, r5\n\tst.1.inc\tr3, r5, r7\n\tand\t31, r6, r5\n\tadd\tstack[@calldatasize], r0, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB27_266\n\tadd\tr0, r0, r9\n.BB27_83:\n\tshl.s\t5, r9, r10\n\tadd\tr7, r10, r11\n\tptr.add\tr8, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB27_83\n.BB27_266:\n\tsub!\tr5, r0, r9\n\tjump.eq\t@.BB27_85\n\tshl.s\t5, r6, r9\n\tptr.add\tr8, r9, r8\n\tadd\tr7, r9, r7\n\tshl.s\t3, r5, r9\n\tld.1\tr7, r10\n\tshl\tr10, r9, r10\n\tshr\tr10, r9, r10\n\tld\tr8, r8\n\tsub\t256, r9, r9\n\tshr\tr8, r9, r8\n\tshl\tr8, r9, r8\n\tor\tr8, r10, r8\n\tst.1\tr7, r8\n.BB27_85:\n\tld.1\t64, r7\n\tadd\tr7, r4, r8\n\tsub!\tr8, r7, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI27_3[0], r8, r10\n\tjump.gt\t@.BB27_1\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB27_1\n\tst.1\t64, r8\n\tadd\tstack-[34], r0, r8\n\tst.1.inc\tr7, r8, r8\n\tadd\tstack[@calldatasize], r0, r9\n\tptr.add\tstack[@ptr_calldata], r9, r9\n\tsub!\tr6, r0, r10\n\tjump.eq\t@.BB27_265\n\tadd\tr0, r0, r10\n.BB27_89:\n\tshl.s\t5, r10, r11\n\tadd\tr8, r11, r12\n\tptr.add\tr9, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r6, r11\n\tjump.lt\t@.BB27_89\n.BB27_265:\n\tsub!\tr5, r0, r10\n\tjump.eq\t@.BB27_91\n\tshl.s\t5, r6, r10\n\tptr.add\tr9, r10, r9\n\tadd\tr8, r10, r8\n\tshl.s\t3, r5, r10\n\tld.1\tr8, r11\n\tshl\tr11, r10, r11\n\tshr\tr11, r10, r11\n\tld\tr9, r9\n\tsub\t256, r10, r10\n\tshr\tr9, r10, r9\n\tshl\tr9, r10, r9\n\tor\tr9, r11, r9\n\tst.1\tr8, r9\n.BB27_91:\n\tld.1\t64, r8\n\tadd\tr8, r4, r9\n\tsub!\tr9, r8, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI27_3[0], r9, r11\n\tjump.gt\t@.BB27_1\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB27_1\n\tst.1\t64, r9\n\tadd\tstack-[34], r0, r9\n\tst.1.inc\tr8, r9, r9\n\tadd\tstack[@calldatasize], r0, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tsub!\tr6, r0, r11\n\tjump.eq\t@.BB27_264\n\tadd\tr0, r0, r11\n.BB27_95:\n\tshl.s\t5, r11, r12\n\tadd\tr9, r12, r13\n\tptr.add\tr10, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r6, r12\n\tjump.lt\t@.BB27_95\n.BB27_264:\n\tsub!\tr5, r0, r11\n\tjump.eq\t@.BB27_97\n\tshl.s\t5, r6, r11\n\tptr.add\tr10, r11, r10\n\tadd\tr9, r11, r9\n\tshl.s\t3, r5, r11\n\tld.1\tr9, r12\n\tshl\tr12, r11, r12\n\tshr\tr12, r11, r12\n\tld\tr10, r10\n\tsub\t256, r11, r11\n\tshr\tr10, r11, r10\n\tshl\tr10, r11, r10\n\tor\tr10, r12, r10\n\tst.1\tr9, r10\n.BB27_97:\n\tld.1\t64, r9\n\tadd\tr9, r4, r4\n\tsub!\tr4, r9, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI27_3[0], r4, r11\n\tjump.gt\t@.BB27_1\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB27_1\n\tst.1\t64, r4\n\tadd\tstack-[34], r0, r4\n\tst.1.inc\tr9, r4, r4\n\tadd\tstack[@calldatasize], r0, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tsub!\tr6, r0, r11\n\tjump.eq\t@.BB27_263\n\tadd\tr0, r0, r11\n.BB27_101:\n\tshl.s\t5, r11, r12\n\tadd\tr4, r12, r13\n\tptr.add\tr10, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r6, r12\n\tjump.lt\t@.BB27_101\n.BB27_263:\n\tsub!\tr5, r0, r11\n\tjump.eq\t@.BB27_103\n\tshl.s\t5, r6, r6\n\tptr.add\tr10, r6, r10\n\tadd\tr4, r6, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr10, r10\n\tsub\t256, r5, r5\n\tshr\tr10, r5, r10\n\tshl\tr10, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB27_103:\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[11]\n\tsub.s!\t@CPI27_15[0], r4, r4\n\tjump.gt\t@.BB27_1\n\tadd\tstack-[11], r0, r5\n\tadd\t320, r5, r4\n\tst.1\t64, r4\n\tadd\t288, r5, r4\n\tadd\tr4, r0, stack-[29]\n\tst.1\tr4, r2\n\tadd\t256, r5, r2\n\tadd\tr2, r0, stack-[31]\n\tst.1\tr2, r9\n\tadd\t224, r5, r2\n\tadd\tr2, r0, stack-[32]\n\tst.1\tr2, r8\n\tadd\t192, r5, r2\n\tadd\tr2, r0, stack-[26]\n\tst.1\tr2, r7\n\tadd\t160, r5, r2\n\tadd\tr2, r0, stack-[33]\n\tst.1\tr2, r3\n\tadd\t128, r5, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r0\n\tadd\t96, r5, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr2, r0\n\tadd\t64, r5, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr2, r0\n\tst.1.inc\tr5, r0, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tsub.s!\t@CPI27_19[0], r2, r3\n\tjump.gt\t@.BB27_1\n\tadd\t256, r2, r3\n\tst.1\t64, r3\n\tadd\t160, r2, r3\n\tst.1\tr3, r0\n\tadd\t128, r2, r3\n\tst.1\tr3, r0\n\tadd\t96, r2, r3\n\tst.1\tr3, r0\n\tadd\t64, r2, r3\n\tst.1\tr3, r0\n\tadd\t32, r2, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n\tld.1\t64, r3\n\tsub.s!\t@CPI27_20[0], r3, r4\n\tjump.gt\t@.BB27_1\n\tadd\t64, r3, r4\n\tst.1\t64, r4\n\tadd\t32, r3, r4\n\tst.1\tr4, r0\n\tst.1\tr3, r0\n\tadd\t192, r2, r4\n\tst.1\tr4, r3\n\tadd\t224, r2, r2\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tsub.s!\t@CPI27_1[0], r2, r3\n\tjump.gt\t@.BB27_1\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tst.1\tr2, r0\n\tld.1\t64, r1\n\tsub.s!\t@CPI27_1[0], r1, r3\n\tjump.gt\t@.BB27_1\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t96, r1, r3\n\tst.1\tr3, r0\n\tadd\t64, r1, r3\n\tst.1\tr3, r0\n\tadd\t32, r1, r3\n\tst.1\tr3, r0\n\tst.1\tr1, r0\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI27_20[0], r1, r3\n\tjump.gt\t@.BB27_1\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tadd\t32, r1, r3\n\tst.1\tr3, r0\n\tst.1\tr1, r0\n\tadd\t96, r2, r2\n\tst.1\tr2, r1\n\tadd\tstack-[34], r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB27_110\n\tadd\tstack-[13], r0, r1\n\tadd\t160, r1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\tr0, r0, r14\n\tjump\t@.BB27_112\n.BB27_258:\n\tadd\tstack-[30], r0, r3\n\tld.1\tr3, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tshl.s\t5, r2, r2\n\tadd\tr1, r2, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r2\n\tadd\tr2, r3, r2\n\tst.1\tr1, r2\n.BB27_259:\n\tadd\t1, r14, r14\n\tadd\tstack-[34], r0, r1\n\tsub!\tr14, r1, r1\n\tjump.ge\t@.BB27_138\n.BB27_112:\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r14, r1\n\tjump.le\t@.BB27_17\n\tshl.s\t5, r14, r1\n\tadd\tstack-[22], r0, r2\n\tadd\tr2, r1, r1\n\tld.1\tr1, r3\n\tld.1.inc\tr3, r1, r2\n\tadd\tr2, r0, stack-[45]\n\tadd\tstack-[40], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB27_17\n\tadd\tr14, r0, stack-[38]\n\tshl.s\t5, r1, r1\n\tadd\tstack-[36], r0, r2\n\tadd\tr2, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[41]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[24]\n\tand\t@CPI27_2[0], r1, r1\n\tadd\tr3, r0, stack-[37]\n\tadd\t64, r3, r2\n\tadd\tr2, r0, stack-[35]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[25]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[46]\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tadd\tstack-[41], r0, r2\n\tadd\t224, r2, r2\n\tadd\tr2, r0, stack-[23]\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tadd\tstack-[46], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tsload\tr1, r6\n\tadd\tstack-[37], r0, r5\n\tld.1\tr5, r2\n\tadd\tstack-[42], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r2, r1\n\tadd\tstack-[38], r0, r14\n\tjump.le\t@.BB27_17\n\tshl.s\t5, r2, r1\n\tadd\t32, r1, r3\n\tadd\tstack-[42], r0, r1\n\tadd\tr3, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r4\n\tadd\tstack-[46], r0, r7\n\tsub!\tr4, r7, r4\n\tjump.le\t@.BB27_17\n\tadd\tstack-[39], r0, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r2, r2\n\tjump.le\t@.BB27_17\n\tadd\tstack-[39], r0, r2\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB27_259\n\tadd\tr6, r0, stack-[28]\n\tadd\tstack-[46], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tr2, r1, r1\n\tadd\t96, r5, r2\n\tadd\tr2, r0, stack-[30]\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[18]\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[35], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[41], r0, r2\n\tadd\t64, r2, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[27]\n\tadd\tstack-[45], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[45]\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tadd\t96, r1, r3\n\tld.1\tr3, r3\n\tld.1.inc\tr1, r4, r1\n\tadd\tr1, r0, stack-[15]\n\tld.1\tr1, r5\n\tld.1\t64, r1\n\tadd\t128, r1, r6\n\tst.1\tr6, r3\n\tadd\t96, r1, r3\n\tst.1\tr3, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r5\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tadd\tstack-[12], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI27_18[0], r1, r3\n\tjump.gt\t@.BB27_1\n\tadd\t160, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI27_5[0], r0, r3\n\tsub.s!\t@CPI27_5[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI27_5[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI27_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r2\n\tadd\tstack-[45], r0, r1\n\tld.1.inc\tr1, r1, r3\n\tadd\tr3, r0, stack-[44]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB27_129\n\tadd\tr0, r0, r3\n\tjump\t@.BB27_125\n.BB27_127:\n\tst.1\t0, r1\n\tst.1\t32, r2\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n.BB27_126:\n\tld\tr1, r2\n\tadd\tstack-[46], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[45], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr3, r1, r1\n\tjump.ge\t@.BB27_129\n.BB27_125:\n\tadd\tr3, r0, stack-[46]\n\tshl.s\t5, r3, r1\n\tadd\tstack-[44], r0, r3\n\tadd\tr3, r1, r1\n\tld.1\tr1, r1\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB27_127\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB27_126\n\tjump\t@.BB27_31\n.BB27_129:\n\tadd\tstack-[41], r0, r1\n\tadd\t160, r1, r4\n\tld.1\tr4, r3\n\tsub.s!\t1, r3, r1\n\tadd\tstack-[38], r0, r14\n\tadd\tstack-[37], r0, r15\n\tadd\tstack-[28], r0, r5\n\tjump.gt\t@.BB27_29\n\tadd\tstack-[30], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB27_133\n\tadd\tstack-[27], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB27_259\n\tld.1\tr1, r2\n\tadd\tstack-[15], r0, r3\n\tjump\t@.BB27_135\n.BB27_133:\n\tadd\tstack-[27], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB27_259\n\tadd\t32, r1, r3\n\tadd\tstack-[4], r0, r2\n.BB27_135:\n\tld.1\tr3, r3\n\tsub!\tr3, r2, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_259\n\tsub.s\t1, r0, r2\n\txor\tr5, r2, r3\n\tadd\tstack-[18], r0, r2\n\tadd\tstack-[16], r0, r6\n\tadd\tr2, r6, r2\n\tsub!\tr2, r3, r3\n\tjump.gt\t@.BB27_259\n\tadd\tr2, r5, r2\n\tadd\tstack-[25], r0, r3\n\tadd\t64, r3, r3\n\tld.1\tr3, r3\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB27_259\n\tadd\tstack-[41], r0, r2\n\tadd\t192, r2, r2\n\tld.1\tr2, r7\n\tadd\t32, r1, r1\n\tld.1\tr1, r3\n\tadd\tstack-[35], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r8\n\tmul\tr8, r3, r1, r2\n\tsub!\tr8, r0, r2\n\tadd\tr0, r0, r6\n\tadd\tr0, r0, r2\n\tadd\tr0, r0, r5\n\tjump.eq\t@.BB27_233\n\tdiv\tr1, r8, r2, r5\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB27_56\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r6\n\tadd\tr0, r0, r2\n\tadd\tr0, r0, r5\n\tjump.eq\t@.BB27_233\n\tadd\t32, r7, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r5\n\tmul\tr5, r1, r2, r6\n\tdiv\tr2, r1, r6, r8\n\tsub!\tr6, r5, r5\n\tjump.ne\t@.BB27_56\n\tadd\tstack-[14], r0, r5\n\tld.1\tr5, r5\n\tadd\t32, r5, r5\n\tld.1\tr5, r5\n\tand\t65535, r5, r6\n\tmul\tr6, r1, r5, r8\n\tdiv\tr5, r1, r8, r9\n\tsub!\tr8, r6, r6\n\tjump.ne\t@.BB27_56\n\tadd\tstack-[17], r0, r6\n\tld.1\tr6, r6\n\tadd\t32, r6, r6\n\tld.1\tr6, r6\n\tand\t65535, r6, r8\n\tmul\tr8, r1, r6, r9\n\tdiv\tr6, r1, r9, r10\n\tsub!\tr9, r8, r8\n\tjump.ne\t@.BB27_56\n.BB27_233:\n\tld.1\tr7, r7\n\tand\t@CPI27_2[0], r7, r7\n\tadd\tstack-[6], r0, r8\n\tld.1\tr8, r9\n\tadd\tstack-[33], r0, r8\n\tld.1\tr8, r8\n\tld.1.inc\tr8, r10, r8\n\tsub!\tr10, r9, r11\n\tjump.le\t@.BB27_17\n\tshl.s\t5, r9, r11\n\tadd\tr8, r11, r11\n\tld.1\tr11, r12\n\tand\t@CPI27_2[0], r12, r12\n\tsub!\tr7, r12, r13\n\tjump.eq\t@.BB27_236\n\tsub!\tr12, r0, r12\n\tjump.eq\t@.BB27_240\n\tadd\t1, r9, r9\n\tsub!\tr10, r9, r10\n\tjump.le\t@.BB27_17\n\tshl.s\t5, r9, r10\n\tadd\tr8, r10, r8\n\tst.1\tr8, r7\n\tadd\tstack-[6], r0, r7\n\tst.1\tr7, r9\n\tjump\t@.BB27_236\n.BB27_240:\n\tst.1\tr11, r7\n.BB27_236:\n\tadd\tstack-[41], r0, r7\n\tld.1\tr7, r7\n\tand\t@CPI27_2[0], r7, r7\n\tadd\tstack-[7], r0, r8\n\tld.1\tr8, r9\n\tadd\tstack-[26], r0, r8\n\tld.1\tr8, r8\n\tld.1.inc\tr8, r10, r8\n\tsub!\tr10, r9, r11\n\tjump.le\t@.BB27_17\n\tshl.s\t5, r9, r11\n\tadd\tr8, r11, r11\n\tld.1\tr11, r12\n\tand\t@CPI27_2[0], r12, r12\n\tsub!\tr7, r12, r13\n\tjump.eq\t@.BB27_245\n\tsub!\tr12, r0, r12\n\tjump.eq\t@.BB27_244\n\tadd\t1, r9, r9\n\tsub!\tr10, r9, r10\n\tjump.le\t@.BB27_17\n\tshl.s\t5, r9, r10\n\tadd\tr8, r10, r8\n\tst.1\tr8, r7\n\tadd\tstack-[7], r0, r7\n\tst.1\tr7, r9\n\tjump\t@.BB27_245\n.BB27_244:\n\tst.1\tr11, r7\n.BB27_245:\n\tadd\tstack-[10], r0, r7\n\tld.1\tr7, r7\n\tadd\tstack-[13], r0, r8\n\tadd\tr7, r8, r8\n\tadd\tstack-[5], r0, r12\n\tld.1\tr12, r7\n\tmul\t160, r7, r9, r10\n\tadd\tr8, r9, r8\n\tadd\tstack-[30], r0, r9\n\tld.1\tr9, r9\n\tld.1\tr9, r9\n\tadd\t128, r8, r10\n\tadd\tstack-[41], r0, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r9\n\tadd\t96, r8, r9\n\tst.1\tr9, r11\n\tadd\tstack-[24], r0, r9\n\tld.1\tr9, r9\n\tadd\t192, r8, r10\n\tst.1\tr10, r9\n\tadd\t224, r8, r9\n\tld.1\tr4, r10\n\tst.1\tr9, r10\n\tadd\t1, r7, r9\n\tst.1\tr12, r9\n\tld.1\tr4, r4\n\tsub.s!\t1, r4, r4\n\tjump.ne\t@.BB27_247\n\tadd\t160, r8, r4\n\tst.1\tr4, r3\n.BB27_247:\n\tadd\tstack-[29], r0, r4\n\tld.1\tr4, r10\n\tld.1\tr10, r4\n\tsub!\tr4, r7, r4\n\tjump.le\t@.BB27_17\n\tadd\tstack-[7], r0, r4\n\tld.1\tr4, r11\n\tadd\tstack-[23], r0, r4\n\tld.1\tr4, r8\n\tadd\tstack-[35], r0, r4\n\tld.1\tr4, r9\n\tshl.s\t5, r7, r4\n\tadd\t32, r4, r4\n\tadd\tr10, r4, r10\n\tld.1\tr10, r10\n\tst.1\tr10, r11\n\tadd\tstack-[29], r0, r10\n\tld.1\tr10, r10\n\tld.1\tr10, r12\n\tsub!\tr12, r7, r12\n\tjump.le\t@.BB27_17\n\tadd\tr10, r4, r10\n\tld.1\tr10, r10\n\tadd\t64, r10, r10\n\tadd\tstack-[6], r0, r12\n\tld.1\tr12, r12\n\tst.1\tr10, r12\n\tadd\tstack-[26], r0, r10\n\tld.1\tr10, r12\n\tld.1\tr12, r10\n\tsub!\tr10, r11, r10\n\tjump.le\t@.BB27_17\n\tld.1\t64, r10\n\tsub.s!\t@CPI27_18[0], r10, r13\n\tjump.gt\t@.BB27_1\n\tshl.s\t5, r11, r11\n\tadd\tr11, r12, r11\n\tadd\t32, r11, r11\n\tld.1\tr11, r11\n\tld.1\tr9, r12\n\tadd\t64, r9, r9\n\tld.1\tr9, r9\n\tadd\t160, r10, r13\n\tst.1\t64, r13\n\tadd\t128, r10, r13\n\tst.1\tr13, r9\n\tadd\t96, r10, r9\n\tst.1\tr9, r3\n\tadd\t64, r10, r3\n\tst.1\tr3, r12\n\tadd\t32, r10, r3\n\tst.1\tr3, r8\n\tand\t@CPI27_2[0], r11, r3\n\tst.1\tr10, r3\n\tadd\tstack-[29], r0, r3\n\tld.1\tr3, r3\n\tld.1\tr3, r8\n\tsub!\tr8, r7, r8\n\tjump.le\t@.BB27_17\n\tadd\tr3, r4, r3\n\tld.1\tr3, r3\n\tadd\t192, r3, r3\n\tst.1\tr3, r10\n\tadd\tstack-[29], r0, r3\n\tld.1\tr3, r8\n\tld.1\tr8, r3\n\tsub!\tr3, r7, r3\n\tjump.le\t@.BB27_17\n\tdiv.s\t10000, r6, r3, r6\n\tdiv.s\t10000, r5, r5, r6\n\tadd\tr3, r5, r6\n\tsub\tr1, r6, r1\n\tadd\tr8, r4, r6\n\tld.1\tr6, r6\n\tadd\t32, r6, r6\n\tst.1\tr6, r1\n\tadd\tstack-[29], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r6\n\tsub!\tr6, r7, r6\n\tjump.le\t@.BB27_17\n\tdiv.s\t10000, r2, r2, r6\n\tadd\tr1, r4, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r1\n\tst.1\tr1, r2\n\tadd\tstack-[29], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r7, r2\n\tjump.le\t@.BB27_17\n\tadd\tr1, r4, r1\n\tld.1\tr1, r1\n\tadd\t128, r1, r1\n\tst.1\tr1, r5\n\tadd\tstack-[29], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r7, r2\n\tjump.le\t@.BB27_17\n\tadd\tr1, r4, r1\n\tld.1\tr1, r1\n\tadd\t160, r1, r1\n\tst.1\tr1, r3\n\tld.1\tr15, r1\n\tadd\tstack-[42], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB27_17\n\tshl.s\t5, r1, r1\n\tadd\tstack-[20], r0, r2\n\tadd\tr2, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r3\n\tadd\tstack-[35], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tsub!\tr3, r2, r3\n\tjump.gt\t@.BB27_258\n.BB27_17:\n\tadd\t@CPI27_32[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI27_33[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_110:\n\tadd\tstack-[13], r0, r1\n\tadd\t160, r1, r1\n\tadd\tr1, r0, stack-[5]\n.BB27_138:\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB27_226\n\tld.1\t64, r8\n\tadd\t32, r8, r2\n\tadd\tr2, r0, stack-[45]\n\tst.1\t64, r2\n\tsub.s!\t@CPI27_3[0], r1, r2\n\tjump.gt\t@.BB27_1\n\tshl.s\t5, r1, r5\n\tadd\t63, r5, r2\n\tadd\tstack-[21], r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[45], r0, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI27_3[0], r2, r4\n\tjump.gt\t@.BB27_1\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB27_1\n\tst.1\t64, r2\n\tadd\tstack-[45], r0, r2\n\tst.1\tr2, r1\n\tand\t31, r5, r1\n\tadd\t64, r8, r2\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr5, r0, stack-[46]\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB27_262\n\tadd\tr0, r0, r5\n.BB27_144:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB27_144\n.BB27_262:\n\tadd\tr8, r0, stack-[44]\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB27_146\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr2, r4, r2\n\tshl.s\t3, r1, r1\n\tld.1\tr2, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr3, r3\n\tsub\t256, r1, r1\n\tshr\tr3, r1, r3\n\tshl\tr3, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB27_146:\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[42]\n\tadd\t@CPI27_21[0], r0, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr2, r1\n\tadd\t@CPI27_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[43], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tadd\tstack-[13], r0, r2\n\tadd\t60, r2, r3\n\tadd\tstack-[46], r0, r2\n\tadd\t64, r2, r5\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB27_152\n\tand\t31, r5, r1\n\tshr.s!\t5, r5, r2\n\tadd\tstack-[44], r0, r7\n\tjump.eq\t@.BB27_260\n\tadd\tr0, r0, r4\n.BB27_150:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tadd\tr3, r5, r5\n\tld.1\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB27_150\n.BB27_260:\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB27_157\n\tshl.s\t5, r2, r2\n\tadd\tr3, r2, r3\n\tadd\tr7, r2, r2\n\tshl.s\t3, r1, r1\n\tld.1\tr2, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld.1\tr3, r3\n\tsub\t256, r1, r1\n\tshr\tr3, r1, r3\n\tshl\tr3, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n\tjump\t@.BB27_157\n.BB27_152:\n\tadd\t@CPI27_5[0], r0, r4\n\tadd\tr5, r0, stack-[46]\n\tsub.s!\t@CPI27_5[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\tstack-[42], r0, r5\n\tsub.s\t28, r5, r5\n\tsub.s!\t@CPI27_5[0], r5, r6\n\tadd.ge\tr4, r0, r5\n\tshl.s\t96, r5, r5\n\tor\tr5, r3, r3\n\tsub.s!\t@CPI27_5[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI27_5[0], r2, r2\n\tadd\tstack-[46], r0, r4\n\tsub!\tr2, r4, r3\n\tadd.lt\tr2, r0, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tadd\tstack-[44], r0, r8\n\tjump.eq\t@.BB27_261\n\tadd\tr0, r0, r5\n.BB27_154:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB27_154\n.BB27_261:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB27_156\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr8, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB27_156:\n\tadd\tr2, r0, stack[@returndatasize]\n.BB27_157:\n\tadd\tstack-[45], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[30]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB27_161\n\tadd\tr0, r0, r2\n\tjump\t@.BB27_159\n.BB27_194:\n\tshl.s\t160, r11, r4\n\tand\t@CPI27_23[0], r4, r4\n\tld.1\tr14, r6\n\tand\t@CPI27_2[0], r6, r6\n\tor\tr6, r4, r4\n\tadd\t192, r3, r3\n\tld.1\tr3, r3\n\tld.1\tr5, r5\n\tld.1\t64, r6\n\tadd\t96, r6, r8\n\tst.1\tr8, r4\n\tshl.s\t160, r2, r2\n\tshl.s\t168, r7, r4\n\tor\tr4, r2, r2\n\tand\t@CPI27_2[0], r5, r4\n\tor\tr2, r4, r2\n\tadd\t32, r6, r4\n\tst.1\tr4, r2\n\tshl.s\t160, r13, r2\n\tand\t@CPI27_2[0], r3, r3\n\tor\tr3, r2, r2\n\tor\t@CPI27_24[0], r2, r2\n\tadd\t64, r6, r3\n\tst.1\tr3, r2\n\tst.1\tr6, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tsub.s!\t@CPI27_5[0], r6, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr6, r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI27_5[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI27_25[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI27_26[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB27_31\n.BB27_177:\n\tadd\tstack-[46], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[30], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB27_161\n.BB27_159:\n\tadd\tstack-[45], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB27_17\n\tadd\tr2, r0, stack-[46]\n\tshl.s\t5, r2, r1\n\tadd\t32, r1, r1\n\tadd\tstack-[45], r0, r2\n\tadd\tr1, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB27_177\n\tadd\tstack-[29], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r3\n\tadd\tstack-[46], r0, r11\n\tsub!\tr3, r11, r3\n\tjump.le\t@.BB27_17\n\tadd\tr2, r1, r2\n\tld.1\tr2, r3\n\tld.1\t64, r2\n\tsub.s!\t@CPI27_20[0], r2, r4\n\tjump.gt\t@.BB27_1\n\tadd\t64, r2, r4\n\tst.1\t64, r4\n\tadd\t32, r2, r4\n\tst.1\tr4, r0\n\tst.1\tr2, r0\n\tld.1.inc\tr3, r6, r4\n\tadd\tstack-[32], r0, r2\n\tld.1\tr2, r5\n\tld.1\tr5, r2\n\tsub!\tr2, r6, r2\n\tjump.le\t@.BB27_17\n\tadd\t96, r3, r2\n\tld.1\tr4, r7\n\tadd\t128, r3, r8\n\tld.1\tr8, r9\n\tadd\tr9, r7, r7\n\tld.1\tr2, r9\n\tadd\tr7, r9, r7\n\tadd\t160, r3, r9\n\tld.1\tr9, r10\n\tadd\tr7, r10, r7\n\tshl.s\t5, r6, r6\n\tadd\tr5, r6, r5\n\tadd\t32, r5, r5\n\tld.1\tr5, r6\n\tadd\tr7, r6, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\tstack-[9], r0, r10\n\tld.1\tr10, r5\n\tadd\tr5, r4, r7\n\tld.1\tr8, r5\n\tld.1\tr9, r6\n\tst.1\tr10, r7\n\tld.1\tr9, r7\n\tadd\tstack-[11], r0, r10\n\tld.1\tr10, r9\n\tadd\tr9, r7, r7\n\tst.1\tr10, r7\n\tld.1\tr8, r7\n\tadd\tstack-[8], r0, r9\n\tld.1\tr9, r8\n\tadd\tr8, r7, r7\n\tst.1\tr9, r7\n\tadd\t64, r3, r3\n\tld.1\tr3, r8\n\tadd\tstack-[31], r0, r7\n\tld.1\tr7, r7\n\tld.1\tr7, r9\n\tsub!\tr9, r8, r9\n\tjump.le\t@.BB27_17\n\tshl.s\t5, r8, r8\n\tadd\tr7, r8, r7\n\tadd\t32, r7, r7\n\tld.1\tr2, r8\n\tld.1\tr7, r9\n\tadd\tr9, r8, r8\n\tst.1\tr7, r8\n\tld.1\tr3, r7\n\tadd\tstack-[33], r0, r3\n\tld.1\tr3, r3\n\tld.1\tr3, r8\n\tsub!\tr8, r7, r8\n\tjump.le\t@.BB27_17\n\tadd\tr6, r4, r4\n\tadd!\tr4, r5, r5\n\tshl.s\t5, r7, r4\n\tadd\tr3, r4, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tand\t@CPI27_2[0], r3, r3\n\tjump.eq\t@.BB27_169\n\tld.1\t64, r6\n\tsub.s!\t@CPI27_20[0], r6, r4\n\tjump.gt\t@.BB27_1\n\tld.1\tr2, r2\n\tadd\t64, r6, r4\n\tst.1\t64, r4\n\tadd\tr6, r0, stack-[37]\n\tst.1.inc\tr6, r3, r4\n\tmul\t10000, r2, r2, r3\n\tadd\tr5, r0, stack-[38]\n\tdiv\tr2, r5, r2, r3\n\tand\t65535, r2, r2\n\tadd\tr4, r0, stack-[36]\n\tst.1\tr4, r2\n\tadd\tstack-[29], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r3\n\tsub!\tr3, r11, r3\n\tjump.le\t@.BB27_17\n\tadd\tr2, r1, r1\n\tld.1\tr1, r1\n\tadd\t192, r1, r1\n\tld.1\tr1, r4\n\tld.1.inc\tr4, r1, r2\n\tand\t@CPI27_2[0], r1, r3\n\tadd\tr4, r0, stack-[41]\n\tadd\t64, r4, r1\n\tadd\tr1, r0, stack-[34]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[42]\n\tadd\tr2, r0, stack-[35]\n\tld.1\tr2, r1\n\tadd\tr1, r0, stack-[44]\n\tadd\tr3, r0, stack-[40]\n\tst.1\t0, r3\n\tadd\t51, r0, r1\n\tadd\tr1, r0, stack-[39]\n\tst.1\t32, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tadd\tstack-[44], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tadd\tstack-[42], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[41], r0, r3\n\tadd\t96, r3, r2\n\tld.1\tr2, r2\n\tadd!\tr2, r1, r2\n\tjump.of\t@.BB27_56\n\tadd\t128, r3, r1\n\tld.1\tr1, r1\n\tadd\tr2, r0, stack-[41]\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB27_178\n\tadd\tstack-[40], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[39], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tadd\tstack-[44], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tadd\tstack-[42], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r1\n\tadd\tstack-[41], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tsub.s!\t@CPI27_18[0], r1, r2\n\tadd\tstack-[46], r0, r3\n\tadd\tstack-[38], r0, r13\n\tadd\tstack-[37], r0, r14\n\tjump.gt\t@.BB27_1\n\tadd\t160, r1, r2\n\tst.1\t64, r2\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tadd\t96, r1, r2\n\tst.1\tr2, r0\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tmul\t160, r3, r1, r2\n\tadd\tstack-[13], r0, r2\n\tadd\tr1, r2, r1\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tadd\tr1, r2, r3\n\tadd\t224, r3, r4\n\tld.1\tr4, r6\n\tsub.s!\t1, r6, r1\n\tadd\tstack-[36], r0, r15\n\tjump.gt\t@.BB27_29\n\tadd\tstack-[34], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[35], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r3, r5\n\tsub!\tr6, r0, r6\n\tadd\t128, r3, r6\n\tjump.ne\t@.BB27_190\n\tadd\tstack-[17], r0, r7\n\tld.1\tr7, r7\n\tadd\t32, r7, r7\n\tld.1\tr7, r7\n\tand!\t65535, r7, r7\n\tjump.eq\t@.BB27_186\n.BB27_190:\n\tld.1\tr5, r5\n\tand\t@CPI27_2[0], r5, r7\n\tld.1\t64, r5\n\tst.1.inc\tr5, r7, r7\n\tld.1\tr6, r6\n\tst.1\tr7, r6\n\tadd\t160, r3, r6\n\tld.1\tr6, r6\n\tadd\t64, r5, r7\n\tst.1\tr7, r6\n\tadd\t192, r3, r3\n\tld.1\tr3, r3\n\tand\t@CPI27_2[0], r3, r3\n\tadd\t96, r5, r6\n\tst.1\tr6, r3\n\tld.1\tr4, r3\n\tsub.s!\t1, r3, r4\n\tjump.gt\t@.BB27_29\n\tadd\t224, r5, r4\n\tst.1\tr4, r13\n\tadd\t192, r5, r4\n\tst.1\tr4, r2\n\tadd\t160, r5, r2\n\tst.1\tr2, r1\n\tadd\t128, r5, r1\n\tst.1\tr1, r3\n\tld.1\tr14, r1\n\tand\t@CPI27_2[0], r1, r1\n\tadd\t256, r5, r2\n\tst.1\tr2, r1\n\tld.1\tr15, r1\n\tand\t65535, r1, r1\n\tadd\t288, r5, r2\n\tst.1\tr2, r1\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r1, r2\n\tand\t@CPI27_2[0], r1, r1\n\tadd\t320, r5, r3\n\tst.1\tr3, r1\n\tld.1\tr2, r1\n\tand\t65535, r1, r1\n\tadd\t352, r5, r2\n\tst.1\tr2, r1\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r1, r2\n\tand\t@CPI27_2[0], r1, r1\n\tadd\t384, r5, r3\n\tst.1\tr3, r1\n\tld.1\tr2, r1\n\tand\t65535, r1, r1\n\tadd\t416, r5, r2\n\tst.1\tr2, r1\n\tadd\t448, r5, r1\n\tadd\t1, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI27_5[0], r0, r1\n\tsub.s!\t@CPI27_5[0], r5, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr5, r0, r2\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI27_5[0], r4, r5\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI27_30[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI27_31[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB27_177\n\tjump\t@.BB27_31\n.BB27_186:\n\tld.1\tr6, r7\n\tsub.s!\t@CPI27_22[0], r7, r8\n\tjump.gt\t@.BB27_190\n\tsub.s!\t255, r2, r8\n\tjump.gt\t@.BB27_190\n\tsub.s!\t@CPI27_22[0], r13, r8\n\tjump.gt\t@.BB27_190\n\tadd\tstack-[14], r0, r8\n\tld.1\tr8, r9\n\tadd\t32, r9, r8\n\tld.1\tr8, r8\n\tand\t65535, r8, r10\n\tld.1\tr15, r11\n\tand!\t65535, r11, r12\n\tjump.eq\t@.BB27_192\n\tsub!\tr10, r0, r8\n\tjump.ne\t@.BB27_190\n\tjump\t@.BB27_194\n.BB27_192:\n\tshl.s\t160, r2, r2\n\tshl.s\t168, r7, r4\n\tor\tr4, r2, r2\n\tld.1\tr5, r4\n\tand\t@CPI27_2[0], r4, r4\n\tor\tr2, r4, r2\n\tshl.s\t160, r13, r4\n\tadd\t192, r3, r3\n\tld.1\tr3, r3\n\tand\t@CPI27_2[0], r3, r3\n\tor\tr3, r4, r3\n\tor\t@CPI27_24[0], r3, r3\n\tsub!\tr10, r0, r4\n\tjump.eq\t@.BB27_196\n\tld.1\tr9, r4\n\tld.1\t64, r5\n\tadd\t64, r5, r6\n\tst.1\tr6, r3\n\tadd\t32, r5, r3\n\tst.1\tr3, r2\n\tshl.s\t160, r8, r2\n\tand\t@CPI27_23[0], r2, r2\n\tand\t@CPI27_2[0], r4, r3\n\tor\tr3, r2, r2\n\tadd\t96, r5, r3\n\tst.1\tr3, r2\n\tst.1\tr5, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI27_5[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI27_25[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI27_27[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB27_177\n\tjump\t@.BB27_31\n.BB27_196:\n\tld.1\t64, r4\n\tadd\t64, r4, r5\n\tst.1\tr5, r3\n\tadd\t32, r4, r3\n\tst.1\tr3, r2\n\tst.1\tr4, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI27_5[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI27_28[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI27_29[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB27_177\n\tjump\t@.BB27_31\n.BB27_161:\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r2\n\tsub.s\t1, r0, r1\n\tadd\tr1, r0, stack-[41]\n\tadd\tr2, r0, stack-[44]\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB27_56\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[45]\n\tadd\tr0, r0, r1\n\tjump\t@.BB27_197\n.BB27_204:\n\tadd\t1, r5, r1\n\tadd\tstack-[44], r0, r2\n\tsub!\tr5, r2, r2\n\tjump.ge\t@.BB27_205\n.BB27_197:\n\tadd\tr1, r0, r5\n\tadd\tstack-[26], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r5, r2\n\tjump.le\t@.BB27_17\n\tshl.s\t5, r5, r2\n\tadd\t32, r2, r2\n\tadd\tr2, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI27_2[0], r1, r1\n\tadd\tstack-[32], r0, r3\n\tld.1\tr3, r3\n\tld.1\tr3, r4\n\tsub!\tr4, r5, r4\n\tjump.le\t@.BB27_17\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB27_204\n\tadd\tr5, r0, stack-[46]\n\tld.1\t64, r4\n\tadd\t68, r4, r3\n\tst.1\tr3, r2\n\tadd\t36, r4, r2\n\tadd\tstack-[45], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI27_36[0], r0, r2\n\tst.1\tr4, r2\n\tadd\tr4, r0, stack-[42]\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI27_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[43], r0, r1\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tadd\tstack-[46], r0, r5\n\tjump.eq\t@.BB27_204\n\tadd\t@CPI27_5[0], r0, r3\n\tsub.s!\t@CPI27_5[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[42], r0, r5\n\tsub.s!\t@CPI27_5[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI27_37[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[46], r0, r5\n\tshr.s\t96, r1, r1\n\tand\t@CPI27_5[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB27_204\n\tjump\t@.BB27_203\n.BB27_205:\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB27_209\n\tld.1\t64, r3\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tadd\t36, r3, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI27_36[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[46]\n\tadd\t4, r3, r1\n\tadd\tstack-[45], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI27_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[43], r0, r1\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB27_209\n\tadd\t@CPI27_5[0], r0, r3\n\tsub.s!\t@CPI27_5[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[46], r0, r5\n\tsub.s!\t@CPI27_5[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI27_37[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tshr.s\t96, r1, r1\n\tand\t@CPI27_5[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB27_203\n.BB27_209:\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[41], r0, r1\n\tadd\tr2, r0, stack-[44]\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB27_56\n\tadd\t160, r0, r1\n\tadd\tr1, r0, stack-[41]\n\tadd\tr0, r0, r1\n\tjump\t@.BB27_211\n.BB27_217:\n\tadd\t1, r5, r1\n\tadd\tstack-[44], r0, r2\n\tsub!\tr5, r2, r2\n\tjump.ge\t@.BB27_218\n.BB27_211:\n\tadd\tr1, r0, r5\n\tadd\tstack-[33], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r5, r2\n\tjump.le\t@.BB27_17\n\tshl.s\t5, r5, r2\n\tadd\t32, r2, r2\n\tadd\tr2, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI27_2[0], r1, r1\n\tadd\tstack-[31], r0, r3\n\tld.1\tr3, r3\n\tld.1\tr3, r4\n\tsub!\tr4, r5, r4\n\tjump.le\t@.BB27_17\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB27_217\n\tadd\tr5, r0, stack-[46]\n\tld.1\t64, r4\n\tadd\t68, r4, r3\n\tst.1\tr3, r2\n\tadd\t36, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI27_36[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[42]\n\tadd\t4, r4, r1\n\tadd\tstack-[45], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI27_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[43], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[41], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tadd\tstack-[46], r0, r5\n\tjump.eq\t@.BB27_217\n\tadd\t@CPI27_5[0], r0, r3\n\tsub.s!\t@CPI27_5[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[42], r0, r5\n\tsub.s!\t@CPI27_5[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI27_37[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[46], r0, r5\n\tshr.s\t96, r1, r1\n\tand\t@CPI27_5[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB27_217\n.BB27_203:\n\tld.1\t64, r1\n\tadd\t@CPI27_38[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI27_5[0], r0, r2\n\tsub.s!\t@CPI27_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI27_35[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_218:\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB27_222\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tld.1\t64, r4\n\tadd\t68, r4, r3\n\tst.1\tr3, r1\n\tand\t@CPI27_2[0], r2, r1\n\tadd\t36, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI27_36[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[46]\n\tadd\t4, r4, r1\n\tadd\tstack-[45], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI27_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[43], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[41], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB27_222\n\tadd\t@CPI27_5[0], r0, r3\n\tsub.s!\t@CPI27_5[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[46], r0, r5\n\tsub.s!\t@CPI27_5[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI27_37[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tshr.s\t96, r1, r1\n\tand\t@CPI27_5[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB27_203\n.BB27_222:\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB27_226\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tld.1\t64, r4\n\tadd\t68, r4, r3\n\tst.1\tr3, r1\n\tand\t@CPI27_2[0], r2, r1\n\tadd\t36, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI27_36[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[46]\n\tadd\t4, r4, r1\n\tadd\tstack-[45], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI27_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[43], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[41], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI27_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_31\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB27_226\n\tadd\t@CPI27_5[0], r0, r3\n\tsub.s!\t@CPI27_5[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[46], r0, r5\n\tsub.s!\t@CPI27_5[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI27_37[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tshr.s\t96, r1, r1\n\tand\t@CPI27_5[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB27_203\n.BB27_226:\n\tret\n.BB27_31:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_1:\n\tadd\t@CPI27_32[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI27_33[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_29:\n\tadd\t@CPI27_32[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI27_33[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_56:\n\tadd\t@CPI27_32[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI27_33[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_46:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB27_268\n\tadd\tr0, r0, r5\n.BB27_48:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB27_48\n.BB27_268:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB27_50\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB27_50:\n\tadd\t@CPI27_5[0], r0, r1\n\tsub.s!\t@CPI27_5[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tstack-[41], r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_169:\n\tadd\t@CPI27_32[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI27_33[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_178:\n\tld.1\t64, r1\n\tadd\t@CPI27_34[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI27_5[0], r0, r2\n\tsub.s!\t@CPI27_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI27_35[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end27:\n\nfun_takeBidSingle:\n.func_begin28:\n\tnop\tstack+=[30]\n\tld.1.inc\tr1, r3, r2\n\tadd\tr3, r0, stack-[26]\n\tadd\t96, r1, r3\n\tld.1\tr3, r3\n\tadd\tr3, r0, stack-[10]\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[30]\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[25]\n\tsub.s!\t@CPI28_0[0], r2, r2\n\tjump.ge\t@.BB28_1\n\tadd\tstack-[25], r0, r3\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tsub.s!\t@CPI28_1[0], r3, r3\n\tjump.gt\t@.BB28_1\n\tadd\tstack-[25], r0, r5\n\tadd\t128, r5, r3\n\tst.1\t64, r3\n\tadd\t50, r0, r3\n\tadd\tr3, r0, stack-[1]\n\tsload\tr3, r3\n\tand\t@CPI28_2[0], r3, r4\n\tst.1\tr2, r4\n\tshr.s\t160, r3, r3\n\tand\t65535, r3, r3\n\tadd\t96, r5, r4\n\tst.1\tr4, r3\n\tst.1.inc\tr5, r2, r2\n\tadd\tr2, r0, stack-[19]\n\tst.1\tr2, r1\n\tadd\tstack-[26], r0, r2\n\tadd\t128, r2, r1\n\tadd\tr1, r0, stack-[6]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t96, r2, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t64, r2, r1\n\tadd\tr1, r0, stack-[5]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[21]\n\tadd\t32, r2, r1\n\tadd\tr1, r0, stack-[2]\n\tld.1\tr1, r1\n\tand\t@CPI28_2[0], r1, r1\n\tadd\tr1, r0, stack-[12]\n\tld.1\tr2, r1\n\tand\t@CPI28_2[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t160, r2, r1\n\tadd\tr1, r0, stack-[17]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub.s!\t2, r1, r1\n\tjump.ge\t@.BB28_4\n\tadd\tstack-[30], r0, r2\n\tadd\t64, r2, r1\n\tadd\tr1, r0, stack-[4]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t96, r2, r1\n\tadd\tr1, r0, stack-[20]\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[26], r0, r1\n\tadd\t192, r1, r1\n\tadd\tr1, r0, stack-[18]\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r2, r1\n\tadd\tr2, r0, stack-[28]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[27]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[29]\n\tadd\t@CPI28_3[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[24]\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tadd\tstack-[29], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[27], r0, r1\n\tand\t65535, r1, r1\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tadd\tstack-[28], r0, r1\n\tand\t@CPI28_2[0], r1, r1\n\tadd\t64, r4, r3\n\tst.1\tr3, r1\n\tadd\t96, r0, r1\n\tadd\tr1, r0, stack-[28]\n\tst.1\tr4, r1\n\tsub.s!\t@CPI28_1[0], r4, r1\n\tjump.gt\t@.BB28_1\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI28_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI28_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI28_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[29]\n\tadd\tstack-[26], r0, r2\n\tld.1\tr2, r1\n\tand\t@CPI28_2[0], r1, r1\n\tadd\t224, r2, r2\n\tadd\tr2, r0, stack-[23]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[27]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI28_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[24], r0, r1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tadd\tstack-[8], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t352, r4, r1\n\tadd\tstack-[7], r0, r3\n\tst.1\tr1, r3\n\tadd\t320, r4, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tadd\t288, r4, r1\n\tadd\tstack-[27], r0, r3\n\tst.1\tr1, r3\n\tadd\t256, r4, r1\n\tadd\tstack-[29], r0, r3\n\tst.1\tr1, r3\n\tadd\t224, r4, r1\n\tadd\tstack-[11], r0, r3\n\tst.1\tr1, r3\n\tadd\t192, r4, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\tr1, r3\n\tadd\t160, r4, r1\n\tadd\tstack-[16], r0, r3\n\tst.1\tr1, r3\n\tadd\t128, r4, r1\n\tadd\tstack-[21], r0, r3\n\tst.1\tr1, r3\n\tadd\t96, r4, r1\n\tadd\tstack-[12], r0, r3\n\tst.1\tr1, r3\n\tadd\t64, r4, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr1, r3\n\tadd\t352, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\tr4, r1\n\tsub.s!\t@CPI28_8[0], r4, r1\n\tjump.gt\t@.BB28_1\n\tadd\t384, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI28_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI28_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI28_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r2\n\tadd\tstack-[23], r0, r1\n\tadd\tr2, r0, stack-[21]\n\tst.1\tr1, r2\n\tadd\tstack-[26], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[29]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[27]\n\tadd\t32, r1, r2\n\tadd\t@CPI28_9[0], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\t@CPI28_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[24], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[28], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[29], r0, r3\n\tand\t@CPI28_2[0], r3, r3\n\tadd\tr3, r0, stack-[29]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r1\n\tadd\tstack-[27], r0, r3\n\tadd\t66, r3, r2\n\tadd\tstack-[21], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r3, r2\n\tst.1\tr2, r1\n\tadd\t66, r0, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI28_1[0], r3, r1\n\tjump.gt\t@.BB28_1\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tadd\tstack-[16], r0, r4\n\tsub.s!\t@CPI28_4[0], r4, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr3, r3\n\tsub.s!\t@CPI28_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI28_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI28_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r4\n\tadd\t96, r4, r2\n\tld.1\tr2, r2\n\tadd\t32, r4, r3\n\tld.1\tr3, r3\n\tadd\t64, r4, r4\n\tld.1\tr4, r4\n\tld.1\t64, r5\n\tadd\t96, r5, r6\n\tst.1\tr6, r4\n\tadd\t64, r5, r4\n\tst.1\tr4, r3\n\tshr.s\t248, r2, r2\n\tadd\t32, r5, r3\n\tst.1\tr3, r2\n\tst.1\tr5, r1\n\tst.1\t0, r0\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI28_4[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI28_10[0], r1, r1\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[21]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI28_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB28_121\n\tadd\tr0, r0, r6\n.BB28_18:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB28_18\n.BB28_121:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB28_20\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB28_20:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_21\n\tld.1\t0, r1\n\tand!\t@CPI28_2[0], r1, r1\n\tjump.eq\t@.BB28_54\n\tadd\tstack-[29], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB28_54\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[29]\n\tadd\t@CPI28_11[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_12[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r1\n\tadd\tstack-[29], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.le\t@.BB28_54\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\tstack-[19], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t@CPI28_13[0], r1, r2\n\tjump.ge\t@.BB28_31\n\tadd\tstack-[25], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t65535, r1, r2\n\tjump.gt\t@.BB28_31\n\tsub.s!\t10000, r1, r1\n\tjump.gt\t@.BB28_54\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[30], r0, r2\n\tadd\t32, r2, r2\n\tadd\tstack-[5], r0, r3\n\tld.1\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[29]\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tadd\t96, r1, r3\n\tld.1\tr3, r3\n\tld.1.inc\tr1, r4, r1\n\tadd\tr1, r0, stack-[12]\n\tld.1\tr1, r5\n\tld.1\t64, r1\n\tadd\t128, r1, r6\n\tst.1\tr6, r3\n\tadd\t96, r1, r3\n\tst.1\tr3, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r5\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tadd\t128, r0, r3\n\tadd\tr3, r0, stack-[16]\n\tst.1\tr1, r3\n\tsub.s!\t@CPI28_14[0], r1, r3\n\tjump.gt\t@.BB28_1\n\tadd\t160, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI28_4[0], r0, r3\n\tsub.s!\t@CPI28_4[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI28_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI28_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r1\n\tadd\tstack-[29], r0, r2\n\tld.1.inc\tr2, r2, r3\n\tadd\tr3, r0, stack-[28]\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB28_42\n\tadd\t32784, r0, r2\n\tadd\tr2, r0, stack-[27]\n\tadd\tr0, r0, r3\n\tjump\t@.BB28_38\n.BB28_40:\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_7[0], r1, r1\n\tadd\tstack-[27], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n.BB28_39:\n\tld\tr1, r1\n\tadd\tstack-[30], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[29], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB28_42\n.BB28_38:\n\tadd\tr3, r0, stack-[30]\n\tshl.s\t5, r3, r2\n\tadd\tstack-[28], r0, r3\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r3\n\tjump.ge\t@.BB28_40\n\tst.1\t0, r1\n\tst.1\t32, r2\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_7[0], r1, r1\n\tadd\tstack-[27], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB28_39\n.BB28_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_42:\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r3\n\tsub.s!\t1, r3, r2\n\tjump.gt\t@.BB28_4\n\tadd\tstack-[20], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB28_46\n\tadd\tstack-[13], r0, r3\n\tsub!\tr1, r3, r1\n\tjump.ne\t@.BB28_54\n\tld.1\tr2, r1\n\tadd\tstack-[12], r0, r2\n\tjump\t@.BB28_48\n.BB28_46:\n\tadd\tstack-[13], r0, r3\n\tsub!\tr1, r3, r1\n\tjump.ne\t@.BB28_54\n\tadd\t32, r2, r2\n\tadd\tstack-[21], r0, r1\n.BB28_48:\n\tld.1\tr2, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB28_54\n\tadd\tstack-[26], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI28_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t32, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[20], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r3\n\tld.1\tr3, r3\n\tadd!\tr3, r2, r2\n\tjump.of\t@.BB28_31\n\tadd\tstack-[22], r0, r3\n\tadd\t64, r3, r3\n\tld.1\tr3, r3\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB28_54\n\tld.1\t64, r8\n\tsub.s!\t@CPI28_8[0], r8, r2\n\tjump.gt\t@.BB28_1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[27]\n\tld.1\tr1, r2\n\tadd\t384, r8, r1\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tst.1.inc\tr8, r1, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n.BB28_57:\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub.s!\t11, r4, r5\n\tjump.lt\t@.BB28_57\n\tadd\t192, r8, r3\n\tadd\tstack-[21], r0, r4\n\tst.1\tr3, r4\n\tadd\t96, r8, r3\n\tst.1\tr3, r4\n\tadd\t64, r8, r3\n\tadd\tstack-[27], r0, r4\n\tst.1\tr3, r4\n\tadd\t128, r8, r7\n\tadd\tstack-[16], r0, r3\n\tst.1\tr7, r3\n\tadd\t160, r8, r4\n\tld.1\tr4, r5\n\tmul\t160, r5, r3, r6\n\tadd\tr7, r0, stack-[14]\n\tadd\tr7, r3, r3\n\tadd\tstack-[26], r0, r6\n\tld.1\tr6, r6\n\tadd\t128, r3, r7\n\tst.1\tr7, r2\n\tadd\t96, r3, r2\n\tst.1\tr2, r6\n\tadd\tstack-[2], r0, r2\n\tld.1\tr2, r2\n\tadd\t192, r3, r6\n\tst.1\tr6, r2\n\tadd\t224, r3, r2\n\tadd\tstack-[17], r0, r7\n\tld.1\tr7, r6\n\tst.1\tr2, r6\n\tadd\t1, r5, r2\n\tst.1\tr4, r2\n\tld.1\tr7, r2\n\tsub.s!\t1, r2, r2\n\tjump.ne\t@.BB28_60\n\tadd\t160, r3, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n.BB28_60:\n\tld.1\t64, r4\n\tadd\t32, r4, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI28_15[0], r3, r2\n\tjump.gt\t@.BB28_1\n\tadd\t96, r4, r2\n\tst.1\t64, r2\n\tadd\tstack-[21], r0, r2\n\tadd\tr3, r0, stack-[30]\n\tst.1\tr3, r2\n\tadd\tr4, r0, stack-[17]\n\tadd\t64, r4, r6\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\tr0, r0, r3\n.BB28_62:\n\tshl.s\t5, r3, r4\n\tadd\tr6, r4, r5\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tst.1\tr5, r4\n\tadd!\t1, r3, r3\n\tjump.of\t@.BB28_62\n\tadd\tr6, r0, stack-[29]\n\tadd\tr8, r0, stack-[28]\n\tld.1\tr8, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t@CPI28_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI28_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[24], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[16], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tadd\tstack-[28], r0, r2\n\tadd\t60, r2, r3\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB28_67\n\tadd\tr0, r0, r1\n\tadd\tstack-[29], r0, r6\n\tadd\tstack-[17], r0, r5\n.BB28_66:\n\tshl.s\t5, r1, r2\n\tadd\tr5, r2, r4\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tst.1\tr4, r2\n\tadd\t1, r1, r1\n\tsub.s!\t3, r1, r2\n\tjump.lt\t@.BB28_66\n\tjump\t@.BB28_72\n.BB28_67:\n\tadd\t@CPI28_4[0], r0, r4\n\tsub.s!\t@CPI28_4[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\tstack-[12], r0, r5\n\tsub.s\t28, r5, r5\n\tsub.s!\t@CPI28_4[0], r5, r6\n\tadd.ge\tr4, r0, r5\n\tshl.s\t96, r5, r5\n\tor\tr5, r3, r3\n\tsub.s!\t@CPI28_4[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI28_4[0], r2, r2\n\tsub.s!\t96, r2, r3\n\tadd\t96, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tadd\tstack-[17], r0, r8\n\tjump.eq\t@.BB28_119\n\tadd\tr0, r0, r5\n.BB28_69:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB28_69\n.BB28_119:\n\tsub!\tr3, r0, r5\n\tadd\tstack-[29], r0, r6\n\tjump.eq\t@.BB28_71\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr8, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB28_71:\n\tadd\tr2, r0, stack[@returndatasize]\n.BB28_72:\n\tadd\tstack-[30], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB28_73\n\tld.1\tr6, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[15], r0, r3\n\tjump.eq\t@.BB28_75\n\tadd\tstack-[22], r0, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tmul\tr1, r3, r6, r2\n\tsub!\tr1, r0, r2\n\tadd\tr6, r0, stack-[30]\n\tjump.eq\t@.BB28_82\n\tdiv\tr6, r1, r1, r2\n\tsub!\tr1, r3, r1\n\tjump.ne\t@.BB28_31\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB28_82\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r3\n\tmul\tr3, r6, r2, r4\n\tdiv\tr2, r6, r4, r5\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB28_31\n\tadd\tstack-[19], r0, r3\n\tld.1\tr3, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tand\t65535, r3, r3\n\tmul\tr3, r6, r8, r4\n\tdiv\tr8, r6, r4, r5\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB28_31\n\tadd\tstack-[25], r0, r3\n\tld.1\tr3, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tand\t65535, r3, r3\n\tmul\tr3, r6, r7, r4\n\tdiv\tr7, r6, r4, r5\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB28_31\n\tadd\tr7, r0, stack-[17]\n\tadd\tstack-[26], r0, r3\n\tld.1\tr3, r3\n\tand\t@CPI28_2[0], r3, r3\n\tadd\tr3, r0, stack-[29]\n\tsub.s!\t10000, r2, r3\n\tjump.lt\t@.BB28_88\n\tadd\tr8, r0, stack-[26]\n\tld.1\tr1, r1\n\tdiv.s\t10000, r2, r2, r3\n\tld.1\t64, r4\n\tadd\t68, r4, r3\n\tst.1\tr3, r2\n\tand\t@CPI28_2[0], r1, r1\n\tadd\t36, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI28_17[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[16]\n\tadd\t4, r4, r1\n\tadd\tstack-[29], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI28_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[24], r0, r1\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tadd\tstack-[26], r0, r8\n\tjump.eq\t@.BB28_88\n\tadd\t@CPI28_4[0], r0, r3\n\tsub.s!\t@CPI28_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t@CPI28_4[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI28_18[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[26], r0, r8\n\tshr.s\t96, r1, r1\n\tand\t@CPI28_4[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB28_87\n.BB28_88:\n\tdiv.s\t10000, r8, r3, r1\n\tsub.s!\t10000, r8, r1\n\tadd\tr3, r0, stack-[26]\n\tjump.lt\t@.BB28_92\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tld.1\t64, r4\n\tadd\t68, r4, r2\n\tst.1\tr2, r3\n\tand\t@CPI28_2[0], r1, r1\n\tadd\t36, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI28_17[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[16]\n\tadd\t4, r4, r1\n\tadd\tstack-[29], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI28_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[24], r0, r1\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tadd\tstack-[26], r0, r3\n\tjump.eq\t@.BB28_92\n\tadd\t@CPI28_4[0], r0, r3\n\tsub.s!\t@CPI28_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t@CPI28_4[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI28_18[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[26], r0, r3\n\tshr.s\t96, r1, r1\n\tand\t@CPI28_4[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB28_87\n.BB28_92:\n\tadd\tstack-[17], r0, r2\n\tdiv.s\t10000, r2, r4, r1\n\tsub.s!\t10000, r2, r1\n\tjump.lt\t@.BB28_96\n\tadd\tstack-[25], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tld.1\t64, r3\n\tadd\t68, r3, r2\n\tadd\tr4, r0, stack-[17]\n\tst.1\tr2, r4\n\tand\t@CPI28_2[0], r1, r1\n\tadd\t36, r3, r2\n\tst.1\tr2, r1\n\tadd\t@CPI28_17[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[16]\n\tadd\t4, r3, r1\n\tadd\tstack-[29], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI28_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[24], r0, r1\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tadd\tstack-[26], r0, r3\n\tadd\tstack-[17], r0, r4\n\tjump.eq\t@.BB28_96\n\tadd\t@CPI28_4[0], r0, r3\n\tsub.s!\t@CPI28_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t@CPI28_4[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI28_18[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n\tadd\tstack-[26], r0, r3\n\tshr.s\t96, r1, r1\n\tand\t@CPI28_4[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB28_96\n\tjump\t@.BB28_87\n.BB28_82:\n\tadd\tstack-[26], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI28_2[0], r1, r1\n\tadd\tr1, r0, stack-[29]\n\tadd\tr0, r0, r4\n\tadd\tr0, r0, r3\n.BB28_96:\n\tadd\tr3, r4, r1\n\tadd\tstack-[30], r0, r2\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB28_100\n\tadd\tstack-[30], r0, r2\n\tsub\tr2, r1, r1\n\tld.1\t64, r3\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tadd\t36, r3, r1\n\tadd\tstack-[27], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI28_17[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[27]\n\tadd\t4, r3, r1\n\tadd\tstack-[29], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI28_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[24], r0, r1\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB28_100\n\tadd\t@CPI28_4[0], r0, r3\n\tsub.s!\t@CPI28_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[27], r0, r5\n\tsub.s!\t@CPI28_4[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI28_18[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tshr.s\t96, r1, r1\n\tand\t@CPI28_4[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB28_87\n.BB28_100:\n\tadd\tstack-[20], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[27]\n\tadd\tstack-[29], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r1\n\tadd\tstack-[22], r0, r2\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[27], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r2\n\tld.1\t64, r1\n\tsub.s!\t@CPI28_14[0], r1, r3\n\tadd\tstack-[28], r0, r4\n\tjump.gt\t@.BB28_1\n\tadd\t160, r1, r3\n\tst.1\t64, r3\n\tadd\t128, r1, r3\n\tst.1\tr3, r0\n\tadd\t96, r1, r3\n\tst.1\tr3, r0\n\tadd\t64, r1, r3\n\tst.1\tr3, r0\n\tadd\t32, r1, r3\n\tst.1\tr3, r0\n\tst.1\tr1, r0\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r4, r3\n\tadd\t224, r3, r6\n\tld.1\tr6, r5\n\tsub.s!\t1, r5, r1\n\tadd\tstack-[30], r0, r15\n\tjump.gt\t@.BB28_4\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r4\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r3, r7\n\tsub!\tr5, r0, r5\n\tadd\t128, r3, r8\n\tadd\t32, r4, r5\n\tjump.ne\t@.BB28_111\n\tadd\tstack-[25], r0, r9\n\tld.1\tr9, r9\n\tadd\t32, r9, r9\n\tld.1\tr9, r9\n\tand!\t65535, r9, r9\n\tjump.eq\t@.BB28_107\n.BB28_111:\n\tld.1\tr7, r7\n\tand\t@CPI28_2[0], r7, r9\n\tld.1\t64, r7\n\tst.1.inc\tr7, r9, r9\n\tld.1\tr8, r8\n\tst.1\tr9, r8\n\tadd\t160, r3, r8\n\tld.1\tr8, r8\n\tadd\t64, r7, r9\n\tst.1\tr9, r8\n\tadd\t192, r3, r3\n\tld.1\tr3, r3\n\tand\t@CPI28_2[0], r3, r3\n\tadd\t96, r7, r8\n\tst.1\tr8, r3\n\tld.1\tr6, r3\n\tsub.s!\t1, r3, r6\n\tjump.gt\t@.BB28_4\n\tadd\t224, r7, r6\n\tst.1\tr6, r15\n\tadd\t192, r7, r6\n\tst.1\tr6, r2\n\tadd\t160, r7, r2\n\tst.1\tr2, r1\n\tadd\t128, r7, r1\n\tst.1\tr1, r3\n\tld.1\tr4, r1\n\tand\t@CPI28_2[0], r1, r1\n\tadd\t256, r7, r2\n\tst.1\tr2, r1\n\tld.1\tr5, r1\n\tand\t65535, r1, r1\n\tadd\t288, r7, r2\n\tst.1\tr2, r1\n\tadd\tstack-[25], r0, r1\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r1, r2\n\tand\t@CPI28_2[0], r1, r1\n\tadd\t320, r7, r3\n\tst.1\tr3, r1\n\tld.1\tr2, r1\n\tand\t65535, r1, r1\n\tadd\t352, r7, r2\n\tst.1\tr2, r1\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r1, r2\n\tand\t@CPI28_2[0], r1, r1\n\tadd\t384, r7, r3\n\tst.1\tr3, r1\n\tld.1\tr2, r1\n\tand\t65535, r1, r1\n\tadd\t416, r7, r2\n\tst.1\tr2, r1\n\tadd\t448, r7, r1\n\tadd\tstack-[21], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI28_4[0], r0, r1\n\tsub.s!\t@CPI28_4[0], r7, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr7, r0, r2\n\tcontext.gas_left\tr5\n\tsub.s!\t@CPI28_4[0], r5, r4\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI28_29[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI28_30[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB28_6\n.BB28_118:\n\tret\n.BB28_107:\n\tld.1\tr8, r9\n\tsub.s!\t@CPI28_21[0], r9, r10\n\tjump.gt\t@.BB28_111\n\tsub.s!\t255, r2, r10\n\tjump.gt\t@.BB28_111\n\tsub.s!\t@CPI28_21[0], r15, r10\n\tjump.gt\t@.BB28_111\n\tadd\tstack-[19], r0, r10\n\tld.1\tr10, r11\n\tadd\t32, r11, r10\n\tld.1\tr10, r10\n\tand\t65535, r10, r12\n\tld.1\tr5, r13\n\tand!\t65535, r13, r14\n\tjump.eq\t@.BB28_113\n\tsub!\tr12, r0, r10\n\tjump.ne\t@.BB28_111\n\tshl.s\t160, r13, r5\n\tand\t@CPI28_22[0], r5, r5\n\tld.1\tr4, r4\n\tand\t@CPI28_2[0], r4, r4\n\tor\tr4, r5, r4\n\tadd\t192, r3, r3\n\tld.1\tr3, r3\n\tld.1\tr7, r5\n\tld.1\t64, r6\n\tadd\t96, r6, r7\n\tst.1\tr7, r4\n\tshl.s\t160, r2, r2\n\tshl.s\t168, r9, r4\n\tor\tr4, r2, r2\n\tand\t@CPI28_2[0], r5, r4\n\tor\tr2, r4, r2\n\tadd\t32, r6, r4\n\tst.1\tr4, r2\n\tshl.s\t160, r15, r2\n\tand\t@CPI28_2[0], r3, r3\n\tor\tr3, r2, r2\n\tor\t@CPI28_23[0], r2, r2\n\tadd\t64, r6, r3\n\tst.1\tr3, r2\n\tst.1\tr6, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tsub.s!\t@CPI28_4[0], r6, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr6, r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI28_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI28_24[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI28_25[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB28_118\n\tjump\t@.BB28_6\n.BB28_113:\n\tshl.s\t160, r2, r2\n\tshl.s\t168, r9, r4\n\tor\tr4, r2, r2\n\tld.1\tr7, r4\n\tand\t@CPI28_2[0], r4, r4\n\tor\tr2, r4, r2\n\tshl.s\t160, r15, r4\n\tadd\t192, r3, r3\n\tld.1\tr3, r3\n\tand\t@CPI28_2[0], r3, r3\n\tor\tr3, r4, r3\n\tor\t@CPI28_23[0], r3, r3\n\tsub!\tr12, r0, r4\n\tjump.eq\t@.BB28_117\n\tld.1\tr11, r4\n\tld.1\t64, r5\n\tadd\t64, r5, r6\n\tst.1\tr6, r3\n\tadd\t32, r5, r3\n\tst.1\tr3, r2\n\tshl.s\t160, r10, r2\n\tand\t@CPI28_22[0], r2, r2\n\tand\t@CPI28_2[0], r4, r3\n\tor\tr3, r2, r2\n\tadd\t96, r5, r3\n\tst.1\tr3, r2\n\tst.1\tr5, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI28_4[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI28_24[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI28_26[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB28_118\n\tjump\t@.BB28_6\n.BB28_117:\n\tld.1\t64, r4\n\tadd\t64, r4, r5\n\tst.1\tr5, r3\n\tadd\t32, r4, r3\n\tst.1\tr3, r2\n\tst.1\tr4, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI28_4[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI28_27[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI28_28[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB28_118\n\tjump\t@.BB28_6\n.BB28_1:\n\tadd\t@CPI28_32[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI28_33[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_54:\n\tld.1\t64, r1\n\tadd\t@CPI28_34[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI28_4[0], r0, r2\n\tsub.s!\t@CPI28_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI28_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_31:\n\tadd\t@CPI28_32[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI28_33[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_4:\n\tadd\t@CPI28_32[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI28_33[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_21:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB28_120\n\tadd\tr0, r0, r5\n.BB28_23:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB28_23\n.BB28_120:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB28_25\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB28_25:\n\tadd\t@CPI28_4[0], r0, r1\n\tsub.s!\t@CPI28_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tstack-[28], r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_73:\n\tadd\t@CPI28_32[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI28_33[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_75:\n\tld.1\t64, r1\n\tadd\t@CPI28_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI28_4[0], r0, r2\n\tsub.s!\t@CPI28_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI28_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_87:\n\tld.1\t64, r1\n\tadd\t@CPI28_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI28_4[0], r0, r2\n\tsub.s!\t@CPI28_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI28_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end28:\n\nfun_takeCollectionOffer:\n.func_begin29:\n\tnop\tstack+=[28]\n\tld.1.inc\tr1, r3, r2\n\tadd\tr3, r0, stack-[28]\n\tadd\t96, r1, r3\n\tld.1\tr3, r3\n\tadd\tr3, r0, stack-[8]\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[23]\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[25]\n\tsub.s!\t@CPI29_0[0], r2, r2\n\tjump.ge\t@.BB29_1\n\tadd\tstack-[25], r0, r3\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tsub.s!\t@CPI29_1[0], r3, r3\n\tjump.gt\t@.BB29_1\n\tadd\tstack-[25], r0, r5\n\tadd\t128, r5, r3\n\tst.1\t64, r3\n\tadd\t50, r0, r3\n\tadd\tr3, r0, stack-[1]\n\tsload\tr3, r3\n\tand\t@CPI29_2[0], r3, r4\n\tst.1\tr2, r4\n\tshr.s\t160, r3, r3\n\tand\t65535, r3, r3\n\tadd\t96, r5, r4\n\tst.1\tr4, r3\n\tst.1.inc\tr5, r2, r2\n\tadd\tr2, r0, stack-[17]\n\tst.1\tr2, r1\n\tadd\tstack-[28], r0, r2\n\tadd\t128, r2, r1\n\tadd\tr1, r0, stack-[4]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t96, r2, r1\n\tadd\tr1, r0, stack-[22]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t64, r2, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[23], r0, r3\n\tadd\t96, r3, r1\n\tadd\tr1, r0, stack-[19]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t64, r3, r1\n\tadd\tr1, r0, stack-[21]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[24]\n\tadd\t32, r2, r1\n\tadd\tr1, r0, stack-[2]\n\tld.1\tr1, r1\n\tand\t@CPI29_2[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n\tld.1\tr2, r1\n\tand\t@CPI29_2[0], r1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t160, r2, r1\n\tadd\tr1, r0, stack-[3]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t2, r1, r1\n\tjump.ge\t@.BB29_4\n\tadd\t192, r2, r1\n\tadd\tr1, r0, stack-[15]\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r2, r1\n\tadd\tr2, r0, stack-[20]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[27]\n\tadd\t@CPI29_3[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[26]\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tadd\tstack-[27], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[18], r0, r1\n\tand\t65535, r1, r1\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tadd\tstack-[20], r0, r1\n\tand\t@CPI29_2[0], r1, r1\n\tadd\t64, r4, r3\n\tst.1\tr3, r1\n\tadd\t96, r0, r1\n\tadd\tr1, r0, stack-[18]\n\tst.1\tr4, r1\n\tsub.s!\t@CPI29_1[0], r4, r1\n\tjump.gt\t@.BB29_1\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI29_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI29_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI29_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[20]\n\tadd\tstack-[28], r0, r2\n\tld.1\tr2, r1\n\tand\t@CPI29_2[0], r1, r1\n\tadd\t224, r2, r2\n\tadd\tr2, r0, stack-[27]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t@CPI29_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[26], r0, r1\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tadd\tstack-[6], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t384, r4, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tadd\t352, r4, r1\n\tadd\tstack-[5], r0, r3\n\tst.1\tr1, r3\n\tadd\t320, r4, r1\n\tadd\t2, r0, r3\n\tst.1\tr1, r3\n\tadd\t288, r4, r1\n\tadd\tstack-[7], r0, r3\n\tst.1\tr1, r3\n\tadd\t256, r4, r1\n\tadd\tstack-[20], r0, r3\n\tst.1\tr1, r3\n\tadd\t224, r4, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tadd\t192, r4, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr1, r3\n\tadd\t160, r4, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\tr1, r3\n\tadd\t128, r4, r1\n\tadd\tstack-[16], r0, r3\n\tst.1\tr1, r3\n\tadd\t96, r4, r1\n\tadd\tstack-[11], r0, r3\n\tst.1\tr1, r3\n\tadd\t64, r4, r1\n\tadd\tstack-[12], r0, r3\n\tst.1\tr1, r3\n\tadd\t384, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI29_8[0], r4, r1\n\tjump.gt\t@.BB29_1\n\tadd\t416, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI29_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI29_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI29_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r2\n\tadd\tstack-[27], r0, r1\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr1, r2\n\tadd\tstack-[28], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[20]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t32, r1, r2\n\tadd\t@CPI29_9[0], r0, r1\n\tadd\tr2, r0, stack-[13]\n\tst.1\tr2, r1\n\tadd\t@CPI29_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[26], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[18], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[20], r0, r3\n\tand\t@CPI29_2[0], r3, r3\n\tadd\tr3, r0, stack-[12]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r3\n\tadd\t66, r3, r2\n\tadd\tstack-[14], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r3, r2\n\tst.1\tr2, r1\n\tadd\t66, r0, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI29_1[0], r3, r1\n\tjump.gt\t@.BB29_1\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tadd\tstack-[13], r0, r4\n\tsub.s!\t@CPI29_4[0], r4, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr3, r3\n\tsub.s!\t@CPI29_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI29_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI29_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r4\n\tadd\t96, r4, r2\n\tld.1\tr2, r2\n\tadd\t32, r4, r3\n\tld.1\tr3, r3\n\tadd\t64, r4, r4\n\tld.1\tr4, r4\n\tld.1\t64, r5\n\tadd\t96, r5, r6\n\tst.1\tr6, r4\n\tadd\t64, r5, r4\n\tst.1\tr4, r3\n\tshr.s\t248, r2, r2\n\tadd\t32, r5, r3\n\tst.1\tr3, r2\n\tst.1\tr5, r1\n\tst.1\t0, r0\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI29_4[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI29_10[0], r1, r1\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[20]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI29_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB29_95\n\tadd\tr0, r0, r6\n.BB29_18:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB29_18\n.BB29_95:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB29_20\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB29_20:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_21\n\tld.1\t0, r1\n\tand!\t@CPI29_2[0], r1, r1\n\tjump.eq\t@.BB29_39\n\tadd\tstack-[12], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB29_39\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t@CPI29_11[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_12[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tsub!\tr2, r1, r1\n\tjump.le\t@.BB29_39\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t@CPI29_13[0], r1, r2\n\tjump.ge\t@.BB29_31\n\tadd\tstack-[25], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t65535, r1, r2\n\tjump.gt\t@.BB29_31\n\tsub.s!\t10000, r1, r1\n\tjump.gt\t@.BB29_39\n\tadd\tstack-[28], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI29_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tadd\tr1, r0, stack-[18]\n\tst.1\t32, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tadd\tstack-[27], r0, r2\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tst.1\t0, r0\n\tst.1\t32, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tadd\tstack-[21], r0, r2\n\tld.1\tr2, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd!\tr2, r1, r1\n\tjump.of\t@.BB29_31\n\tadd\tstack-[22], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB29_39\n\tld.1\t64, r11\n\tsub.s!\t@CPI29_14[0], r11, r1\n\tjump.gt\t@.BB29_1\n\tcontext.caller\tr9\n\tadd\tstack-[23], r0, r1\n\tadd\t32, r1, r10\n\tld.1\tr10, r3\n\tadd\t384, r11, r1\n\tst.1\t64, r1\n\tadd\t352, r0, r1\n\tst.1.inc\tr11, r1, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\tr0, r0, r4\n.BB29_42:\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub.s!\t11, r4, r5\n\tjump.lt\t@.BB29_42\n\tadd\t192, r11, r2\n\tadd\tstack-[20], r0, r4\n\tst.1\tr2, r4\n\tadd\t96, r11, r2\n\tst.1\tr2, r4\n\tadd\t64, r11, r2\n\tst.1\tr2, r9\n\tadd\t128, r11, r4\n\tadd\t128, r0, r2\n\tst.1\tr4, r2\n\tadd\t160, r11, r5\n\tld.1\tr5, r6\n\tmul\t160, r6, r7, r8\n\tadd\tr4, r7, r4\n\tadd\tstack-[28], r0, r7\n\tld.1\tr7, r7\n\tadd\t128, r4, r8\n\tst.1\tr8, r3\n\tadd\t96, r4, r3\n\tst.1\tr3, r7\n\tadd\tstack-[2], r0, r3\n\tld.1\tr3, r3\n\tadd\t192, r4, r7\n\tst.1\tr7, r3\n\tadd\t224, r4, r3\n\tadd\tstack-[3], r0, r8\n\tld.1\tr8, r7\n\tst.1\tr3, r7\n\tadd\t1, r6, r3\n\tst.1\tr5, r3\n\tld.1\tr8, r3\n\tsub.s!\t1, r3, r3\n\tjump.ne\t@.BB29_45\n\tadd\t160, r4, r3\n\tadd\tstack-[24], r0, r4\n\tst.1\tr3, r4\n.BB29_45:\n\tld.1\t64, r5\n\tadd\t32, r5, r4\n\tst.1\t64, r4\n\tsub.s!\t@CPI29_15[0], r4, r3\n\tjump.gt\t@.BB29_1\n\tadd\tr10, r0, stack-[12]\n\tadd\tr9, r0, stack-[16]\n\tadd\t96, r5, r3\n\tst.1\t64, r3\n\tadd\tstack-[20], r0, r3\n\tadd\tr4, r0, stack-[23]\n\tst.1\tr4, r3\n\tadd\tr5, r0, stack-[14]\n\tadd\t64, r5, r7\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n.BB29_47:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd!\t1, r4, r4\n\tjump.of\t@.BB29_47\n\tadd\tr7, r0, stack-[20]\n\tld.1\tr11, r3\n\tadd\tr3, r0, stack-[11]\n\tadd\t@CPI29_16[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI29_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[26], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r2\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tadd\tr11, r0, stack-[13]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tadd\tstack-[13], r0, r2\n\tadd\t60, r2, r3\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB29_52\n\tadd\tr0, r0, r1\n\tadd\tstack-[20], r0, r6\n\tadd\tstack-[14], r0, r5\n.BB29_51:\n\tshl.s\t5, r1, r2\n\tadd\tr5, r2, r4\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tst.1\tr4, r2\n\tadd\t1, r1, r1\n\tsub.s!\t3, r1, r2\n\tjump.lt\t@.BB29_51\n\tjump\t@.BB29_57\n.BB29_52:\n\tadd\t@CPI29_4[0], r0, r4\n\tsub.s!\t@CPI29_4[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\tstack-[11], r0, r5\n\tsub.s\t28, r5, r5\n\tsub.s!\t@CPI29_4[0], r5, r6\n\tadd.ge\tr4, r0, r5\n\tshl.s\t96, r5, r5\n\tor\tr5, r3, r3\n\tsub.s!\t@CPI29_4[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI29_4[0], r2, r2\n\tsub.s!\t96, r2, r3\n\tadd\t96, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tadd\tstack-[14], r0, r8\n\tjump.eq\t@.BB29_93\n\tadd\tr0, r0, r5\n.BB29_54:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB29_54\n.BB29_93:\n\tsub!\tr3, r0, r5\n\tadd\tstack-[20], r0, r6\n\tjump.eq\t@.BB29_56\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr8, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB29_56:\n\tadd\tr2, r0, stack[@returndatasize]\n.BB29_57:\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB29_58\n\tld.1\tr6, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB29_60\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[24], r0, r2\n\tmul\tr1, r2, r6, r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB29_67\n\tdiv\tr6, r1, r1, r2\n\tadd\tstack-[24], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB29_31\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB29_67\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r3\n\tmul\tr3, r6, r2, r4\n\tdiv\tr2, r6, r4, r5\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB29_31\n\tadd\tstack-[17], r0, r3\n\tld.1\tr3, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tand\t65535, r3, r3\n\tmul\tr3, r6, r8, r4\n\tdiv\tr8, r6, r4, r5\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB29_31\n\tadd\tstack-[25], r0, r3\n\tld.1\tr3, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tand\t65535, r3, r3\n\tmul\tr3, r6, r7, r4\n\tdiv\tr7, r6, r4, r5\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB29_31\n\tadd\tr7, r0, stack-[14]\n\tadd\tstack-[28], r0, r3\n\tld.1\tr3, r3\n\tand\t@CPI29_2[0], r3, r3\n\tadd\tr3, r0, stack-[23]\n\tsub.s!\t10000, r2, r3\n\tadd\tr6, r0, stack-[20]\n\tjump.lt\t@.BB29_73\n\tadd\tr8, r0, stack-[15]\n\tld.1\tr1, r1\n\tdiv.s\t10000, r2, r2, r3\n\tld.1\t64, r4\n\tadd\t68, r4, r3\n\tst.1\tr3, r2\n\tand\t@CPI29_2[0], r1, r1\n\tadd\t36, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI29_17[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[13]\n\tadd\t4, r4, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI29_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[26], r0, r1\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tadd\tstack-[20], r0, r6\n\tadd\tstack-[15], r0, r8\n\tjump.eq\t@.BB29_73\n\tadd\t@CPI29_4[0], r0, r3\n\tsub.s!\t@CPI29_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t@CPI29_4[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI29_18[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r8\n\tadd\tstack-[20], r0, r6\n\tshr.s\t96, r1, r1\n\tand\t@CPI29_4[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB29_72\n.BB29_73:\n\tdiv.s\t10000, r8, r3, r1\n\tsub.s!\t10000, r8, r1\n\tadd\tr3, r0, stack-[15]\n\tjump.lt\t@.BB29_77\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tld.1\t64, r4\n\tadd\t68, r4, r2\n\tst.1\tr2, r3\n\tand\t@CPI29_2[0], r1, r1\n\tadd\t36, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI29_17[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[17]\n\tadd\t4, r4, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI29_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[26], r0, r1\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tadd\tstack-[20], r0, r6\n\tadd\tstack-[15], r0, r3\n\tjump.eq\t@.BB29_77\n\tadd\t@CPI29_4[0], r0, r3\n\tsub.s!\t@CPI29_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[17], r0, r5\n\tsub.s!\t@CPI29_4[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI29_18[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r3\n\tadd\tstack-[20], r0, r6\n\tshr.s\t96, r1, r1\n\tand\t@CPI29_4[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB29_72\n.BB29_77:\n\tadd\tstack-[14], r0, r2\n\tdiv.s\t10000, r2, r4, r1\n\tsub.s!\t10000, r2, r1\n\tjump.lt\t@.BB29_81\n\tadd\tstack-[25], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tld.1\t64, r3\n\tadd\t68, r3, r2\n\tadd\tr4, r0, stack-[25]\n\tst.1\tr2, r4\n\tand\t@CPI29_2[0], r1, r1\n\tadd\t36, r3, r2\n\tst.1\tr2, r1\n\tadd\t@CPI29_17[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[17]\n\tadd\t4, r3, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI29_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[26], r0, r1\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tadd\tstack-[20], r0, r6\n\tadd\tstack-[15], r0, r3\n\tadd\tstack-[25], r0, r4\n\tjump.eq\t@.BB29_81\n\tadd\t@CPI29_4[0], r0, r3\n\tsub.s!\t@CPI29_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[17], r0, r5\n\tsub.s!\t@CPI29_4[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI29_18[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[25], r0, r4\n\tadd\tstack-[15], r0, r3\n\tadd\tstack-[20], r0, r6\n\tshr.s\t96, r1, r1\n\tand\t@CPI29_4[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB29_81\n\tjump\t@.BB29_72\n.BB29_67:\n\tadd\tstack-[28], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI29_2[0], r1, r1\n\tadd\tr1, r0, stack-[23]\n\tadd\tr0, r0, r4\n\tadd\tr0, r0, r3\n.BB29_81:\n\tadd\tr3, r4, r1\n\tsub!\tr6, r1, r2\n\tjump.eq\t@.BB29_85\n\tsub\tr6, r1, r1\n\tld.1\t64, r3\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tadd\t36, r3, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI29_17[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[25]\n\tadd\t4, r3, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI29_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[26], r0, r1\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB29_85\n\tadd\t@CPI29_4[0], r0, r3\n\tsub.s!\t@CPI29_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[25], r0, r5\n\tsub.s!\t@CPI29_4[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI29_18[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tshr.s\t96, r1, r1\n\tand\t@CPI29_4[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB29_72\n.BB29_85:\n\tadd\tstack-[23], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[18], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tadd\tstack-[27], r0, r2\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tst.1\t0, r0\n\tst.1\t32, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[24], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[26]\n\tadd\tstack-[23], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[18], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tadd\tstack-[27], r0, r2\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tst.1\t0, r0\n\tst.1\t32, r1\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI29_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB29_6\n\tld\tr1, r1\n\tadd\tstack-[27], r0, r2\n\tld.1\tr2, r2\n\tsload\tr1, r1\n\tadd\tstack-[28], r0, r3\n\tld.1\tr3, r3\n\tadd\tstack-[12], r0, r4\n\tld.1\tr4, r4\n\tadd\tstack-[21], r0, r5\n\tld.1\tr5, r5\n\tadd\tstack-[19], r0, r6\n\tld.1\tr6, r6\n\tld.1\t64, r7\n\tadd\t160, r7, r8\n\tst.1\tr8, r6\n\tadd\t128, r7, r6\n\tst.1\tr6, r5\n\tadd\t96, r7, r5\n\tst.1\tr5, r4\n\tand\t@CPI29_2[0], r3, r3\n\tadd\t64, r7, r4\n\tst.1\tr4, r3\n\tadd\tstack-[16], r0, r3\n\tand\t@CPI29_2[0], r3, r3\n\tadd\t32, r7, r4\n\tst.1\tr4, r3\n\tadd\tstack-[26], r0, r3\n\tsub\tr3, r1, r1\n\tadd\t192, r7, r3\n\tst.1\tr3, r1\n\tst.1\tr7, r2\n\tadd\t@CPI29_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI29_4[0], r7, r3\n\tadd.lt\tr7, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI29_21[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI29_22[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB29_6\n\tret\n.BB29_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_1:\n\tadd\t@CPI29_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI29_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_31:\n\tadd\t@CPI29_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI29_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_39:\n\tld.1\t64, r1\n\tadd\t@CPI29_26[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI29_4[0], r0, r2\n\tsub.s!\t@CPI29_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_4:\n\tadd\t@CPI29_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI29_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_21:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB29_94\n\tadd\tr0, r0, r5\n.BB29_23:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB29_23\n.BB29_94:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB29_25\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB29_25:\n\tadd\t@CPI29_4[0], r0, r1\n\tsub.s!\t@CPI29_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tstack-[18], r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_58:\n\tadd\t@CPI29_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI29_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_60:\n\tld.1\t64, r1\n\tadd\t@CPI29_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI29_4[0], r0, r2\n\tsub.s!\t@CPI29_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_72:\n\tld.1\t64, r1\n\tadd\t@CPI29_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI29_4[0], r0, r2\n\tsub.s!\t@CPI29_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end29:\n\nfun_transferETH:\n.func_begin30:\n\tadd\tr2, r0, r3\n\tadd\tr1, r0, r4\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB30_2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB30_2\n\tadd\t@CPI30_0[0], r0, r2\n\tsub.s!\t@CPI30_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI30_1[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tshr.s\t96, r1, r1\n\tand\t@CPI30_0[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB30_4\n.BB30_2:\n\tret\n.BB30_4:\n\tld.1\t64, r1\n\tadd\t@CPI30_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI30_0[0], r0, r2\n\tsub.s!\t@CPI30_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI30_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end30:\n\nfun_emitExecutionEvent_17486:\n.func_begin31:\n\tnop\tstack+=[2]\n\tld.1\t64, r6\n\tsub.s!\t@CPI31_0[0], r6, r7\n\tjump.ge\t@.BB31_1\n\tadd\t160, r6, r7\n\tst.1\t64, r7\n\tadd\t128, r6, r7\n\tst.1\tr7, r0\n\tadd\t96, r6, r7\n\tst.1\tr7, r0\n\tadd\t64, r6, r7\n\tst.1\tr7, r0\n\tadd\t32, r6, r7\n\tst.1\tr7, r0\n\tst.1\tr6, r0\n\tadd\t128, r1, r6\n\tld.1\tr6, r6\n\tadd\tr6, r1, r6\n\tadd\t224, r6, r9\n\tld.1\tr9, r8\n\tsub.s!\t2, r8, r1\n\tjump.ge\t@.BB31_3\n\tadd\t192, r2, r1\n\tld.1\tr1, r7\n\tadd\t224, r2, r1\n\tld.1\tr1, r1\n\tadd\t96, r6, r10\n\tsub!\tr8, r0, r2\n\tadd\t128, r6, r11\n\tadd\t32, r5, r2\n\tadd\t32, r7, r8\n\tjump.ne\t@.BB31_10\n\tld.1\tr5, r12\n\tadd\t32, r12, r12\n\tld.1\tr12, r12\n\tand!\t65535, r12, r12\n\tjump.eq\t@.BB31_6\n.BB31_10:\n\tld.1\tr10, r10\n\tand\t@CPI31_3[0], r10, r12\n\tld.1\t64, r10\n\tst.1.inc\tr10, r12, r12\n\tld.1\tr11, r11\n\tst.1\tr12, r11\n\tadd\t160, r6, r11\n\tld.1\tr11, r11\n\tadd\t64, r10, r12\n\tst.1\tr12, r11\n\tadd\t192, r6, r6\n\tld.1\tr6, r6\n\tand\t@CPI31_3[0], r6, r6\n\tadd\t96, r10, r11\n\tst.1\tr11, r6\n\tld.1\tr9, r6\n\tsub.s!\t1, r6, r9\n\tjump.gt\t@.BB31_3\n\tadd\t224, r10, r9\n\tst.1\tr9, r4\n\tadd\t192, r10, r4\n\tst.1\tr4, r3\n\tadd\t160, r10, r3\n\tst.1\tr3, r1\n\tadd\t128, r10, r1\n\tst.1\tr1, r6\n\tld.1\tr7, r1\n\tand\t@CPI31_3[0], r1, r1\n\tadd\t256, r10, r3\n\tst.1\tr3, r1\n\tld.1\tr8, r1\n\tand\t65535, r1, r1\n\tadd\t288, r10, r3\n\tst.1\tr3, r1\n\tld.1\tr5, r1\n\tld.1.inc\tr1, r1, r3\n\tand\t@CPI31_3[0], r1, r1\n\tadd\t320, r10, r4\n\tst.1\tr4, r1\n\tld.1\tr3, r1\n\tand\t65535, r1, r1\n\tadd\t352, r10, r3\n\tst.1\tr3, r1\n\tld.1\tr2, r1\n\tld.1.inc\tr1, r1, r2\n\tand\t@CPI31_3[0], r1, r1\n\tadd\t384, r10, r3\n\tst.1\tr3, r1\n\tld.1\tr2, r1\n\tand\t65535, r1, r1\n\tadd\t416, r10, r2\n\tst.1\tr2, r1\n\tadd\t448, r10, r1\n\tst.1\tr1, r0\n\tadd\t@CPI31_4[0], r0, r1\n\tsub.s!\t@CPI31_4[0], r10, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr10, r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI31_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI31_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI31_11[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB31_15\n.BB31_18:\n\tret\n.BB31_6:\n\tld.1\tr11, r12\n\tsub.s!\t@CPI31_1[0], r12, r13\n\tjump.gt\t@.BB31_10\n\tsub.s!\t255, r3, r13\n\tjump.gt\t@.BB31_10\n\tsub.s!\t@CPI31_1[0], r4, r13\n\tjump.gt\t@.BB31_10\n\tadd\tr12, r0, stack-[2]\n\tld.1\tr2, r12\n\tadd\t32, r12, r13\n\tld.1\tr13, r15\n\tand\t65535, r15, r13\n\tadd\tr13, r0, stack-[1]\n\tld.1\tr8, r13\n\tand!\t65535, r13, r14\n\tjump.eq\t@.BB31_12\n\tadd\tstack-[1], r0, r12\n\tsub!\tr12, r0, r14\n\tadd\tstack-[2], r0, r12\n\tjump.ne\t@.BB31_10\n\tshl.s\t160, r13, r2\n\tand\t@CPI31_2[0], r2, r2\n\tld.1\tr7, r5\n\tand\t@CPI31_3[0], r5, r5\n\tor\tr5, r2, r2\n\tadd\t192, r6, r5\n\tld.1\tr5, r5\n\tld.1\tr10, r6\n\tld.1\t64, r7\n\tadd\t96, r7, r8\n\tst.1\tr8, r2\n\tshl.s\t160, r3, r2\n\tshl.s\t168, r12, r3\n\tor\tr3, r2, r2\n\tand\t@CPI31_3[0], r6, r3\n\tor\tr2, r3, r2\n\tadd\t32, r7, r3\n\tst.1\tr3, r2\n\tshl.s\t160, r4, r2\n\tand\t@CPI31_3[0], r5, r3\n\tor\tr3, r2, r2\n\tadd\t64, r7, r3\n\tst.1\tr3, r2\n\tst.1\tr7, r1\n\tadd\t@CPI31_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI31_4[0], r7, r3\n\tadd.lt\tr7, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI31_6[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB31_18\n.BB31_15:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_12:\n\tshl.s\t160, r3, r2\n\tadd\tstack-[2], r0, r3\n\tshl.s\t168, r3, r3\n\tor\tr3, r2, r2\n\tld.1\tr10, r3\n\tand\t@CPI31_3[0], r3, r3\n\tor\tr2, r3, r2\n\tshl.s\t160, r4, r3\n\tadd\t192, r6, r4\n\tld.1\tr4, r4\n\tand\t@CPI31_3[0], r4, r4\n\tor\tr4, r3, r3\n\tadd\tstack-[1], r0, r4\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB31_17\n\tld.1\tr12, r4\n\tld.1\t64, r5\n\tadd\t64, r5, r6\n\tst.1\tr6, r3\n\tadd\t32, r5, r3\n\tst.1\tr3, r2\n\tshl.s\t160, r15, r2\n\tand\t@CPI31_2[0], r2, r2\n\tand\t@CPI31_3[0], r4, r3\n\tor\tr3, r2, r2\n\tadd\t96, r5, r3\n\tst.1\tr3, r2\n\tst.1\tr5, r1\n\tadd\t@CPI31_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI31_4[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI31_7[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB31_18\n\tjump\t@.BB31_15\n.BB31_17:\n\tld.1\t64, r4\n\tadd\t64, r4, r5\n\tst.1\tr5, r3\n\tadd\t32, r4, r3\n\tst.1\tr3, r2\n\tst.1\tr4, r1\n\tadd\t@CPI31_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI31_4[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI31_9[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB31_18\n\tjump\t@.BB31_15\n.BB31_3:\n\tadd\t@CPI31_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI31_13[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_1:\n\tadd\t@CPI31_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI31_13[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end31:\n\nfun_validateOrderAndListing_17481:\n.func_begin32:\n\tnop\tstack+=[24]\n\tadd\tr4, r0, stack-[8]\n\tadd\tr3, r0, stack-[12]\n\tadd\tr1, r0, r3\n\tadd\t128, r3, r1\n\tadd\tr1, r0, stack-[9]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t96, r3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t64, r3, r1\n\tadd\tr1, r0, stack-[5]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tld.1.inc\tr3, r1, r4\n\tand\t@CPI32_0[0], r1, r1\n\tadd\tr1, r0, stack-[18]\n\tld.1\tr4, r1\n\tand\t@CPI32_0[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t160, r3, r1\n\tadd\tr1, r0, stack-[3]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tsub.s!\t2, r1, r1\n\tjump.ge\t@.BB32_1\n\tadd\tr2, r0, stack-[6]\n\tadd\t64, r2, r1\n\tadd\tr1, r0, stack-[4]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\tr3, r0, stack-[23]\n\tadd\t192, r3, r1\n\tadd\tr1, r0, stack-[7]\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r2, r1\n\tadd\tr2, r0, stack-[21]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[20]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\t@CPI32_1[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[24]\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI32_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_3[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tadd\tstack-[22], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[20], r0, r1\n\tand\t65535, r1, r1\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tadd\tstack-[21], r0, r1\n\tand\t@CPI32_0[0], r1, r1\n\tadd\t64, r4, r3\n\tst.1\tr3, r1\n\tadd\t96, r0, r1\n\tadd\tr1, r0, stack-[21]\n\tst.1\tr4, r1\n\tsub.s!\t@CPI32_4[0], r4, r1\n\tjump.ge\t@.BB32_5\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI32_2[0], r0, r1\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI32_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI32_2[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI32_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r1\n\tand\t@CPI32_0[0], r1, r1\n\tadd\t224, r2, r2\n\tadd\tr2, r0, stack-[19]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[20]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI32_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI32_1[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[24], r0, r1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI32_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_3[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tadd\tstack-[11], r0, r4\n\tadd\t32, r4, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t352, r4, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tadd\t288, r4, r1\n\tadd\tstack-[20], r0, r3\n\tst.1\tr1, r3\n\tadd\t256, r4, r1\n\tadd\tstack-[22], r0, r3\n\tst.1\tr1, r3\n\tadd\t224, r4, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr1, r3\n\tadd\t192, r4, r1\n\tadd\tstack-[15], r0, r3\n\tst.1\tr1, r3\n\tadd\t160, r4, r1\n\tadd\tstack-[16], r0, r3\n\tst.1\tr1, r3\n\tadd\t128, r4, r1\n\tadd\tstack-[17], r0, r3\n\tst.1\tr1, r3\n\tadd\t96, r4, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\tr1, r3\n\tadd\t64, r4, r1\n\tadd\tstack-[18], r0, r3\n\tst.1\tr1, r3\n\tadd\t352, r0, r1\n\tst.1\tr4, r1\n\tadd\t320, r4, r1\n\tst.1\tr1, r0\n\tsub.s!\t@CPI32_7[0], r4, r1\n\tjump.gt\t@.BB32_5\n\tadd\t384, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI32_2[0], r0, r1\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI32_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI32_2[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI32_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tld\tr1, r2\n\tadd\tstack-[19], r0, r1\n\tadd\tr2, r0, stack-[18]\n\tst.1\tr1, r2\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[20]\n\tadd\t32, r1, r2\n\tadd\t@CPI32_8[0], r0, r1\n\tadd\tr2, r0, stack-[17]\n\tst.1\tr2, r1\n\tadd\t@CPI32_1[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[24], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[21], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI32_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_3[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[22], r0, r3\n\tand\t@CPI32_0[0], r3, r3\n\tadd\tr3, r0, stack-[24]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tadd\tstack-[20], r0, r3\n\tadd\t66, r3, r2\n\tadd\tstack-[18], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r3, r2\n\tst.1\tr2, r1\n\tadd\t66, r0, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI32_9[0], r3, r1\n\tjump.gt\t@.BB32_5\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t@CPI32_2[0], r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI32_2[0], r4, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr3, r3\n\tsub.s!\t@CPI32_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI32_2[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI32_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r4\n\tadd\t96, r4, r2\n\tld.1\tr2, r2\n\tadd\t32, r4, r3\n\tld.1\tr3, r3\n\tadd\t64, r4, r4\n\tld.1\tr4, r4\n\tld.1\t64, r5\n\tadd\t96, r5, r6\n\tst.1\tr6, r4\n\tadd\t64, r5, r4\n\tst.1\tr4, r3\n\tshr.s\t248, r2, r2\n\tadd\t32, r5, r3\n\tst.1\tr3, r2\n\tst.1\tr5, r1\n\tst.1\t0, r0\n\tadd\t@CPI32_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI32_2[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI32_10[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI32_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB32_54\n\tadd\tr0, r0, r6\n.BB32_16:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB32_16\n.BB32_54:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB32_18\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB32_18:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_19\n\tld.1\t0, r1\n\tand!\t@CPI32_0[0], r1, r2\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB32_51\n\tadd\tstack-[24], r0, r1\n\tsub!\tr2, r1, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB32_51\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[24]\n\tadd\t@CPI32_11[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI32_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_12[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tadd\tstack-[24], r0, r2\n\tsub!\tr2, r1, r1\n\tadd\tr0, r0, r1\n\tjump.le\t@.BB32_51\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\tstack-[8], r0, r3\n\tadd\t32, r3, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t@CPI32_13[0], r1, r2\n\tjump.ge\t@.BB32_29\n\tld.1\tr3, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tand\t65535, r2, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t65535, r1, r2\n\tjump.gt\t@.BB32_29\n\tsub.s!\t10000, r1, r1\n\tadd\tr0, r0, r1\n\tjump.gt\t@.BB32_51\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tadd\t32, r2, r2\n\tadd\tstack-[5], r0, r3\n\tld.1\tr3, r3\n\tadd\tr3, r0, stack-[18]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[22]\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tld.1.inc\tr1, r3, r4\n\tadd\t64, r1, r1\n\tadd\tr4, r0, stack-[17]\n\tld.1\tr4, r4\n\tadd\tr1, r0, stack-[16]\n\tld.1\tr1, r5\n\tld.1\t64, r1\n\tadd\t128, r1, r6\n\tst.1\tr6, r2\n\tadd\t96, r1, r2\n\tst.1\tr2, r5\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t128, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI32_14[0], r1, r3\n\tjump.gt\t@.BB32_5\n\tadd\t160, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI32_2[0], r0, r3\n\tsub.s!\t@CPI32_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI32_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI32_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tadd\tstack-[22], r0, r2\n\tld.1.inc\tr2, r2, r3\n\tadd\tr3, r0, stack-[21]\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB32_40\n\tadd\t32784, r0, r2\n\tadd\tr2, r0, stack-[20]\n\tadd\tr0, r0, r3\n\tjump\t@.BB32_36\n.BB32_38:\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI32_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tadd\tstack-[20], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n.BB32_37:\n\tld\tr1, r1\n\tadd\tstack-[24], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[22], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB32_40\n.BB32_36:\n\tadd\tr3, r0, stack-[24]\n\tshl.s\t5, r3, r2\n\tadd\tstack-[21], r0, r3\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r3\n\tjump.ge\t@.BB32_38\n\tst.1\t0, r1\n\tst.1\t32, r2\n\tadd\t@CPI32_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tadd\tstack-[20], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB32_37\n.BB32_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_40:\n\tadd\tstack-[3], r0, r2\n\tld.1\tr2, r3\n\tsub.s!\t1, r3, r2\n\tadd\tstack-[6], r0, r2\n\tjump.gt\t@.BB32_1\n\tadd\t96, r2, r4\n\tld.1\tr4, r2\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB32_42\n\tadd\tstack-[18], r0, r3\n\tsub!\tr1, r3, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB32_51\n.BB32_46:\n\tld.1\tr2, r1\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r1, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB32_51\n\tadd\tr4, r0, stack-[24]\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI32_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI32_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tld.1\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI32_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI32_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[24], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tadd!\tr2, r1, r1\n\tjump.of\t@.BB32_29\n\tadd\tstack-[1], r0, r2\n\tadd\t64, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.le\t1, r0, r1\n\tjump\t@.BB32_51\n.BB32_42:\n\tadd\tstack-[18], r0, r3\n\tsub!\tr1, r3, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB32_51\n\tadd\t32, r2, r1\n\tld.1\tr1, r1\n\tsub.s!\t1, r1, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB32_51\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t1, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB32_46\n.BB32_51:\n\tand\t1, r1, r1\n\tret\n.BB32_5:\n\tadd\t@CPI32_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI32_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_1:\n\tadd\t@CPI32_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI32_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_19:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB32_53\n\tadd\tr0, r0, r5\n.BB32_21:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB32_21\n.BB32_53:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB32_23\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB32_23:\n\tadd\t@CPI32_2[0], r0, r1\n\tsub.s!\t@CPI32_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tstack-[21], r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_29:\n\tadd\t@CPI32_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI32_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end32:\n\nfun_executeBatchTransfer:\n.func_begin33:\n\tnop\tstack+=[24]\n\tadd\tr3, r0, stack-[7]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[5]\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB33_23\n\tld.1\t64, r8\n\tadd\t32, r8, r2\n\tadd\tr2, r0, stack-[20]\n\tst.1\t64, r2\n\tsub.s!\t@CPI33_0[0], r1, r2\n\tjump.ge\t@.BB33_2\n\tshl.s\t5, r1, r5\n\tadd\t63, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[20], r0, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI33_1[0], r2, r4\n\tjump.gt\t@.BB33_2\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB33_2\n\tst.1\t64, r2\n\tadd\tstack-[20], r0, r2\n\tst.1\tr2, r1\n\tand\t31, r5, r1\n\tadd\t64, r8, r2\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr5, r0, stack-[24]\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB33_88\n\tadd\tr0, r0, r5\n.BB33_7:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB33_7\n.BB33_88:\n\tadd\tr8, r0, stack-[23]\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB33_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr2, r4, r2\n\tshl.s\t3, r1, r1\n\tld.1\tr2, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr3, r3\n\tsub\t256, r1, r1\n\tshr\tr3, r1, r3\n\tshl\tr3, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB33_9:\n\tadd\tstack-[5], r0, r3\n\tadd\t32, r3, r1\n\tadd\t@CPI33_2[0], r0, r2\n\tst.1\tr1, r2\n\tld.1\tr3, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\t@CPI33_3[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t128, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI33_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI33_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI33_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB33_10\n\tadd\tstack-[5], r0, r2\n\tadd\t60, r2, r3\n\tadd\tstack-[24], r0, r2\n\tadd\t64, r2, r5\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB33_16\n\tand\t31, r5, r1\n\tshr.s!\t5, r5, r2\n\tadd\tstack-[23], r0, r7\n\tjump.eq\t@.BB33_86\n\tadd\tr0, r0, r4\n.BB33_14:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tadd\tr3, r5, r5\n\tld.1\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB33_14\n.BB33_86:\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB33_21\n\tshl.s\t5, r2, r2\n\tadd\tr3, r2, r3\n\tadd\tr7, r2, r2\n\tshl.s\t3, r1, r1\n\tld.1\tr2, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld.1\tr3, r3\n\tsub\t256, r1, r1\n\tshr\tr3, r1, r3\n\tshl\tr3, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n\tjump\t@.BB33_21\n.BB33_16:\n\tadd\t@CPI33_4[0], r0, r4\n\tadd\tr5, r0, stack-[24]\n\tsub.s!\t@CPI33_4[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\tstack-[22], r0, r5\n\tsub.s\t28, r5, r5\n\tsub.s!\t@CPI33_4[0], r5, r6\n\tadd.ge\tr4, r0, r5\n\tshl.s\t96, r5, r5\n\tor\tr5, r3, r3\n\tsub.s!\t@CPI33_4[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI33_4[0], r2, r2\n\tadd\tstack-[24], r0, r4\n\tsub!\tr2, r4, r3\n\tadd.lt\tr2, r0, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tadd\tstack-[23], r0, r8\n\tjump.eq\t@.BB33_87\n\tadd\tr0, r0, r5\n.BB33_18:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB33_18\n.BB33_87:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB33_20\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr8, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB33_20:\n\tadd\tr2, r0, stack[@returndatasize]\n.BB33_21:\n\tadd\tstack-[20], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub!\tr1, r0, r1\n\tadd\tstack-[6], r0, r1\n\tadd\t224, r1, r2\n\tadd\tr2, r0, stack-[23]\n\tadd\t256, r1, r2\n\tadd\tr2, r0, stack-[21]\n\tadd\t160, r1, r2\n\tadd\tr2, r0, stack-[22]\n\tadd\tstack-[7], r0, r2\n\tadd\t32, r2, r2\n\tadd\tr2, r0, stack-[4]\n\tadd\t64, r1, r1\n\tadd\tr1, r0, stack-[3]\n\tjump.eq\t@.BB33_27\n\tadd\tstack-[5], r0, r1\n\tadd\t128, r1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[6], r0, r1\n\tadd\t32, r1, r2\n\tadd\tr2, r0, stack-[2]\n\tadd\t288, r1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\tr0, r0, r2\n\tjump\t@.BB33_24\n.BB33_62:\n\tshl.s\t160, r11, r4\n\tand\t@CPI33_11[0], r4, r4\n\tld.1\tr14, r6\n\tand\t@CPI33_7[0], r6, r6\n\tor\tr6, r4, r4\n\tadd\t192, r3, r3\n\tld.1\tr3, r3\n\tld.1\tr5, r5\n\tld.1\t64, r6\n\tadd\t96, r6, r8\n\tst.1\tr8, r4\n\tshl.s\t160, r2, r2\n\tshl.s\t168, r7, r4\n\tor\tr4, r2, r2\n\tand\t@CPI33_7[0], r5, r4\n\tor\tr2, r4, r2\n\tadd\t32, r6, r4\n\tst.1\tr4, r2\n\tshl.s\t160, r13, r2\n\tand\t@CPI33_7[0], r3, r3\n\tor\tr3, r2, r2\n\tadd\t64, r6, r3\n\tst.1\tr3, r2\n\tst.1\tr6, r1\n\tadd\t@CPI33_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI33_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI33_4[0], r6, r3\n\tadd.lt\tr6, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI33_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI33_13[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB33_10\n.BB33_44:\n\tadd\tstack-[24], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[8], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB33_27\n.BB33_24:\n\tadd\tstack-[20], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB33_25\n\tadd\tr2, r0, stack-[24]\n\tshl.s\t5, r2, r1\n\tadd\t32, r1, r1\n\tadd\tstack-[20], r0, r2\n\tadd\tr1, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB33_44\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r3\n\tadd\tstack-[24], r0, r10\n\tsub!\tr3, r10, r3\n\tjump.le\t@.BB33_25\n\tadd\tr1, r2, r2\n\tld.1\tr2, r3\n\tld.1\t64, r2\n\tsub.s!\t@CPI33_6[0], r2, r4\n\tjump.gt\t@.BB33_2\n\tadd\t64, r2, r4\n\tst.1\t64, r4\n\tadd\t32, r2, r4\n\tst.1\tr4, r0\n\tst.1\tr2, r0\n\tld.1.inc\tr3, r5, r2\n\tadd\tstack-[23], r0, r4\n\tld.1\tr4, r4\n\tld.1\tr4, r6\n\tsub!\tr6, r5, r6\n\tjump.le\t@.BB33_25\n\tshl.s\t5, r5, r5\n\tadd\tr4, r5, r4\n\tadd\t32, r4, r4\n\tld.1\tr4, r5\n\tld.1\tr2, r6\n\tadd\tr5, r6, r5\n\tst.1\tr4, r5\n\tld.1\tr2, r4\n\tadd\tstack-[2], r0, r9\n\tld.1\tr9, r2\n\tadd\tr2, r4, r7\n\tadd\t96, r3, r2\n\tld.1\tr2, r5\n\tadd\t160, r3, r8\n\tld.1\tr8, r6\n\tst.1\tr9, r7\n\tld.1\tr8, r7\n\tadd\tstack-[6], r0, r9\n\tld.1\tr9, r8\n\tadd\tr8, r7, r7\n\tst.1\tr9, r7\n\tadd\t128, r3, r7\n\tld.1\tr7, r7\n\tadd\tstack-[3], r0, r9\n\tld.1\tr9, r8\n\tadd\tr8, r7, r7\n\tst.1\tr9, r7\n\tadd\t64, r3, r3\n\tld.1\tr3, r8\n\tadd\tstack-[21], r0, r7\n\tld.1\tr7, r7\n\tld.1\tr7, r9\n\tsub!\tr9, r8, r9\n\tjump.le\t@.BB33_25\n\tshl.s\t5, r8, r8\n\tadd\tr7, r8, r7\n\tadd\t32, r7, r7\n\tld.1\tr2, r8\n\tld.1\tr7, r9\n\tadd\tr9, r8, r8\n\tst.1\tr7, r8\n\tld.1\tr3, r7\n\tadd\tstack-[22], r0, r3\n\tld.1\tr3, r3\n\tld.1\tr3, r8\n\tsub!\tr8, r7, r8\n\tjump.le\t@.BB33_25\n\tadd\tr6, r4, r4\n\tadd!\tr4, r5, r5\n\tshl.s\t5, r7, r4\n\tadd\tr3, r4, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tand\t@CPI33_7[0], r3, r3\n\tjump.eq\t@.BB33_36\n\tld.1\t64, r6\n\tsub.s!\t@CPI33_6[0], r6, r4\n\tjump.gt\t@.BB33_2\n\tld.1\tr2, r2\n\tadd\t64, r6, r4\n\tst.1\t64, r4\n\tadd\tr6, r0, stack-[12]\n\tst.1.inc\tr6, r3, r4\n\tmul\t10000, r2, r2, r3\n\tadd\tr5, r0, stack-[13]\n\tdiv\tr2, r5, r2, r3\n\tand\t65535, r2, r2\n\tadd\tr4, r0, stack-[11]\n\tst.1\tr4, r2\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r3\n\tsub!\tr3, r10, r3\n\tjump.le\t@.BB33_25\n\tadd\tr1, r2, r1\n\tld.1\tr1, r1\n\tadd\t192, r1, r1\n\tld.1\tr1, r4\n\tld.1.inc\tr4, r1, r2\n\tand\t@CPI33_7[0], r1, r3\n\tadd\tr4, r0, stack-[16]\n\tadd\t64, r4, r1\n\tadd\tr1, r0, stack-[9]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\tr2, r0, stack-[10]\n\tld.1\tr2, r1\n\tadd\tr1, r0, stack-[19]\n\tadd\tr3, r0, stack-[15]\n\tst.1\t0, r3\n\tadd\t51, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t32, r1\n\tadd\t@CPI33_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI33_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI33_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB33_10\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI33_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI33_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI33_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB33_10\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI33_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI33_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI33_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB33_10\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[16], r0, r3\n\tadd\t96, r3, r2\n\tld.1\tr2, r2\n\tadd!\tr2, r1, r2\n\tjump.of\t@.BB33_29\n\tadd\t128, r3, r1\n\tld.1\tr1, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB33_45\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI33_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI33_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI33_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB33_10\n\tld\tr1, r1\n\tadd\tstack-[19], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI33_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI33_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI33_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB33_10\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI33_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI33_4[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI33_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB33_10\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tsub.s!\t@CPI33_9[0], r1, r2\n\tadd\tstack-[24], r0, r3\n\tadd\tstack-[13], r0, r13\n\tadd\tstack-[12], r0, r14\n\tjump.gt\t@.BB33_2\n\tadd\t160, r1, r2\n\tst.1\t64, r2\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tadd\t96, r1, r2\n\tst.1\tr2, r0\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tmul\t160, r3, r1, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tr1, r2, r1\n\tadd\tstack-[1], r0, r2\n\tld.1\tr2, r2\n\tadd\tr1, r2, r3\n\tadd\t224, r3, r4\n\tld.1\tr4, r6\n\tsub.s!\t2, r6, r1\n\tadd\tstack-[11], r0, r15\n\tjump.ge\t@.BB33_51\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r3, r5\n\tsub!\tr6, r0, r6\n\tadd\t128, r3, r6\n\tjump.ne\t@.BB33_58\n\tadd\tstack-[7], r0, r7\n\tld.1\tr7, r7\n\tadd\t32, r7, r7\n\tld.1\tr7, r7\n\tand!\t65535, r7, r7\n\tjump.eq\t@.BB33_54\n.BB33_58:\n\tld.1\tr5, r5\n\tand\t@CPI33_7[0], r5, r7\n\tld.1\t64, r5\n\tst.1.inc\tr5, r7, r7\n\tld.1\tr6, r6\n\tst.1\tr7, r6\n\tadd\t160, r3, r6\n\tld.1\tr6, r6\n\tadd\t64, r5, r7\n\tst.1\tr7, r6\n\tadd\t192, r3, r3\n\tld.1\tr3, r3\n\tand\t@CPI33_7[0], r3, r3\n\tadd\t96, r5, r6\n\tst.1\tr6, r3\n\tld.1\tr4, r3\n\tsub.s!\t1, r3, r4\n\tjump.gt\t@.BB33_51\n\tadd\t224, r5, r4\n\tst.1\tr4, r13\n\tadd\t192, r5, r4\n\tst.1\tr4, r2\n\tadd\t160, r5, r2\n\tst.1\tr2, r1\n\tadd\t128, r5, r1\n\tst.1\tr1, r3\n\tld.1\tr14, r1\n\tand\t@CPI33_7[0], r1, r1\n\tadd\t256, r5, r2\n\tst.1\tr2, r1\n\tld.1\tr15, r1\n\tand\t65535, r1, r1\n\tadd\t288, r5, r2\n\tst.1\tr2, r1\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r1, r2\n\tand\t@CPI33_7[0], r1, r1\n\tadd\t320, r5, r3\n\tst.1\tr3, r1\n\tld.1\tr2, r1\n\tand\t65535, r1, r1\n\tadd\t352, r5, r2\n\tst.1\tr2, r1\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r1, r2\n\tand\t@CPI33_7[0], r1, r1\n\tadd\t384, r5, r3\n\tst.1\tr3, r1\n\tld.1\tr2, r1\n\tand\t65535, r1, r1\n\tadd\t416, r5, r2\n\tst.1\tr2, r1\n\tadd\t448, r5, r1\n\tst.1\tr1, r0\n\tadd\t@CPI33_4[0], r0, r1\n\tsub.s!\t@CPI33_4[0], r5, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr5, r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI33_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI33_17[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI33_18[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB33_44\n\tjump\t@.BB33_10\n.BB33_54:\n\tld.1\tr6, r7\n\tsub.s!\t@CPI33_10[0], r7, r8\n\tjump.gt\t@.BB33_58\n\tsub.s!\t255, r2, r8\n\tjump.gt\t@.BB33_58\n\tsub.s!\t@CPI33_10[0], r13, r8\n\tjump.gt\t@.BB33_58\n\tadd\tstack-[4], r0, r8\n\tld.1\tr8, r9\n\tadd\t32, r9, r8\n\tld.1\tr8, r8\n\tand\t65535, r8, r10\n\tld.1\tr15, r11\n\tand!\t65535, r11, r12\n\tjump.eq\t@.BB33_60\n\tsub!\tr10, r0, r8\n\tjump.ne\t@.BB33_58\n\tjump\t@.BB33_62\n.BB33_60:\n\tshl.s\t160, r2, r2\n\tshl.s\t168, r7, r4\n\tor\tr4, r2, r2\n\tld.1\tr5, r4\n\tand\t@CPI33_7[0], r4, r4\n\tor\tr2, r4, r2\n\tshl.s\t160, r13, r4\n\tadd\t192, r3, r3\n\tld.1\tr3, r3\n\tand\t@CPI33_7[0], r3, r3\n\tor\tr3, r4, r3\n\tsub!\tr10, r0, r4\n\tjump.eq\t@.BB33_64\n\tld.1\tr9, r4\n\tld.1\t64, r5\n\tadd\t64, r5, r6\n\tst.1\tr6, r3\n\tadd\t32, r5, r3\n\tst.1\tr3, r2\n\tshl.s\t160, r8, r2\n\tand\t@CPI33_11[0], r2, r2\n\tand\t@CPI33_7[0], r4, r3\n\tor\tr3, r2, r2\n\tadd\t96, r5, r3\n\tst.1\tr3, r2\n\tst.1\tr5, r1\n\tadd\t@CPI33_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI33_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI33_4[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI33_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI33_14[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB33_44\n\tjump\t@.BB33_10\n.BB33_64:\n\tld.1\t64, r4\n\tadd\t64, r4, r5\n\tst.1\tr5, r3\n\tadd\t32, r4, r3\n\tst.1\tr3, r2\n\tst.1\tr4, r1\n\tadd\t@CPI33_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI33_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI33_4[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI33_15[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI33_16[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB33_44\n.BB33_10:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB33_27:\n\tadd\tstack-[6], r0, r1\n\tadd\t128, r1, r1\n\tld.1\tr1, r5\n\tsub.s\t1, r0, r1\n\tadd\tr1, r0, stack-[18]\n\tsub!\tr5, r1, r1\n\tjump.eq\t@.BB33_29\n\tadd\tstack-[6], r0, r1\n\tadd\t192, r1, r6\n\tadd\tr0, r0, r1\n\tadd\tr5, r0, stack-[20]\n\tadd\tr6, r0, stack-[19]\n\tjump\t@.BB33_65\n.BB33_71:\n\tadd\t1, r7, r1\n\tsub!\tr7, r5, r2\n\tjump.ge\t@.BB33_72\n.BB33_65:\n\tadd\tr1, r0, r7\n\tld.1\tr6, r2\n\tld.1\tr2, r1\n\tsub!\tr1, r7, r1\n\tjump.le\t@.BB33_25\n\tshl.s\t5, r7, r1\n\tadd\t32, r1, r1\n\tadd\tr1, r2, r2\n\tld.1\tr2, r2\n\tand\t@CPI33_7[0], r2, r4\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r3\n\tsub!\tr3, r7, r3\n\tjump.le\t@.BB33_25\n\tadd\tr1, r2, r1\n\tld.1\tr1, r3\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB33_71\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB33_71\n\tadd\t@CPI33_4[0], r0, r2\n\tsub.s!\t@CPI33_4[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI33_23[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tadd\tr7, r0, stack-[24]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[24], r0, r7\n\tadd\tstack-[19], r0, r6\n\tadd\tstack-[20], r0, r5\n\tshr.s\t96, r1, r1\n\tand\t@CPI33_4[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB33_71\n\tjump\t@.BB33_70\n.BB33_72:\n\tadd\tstack-[6], r0, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r5\n\tadd\tstack-[18], r0, r1\n\tsub!\tr5, r1, r1\n\tjump.eq\t@.BB33_29\n\tadd\tr0, r0, r1\n\tadd\tr5, r0, stack-[23]\n\tjump\t@.BB33_74\n.BB33_79:\n\tadd\t1, r6, r1\n\tsub!\tr6, r5, r2\n\tjump.ge\t@.BB33_80\n.BB33_74:\n\tadd\tr1, r0, r6\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r2\n\tld.1\tr2, r1\n\tsub!\tr1, r6, r1\n\tjump.le\t@.BB33_25\n\tshl.s\t5, r6, r1\n\tadd\t32, r1, r1\n\tadd\tr1, r2, r2\n\tld.1\tr2, r2\n\tand\t@CPI33_7[0], r2, r4\n\tadd\tstack-[21], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r3\n\tsub!\tr3, r6, r3\n\tjump.le\t@.BB33_25\n\tadd\tr1, r2, r1\n\tld.1\tr1, r3\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB33_79\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB33_79\n\tadd\t@CPI33_4[0], r0, r2\n\tsub.s!\t@CPI33_4[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI33_23[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tadd\tr6, r0, stack-[24]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[24], r0, r6\n\tadd\tstack-[23], r0, r5\n\tshr.s\t96, r1, r1\n\tand\t@CPI33_4[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB33_79\n.BB33_70:\n\tld.1\t64, r1\n\tadd\t@CPI33_24[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI33_4[0], r0, r2\n\tsub.s!\t@CPI33_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI33_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB33_80:\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tand\t@CPI33_7[0], r1, r4\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r3\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB33_83\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB33_83\n\tadd\t@CPI33_4[0], r0, r2\n\tsub.s!\t@CPI33_4[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI33_23[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tshr.s\t96, r1, r1\n\tand\t@CPI33_4[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB33_70\n.BB33_83:\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tand\t@CPI33_7[0], r1, r4\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r3\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB33_23\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB33_23\n\tadd\t@CPI33_4[0], r0, r2\n\tsub.s!\t@CPI33_4[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI33_23[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tshr.s\t96, r1, r1\n\tand\t@CPI33_4[0], r1, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB33_70\n.BB33_23:\n\tret\n.BB33_25:\n\tadd\t@CPI33_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI33_20[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB33_2:\n\tadd\t@CPI33_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI33_20[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB33_51:\n\tadd\t@CPI33_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI33_20[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB33_29:\n\tadd\t@CPI33_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI33_20[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB33_36:\n\tadd\t@CPI33_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI33_20[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB33_45:\n\tld.1\t64, r1\n\tadd\t@CPI33_21[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI33_4[0], r0, r2\n\tsub.s!\t@CPI33_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI33_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end33:\n\n__farcall:\n.func_begin34:\n.tmp0:\n\tfar_call\tr1, r2, @.BB34_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB34_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end34:\n\n__staticcall:\n.func_begin35:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB35_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB35_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end35:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_0:\nCPI10_8:\nCPI11_1:\nCPI12_8:\nCPI13_9:\nCPI14_3:\nCPI15_3:\nCPI17_8:\nCPI20_9:\nCPI21_1:\nCPI22_1:\nCPI23_1:\nCPI24_2:\nCPI25_0:\nCPI26_2:\nCPI27_5:\nCPI28_4:\nCPI29_4:\nCPI30_0:\nCPI31_4:\nCPI32_2:\nCPI33_4:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551616\nCPI0_2:\n\t.cell -18446744073709551297\nCPI0_3:\nCPI6_0:\nCPI7_0:\nCPI8_0:\nCPI9_0:\nCPI10_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\nCPI16_0:\nCPI17_0:\nCPI19_0:\nCPI20_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_4:\nCPI6_2:\nCPI8_4:\nCPI10_4:\nCPI11_0:\nCPI12_4:\nCPI13_4:\nCPI14_1:\nCPI15_1:\nCPI16_4:\nCPI17_17:\nCPI19_4:\nCPI20_4:\nCPI21_3:\nCPI23_3:\nCPI25_2:\nCPI27_2:\nCPI28_2:\nCPI29_2:\nCPI31_3:\nCPI32_0:\nCPI33_7:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_5:\nCPI17_1:\n\t.cell 31339120015659993862160253144461340585908158850314856634218575790594406219776\nCPI0_6:\nCPI17_2:\n\t.cell 52221721488094637361032716764931173484543607315704046827444853655466909106176\nCPI0_7:\nCPI17_3:\n\t.cell 52221721488094637411348094595306180034048096300166498017383929288605468459008\nCPI0_8:\nCPI17_4:\n\t.cell 53106884550783362642547488420994772847190420323519983507238112171988011188224\nCPI0_9:\nCPI17_5:\n\t.cell 44051724277807311932915127468368534493795003871154628187766469459610360086528\nCPI0_10:\nCPI17_6:\n\t.cell 18544826791913921923306290567797672742125270981606496584444378688767337168896\nCPI0_11:\nCPI8_6:\nCPI9_3:\nCPI10_6:\nCPI12_6:\nCPI13_6:\nCPI16_6:\nCPI20_6:\nCPI27_1:\nCPI28_1:\nCPI29_1:\nCPI32_9:\n\t.cell 18446744073709551487\nCPI0_12:\nCPI1_1:\nCPI10_10:\nCPI13_14:\nCPI17_9:\nCPI22_2:\nCPI23_5:\nCPI24_5:\nCPI27_7:\nCPI28_6:\nCPI29_6:\nCPI30_1:\nCPI32_5:\nCPI33_23:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_13:\nCPI10_20:\nCPI13_24:\nCPI27_17:\n\t.cell 18446744073709551391\nCPI0_14:\n\t.cell 14676104327452120195917284612284881388381053653812422286438524111089729273856\nCPI0_15:\n\t.cell 31841050251731091034942548750517621095000146673084863155864777162523518710070\nCPI0_16:\n\t.cell 35934828513074129229447198651048433114191313432309010319849498247401253634048\nCPI0_17:\n\t.cell 44051724277807311932867326395919275286875961929672090867470915259119320432640\nCPI0_18:\n\t.cell 44051724277807311932450204393170136782495764362127344915743905041884607676416\nCPI0_19:\n\t.cell 44541250993661105927496951211809878790738499189067665572868043960638777589760\nCPI0_20:\n\t.cell 53106884550783362642818457268266172844272016626381966227735129797324875759616\nCPI0_21:\n\t.cell 53106884550783362642598066386033007125853428233221007829854269552000348717056\nCPI0_22:\n\t.cell 53106884551406667113360280976801172629620227993668280142856508565845213970432\nCPI0_23:\n\t.cell 31841050251731090985019689268441138252934667121599126907409200931693284818944\nCPI0_24:\n\t.cell 53106884550783362642939140943944010231542291682828429828761769729563360755712\nCPI0_25:\n\t.cell 53106884551406689603847999189181697813825433939934340482790662627319347150848\nCPI0_26:\n\t.cell 53106884550783362642817882958041719728358590838010443010202516617302458236928\nCPI0_27:\nCPI7_2:\nCPI8_1:\nCPI9_2:\nCPI10_1:\nCPI12_1:\nCPI13_1:\nCPI16_1:\nCPI19_1:\nCPI20_1:\nCPI27_3:\nCPI33_1:\n\t.cell 18446744073709551615\nCPI0_28:\n\t.cell 35913640151800768404917630926062729062772826501412339324958213252071246790656\nCPI0_29:\n\t.cell 53106884550783362642817882958042700961147326185428670581806513145208721375232\nCPI0_30:\n\t.cell 53106884550783362642867208287543037639277854226140605293108759564488343027712\nCPI0_31:\nCPI6_3:\nCPI8_5:\nCPI9_4:\nCPI10_5:\nCPI12_5:\nCPI13_5:\nCPI16_5:\nCPI17_10:\nCPI19_5:\nCPI20_5:\nCPI27_20:\nCPI28_15:\nCPI29_15:\nCPI33_6:\n\t.cell 18446744073709551551\nCPI0_32:\nCPI17_11:\n\t.cell 40887232240920134721818220870649980710496588155161152009853078846237266935808\nCPI0_33:\nCPI17_12:\n\t.cell 904625697166532776746648320380374280103671756230283019243698763777892679680\nCPI0_34:\nCPI17_13:\n\t.cell 22244935829384504656515512402634733411489739914894706861305669875436825346048\nCPI0_35:\nCPI17_14:\n\t.cell 904625697166532776746648320380374280103671755438001394101055387842453176320\nCPI0_36:\nCPI17_15:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_37:\nCPI10_16:\nCPI13_20:\nCPI17_16:\nCPI27_13:\nCPI28_12:\nCPI29_12:\nCPI32_12:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_38:\nCPI10_19:\nCPI13_23:\nCPI17_18:\nCPI27_16:\n\t.cell 18446744073709551423\nCPI0_39:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_40:\n\t.cell 53919893334301279589334030174039261382768505656193934686984555462656\nCPI0_41:\n\t.cell 1901390984\nCPI0_42:\n\t.cell 2961359801\nCPI0_43:\n\t.cell 3252421252\nCPI0_44:\n\t.cell 3691807156\nCPI0_45:\n\t.cell 3691807157\nCPI0_46:\n\t.cell 4101732160\nCPI0_47:\n\t.cell 3252421253\nCPI0_48:\n\t.cell 3291280693\nCPI0_49:\n\t.cell 3168072985\nCPI0_50:\n\t.cell 3168072986\nCPI0_51:\n\t.cell 3199199178\nCPI0_52:\n\t.cell 2961359802\nCPI0_53:\n\t.cell 2967608970\nCPI0_54:\n\t.cell 2127478271\nCPI0_55:\n\t.cell 2763179635\nCPI0_56:\n\t.cell 2763179636\nCPI0_57:\n\t.cell 2916962457\nCPI0_58:\n\t.cell 2127478272\nCPI0_59:\n\t.cell 2278320461\nCPI0_60:\n\t.cell 1901390985\nCPI0_61:\n\t.cell 1969671484\nCPI0_62:\n\t.cell 2088523015\nCPI0_63:\n\t.cell 1163906578\nCPI0_64:\n\t.cell 1652350136\nCPI0_65:\n\t.cell 1860457778\nCPI0_66:\n\t.cell 1860457779\nCPI0_67:\n\t.cell 1888418218\nCPI0_68:\n\t.cell 1652350137\nCPI0_69:\n\t.cell 1811317136\nCPI0_70:\n\t.cell 1163906579\nCPI0_71:\n\t.cell 1188551941\nCPI0_72:\n\t.cell 1360089082\nCPI0_73:\n\t.cell 579786193\nCPI0_74:\n\t.cell 1009432254\nCPI0_75:\n\t.cell 1009432255\nCPI0_76:\n\t.cell 1066385971\nCPI0_77:\n\t.cell 579786194\nCPI0_78:\n\t.cell 974567272\nCPI0_79:\n\t.cell 110634978\nCPI0_80:\n\t.cell 204737060\nCPI0_81:\n\t.cell 516029832\nCPI0_82:\nCPI10_7:\nCPI12_11:\nCPI13_8:\nCPI14_2:\nCPI15_2:\nCPI17_19:\nCPI20_8:\nCPI21_0:\nCPI23_0:\nCPI24_1:\nCPI27_4:\nCPI28_3:\nCPI29_3:\nCPI32_1:\nCPI33_3:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_83:\nCPI14_4:\nCPI15_4:\n\t.cell 2535301200456458802993406410752\nCPI0_84:\n\t.cell 33214008156304899519099856659628919082135919575663711951716570106979833348096\nCPI0_85:\nCPI10_27:\nCPI12_22:\nCPI13_31:\nCPI20_25:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_86:\nCPI10_28:\nCPI12_23:\nCPI13_11:\nCPI20_11:\nCPI27_37:\nCPI28_18:\nCPI29_18:\n\t.cell 7922816251426433759354395033600\nCPI0_87:\n\t.cell 38060026880786097906769533995668948989398896075438820321500452483756539760524\nCPI0_88:\n\t.cell 5070602400912917605986812821504\nCPI0_89:\nCPI10_11:\nCPI11_2:\nCPI12_9:\nCPI13_15:\nCPI20_15:\nCPI26_3:\nCPI27_8:\nCPI28_7:\nCPI29_7:\nCPI32_6:\nCPI33_8:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_90:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_91:\n\t.cell -39728628725273825997158414482981341655097155725406387639139740542020864636101\nCPI0_92:\nCPI3_1:\nCPI4_1:\nCPI5_1:\nCPI6_4:\nCPI7_3:\nCPI8_7:\nCPI9_5:\nCPI10_24:\nCPI12_13:\nCPI13_28:\nCPI14_5:\nCPI15_5:\nCPI16_7:\nCPI17_23:\nCPI19_6:\nCPI20_17:\nCPI22_3:\nCPI23_6:\nCPI24_6:\nCPI26_0:\nCPI27_32:\nCPI28_32:\nCPI29_24:\nCPI31_12:\nCPI32_15:\nCPI33_19:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_93:\nCPI3_2:\nCPI4_2:\nCPI5_2:\nCPI6_5:\nCPI7_4:\nCPI8_8:\nCPI9_6:\nCPI10_25:\nCPI12_14:\nCPI13_29:\nCPI14_6:\nCPI15_6:\nCPI16_8:\nCPI17_24:\nCPI19_7:\nCPI20_18:\nCPI22_4:\nCPI23_7:\nCPI24_7:\nCPI26_1:\nCPI27_33:\nCPI28_33:\nCPI29_25:\nCPI31_13:\nCPI32_16:\nCPI33_20:\n\t.cell 2852213850513516153367582212096\nCPI0_94:\n\t.cell 18446744073709551519\nCPI0_95:\nCPI21_4:\n\t.cell -56673103478231237342598565808839500955638822980714494714859878849168896163840\nCPI0_96:\nCPI12_18:\nCPI13_13:\nCPI17_22:\nCPI20_13:\nCPI21_5:\nCPI27_35:\nCPI28_20:\nCPI29_20:\nCPI30_3:\nCPI33_22:\n\t.cell 316912650057057350374175801344\nCPI0_97:\nCPI27_23:\nCPI28_22:\nCPI31_2:\nCPI33_11:\n\t.cell 95779509802480722744478485512061607693151539203932160\nCPI0_98:\n\t.cell -95779509802480722744478485512061607693151539203932161\nCPI0_99:\n\t.cell 13396628115905860031065368065127033631220198003100813942168851992061439902509\nCPI0_100:\n\t.cell 33301296687731410259916674733609018892900209933272202948827932148954478673920\nCPI2_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\nCPI3_0:\nCPI8_2:\nCPI16_2:\nCPI17_7:\nCPI19_2:\nCPI23_4:\nCPI24_4:\nCPI32_4:\n\t.cell 18446744073709551488\nCPI4_0:\n\t.cell 18446744073709551200\nCPI5_0:\n\t.cell 18446744073709551232\nCPI6_1:\n\t.cell 18446744073709551360\nCPI7_1:\nCPI9_1:\nCPI33_0:\n\t.cell 18446744073709551616\nCPI8_3:\nCPI10_12:\nCPI12_7:\nCPI13_16:\nCPI16_3:\nCPI20_14:\nCPI27_9:\nCPI28_8:\nCPI29_14:\nCPI32_7:\n\t.cell 18446744073709551231\nCPI10_2:\nCPI12_2:\nCPI13_2:\nCPI20_2:\nCPI22_0:\nCPI31_0:\n\t.cell 18446744073709551456\nCPI10_3:\nCPI13_3:\nCPI19_3:\nCPI27_19:\n\t.cell 18446744073709551359\nCPI10_9:\nCPI12_12:\nCPI13_10:\nCPI17_20:\nCPI20_10:\nCPI21_2:\nCPI23_2:\nCPI24_3:\nCPI27_6:\nCPI28_5:\nCPI29_5:\nCPI32_3:\nCPI33_5:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI10_13:\nCPI13_17:\nCPI24_0:\nCPI27_10:\nCPI28_9:\nCPI29_9:\nCPI32_8:\n\t.cell 11309588061646438093662687302255421419811724423900836950936401294474059186176\nCPI10_14:\nCPI13_18:\nCPI25_1:\nCPI27_11:\nCPI28_10:\nCPI29_10:\nCPI32_10:\n\t.cell 10141204801825835211973625643008\nCPI10_15:\nCPI13_19:\nCPI27_12:\nCPI28_11:\nCPI29_11:\nCPI32_11:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI10_17:\nCPI13_21:\nCPI27_14:\nCPI28_13:\nCPI29_13:\nCPI32_13:\n\t.cell 65536\nCPI10_18:\nCPI13_22:\nCPI27_15:\n\t.cell 18446744073709551295\nCPI10_21:\nCPI13_25:\nCPI27_18:\nCPI28_14:\nCPI32_14:\nCPI33_9:\n\t.cell 18446744073709551455\nCPI10_22:\nCPI12_15:\nCPI13_26:\nCPI20_19:\n\t.cell -44877977326897262784168444354156441158329539312518651612887364914072161059015\nCPI10_23:\nCPI12_16:\nCPI13_27:\nCPI20_20:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI10_26:\nCPI12_21:\nCPI13_30:\nCPI20_24:\n\t.cell 37268805191608899176760263720700790282416321829889089033725955971341467020288\nCPI12_3:\nCPI20_3:\nCPI29_8:\n\t.cell 18446744073709551199\nCPI12_10:\nCPI20_16:\nCPI27_21:\nCPI28_16:\nCPI29_16:\nCPI33_2:\n\t.cell 2714548622\nCPI12_17:\nCPI20_21:\n\t.cell 24153687732723143066135550907969828495212031887835578291926181616731434254336\nCPI12_19:\nCPI20_22:\nCPI28_31:\nCPI29_23:\n\t.cell 1972319009188579538400297206852798014611667209360392381336494672166569115648\nCPI12_20:\nCPI20_23:\nCPI28_34:\nCPI29_26:\n\t.cell -36465911196370833363742902693246703794125016416301836540888344691102330126336\nCPI13_7:\nCPI20_7:\n\t.cell -48246124623414253250708801931023155351104014074514698206421094319265469693952\nCPI13_12:\nCPI20_12:\n\t.cell -30308864844075878103709465079196244435131961173183011202381060735060372619264\nCPI17_21:\n\t.cell -9465927956981554850105855096809260575171924562445158830567968817625444646912\nCPI26_4:\nCPI27_28:\nCPI28_27:\nCPI31_8:\nCPI33_15:\n\t.cell 904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI26_5:\n\t.cell -5411559334097360588635232759719944928463622172442462563455178922411451166058\nCPI27_0:\nCPI28_0:\nCPI29_0:\n\t.cell 18446744073709551552\nCPI27_22:\nCPI28_21:\nCPI31_1:\nCPI33_10:\n\t.cell 309485009821345068724781055\nCPI27_24:\nCPI28_23:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662656\nCPI27_25:\nCPI28_24:\nCPI31_5:\nCPI33_12:\n\t.cell 904625697166532776746648320380374280103671765341521708384097587035446968320\nCPI27_26:\nCPI28_25:\nCPI31_6:\nCPI33_13:\n\t.cell 56888502927063347893492909049920604927579195682740360326446617168433217955950\nCPI27_27:\nCPI28_26:\nCPI31_7:\nCPI33_14:\n\t.cell 7150595571644294868989035180482841048700596950994401315244076980469418918315\nCPI27_29:\nCPI28_28:\nCPI31_9:\nCPI33_16:\n\t.cell 13283285347340597890564451019147450879933795677382226799939549355939820540594\nCPI27_30:\nCPI28_29:\nCPI31_10:\nCPI33_17:\n\t.cell 904625697166532776746648320380374280103671793229834913405144419962917486592\nCPI27_31:\nCPI28_30:\nCPI31_11:\nCPI33_18:\n\t.cell -5897055117485570507155782056111528473230848335554069666778082268355620387495\nCPI27_34:\nCPI33_21:\n\t.cell 39325510520079020968861314534981249746936073409432549365422499221983020974080\nCPI27_36:\nCPI28_17:\nCPI29_17:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI27_38:\nCPI28_19:\nCPI29_19:\n\t.cell -9074115789914307876742544211840778753216644432457901563290819836336748363776\nCPI29_21:\n\t.cell 904625697166532776746648320380374280103671772947425309753473996015666200576\nCPI29_22:\n\t.cell 6291607361659078429773787727163474100886878210998603892369542222643025351527\nCPI30_2:\nCPI33_24:\n\t.cell -35653069451394961585549047260381424017785992679253704421556810388575113707520\n","bytecode":{"object":""},"methodIdentifiers":{"_DOMAIN_SEPARATOR()":"dc0c81b5","_hashToSign(bytes32)":"c1dc0285","amountTaken(address,bytes32,uint256)":"3c2ab6bf","blockRange()":"a4b2c674","cancelTrades((bytes32,uint256,uint256)[])":"3f8fc233","governor()":"0c340a24","hashListing((uint256,uint256,uint256,uint256))":"87cc694d","hashOfferCollection((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8,uint256)":"6bf68190","hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)":"51114ffa","hashTakeAsk(address)":"228ed5d2","hashTakeAskSingle(address)":"beafe7ca","hashTakeBid(address)":"7154ec89","hashTakeBidSingle(address)":"b082c3ba","incrementNonce()":"627cdcb9","information()":"f47b7740","nonces(address)":"7ecebe00","oracles(address)":"addd5099","protocolFee()":"b0e21e8a","setGovernor(address)":"c42cf535","setProtocolFee(address,uint16)":"3a16b768","takeAsk(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256)[],(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256))[],(address,uint16),bytes,address))":"1ec1fd88","takeAskPool(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256)[],(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256))[],(address,uint16),bytes,address),uint256)":"46d7dd05","takeAskSingle(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256)),(address,uint16),bytes,address))":"455fce13","takeAskSinglePool(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256)),(address,uint16),bytes,address),uint256)":"bcd4f51a","takeBid(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256)[],(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256))[],(address,uint16),bytes))":"7c7c5507","takeBidSingle(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256)),(address,uint16),bytes))":"069827e2","takeCollectionOffer(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,uint256,uint256,uint256),(address,uint16),bytes))":"6ee45533","verifyAuthorizationPublic(address,bytes32,bytes,uint256)":"7566cd3c","verifyDomain()":"708ef9aa"}},"irOptimized":"/// @use-src 11:\"@openzeppelin/contracts/security/ReentrancyGuard.sol\", 16:\"contracts/Executor.sol\", 17:\"contracts/Signatures.sol\", 18:\"contracts/Validation.sol\", 19:\"contracts/ZeZuExchange.sol\", 21:\"contracts/interfaces/IExecutor.sol\", 22:\"contracts/interfaces/ISignatures.sol\", 23:\"contracts/interfaces/IValidation.sol\", 24:\"contracts/interfaces/IZeZuExchange.sol\"\nobject \"ZeZuExchange_6290\" {\n    code {\n        {\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            let _1 := memoryguard(0x0140)\n            let _2 := 64\n            mstore(_2, _1)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ZeZuExchange_6290\")\n            let argSize := sub(codesize(), programSize)\n            finalize_allocation(_1, argSize)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            let value0 := abi_decode_address_fromMemory(_1)\n            let _3 := 32\n            let value1 := abi_decode_address_fromMemory(add(_1, _3))\n            let outPtr := mload(_2)\n            let _4 := add(outPtr, _3)\n            mstore(_4, \"EIP712Domain(\")\n            mstore(add(outPtr, 45), \"string name,\")\n            mstore(add(outPtr, 57), \"string version,\")\n            mstore(add(outPtr, 72), \"uint256 chainId,\")\n            mstore(add(outPtr, 88), \"address verifyingContract\")\n            let _5 := \")\"\n            mstore(add(outPtr, 113), _5)\n            mstore(outPtr, 82)\n            let newFreePtr := add(outPtr, 128)\n            let _6 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _6), lt(newFreePtr, outPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(_2, newFreePtr)\n            /// @src 17:6905:7166  \"keccak256(...\"\n            let expr := keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _4, mload(/** @src 17:6905:7166  \"keccak256(...\" */ outPtr))\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            let newFreePtr_1 := add(outPtr, 224)\n            if or(gt(newFreePtr_1, _6), lt(newFreePtr_1, newFreePtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(_2, newFreePtr_1)\n            mstore(newFreePtr, 38)\n            let _7 := add(outPtr, 160)\n            mstore(_7, \"FeeRate(address recipient,uint16\")\n            mstore(add(outPtr, 192), \" rate)\")\n            let outPtr_1 := mload(_2)\n            let _8 := add(outPtr_1, _3)\n            mstore(_8, \"Order(\")\n            let _9 := \"address trader,\"\n            mstore(add(outPtr_1, 38), _9)\n            let _10 := \"address collection,\"\n            mstore(add(outPtr_1, 53), _10)\n            let _11 := \"bytes32 listingsRoot,\"\n            mstore(add(outPtr_1, 72), _11)\n            let _12 := \"uint256 numberOfListings,\"\n            mstore(add(outPtr_1, 93), _12)\n            let _13 := \"uint256 expirationTime,\"\n            mstore(add(outPtr_1, 118), _13)\n            let _14 := \"uint8 assetType,\"\n            mstore(add(outPtr_1, 141), _14)\n            let _15 := \"FeeRate makerFee,\"\n            mstore(add(outPtr_1, 157), _15)\n            let _16 := \"uint256 salt,\"\n            mstore(add(outPtr_1, 174), _16)\n            let _17 := \"uint8 orderType,\"\n            mstore(add(outPtr_1, 187), _17)\n            mstore(add(outPtr_1, 203), \"uint256 nonce\")\n            mstore(add(outPtr_1, 216), _5)\n            let _18 := sub(abi_encode_bytes(newFreePtr, add(outPtr_1, 217)), outPtr_1)\n            let _19 := not(31)\n            mstore(outPtr_1, add(_18, _19))\n            finalize_allocation(outPtr_1, _18)\n            /// @src 17:7273:7808  \"orderTypehash = keccak256(...\"\n            let var_orderTypehash := /** @src 17:7289:7808  \"keccak256(...\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _8, mload(/** @src 17:7289:7808  \"keccak256(...\" */ outPtr_1))\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            let outPtr_2 := mload(_2)\n            let _20 := add(outPtr_2, _3)\n            mstore(_20, \"OfferColection(\")\n            mstore(add(outPtr_2, 47), _9)\n            mstore(add(outPtr_2, 62), _10)\n            mstore(add(outPtr_2, 81), _11)\n            mstore(add(outPtr_2, 102), _12)\n            mstore(add(outPtr_2, 127), _13)\n            mstore(add(outPtr_2, 150), _14)\n            mstore(add(outPtr_2, 166), _15)\n            mstore(add(outPtr_2, 183), _16)\n            mstore(add(outPtr_2, 196), _17)\n            mstore(add(outPtr_2, 212), \"uint256 nonce,\")\n            mstore(add(outPtr_2, 226), \"uint256 pricePerItem\")\n            mstore(add(outPtr_2, 246), _5)\n            let _21 := sub(abi_encode_bytes(newFreePtr, add(outPtr_2, 247)), outPtr_2)\n            mstore(outPtr_2, add(_21, _19))\n            finalize_allocation(outPtr_2, _21)\n            /// @src 17:7819:8408  \"offerCollectionTypehash = keccak256(...\"\n            let var_offerCollectionTypehash := /** @src 17:7845:8408  \"keccak256(...\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _20, mload(/** @src 17:7845:8408  \"keccak256(...\" */ outPtr_2))\n            /// @src 17:8419:8465  \"feeRateTypehash = keccak256(feeRateTypestring)\"\n            let var_feeRateTypehash := /** @src 17:8437:8465  \"keccak256(feeRateTypestring)\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _7, mload(/** @src 17:8437:8465  \"keccak256(feeRateTypestring)\" */ newFreePtr))\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            let memPtr := mload(_2)\n            finalize_allocation_4726(memPtr)\n            mstore(memPtr, 13)\n            let _22 := add(memPtr, _3)\n            mstore(_22, \"ZeZu Exchange\")\n            /// @src 17:8553:8576  \"keccak256(bytes(_NAME))\"\n            let expr_1 := keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _22, 13)\n            let memPtr_1 := mload(_2)\n            finalize_allocation_4726(memPtr_1)\n            mstore(memPtr_1, /** @src 17:357:372  \"\\\"ZeZu Exchange\\\"\" */ 3)\n            let _23 := add(memPtr_1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3)\n            /// @src 17:357:372  \"\\\"ZeZu Exchange\\\"\"\n            mstore(_23, \"1.0\")\n            /// @src 17:8590:8616  \"keccak256(bytes(_VERSION))\"\n            let expr_2 := keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _23, /** @src 17:357:372  \"\\\"ZeZu Exchange\\\"\" */ 3)\n            /// @src 17:9243:9438  \"abi.encode(...\"\n            let expr_mpos := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(_2)\n            /// @src 17:9243:9438  \"abi.encode(...\"\n            let _24 := add(expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3)\n            mstore(_24, expr)\n            mstore(add(/** @src 17:9243:9438  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2), expr_1)\n            mstore(add(/** @src 17:9243:9438  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 96), expr_2)\n            mstore(add(/** @src 17:9243:9438  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 128), /** @src 17:9380:9393  \"block.chainid\" */ chainid())\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            mstore(add(/** @src 17:9243:9438  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 160), /** @src 17:8638:8642  \"this\" */ address())\n            /// @src 17:9243:9438  \"abi.encode(...\"\n            mstore(expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 160)\n            let newFreePtr_2 := add(expr_mpos, 192)\n            if or(gt(newFreePtr_2, _6), lt(newFreePtr_2, expr_mpos))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(_2, newFreePtr_2)\n            /// @src 17:780:944  \"(...\"\n            mstore(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 224, /** @src 17:9216:9452  \"keccak256(...\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _24, mload(/** @src 17:9216:9452  \"keccak256(...\" */ expr_mpos)))\n            /// @src 17:780:944  \"(...\"\n            mstore(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 192, /** @src 17:780:944  \"(...\" */ var_offerCollectionTypehash)\n            mstore(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 160, /** @src 17:780:944  \"(...\" */ var_orderTypehash)\n            mstore(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 128, /** @src 17:780:944  \"(...\" */ var_feeRateTypehash)\n            /// @src 16:667:687  \"_DELEGATE = delegate\"\n            let _25 := 256\n            mstore(_25, value0)\n            /// @src 16:697:709  \"_POOL = pool\"\n            let _26 := 288\n            mstore(_26, value1)\n            /// @src 11:1716:1717  \"1\"\n            sstore(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 151, /** @src 11:1716:1717  \"1\" */ 0x01)\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            sstore(/** @src 19:1147:1168  \"governor = msg.sender\" */ 0x98, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ or(and(sload(/** @src 19:1147:1168  \"governor = msg.sender\" */ 0x98), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ not(sub(shl(160, 1), 1))), /** @src 19:1158:1168  \"msg.sender\" */ caller()))\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            let _27 := datasize(\"ZeZuExchange_6290_deployed\")\n            codecopy(newFreePtr_2, dataoffset(\"ZeZuExchange_6290_deployed\"), _27)\n            setimmutable(newFreePtr_2, \"3750\", mload(128))\n            setimmutable(newFreePtr_2, \"3752\", mload(160))\n            setimmutable(newFreePtr_2, \"3754\", mload(192))\n            setimmutable(newFreePtr_2, \"3756\", mload(224))\n            setimmutable(newFreePtr_2, \"2229\", mload(/** @src 16:667:687  \"_DELEGATE = delegate\" */ _25))\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            setimmutable(newFreePtr_2, \"2231\", mload(/** @src 16:697:709  \"_POOL = pool\" */ _26))\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            return(newFreePtr_2, _27)\n        }\n        function finalize_allocation_4726(memPtr)\n        {\n            let newFreePtr := add(memPtr, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n        function abi_encode_bytes(value, pos) -> end\n        {\n            let length := mload(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) }\n            {\n                mstore(add(pos, i), mload(add(add(value, i), 0x20)))\n            }\n            let _1 := add(pos, length)\n            mstore(_1, 0)\n            end := _1\n        }\n    }\n    /// @use-src 11:\"@openzeppelin/contracts/security/ReentrancyGuard.sol\", 15:\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\", 16:\"contracts/Executor.sol\", 17:\"contracts/Signatures.sol\", 18:\"contracts/Validation.sol\", 19:\"contracts/ZeZuExchange.sol\", 25:\"contracts/lib/Constants.sol\"\n    object \"ZeZuExchange_6290_deployed\" {\n        code {\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x069827e2 { external_fun_takeBidSingle() }\n                    case 0x0c340a24 { external_fun_governor() }\n                    case 0x1ec1fd88 { external_fun_takeAsk() }\n                    case 0x228ed5d2 { external_fun_hashTakeAsk() }\n                    case 0x3a16b768 { external_fun_setProtocolFee() }\n                    case 0x3c2ab6bf { external_fun_amountTaken() }\n                    case 0x3f8fc233 { external_fun_cancelTrades() }\n                    case 0x455fce13 { external_fun_takeAskSingle() }\n                    case 0x46d7dd05 { external_fun_takeAskPool() }\n                    case 0x51114ffa { external_fun_hashOrder() }\n                    case 0x627cdcb9 { external_fun_incrementNonce() }\n                    case 0x6bf68190 {\n                        external_fun_hashOfferCollection()\n                    }\n                    case 0x6ee45533 {\n                        external_fun_takeCollectionOffer()\n                    }\n                    case 0x708ef9aa { external_fun_verifyDomain() }\n                    case 0x7154ec89 { external_fun_hashTakeAsk() }\n                    case 0x7566cd3c {\n                        external_fun_verifyAuthorizationPublic()\n                    }\n                    case 0x7c7c5507 { external_fun_takeBid() }\n                    case 0x7ecebe00 { external_fun_nonces() }\n                    case 0x87cc694d { external_fun_hashListing() }\n                    case 0xa4b2c674 { external_fun_blockRange() }\n                    case 0xaddd5099 { external_fun_oracles() }\n                    case 0xb082c3ba { external_fun_hashTakeAsk() }\n                    case 0xb0e21e8a { external_fun_protocolFee() }\n                    case 0xbcd4f51a {\n                        external_fun_takeAskSinglePool()\n                    }\n                    case 0xbeafe7ca { external_fun_hashTakeAsk() }\n                    case 0xc1dc0285 { external_fun_hashToSign() }\n                    case 0xc42cf535 { external_fun_setGovernor() }\n                    case 0xdc0c81b5 {\n                        external_fun_DOMAIN_SEPARATOR()\n                    }\n                    case 0xf47b7740 { external_fun_information() }\n                }\n                if iszero(calldatasize())\n                {\n                    fun()\n                    stop()\n                }\n                revert(0, 0)\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_17449(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x40)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(0x40, newFreePtr)\n            }\n            function finalize_allocation_17450(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x0100)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_17451(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x80)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_17467(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_17477(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x60)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_17655(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_41604(memPtr)\n            {\n                let newFreePtr := add(memPtr, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_50147(memPtr)\n            {\n                let newFreePtr := add(memPtr, 416)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_50148(memPtr)\n            {\n                let newFreePtr := add(memPtr, 384)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory_17457() -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, 0xa0)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory_17458() -> memPtr\n            {\n                memPtr := mload(/** @src 19:4573:4588  \"inputs.takerFee\" */ 64)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                finalize_allocation_17467(memPtr)\n            }\n            function allocate_memory_17664() -> memPtr\n            {\n                memPtr := mload(64)\n                finalize_allocation_41604(memPtr)\n            }\n            function allocate_memory() -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, 320)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function abi_decode_address_17464() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_enum_AssetType_41609() -> value\n            {\n                value := calldataload(164)\n                if iszero(lt(value, 2)) { revert(0, 0) }\n            }\n            function abi_decode_enum_AssetType(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(lt(value, 2)) { revert(0, 0) }\n            }\n            function cleanup_uint16(value) -> cleaned\n            { cleaned := and(value, 0xffff) }\n            function abi_decode_uint16() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n            }\n            function abi_decode_struct_FeeRate_41610(end) -> value\n            {\n                if slt(add(end, not(195)), 0x40) { revert(0, 0) }\n                let memPtr := mload(0x40)\n                finalize_allocation_17449(memPtr)\n                value := memPtr\n                let value_1 := calldataload(196)\n                if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(memPtr, value_1)\n                let value_2 := calldataload(228)\n                if iszero(eq(value_2, and(value_2, 0xffff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr, 32), value_2)\n            }\n            function abi_decode_struct_FeeRate(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n                let memPtr := mload(0x40)\n                finalize_allocation_17449(memPtr)\n                value := memPtr\n                mstore(memPtr, abi_decode_address(headStart))\n                let value_1 := calldataload(add(headStart, 32))\n                if iszero(eq(value_1, and(value_1, 0xffff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr, 32), value_1)\n            }\n            function abi_decode_struct_Order_17494(end) -> value\n            {\n                if slt(add(end, not(3)), 0x0120) { revert(0, 0) }\n                let memPtr := mload(64)\n                finalize_allocation_17450(memPtr)\n                value := memPtr\n                mstore(memPtr, abi_decode_address_17464())\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr, 32), value_1)\n                mstore(add(memPtr, 64), calldataload(68))\n                mstore(add(memPtr, 96), calldataload(100))\n                mstore(add(memPtr, 128), calldataload(132))\n                mstore(add(memPtr, 160), abi_decode_enum_AssetType_41609())\n                mstore(add(memPtr, 192), abi_decode_struct_FeeRate_41610(end))\n                mstore(add(memPtr, 0xe0), calldataload(260))\n            }\n            function abi_decode_struct_Order(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0x0120) { revert(0, 0) }\n                let memPtr := mload(64)\n                finalize_allocation_17450(memPtr)\n                value := memPtr\n                mstore(memPtr, abi_decode_address(headStart))\n                mstore(add(memPtr, 32), abi_decode_address(add(headStart, 32)))\n                mstore(add(memPtr, 64), calldataload(add(headStart, 64)))\n                mstore(add(memPtr, 96), calldataload(add(headStart, 96)))\n                mstore(add(memPtr, 128), calldataload(add(headStart, 128)))\n                mstore(add(memPtr, 160), abi_decode_enum_AssetType(add(headStart, 160)))\n                mstore(add(memPtr, 192), abi_decode_struct_FeeRate(add(headStart, 192), end))\n                mstore(add(memPtr, 0xe0), calldataload(add(headStart, 0x0100)))\n            }\n            function array_allocation_size_array_bytes32_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_struct_Listing(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0x80) { revert(0, 0) }\n                let memPtr := mload(64)\n                finalize_allocation_17451(memPtr)\n                value := memPtr\n                mstore(memPtr, calldataload(headStart))\n                mstore(add(memPtr, 32), calldataload(add(headStart, 32)))\n                mstore(add(memPtr, 64), calldataload(add(headStart, 64)))\n                mstore(add(memPtr, 96), calldataload(add(headStart, 96)))\n            }\n            function abi_decode_struct_Taker(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n                let memPtr := mload(0x40)\n                finalize_allocation_17449(memPtr)\n                value := memPtr\n                mstore(memPtr, calldataload(headStart))\n                mstore(add(memPtr, 32), calldataload(add(headStart, 32)))\n            }\n            function abi_decode_struct_Exchange(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0x0100) { revert(0, 0) }\n                let memPtr := mload(64)\n                finalize_allocation_17451(memPtr)\n                value := memPtr\n                mstore(memPtr, calldataload(headStart))\n                let _1 := 32\n                let offset := calldataload(add(headStart, _1))\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _2 := add(headStart, offset)\n                if iszero(slt(add(_2, 0x1f), end))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _3 := calldataload(_2)\n                let _4 := array_allocation_size_array_bytes32_dyn(_3)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _4)\n                let dst := memPtr_1\n                mstore(memPtr_1, _3)\n                dst := add(memPtr_1, _1)\n                let srcEnd := add(add(_2, shl(5, _3)), _1)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let src := add(_2, _1)\n                for { } lt(src, srcEnd) { src := add(src, _1) }\n                {\n                    mstore(dst, calldataload(src))\n                    dst := add(dst, _1)\n                }\n                mstore(add(memPtr, _1), memPtr_1)\n                mstore(add(memPtr, 64), abi_decode_struct_Listing(add(headStart, 64), end))\n                mstore(add(memPtr, 0x60), abi_decode_struct_Taker(add(headStart, 192), end))\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_bytes(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := array_allocation_size_bytes(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                array := memPtr\n            }\n            function external_fun_takeBidSingle()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := not(3)\n                if slt(add(calldatasize(), _1), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let offset := calldataload(4)\n                let _2 := 0xffffffffffffffff\n                if gt(offset, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                if slt(add(sub(calldatasize(), offset), _1), 0x01a0)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPtr := mload(64)\n                finalize_allocation_17451(memPtr)\n                mstore(memPtr, abi_decode_struct_Order(add(4, offset), calldatasize()))\n                let offset_1 := calldataload(add(offset, 292))\n                if gt(offset_1, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr, 32), abi_decode_struct_Exchange(add(add(offset, offset_1), 4), calldatasize()))\n                mstore(add(memPtr, 64), abi_decode_struct_FeeRate(add(offset, 324), calldatasize()))\n                let offset_2 := calldataload(add(offset, 388))\n                if gt(offset_2, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr, 0x60), abi_decode_bytes(add(add(offset, offset_2), 4), calldatasize()))\n                fun_takeBidSingle(memPtr)\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function external_fun_governor()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 19:863:886  \"address public governor\" */ 152), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function abi_decode_array_struct_Order_dyn(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := 0x20\n                let _3 := array_allocation_size_array_bytes32_dyn(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _1)\n                dst := add(memPtr, _2)\n                let _4 := 0x0120\n                let srcEnd := add(add(offset, mul(_1, _4)), _2)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let src := add(offset, _2)\n                for { } lt(src, srcEnd) { src := add(src, _4) }\n                {\n                    mstore(dst, abi_decode_struct_Order(src, end))\n                    dst := add(dst, _2)\n                }\n                array := memPtr\n            }\n            function abi_decode_array_struct_Exchange_dyn(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := 0x20\n                let _3 := array_allocation_size_array_bytes32_dyn(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _1)\n                dst := add(memPtr, _2)\n                let srcEnd := add(add(offset, shl(5, _1)), _2)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let src := add(offset, _2)\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    let innerOffset := calldataload(src)\n                    if gt(innerOffset, 0xffffffffffffffff)\n                    {\n                        /// @src -1:-1:-1\n                        let _4 := 0\n                        /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                        revert(/** @src -1:-1:-1 */ _4, _4)\n                    }\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(dst, abi_decode_struct_Exchange(add(add(offset, innerOffset), _2), end))\n                    dst := add(dst, _2)\n                }\n                array := memPtr\n            }\n            function abi_decode_struct_TakeAsk(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0xc0) { revert(0, 0) }\n                value := allocate_memory_17457()\n                let offset := calldataload(headStart)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1) { revert(0, 0) }\n                mstore(value, abi_decode_array_struct_Order_dyn(add(headStart, offset), end))\n                let offset_1 := calldataload(add(headStart, 32))\n                if gt(offset_1, _1) { revert(0, 0) }\n                mstore(add(value, 32), abi_decode_array_struct_Exchange_dyn(add(headStart, offset_1), end))\n                mstore(add(value, 64), abi_decode_struct_FeeRate(add(headStart, 64), end))\n                let offset_2 := calldataload(add(headStart, 128))\n                if gt(offset_2, _1) { revert(0, 0) }\n                mstore(add(value, 0x60), abi_decode_bytes(add(headStart, offset_2), end))\n                mstore(add(value, 128), abi_decode_address(add(headStart, 0xa0)))\n            }\n            function external_fun_takeAsk()\n            {\n                let _1 := 32\n                if slt(add(calldatasize(), not(3)), _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let value0 := abi_decode_struct_TakeAsk(add(4, offset), calldatasize())\n                /// @src 11:2227:2330  \"modifier nonReentrant() {...\"\n                fun_nonReentrantBefore()\n                /// @src 19:4516:4529  \"inputs.orders\"\n                let _mpos := mload(value0)\n                /// @src 19:4543:4559  \"inputs.exchanges\"\n                let _mpos_1 := mload(add(value0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1))\n                /// @src 19:4573:4588  \"inputs.takerFee\"\n                let _2 := 64\n                let _mpos_2 := mload(add(value0, _2))\n                /// @src 19:4602:4619  \"inputs.signatures\"\n                let _3 := 96\n                let _mpos_3 := mload(add(value0, _3))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let cleaned := and(mload(/** @src 19:4633:4654  \"inputs.tokenRecipient\" */ add(value0, 128)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                /// @src 19:16099:16126  \"Fees(protocolFee, takerFee)\"\n                let expr_mpos := /** @src 18:529:532  \"500\" */ allocate_memory_17458()\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(expr_mpos, read_from_storage_reference_type_struct_FeeRate())\n                mstore(/** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ add(expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1), _mpos_2)\n                /// @src 19:16396:16452  \"_validateOrders(orders, OrderType.ASK, signatures, fees)\"\n                let expr_component_mpos, expr_component_mpos_1 := fun_validateOrders_17460(_mpos, _mpos_3, expr_mpos)\n                /// @src 19:16489:16505  \"exchanges.length\"\n                let expr := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:16489:16505  \"exchanges.length\" */ _mpos_1)\n                /// @src 19:16680:16744  \"_initializeBatch(exchangesLength, OrderType.ASK, tokenRecipient)\"\n                let expr_component_mpos_2, expr_component_mpos_3 := fun_initializeBatch(expr, cleaned)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                pop(allocate_and_zero_memory_struct_struct_Order())\n                pop(allocate_and_zero_memory_struct_struct_Exchange())\n                /// @src 19:16818:16862  \"uint256 remainingETH = address(this).balance\"\n                let var_remainingETH := /** @src 19:16841:16862  \"address(this).balance\" */ selfbalance()\n                /// @src 19:16877:16886  \"uint256 i\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 19:16872:18074  \"for (uint256 i; i < exchangesLength; ) {...\"\n                for { }\n                /** @src 19:16888:16907  \"i < exchangesLength\" */ lt(var_i, expr)\n                /// @src 19:16877:16886  \"uint256 i\"\n                { }\n                {\n                    /// @src 19:16925:16948  \"exchange = exchanges[i]\"\n                    let var_exchange_mpos := /** @src 19:16936:16948  \"exchanges[i]\" */ mload(memory_array_index_access_struct_Cancel_dyn(_mpos_1, var_i))\n                    /// @src 19:16962:16992  \"order = orders[exchange.index]\"\n                    let var_order_mpos := /** @src 19:16970:16992  \"orders[exchange.index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:16977:16991  \"exchange.index\" */ var_exchange_mpos)))\n                    /// @src 19:17114:18004  \"if (...\"\n                    if /** @src 19:17135:17343  \"_validateListingFromBatch(...\" */ fun_validateListingFromBatch(var_order_mpos, var_exchange_mpos, expr_component_mpos, expr_component_mpos_1)\n                    /// @src 19:17114:18004  \"if (...\"\n                    {\n                        /// @src 19:17493:17722  \"_insertExecutionAsk(...\"\n                        let expr_component, expr_component_1 := fun_insertExecutionAsk(expr_component_mpos_2, expr_component_mpos_3, var_order_mpos, var_exchange_mpos, expr_mpos, var_remainingETH)\n                        /// @src 19:17466:17722  \"(remainingETH, inserted) = _insertExecutionAsk(...\"\n                        var_remainingETH := expr_component\n                        /// @src 19:17740:17990  \"if (inserted) {...\"\n                        if expr_component_1\n                        {\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _4 := mload(/** @src 19:17928:17949  \"exchange.taker.amount\" */ add(/** @src 19:17928:17942  \"exchange.taker\" */ mload(add(var_exchange_mpos, /** @src 19:4602:4619  \"inputs.signatures\" */ _3)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1))\n                            /// @src 19:17812:17846  \"pendingAmountTaken[exchange.index]\"\n                            let _mpos_4 := mload(memory_array_index_access_struct_Cancel_dyn(expr_component_mpos_1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:17831:17845  \"exchange.index\" */ var_exchange_mpos)))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _5 := mload(/** @src 19:17876:17892  \"exchange.listing\" */ mload(add(var_exchange_mpos, /** @src 19:4573:4588  \"inputs.takerFee\" */ _2)))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            mstore(/** @src 19:17812:17949  \"pendingAmountTaken[exchange.index][...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos_4, _5), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(mload(/** @src 19:17812:17949  \"pendingAmountTaken[exchange.index][...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos_4, _5)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _4))\n                        }\n                    }\n                    /// @src 19:18046:18049  \"++i\"\n                    var_i := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 19:18046:18049  \"++i\" */ var_i, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1)\n                }\n                /// @src 19:18233:18246  \"OrderType.ASK\"\n                fun_executeBatchTransfer(expr_component_mpos_2, expr_component_mpos_3, expr_mpos)\n                /// @src 19:18319:18340  \"address(this).balance\"\n                fun_transferETH(/** @src 19:18307:18317  \"msg.sender\" */ caller(), /** @src 19:18319:18340  \"address(this).balance\" */ selfbalance())\n                /// @src 11:2292:2293  \"_\"\n                fun_nonReentrantAfter()\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function external_fun_hashTakeAsk()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let value0 := abi_decode_address_17464()\n                /// @src 17:5667:5871  \"assembly {...\"\n                let usr$nextPointer := mload(0x40)\n                mstore(usr$nextPointer, value0)\n                let var_hash := keccak256(0x80, add(usr$nextPointer, not(95)))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPos := mload(/** @src 17:5667:5871  \"assembly {...\" */ 0x40)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(memPos, var_hash)\n                return(memPos, 32)\n            }\n            function external_fun_setProtocolFee()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let value0 := abi_decode_address_17464()\n                let value1 := abi_decode_uint16()\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 19:1437:1511  \"if (msg.sender != governor) {...\"\n                if /** @src 19:1441:1463  \"msg.sender != governor\" */ iszero(eq(/** @src 19:1441:1451  \"msg.sender\" */ caller(), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(sload(/** @src 19:1455:1463  \"governor\" */ 0x98), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)))\n                /// @src 19:1437:1511  \"if (msg.sender != governor) {...\"\n                {\n                    /// @src 19:1486:1500  \"Unauthorized()\"\n                    let _2 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 19:1486:1500  \"Unauthorized()\"\n                    mstore(_2, shl(232, 8565801))\n                    revert(_2, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 4)\n                }\n                let _3 := and(/** @src 19:1829:1858  \"rate > _MAX_PROTOCOL_FEE_RATE\" */ value1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0xffff)\n                /// @src 19:1825:1912  \"if (rate > _MAX_PROTOCOL_FEE_RATE) {...\"\n                if /** @src 19:1829:1858  \"rate > _MAX_PROTOCOL_FEE_RATE\" */ gt(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3, /** @src 18:529:532  \"500\" */ 0x01f4)\n                /// @src 19:1825:1912  \"if (rate > _MAX_PROTOCOL_FEE_RATE) {...\"\n                {\n                    /// @src 19:1881:1901  \"ProtocolFeeTooHigh()\"\n                    let _4 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 19:1881:1901  \"ProtocolFeeTooHigh()\"\n                    mstore(_4, shl(224, 0x499fddb1))\n                    revert(_4, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 4)\n                }\n                finalize_allocation_17467(mload(64))\n                let _5 := and(/** @src 18:529:532  \"500\" */ value0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)\n                /// @src 18:529:532  \"500\"\n                update_storage_value_offsett_address_to_address(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _5)\n                /// @src 18:529:532  \"500\"\n                let _6 := sload(/** @src 19:1921:1959  \"protocolFee = FeeRate(recipient, rate)\" */ 0x32)\n                /// @src 18:529:532  \"500\"\n                sstore(/** @src 19:1921:1959  \"protocolFee = FeeRate(recipient, rate)\" */ 0x32, /** @src 18:529:532  \"500\" */ or(and(_6, not(shl(160, 65535))), and(shl(160, /** @src 19:1829:1858  \"rate > _MAX_PROTOCOL_FEE_RATE\" */ value1), /** @src 18:529:532  \"500\" */ shl(160, 65535))))\n                /// @src 19:1974:2005  \"NewProtocolFee(recipient, rate)\"\n                log3(/** @src -1:-1:-1 */ 0, 0, /** @src 19:1974:2005  \"NewProtocolFee(recipient, rate)\" */ 0x1d9e390a0f55a4e3251a1de541b3da1cb012fd85d9b4f0098bcffb70c4f4032d, _5, _3)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256__of_address(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 19:11200:11211  \"amountTaken\" */ 0x33)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256_of_address(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 17:4127:4133  \"nonces\" */ 0x01)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32_17598(slot) -> dataSlot\n            {\n                mstore(/** @src 19:7598:7625  \"Fees(protocolFee, takerFee)\" */ 0, 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(0x20, slot)\n                dataSlot := keccak256(/** @src 19:7598:7625  \"Fees(protocolFee, takerFee)\" */ 0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0x40)\n            }\n            function mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(slot, key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function external_fun_amountTaken()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 96)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let value0 := abi_decode_address_17464()\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(value0, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 18:625:711  \"mapping(address => mapping(bytes32 => mapping(uint256 => uint256))) public amountTaken\" */ 51)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 64)\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ calldataload(36))\n                mstore(32, dataSlot)\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 64)\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ calldataload(68))\n                mstore(32, dataSlot_1)\n                let value := sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 64))\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function external_fun_cancelTrades()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 32\n                if slt(add(calldatasize(), not(3)), _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                if iszero(slt(add(offset, 35), calldatasize()))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _2 := calldataload(add(4, offset))\n                let _3 := array_allocation_size_array_bytes32_dyn(_2)\n                let _4 := 64\n                let memPtr := mload(_4)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _2)\n                dst := add(memPtr, _1)\n                let _5 := 0x60\n                let srcEnd := add(add(offset, mul(_2, _5)), 36)\n                if gt(srcEnd, calldatasize())\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let src := add(offset, 36)\n                for { } lt(src, srcEnd) { src := add(src, _5) }\n                {\n                    if slt(sub(calldatasize(), src), _5)\n                    {\n                        /// @src -1:-1:-1\n                        let _6 := 0\n                        /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                        revert(/** @src -1:-1:-1 */ _6, _6)\n                    }\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let memPtr_1 := mload(_4)\n                    finalize_allocation_17477(memPtr_1)\n                    mstore(memPtr_1, calldataload(src))\n                    mstore(add(memPtr_1, _1), calldataload(add(src, _1)))\n                    mstore(add(memPtr_1, _4), calldataload(add(src, _4)))\n                    mstore(dst, memPtr_1)\n                    dst := add(dst, _1)\n                }\n                fun_cancelTrades(memPtr)\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function abi_decode_struct_TakeAskSingle(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0x01c0) { revert(0, 0) }\n                value := allocate_memory_17457()\n                mstore(value, abi_decode_struct_Order(headStart, end))\n                let offset := calldataload(add(headStart, 288))\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1) { revert(0, 0) }\n                mstore(add(value, 0x20), abi_decode_struct_Exchange(add(headStart, offset), end))\n                mstore(add(value, 0x40), abi_decode_struct_FeeRate(add(headStart, 320), end))\n                let offset_1 := calldataload(add(headStart, 384))\n                if gt(offset_1, _1) { revert(0, 0) }\n                mstore(add(value, 0x60), abi_decode_bytes(add(headStart, offset_1), end))\n                mstore(add(value, 0x80), abi_decode_address(add(headStart, 416)))\n            }\n            function external_fun_takeAskSingle()\n            {\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let value0 := abi_decode_struct_TakeAskSingle(add(4, offset), calldatasize())\n                /// @src 11:2227:2330  \"modifier nonReentrant() {...\"\n                fun_nonReentrantBefore()\n                /// @src 19:5344:5356  \"inputs.order\"\n                let _mpos := mload(value0)\n                /// @src 19:5370:5385  \"inputs.exchange\"\n                let _mpos_1 := mload(add(value0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 32))\n                /// @src 19:5399:5414  \"inputs.takerFee\"\n                let _mpos_2 := mload(add(value0, 64))\n                /// @src 19:5428:5444  \"inputs.signature\"\n                let _mpos_3 := mload(add(value0, 96))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let cleaned := and(mload(/** @src 19:5458:5479  \"inputs.tokenRecipient\" */ add(value0, 128)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                /// @src 19:10399:10426  \"Fees(protocolFee, takerFee)\"\n                let expr_mpos := /** @src 18:529:532  \"500\" */ allocate_memory_17458()\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(expr_mpos, read_from_storage_reference_type_struct_FeeRate())\n                /// @src 19:10399:10426  \"Fees(protocolFee, takerFee)\"\n                let _1 := add(expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 32)\n                mstore(_1, _mpos_2)\n                /// @src 19:10461:10477  \"exchange.listing\"\n                let _mpos_4 := mload(add(_mpos_1, /** @src 19:5399:5414  \"inputs.takerFee\" */ 64))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _2 := mload(/** @src 19:10509:10530  \"exchange.taker.amount\" */ add(/** @src 19:10509:10523  \"exchange.taker\" */ mload(add(_mpos_1, /** @src 19:5428:5444  \"inputs.signature\" */ 96)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 32))\n                /// @src 19:10602:10844  \"if (...\"\n                if /** @src 19:10619:10787  \"!_validateOrderAndListing(...\" */ cleanup_bool(iszero(/** @src 19:10620:10787  \"_validateOrderAndListing(...\" */ fun_validateOrderAndListing_17481(_mpos, _mpos_1, _mpos_3, expr_mpos)))\n                /// @src 19:10602:10844  \"if (...\"\n                {\n                    /// @src 19:10819:10833  \"InvalidOrder()\"\n                    let _3 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:5399:5414  \"inputs.takerFee\" */ 64)\n                    /// @src 19:10819:10833  \"InvalidOrder()\"\n                    mstore(_3, shl(224, 0xaf610693))\n                    revert(_3, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 4)\n                }\n                /// @src 19:10953:11117  \"_initializeSingleExecution(...\"\n                let expr_mpos_1 := fun_initializeSingleExecution(_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:11039:11054  \"listing.tokenId\" */ add(_mpos_4, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 32)), /** @src 19:10953:11117  \"_initializeSingleExecution(...\" */ _2, cleaned)\n                /// @src 19:11200:11225  \"amountTaken[order.trader]\"\n                let _4 := mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256__of_address(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 19:11212:11224  \"order.trader\" */ _mpos)))\n                /// @src 19:11200:11246  \"amountTaken[order.trader][bytes32(order.salt)]\"\n                let _5 := mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(_4, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:11234:11244  \"order.salt\" */ add(_mpos, 224)))\n                /// @src 19:11200:11291  \"amountTaken[order.trader][bytes32(order.salt)][...\"\n                let _6 := mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(_5, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:11264:11277  \"listing.index\" */ _mpos_4))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                sstore(_6, add(sload(/** @src 19:11200:11306  \"amountTaken[order.trader][bytes32(order.salt)][...\" */ _6), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2))\n                /// @src 19:11553:11643  \"if (!successfulTransfers[0]) {...\"\n                if /** @src 19:11557:11580  \"!successfulTransfers[0]\" */ cleanup_bool(iszero(/** @src 19:11558:11580  \"successfulTransfers[0]\" */ read_from_memoryt_bool(memory_array_index_access_struct_Cancel_dyn_17485(/** @src 19:11446:11539  \"_executeNonfungibleTransfers(...\" */ fun_executeNonfungibleTransfers_17484(expr_mpos_1)))))\n                /// @src 19:11553:11643  \"if (!successfulTransfers[0]) {...\"\n                {\n                    /// @src 19:11607:11628  \"TokenTransferFailed()\"\n                    let _7 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:5399:5414  \"inputs.takerFee\" */ 64)\n                    /// @src 19:11607:11628  \"TokenTransferFailed()\"\n                    mstore(_7, shl(225, 0x022e2581))\n                    revert(_7, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 4)\n                }\n                let _8 := mload(/** @src 19:11832:11845  \"listing.price\" */ add(_mpos_4, /** @src 19:5428:5444  \"inputs.signature\" */ 96))\n                /// @src 19:11860:11874  \"order.makerFee\"\n                let _9 := add(_mpos, 192)\n                /// @src 19:11819:11881  \"_computeFees(listing.price, takerAmount, order.makerFee, fees)\"\n                let expr_component, expr_component_1, expr_component_2, expr_component_3 := fun_computeFees(_8, _2, /** @src 19:11860:11874  \"order.makerFee\" */ mload(_9), /** @src 19:11819:11881  \"_computeFees(listing.price, takerAmount, order.makerFee, fees)\" */ expr_mpos)\n                /// @src 19:12008:12029  \"address(this).balance\"\n                let expr := selfbalance()\n                /// @src 19:12004:12120  \"if (address(this).balance < totalPrice + takerFeeAmount) {...\"\n                if /** @src 19:12008:12059  \"address(this).balance < totalPrice + takerFeeAmount\" */ lt(expr, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 19:12032:12059  \"totalPrice + takerFeeAmount\" */ expr_component, expr_component_3))\n                /// @src 19:12004:12120  \"if (address(this).balance < totalPrice + takerFeeAmount) {...\"\n                {\n                    /// @src 19:12086:12105  \"InsufficientFunds()\"\n                    let _10 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:5399:5414  \"inputs.takerFee\" */ 64)\n                    /// @src 19:12086:12105  \"InsufficientFunds()\"\n                    mstore(_10, shl(224, 0x356680b7))\n                    revert(_10, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 4)\n                }\n                /// @src 19:12218:12235  \"protocolFeeAmount\"\n                fun_transferETH(/** @src 19:12190:12216  \"fees.protocolFee.recipient\" */ read_from_memoryt_address(/** @src 19:12190:12206  \"fees.protocolFee\" */ mload(expr_mpos)), /** @src 19:12218:12235  \"protocolFeeAmount\" */ expr_component_1)\n                /// @src 19:12284:12298  \"takerFeeAmount\"\n                fun_transferETH(/** @src 19:12259:12282  \"fees.takerFee.recipient\" */ read_from_memoryt_address(/** @src 19:12259:12272  \"fees.takerFee\" */ mload(_1)), /** @src 19:12284:12298  \"takerFeeAmount\" */ expr_component_3)\n                /// @src 19:12348:12362  \"makerFeeAmount\"\n                fun_transferETH(/** @src 19:12322:12346  \"order.makerFee.recipient\" */ read_from_memoryt_address(/** @src 19:12322:12336  \"order.makerFee\" */ mload(_9)), /** @src 19:12348:12362  \"makerFeeAmount\" */ expr_component_2)\n                /// @src 19:12427:12439  \"order.trader\"\n                let _11 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 19:12427:12439  \"order.trader\" */ _mpos))\n                /// @src 19:12457:12504  \"totalPrice - makerFeeAmount - protocolFeeAmount\"\n                fun_transferETH(_11, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(sub(/** @src 19:12457:12484  \"totalPrice - makerFeeAmount\" */ expr_component, expr_component_2), /** @src 19:12457:12504  \"totalPrice - makerFeeAmount - protocolFeeAmount\" */ expr_component_1))\n                /// @src 19:12688:12701  \"OrderType.ASK\"\n                fun_emitExecutionEvent_17486(expr_mpos_1, _mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:12619:12632  \"listing.index\" */ _mpos_4), /** @src 19:12688:12701  \"OrderType.ASK\" */ expr_component, expr_mpos)\n                /// @src 19:12774:12795  \"address(this).balance\"\n                fun_transferETH(/** @src 19:12762:12772  \"msg.sender\" */ caller(), /** @src 19:12774:12795  \"address(this).balance\" */ selfbalance())\n                /// @src 11:2292:2293  \"_\"\n                fun_nonReentrantAfter()\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function external_fun_takeAskPool()\n            {\n                let _1 := 64\n                if slt(add(calldatasize(), not(3)), _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let value0 := abi_decode_struct_TakeAsk(add(4, offset), calldatasize())\n                /// @src 19:7158:7174  \"amountToWithdraw\"\n                fun_withdrawFromPool(/** @src 19:7146:7156  \"msg.sender\" */ caller(), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ calldataload(36))\n                /// @src 11:2227:2330  \"modifier nonReentrant() {...\"\n                fun_nonReentrantBefore()\n                /// @src 19:4516:4529  \"inputs.orders\"\n                let _mpos := mload(value0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _2 := 32\n                /// @src 19:4543:4559  \"inputs.exchanges\"\n                let _mpos_1 := mload(add(value0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2))\n                /// @src 19:4573:4588  \"inputs.takerFee\"\n                let _mpos_2 := mload(add(value0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1))\n                /// @src 19:4602:4619  \"inputs.signatures\"\n                let _3 := 96\n                let _mpos_3 := mload(add(value0, _3))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let cleaned := and(mload(/** @src 19:4633:4654  \"inputs.tokenRecipient\" */ add(value0, 128)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                /// @src 19:16099:16126  \"Fees(protocolFee, takerFee)\"\n                let expr_mpos := /** @src 18:529:532  \"500\" */ allocate_memory_17458()\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(expr_mpos, read_from_storage_reference_type_struct_FeeRate())\n                mstore(/** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ add(expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2), _mpos_2)\n                /// @src 19:16396:16452  \"_validateOrders(orders, OrderType.ASK, signatures, fees)\"\n                let expr_component_mpos, expr_component_mpos_1 := fun_validateOrders_17460(_mpos, _mpos_3, expr_mpos)\n                /// @src 19:16489:16505  \"exchanges.length\"\n                let expr := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:16489:16505  \"exchanges.length\" */ _mpos_1)\n                /// @src 19:16680:16744  \"_initializeBatch(exchangesLength, OrderType.ASK, tokenRecipient)\"\n                let expr_component_mpos_2, expr_component_mpos_3 := fun_initializeBatch(expr, cleaned)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                pop(allocate_and_zero_memory_struct_struct_Order())\n                pop(allocate_and_zero_memory_struct_struct_Exchange())\n                /// @src 19:16818:16862  \"uint256 remainingETH = address(this).balance\"\n                let var_remainingETH := /** @src 19:16841:16862  \"address(this).balance\" */ selfbalance()\n                /// @src 19:16877:16886  \"uint256 i\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 19:16872:18074  \"for (uint256 i; i < exchangesLength; ) {...\"\n                for { }\n                /** @src 19:16888:16907  \"i < exchangesLength\" */ lt(var_i, expr)\n                /// @src 19:16877:16886  \"uint256 i\"\n                { }\n                {\n                    /// @src 19:16925:16948  \"exchange = exchanges[i]\"\n                    let var_exchange_mpos := /** @src 19:16936:16948  \"exchanges[i]\" */ mload(memory_array_index_access_struct_Cancel_dyn(_mpos_1, var_i))\n                    /// @src 19:16962:16992  \"order = orders[exchange.index]\"\n                    let var_order_mpos := /** @src 19:16970:16992  \"orders[exchange.index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:16977:16991  \"exchange.index\" */ var_exchange_mpos)))\n                    /// @src 19:17114:18004  \"if (...\"\n                    if /** @src 19:17135:17343  \"_validateListingFromBatch(...\" */ fun_validateListingFromBatch(var_order_mpos, var_exchange_mpos, expr_component_mpos, expr_component_mpos_1)\n                    /// @src 19:17114:18004  \"if (...\"\n                    {\n                        /// @src 19:17493:17722  \"_insertExecutionAsk(...\"\n                        let expr_component, expr_component_1 := fun_insertExecutionAsk(expr_component_mpos_2, expr_component_mpos_3, var_order_mpos, var_exchange_mpos, expr_mpos, var_remainingETH)\n                        /// @src 19:17466:17722  \"(remainingETH, inserted) = _insertExecutionAsk(...\"\n                        var_remainingETH := expr_component\n                        /// @src 19:17740:17990  \"if (inserted) {...\"\n                        if expr_component_1\n                        {\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _4 := mload(/** @src 19:17928:17949  \"exchange.taker.amount\" */ add(/** @src 19:17928:17942  \"exchange.taker\" */ mload(add(var_exchange_mpos, /** @src 19:4602:4619  \"inputs.signatures\" */ _3)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2))\n                            /// @src 19:17812:17846  \"pendingAmountTaken[exchange.index]\"\n                            let _mpos_4 := mload(memory_array_index_access_struct_Cancel_dyn(expr_component_mpos_1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:17831:17845  \"exchange.index\" */ var_exchange_mpos)))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _5 := mload(/** @src 19:17876:17892  \"exchange.listing\" */ mload(add(var_exchange_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)))\n                            mstore(/** @src 19:17812:17949  \"pendingAmountTaken[exchange.index][...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos_4, _5), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(mload(/** @src 19:17812:17949  \"pendingAmountTaken[exchange.index][...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos_4, _5)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _4))\n                        }\n                    }\n                    /// @src 19:18046:18049  \"++i\"\n                    var_i := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 19:18046:18049  \"++i\" */ var_i, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1)\n                }\n                /// @src 19:18233:18246  \"OrderType.ASK\"\n                fun_executeBatchTransfer(expr_component_mpos_2, expr_component_mpos_3, expr_mpos)\n                /// @src 19:18319:18340  \"address(this).balance\"\n                fun_transferETH(/** @src 19:7146:7156  \"msg.sender\" */ caller(), /** @src 19:18319:18340  \"address(this).balance\" */ selfbalance())\n                /// @src 11:2292:2293  \"_\"\n                fun_nonReentrantAfter()\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function abi_decode_enum_OrderType() -> value\n            {\n                value := calldataload(292)\n                if iszero(lt(value, 3)) { revert(0, 0) }\n            }\n            function external_fun_hashOrder()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 320\n                if slt(add(calldatasize(), not(3)), _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let value0 := abi_decode_struct_Order_17494(calldatasize())\n                let _2 := abi_decode_enum_OrderType()\n                let _3 := sub(shl(160, 1), 1)\n                let cleaned := and(mload(/** @src 17:3779:3791  \"order.trader\" */ value0), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3)\n                let cleaned_1 := and(mload(/** @src 17:3813:3829  \"order.collection\" */ add(value0, 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3)\n                let _4 := mload(/** @src 17:3851:3869  \"order.listingsRoot\" */ add(value0, 64))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _5 := mload(/** @src 17:3891:3913  \"order.numberOfListings\" */ add(value0, 96))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _6 := mload(/** @src 17:3935:3955  \"order.expirationTime\" */ add(value0, 128))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _7 := mload(/** @src 17:3977:3992  \"order.assetType\" */ add(value0, 160))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                validator_assert_enum_AssetType(_7)\n                /// @src 17:4014:4042  \"_hashFeeRate(order.makerFee)\"\n                let expr := fun_hashFeeRate(/** @src 17:4027:4041  \"order.makerFee\" */ mload(add(value0, 192)))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _8 := mload(/** @src 17:4064:4074  \"order.salt\" */ add(value0, 224))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _9 := sload(/** @src 17:4127:4147  \"nonces[order.trader]\" */ mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256_of_address(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 17:4134:4146  \"order.trader\" */ value0), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3)))\n                /// @src 17:3710:4165  \"abi.encode(...\"\n                let expr_mpos := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 17:3851:3869  \"order.listingsRoot\" */ 64)\n                /// @src 17:3710:4165  \"abi.encode(...\"\n                let _10 := add(expr_mpos, /** @src 17:3813:3829  \"order.collection\" */ 32)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(_10, /** @src 17:3742:3757  \"_ORDER_TYPEHASH\" */ loadimmutable(\"3752\"))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:3851:3869  \"order.listingsRoot\" */ 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleaned)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:3891:3913  \"order.numberOfListings\" */ 96), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleaned_1)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:3935:3955  \"order.expirationTime\" */ 128), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _4)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:3977:3992  \"order.assetType\" */ 160), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _5)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:4027:4041  \"order.makerFee\" */ 192), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _6)\n                abi_encode_enum_AssetType(_7, add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:4064:4074  \"order.salt\" */ 224))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 256), expr)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 288), _8)\n                abi_encode_enum_OrderType(_2, add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1))\n                let _11 := 352\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _11), _9)\n                /// @src 17:3710:4165  \"abi.encode(...\"\n                mstore(expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _11)\n                /// @src 17:3710:4165  \"abi.encode(...\"\n                finalize_allocation_50148(expr_mpos)\n                /// @src 17:3664:4179  \"return...\"\n                let var := /** @src 17:3683:4179  \"keccak256(...\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _10, mload(/** @src 17:3683:4179  \"keccak256(...\" */ expr_mpos))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPos := mload(/** @src 17:3851:3869  \"order.listingsRoot\" */ 64)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(memPos, var)\n                return(memPos, /** @src 17:3813:3829  \"order.collection\" */ 32)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function external_fun_incrementNonce()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                mstore(_1, /** @src 19:4027:4037  \"msg.sender\" */ caller())\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(0x20, /** @src 19:4041:4047  \"nonces\" */ 0x01)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let dataSlot := keccak256(_1, 0x40)\n                /// @src 19:4039:4059  \"++nonces[msg.sender]\"\n                let _2 := increment_uint256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sload(/** @src 19:4039:4059  \"++nonces[msg.sender]\" */ dataSlot))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                sstore(dataSlot, _2)\n                /// @src 19:4010:4060  \"NonceIncremented(msg.sender, ++nonces[msg.sender])\"\n                let _3 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(0x40)\n                mstore(_3, _2)\n                /// @src 19:4010:4060  \"NonceIncremented(msg.sender, ++nonces[msg.sender])\"\n                log2(_3, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0x20, /** @src 19:4010:4060  \"NonceIncremented(msg.sender, ++nonces[msg.sender])\" */ 0xa82a649bbd060c9099cd7b7326e2b0dc9e9af0836480e0f849dc9eaa79710b3b, /** @src 19:4027:4037  \"msg.sender\" */ caller())\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                return(_1, _1)\n            }\n            function external_fun_hashOfferCollection()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 352\n                if slt(add(calldatasize(), not(3)), _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let value0 := abi_decode_struct_Order_17494(calldatasize())\n                let value1 := abi_decode_enum_OrderType()\n                let _2 := sub(shl(160, 1), 1)\n                let cleaned := and(mload(/** @src 17:4481:4493  \"order.trader\" */ value0), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)\n                let cleaned_1 := and(mload(/** @src 17:4515:4531  \"order.collection\" */ add(value0, 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)\n                let _3 := mload(/** @src 17:4553:4571  \"order.listingsRoot\" */ add(value0, 64))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _4 := mload(/** @src 17:4593:4615  \"order.numberOfListings\" */ add(value0, 96))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _5 := mload(/** @src 17:4637:4657  \"order.expirationTime\" */ add(value0, 128))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _6 := mload(/** @src 17:4679:4694  \"order.assetType\" */ add(value0, 160))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                validator_assert_enum_AssetType(_6)\n                /// @src 17:4716:4744  \"_hashFeeRate(order.makerFee)\"\n                let expr := fun_hashFeeRate(/** @src 17:4729:4743  \"order.makerFee\" */ mload(add(value0, 192)))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _7 := mload(/** @src 17:4766:4776  \"order.salt\" */ add(value0, 224))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _8 := sload(/** @src 17:4829:4849  \"nonces[order.trader]\" */ mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256_of_address(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 17:4836:4848  \"order.trader\" */ value0), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)))\n                /// @src 17:4401:4901  \"abi.encode(...\"\n                let expr_mpos := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 17:4553:4571  \"order.listingsRoot\" */ 64)\n                /// @src 17:4401:4901  \"abi.encode(...\"\n                let _9 := add(expr_mpos, /** @src 17:4515:4531  \"order.collection\" */ 32)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(_9, /** @src 17:4433:4459  \"_OFFER_COLLECTION_TYPEHASH\" */ loadimmutable(\"3754\"))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 17:4553:4571  \"order.listingsRoot\" */ 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleaned)\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 17:4593:4615  \"order.numberOfListings\" */ 96), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleaned_1)\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 17:4637:4657  \"order.expirationTime\" */ 128), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3)\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 17:4679:4694  \"order.assetType\" */ 160), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _4)\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 17:4729:4743  \"order.makerFee\" */ 192), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _5)\n                abi_encode_enum_AssetType(_6, add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 17:4766:4776  \"order.salt\" */ 224))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 256), expr)\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 288), _7)\n                abi_encode_enum_OrderType(value1, add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 320))\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1), _8)\n                let _10 := 384\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _10), calldataload(324))\n                /// @src 17:4401:4901  \"abi.encode(...\"\n                mstore(expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _10)\n                /// @src 17:4401:4901  \"abi.encode(...\"\n                finalize_allocation_50147(expr_mpos)\n                /// @src 17:4355:4915  \"return...\"\n                let var := /** @src 17:4374:4915  \"keccak256(...\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _9, mload(/** @src 17:4374:4915  \"keccak256(...\" */ expr_mpos))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPos := mload(/** @src 17:4553:4571  \"order.listingsRoot\" */ 64)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(memPos, var)\n                return(memPos, /** @src 17:4515:4531  \"order.collection\" */ 32)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function external_fun_takeCollectionOffer()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := not(3)\n                if slt(add(calldatasize(), _1), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let offset := calldataload(4)\n                let _2 := 0xffffffffffffffff\n                if gt(offset, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                if slt(add(sub(calldatasize(), offset), _1), 0x0200)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPtr := mload(64)\n                finalize_allocation_17451(memPtr)\n                mstore(memPtr, abi_decode_struct_Order(add(4, offset), calldatasize()))\n                mstore(add(memPtr, 32), abi_decode_struct_Listing(add(offset, 292), calldatasize()))\n                mstore(add(memPtr, 64), abi_decode_struct_FeeRate(add(offset, 420), calldatasize()))\n                let offset_1 := calldataload(add(offset, 484))\n                if gt(offset_1, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr, 0x60), abi_decode_bytes(add(add(offset, offset_1), 4), calldatasize()))\n                fun_takeCollectionOffer(memPtr)\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function external_fun_verifyDomain()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let outPtr := mload(64)\n                let _1 := add(outPtr, 0x20)\n                mstore(_1, \"EIP712Domain(\")\n                mstore(add(outPtr, 45), \"string name,\")\n                mstore(add(outPtr, 57), \"string version,\")\n                mstore(add(outPtr, 72), \"uint256 chainId,\")\n                mstore(add(outPtr, 88), \"address verifyingContract\")\n                mstore(add(outPtr, 113), \")\")\n                mstore(outPtr, 82)\n                finalize_allocation_17655(outPtr)\n                /// @src 17:1168:1429  \"keccak256(...\"\n                let expr := keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1, mload(/** @src 17:1168:1429  \"keccak256(...\" */ outPtr))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _2 := copy_literal_to_memory_008d36b3f477268d1152bc9bbf1e76725c59d7621413718f5cd33aeabb387ea2()\n                /// @src 17:1525:1548  \"keccak256(bytes(_NAME))\"\n                let expr_1 := keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 17:1525:1548  \"keccak256(bytes(_NAME))\" */ _2, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0x20), mload(/** @src 17:1525:1548  \"keccak256(bytes(_NAME))\" */ _2))\n                /// @src 17:357:372  \"\\\"ZeZu Exchange\\\"\"\n                let _3 := copy_literal_to_memory_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3()\n                /// @src 17:1562:1588  \"keccak256(bytes(_VERSION))\"\n                let expr_2 := keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 17:1562:1588  \"keccak256(bytes(_VERSION))\" */ _3, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0x20), mload(/** @src 17:1562:1588  \"keccak256(bytes(_VERSION))\" */ _3))\n                /// @src 17:1635:1724  \"if (_DOMAIN_SEPARATOR != domainSeparator) {...\"\n                if /** @src 17:1639:1675  \"_DOMAIN_SEPARATOR != domainSeparator\" */ iszero(eq(/** @src 17:1639:1656  \"_DOMAIN_SEPARATOR\" */ loadimmutable(\"3756\"), /** @src 17:1466:1625  \"_hashDomain(...\" */ fun_hashDomain(expr, expr_1, expr_2, /** @src 17:1610:1614  \"this\" */ address())))\n                /// @src 17:1635:1724  \"if (_DOMAIN_SEPARATOR != domainSeparator) {...\"\n                {\n                    /// @src 17:1698:1713  \"InvalidDomain()\"\n                    let _4 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 17:1698:1713  \"InvalidDomain()\"\n                    mstore(_4, shl(225, 0x75893cc1))\n                    revert(_4, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 4)\n                }\n                return(0, 0)\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function abi_encode_bool_bytes32_bytes32_uint8(headStart, value0, value1, value2, value3) -> tail\n            {\n                tail := add(headStart, 128)\n                mstore(headStart, iszero(iszero(value0)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), and(value3, 0xff))\n            }\n            function external_fun_verifyAuthorizationPublic()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 128)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let value0 := abi_decode_address_17464()\n                let offset := calldataload(68)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let value2 := abi_decode_bytes(add(4, offset), calldatasize())\n                /// @src 17:10014:10031  \"_hashToSign(hash)\"\n                let expr := fun_hashToSign(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ calldataload(36))\n                /// @src 17:10041:10439  \"assembly {...\"\n                let _1 := add(value2, mul(65, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ calldataload(100)))\n                /// @src 17:10041:10439  \"assembly {...\"\n                let var_r := mload(add(_1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 32))\n                /// @src 17:10041:10439  \"assembly {...\"\n                let var_s := mload(add(_1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 64))\n                /// @src 17:10041:10439  \"assembly {...\"\n                let var_v := shr(248, mload(add(_1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 96)))\n                /// @src 17:10448:10497  \"authorized = _verify(signer, hashToSign, v, r, s)\"\n                let var_authorized := /** @src 17:10461:10497  \"_verify(signer, hashToSign, v, r, s)\" */ fun_verify(value0, expr, var_v, var_r, var_s)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_bool_bytes32_bytes32_uint8(memPos, var_authorized, var_r, var_s, var_v), memPos))\n            }\n            function external_fun_takeBid()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := not(3)\n                if slt(add(calldatasize(), _1), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let offset := calldataload(4)\n                let _2 := 0xffffffffffffffff\n                if gt(offset, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                if slt(add(sub(calldatasize(), offset), _1), 0xa0)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPtr := mload(64)\n                finalize_allocation_17451(memPtr)\n                let offset_1 := calldataload(add(4, offset))\n                if gt(offset_1, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(memPtr, abi_decode_array_struct_Order_dyn(add(add(offset, offset_1), 4), calldatasize()))\n                let offset_2 := calldataload(add(offset, 36))\n                if gt(offset_2, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr, 32), abi_decode_array_struct_Exchange_dyn(add(add(offset, offset_2), 4), calldatasize()))\n                mstore(add(memPtr, 64), abi_decode_struct_FeeRate(add(offset, 68), calldatasize()))\n                let offset_3 := calldataload(add(offset, 132))\n                if gt(offset_3, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr, 0x60), abi_decode_bytes(add(add(offset, offset_3), 4), calldatasize()))\n                fun_takeBid(memPtr)\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function external_fun_nonces()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(abi_decode_address_17464(), sub(shl(160, 1), 1)))\n                mstore(32, /** @src 17:677:718  \"mapping(address => uint256) public nonces\" */ 1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0x40))\n                let memPos := mload(0x40)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_hashListing()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 128)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPtr := mload(64)\n                finalize_allocation_17451(memPtr)\n                mstore(memPtr, calldataload(4))\n                mstore(add(memPtr, 32), calldataload(36))\n                mstore(add(memPtr, 64), calldataload(68))\n                mstore(add(memPtr, 96), calldataload(100))\n                let ret := fun_hashListing(memPtr)\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function external_fun_blockRange()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 17:724:749  \"uint256 public blockRange\" */ 2)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_oracles()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(abi_decode_address_17464(), sub(shl(160, 1), 1)))\n                mstore(32, /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0x40))\n                let memPos := mload(0x40)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_protocolFee()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 18:539:565  \"FeeRate public protocolFee\" */ 50)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPos := mload(64)\n                mstore(memPos, and(_1, sub(shl(160, 1), 1)))\n                mstore(add(memPos, 32), and(shr(160, _1), 0xffff))\n                return(memPos, 64)\n            }\n            function external_fun_takeAskSinglePool()\n            {\n                let _1 := 64\n                if slt(add(calldatasize(), not(3)), _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let value0 := abi_decode_struct_TakeAskSingle(add(4, offset), calldatasize())\n                /// @src 19:6717:6733  \"amountToWithdraw\"\n                fun_withdrawFromPool(/** @src 19:6705:6715  \"msg.sender\" */ caller(), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ calldataload(36))\n                /// @src 11:2227:2330  \"modifier nonReentrant() {...\"\n                fun_nonReentrantBefore()\n                /// @src 19:5344:5356  \"inputs.order\"\n                let _mpos := mload(value0)\n                /// @src 19:5370:5385  \"inputs.exchange\"\n                let _mpos_1 := mload(add(value0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 32))\n                /// @src 19:5399:5414  \"inputs.takerFee\"\n                let _mpos_2 := mload(add(value0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1))\n                /// @src 19:5428:5444  \"inputs.signature\"\n                let _mpos_3 := mload(add(value0, 96))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let cleaned := and(mload(/** @src 19:5458:5479  \"inputs.tokenRecipient\" */ add(value0, 128)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                /// @src 19:10399:10426  \"Fees(protocolFee, takerFee)\"\n                let expr_mpos := /** @src 18:529:532  \"500\" */ allocate_memory_17458()\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(expr_mpos, read_from_storage_reference_type_struct_FeeRate())\n                /// @src 19:10399:10426  \"Fees(protocolFee, takerFee)\"\n                let _2 := add(expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 32)\n                mstore(_2, _mpos_2)\n                /// @src 19:10461:10477  \"exchange.listing\"\n                let _mpos_4 := mload(add(_mpos_1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1))\n                let _3 := mload(/** @src 19:10509:10530  \"exchange.taker.amount\" */ add(/** @src 19:10509:10523  \"exchange.taker\" */ mload(add(_mpos_1, /** @src 19:5428:5444  \"inputs.signature\" */ 96)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 32))\n                /// @src 19:10602:10844  \"if (...\"\n                if /** @src 19:10619:10787  \"!_validateOrderAndListing(...\" */ cleanup_bool(iszero(/** @src 19:10620:10787  \"_validateOrderAndListing(...\" */ fun_validateOrderAndListing_17481(_mpos, _mpos_1, _mpos_3, expr_mpos)))\n                /// @src 19:10602:10844  \"if (...\"\n                {\n                    /// @src 19:10819:10833  \"InvalidOrder()\"\n                    let _4 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(_1)\n                    /// @src 19:10819:10833  \"InvalidOrder()\"\n                    mstore(_4, shl(224, 0xaf610693))\n                    revert(_4, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 4)\n                }\n                /// @src 19:10953:11117  \"_initializeSingleExecution(...\"\n                let expr_mpos_1 := fun_initializeSingleExecution(_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:11039:11054  \"listing.tokenId\" */ add(_mpos_4, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 32)), /** @src 19:10953:11117  \"_initializeSingleExecution(...\" */ _3, cleaned)\n                /// @src 19:11200:11225  \"amountTaken[order.trader]\"\n                let _5 := mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256__of_address(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 19:11212:11224  \"order.trader\" */ _mpos)))\n                /// @src 19:11200:11246  \"amountTaken[order.trader][bytes32(order.salt)]\"\n                let _6 := mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(_5, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:11234:11244  \"order.salt\" */ add(_mpos, 224)))\n                /// @src 19:11200:11291  \"amountTaken[order.trader][bytes32(order.salt)][...\"\n                let _7 := mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(_6, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:11264:11277  \"listing.index\" */ _mpos_4))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                sstore(_7, add(sload(/** @src 19:11200:11306  \"amountTaken[order.trader][bytes32(order.salt)][...\" */ _7), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3))\n                /// @src 19:11553:11643  \"if (!successfulTransfers[0]) {...\"\n                if /** @src 19:11557:11580  \"!successfulTransfers[0]\" */ cleanup_bool(iszero(/** @src 19:11558:11580  \"successfulTransfers[0]\" */ read_from_memoryt_bool(memory_array_index_access_struct_Cancel_dyn_17485(/** @src 19:11446:11539  \"_executeNonfungibleTransfers(...\" */ fun_executeNonfungibleTransfers_17484(expr_mpos_1)))))\n                /// @src 19:11553:11643  \"if (!successfulTransfers[0]) {...\"\n                {\n                    /// @src 19:11607:11628  \"TokenTransferFailed()\"\n                    let _8 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(_1)\n                    /// @src 19:11607:11628  \"TokenTransferFailed()\"\n                    mstore(_8, shl(225, 0x022e2581))\n                    revert(_8, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 4)\n                }\n                let _9 := mload(/** @src 19:11832:11845  \"listing.price\" */ add(_mpos_4, /** @src 19:5428:5444  \"inputs.signature\" */ 96))\n                /// @src 19:11860:11874  \"order.makerFee\"\n                let _10 := add(_mpos, 192)\n                /// @src 19:11819:11881  \"_computeFees(listing.price, takerAmount, order.makerFee, fees)\"\n                let expr_component, expr_component_1, expr_component_2, expr_component_3 := fun_computeFees(_9, _3, /** @src 19:11860:11874  \"order.makerFee\" */ mload(_10), /** @src 19:11819:11881  \"_computeFees(listing.price, takerAmount, order.makerFee, fees)\" */ expr_mpos)\n                /// @src 19:12008:12029  \"address(this).balance\"\n                let expr := selfbalance()\n                /// @src 19:12004:12120  \"if (address(this).balance < totalPrice + takerFeeAmount) {...\"\n                if /** @src 19:12008:12059  \"address(this).balance < totalPrice + takerFeeAmount\" */ lt(expr, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 19:12032:12059  \"totalPrice + takerFeeAmount\" */ expr_component, expr_component_3))\n                /// @src 19:12004:12120  \"if (address(this).balance < totalPrice + takerFeeAmount) {...\"\n                {\n                    /// @src 19:12086:12105  \"InsufficientFunds()\"\n                    let _11 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(_1)\n                    /// @src 19:12086:12105  \"InsufficientFunds()\"\n                    mstore(_11, shl(224, 0x356680b7))\n                    revert(_11, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 4)\n                }\n                /// @src 19:12218:12235  \"protocolFeeAmount\"\n                fun_transferETH(/** @src 19:12190:12216  \"fees.protocolFee.recipient\" */ read_from_memoryt_address(/** @src 19:12190:12206  \"fees.protocolFee\" */ mload(expr_mpos)), /** @src 19:12218:12235  \"protocolFeeAmount\" */ expr_component_1)\n                /// @src 19:12284:12298  \"takerFeeAmount\"\n                fun_transferETH(/** @src 19:12259:12282  \"fees.takerFee.recipient\" */ read_from_memoryt_address(/** @src 19:12259:12272  \"fees.takerFee\" */ mload(_2)), /** @src 19:12284:12298  \"takerFeeAmount\" */ expr_component_3)\n                /// @src 19:12348:12362  \"makerFeeAmount\"\n                fun_transferETH(/** @src 19:12322:12346  \"order.makerFee.recipient\" */ read_from_memoryt_address(/** @src 19:12322:12336  \"order.makerFee\" */ mload(_10)), /** @src 19:12348:12362  \"makerFeeAmount\" */ expr_component_2)\n                /// @src 19:12427:12439  \"order.trader\"\n                let _12 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 19:12427:12439  \"order.trader\" */ _mpos))\n                /// @src 19:12457:12504  \"totalPrice - makerFeeAmount - protocolFeeAmount\"\n                fun_transferETH(_12, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(sub(/** @src 19:12457:12484  \"totalPrice - makerFeeAmount\" */ expr_component, expr_component_2), /** @src 19:12457:12504  \"totalPrice - makerFeeAmount - protocolFeeAmount\" */ expr_component_1))\n                /// @src 19:12688:12701  \"OrderType.ASK\"\n                fun_emitExecutionEvent_17486(expr_mpos_1, _mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:12619:12632  \"listing.index\" */ _mpos_4), /** @src 19:12688:12701  \"OrderType.ASK\" */ expr_component, expr_mpos)\n                /// @src 19:12774:12795  \"address(this).balance\"\n                fun_transferETH(/** @src 19:6705:6715  \"msg.sender\" */ caller(), /** @src 19:12774:12795  \"address(this).balance\" */ selfbalance())\n                /// @src 11:2292:2293  \"_\"\n                fun_nonReentrantAfter()\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function external_fun_hashToSign()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let ret := fun_hashToSign(calldataload(4))\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function external_fun_setGovernor()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let value0 := abi_decode_address_17464()\n                let _1 := sload(/** @src 19:2223:2231  \"governor\" */ 0x98)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _2 := sub(shl(160, 1), 1)\n                if iszero(/** @src 19:2223:2245  \"governor == msg.sender\" */ eq(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(_1, _2), /** @src 19:2235:2245  \"msg.sender\" */ caller()))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 13)\n                    mstore(add(memPtr, 68), \"Invalid Owner\")\n                    revert(memPtr, 100)\n                }\n                let _3 := and(/** @src 18:529:532  \"500\" */ value0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)\n                /// @src 18:529:532  \"500\"\n                sstore(/** @src 19:2223:2231  \"governor\" */ 0x98, /** @src 18:529:532  \"500\" */ or(and(_1, shl(160, 0xffffffffffffffffffffffff)), _3))\n                /// @src 19:2308:2330  \"NewGovernor(_governor)\"\n                log2(/** @src -1:-1:-1 */ 0, 0, /** @src 19:2308:2330  \"NewGovernor(_governor)\" */ 0x5425363a03f182281120f5919107c49c7a1a623acc1cbc6df468b6f0c11fcf8c, _3)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function external_fun_DOMAIN_SEPARATOR()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let memPos := mload(64)\n                mstore(memPos, /** @src 17:580:622  \"bytes32 public immutable _DOMAIN_SEPARATOR\" */ loadimmutable(\"3756\"))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                return(memPos, 32)\n            }\n            function external_fun_information()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 17:1935:1953  \"version = _VERSION\"\n                let var_version_mpos := /** @src 17:357:372  \"\\\"ZeZu Exchange\\\"\" */ copy_literal_to_memory_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3()\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPos := mload(64)\n                mstore(memPos, 64)\n                let length := mload(var_version_mpos)\n                mstore(add(memPos, 64), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    mstore(add(add(memPos, i), 96), mload(add(add(var_version_mpos, i), 0x20)))\n                }\n                mstore(add(add(memPos, length), 96), 0)\n                mstore(add(memPos, 0x20), /** @src 17:1981:1998  \"_DOMAIN_SEPARATOR\" */ loadimmutable(\"3756\"))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                return(memPos, add(sub(add(memPos, and(add(length, 31), not(31))), memPos), 96))\n            }\n            /// @ast-id 2262 @src 16:722:836  \"receive() external payable {...\"\n            function fun()\n            {\n                /// @src 16:759:830  \"if (msg.sender != _POOL) {...\"\n                if /** @src 16:763:782  \"msg.sender != _POOL\" */ iszero(eq(/** @src 16:763:773  \"msg.sender\" */ caller(), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(/** @src 16:777:782  \"_POOL\" */ loadimmutable(\"2231\"), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))))\n                /// @src 16:759:830  \"if (msg.sender != _POOL) {...\"\n                {\n                    /// @src 16:805:819  \"Unauthorized()\"\n                    let _1 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 16:805:819  \"Unauthorized()\"\n                    mstore(_1, /** @src 19:1486:1500  \"Unauthorized()\" */ shl(232, 8565801))\n                    /// @src 16:805:819  \"Unauthorized()\"\n                    revert(_1, 4)\n                }\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function copy_literal_to_memory_008d36b3f477268d1152bc9bbf1e76725c59d7621413718f5cd33aeabb387ea2() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_17467(memPtr_1)\n                mstore(memPtr_1, 13)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"ZeZu Exchange\")\n            }\n            /// @src 17:357:372  \"\\\"ZeZu Exchange\\\"\"\n            function copy_literal_to_memory_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3() -> memPtr\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_17467(memPtr_1)\n                mstore(memPtr_1, /** @src 17:357:372  \"\\\"ZeZu Exchange\\\"\" */ 3)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"1.0\")\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function read_from_memoryt_address(ptr) -> returnValue\n            {\n                returnValue := and(mload(ptr), sub(shl(160, 1), 1))\n            }\n            function panic_error_0x21()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x21)\n                revert(0, 0x24)\n            }\n            function validator_assert_enum_AssetType(value)\n            {\n                if iszero(lt(value, 2)) { panic_error_0x21() }\n            }\n            function abi_encode_enum_AssetType(value, pos)\n            {\n                if iszero(lt(value, 2)) { panic_error_0x21() }\n                mstore(pos, value)\n            }\n            function abi_encode_enum_OrderType_50149(pos)\n            {\n                mstore(pos, /** @src 19:7826:7852  \"OrderType.OFFER_COLLECTION\" */ 2)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function abi_encode_enum_OrderType_57301(pos)\n            {\n                mstore(pos, /** @src 19:13578:13591  \"OrderType.BID\" */ 1)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function abi_encode_enum_OrderType(value, pos)\n            {\n                if iszero(lt(value, 3)) { panic_error_0x21() }\n                mstore(pos, value)\n            }\n            /// @ast-id 3941 @src 17:3542:4186  \"function hashOrder(...\"\n            function fun_hashOrder(var_order_mpos) -> var\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let cleaned := and(mload(/** @src 17:3779:3791  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)\n                let cleaned_1 := and(mload(/** @src 17:3813:3829  \"order.collection\" */ add(var_order_mpos, 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)\n                let _2 := mload(/** @src 17:3851:3869  \"order.listingsRoot\" */ add(var_order_mpos, 64))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _3 := mload(/** @src 17:3891:3913  \"order.numberOfListings\" */ add(var_order_mpos, 96))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _4 := mload(/** @src 17:3935:3955  \"order.expirationTime\" */ add(var_order_mpos, 128))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _5 := mload(/** @src 17:3977:3992  \"order.assetType\" */ add(var_order_mpos, 160))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                validator_assert_enum_AssetType(_5)\n                /// @src 17:4014:4042  \"_hashFeeRate(order.makerFee)\"\n                let expr := fun_hashFeeRate(/** @src 17:4027:4041  \"order.makerFee\" */ mload(add(var_order_mpos, 192)))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _6 := mload(/** @src 17:4064:4074  \"order.salt\" */ add(var_order_mpos, 224))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _7 := sload(/** @src 17:4127:4147  \"nonces[order.trader]\" */ mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256_of_address(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 17:4134:4146  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)))\n                /// @src 17:3710:4165  \"abi.encode(...\"\n                let expr_mpos := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 17:3851:3869  \"order.listingsRoot\" */ 64)\n                /// @src 17:3710:4165  \"abi.encode(...\"\n                let _8 := add(expr_mpos, /** @src 17:3813:3829  \"order.collection\" */ 32)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(_8, /** @src 17:3742:3757  \"_ORDER_TYPEHASH\" */ loadimmutable(\"3752\"))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:3851:3869  \"order.listingsRoot\" */ 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleaned)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:3891:3913  \"order.numberOfListings\" */ 96), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleaned_1)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:3935:3955  \"order.expirationTime\" */ 128), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:3977:3992  \"order.assetType\" */ 160), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:4027:4041  \"order.makerFee\" */ 192), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _4)\n                abi_encode_enum_AssetType(_5, add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:4064:4074  \"order.salt\" */ 224))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 256), expr)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 288), _6)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 320), /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _9 := 352\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _9), _7)\n                /// @src 17:3710:4165  \"abi.encode(...\"\n                mstore(expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _9)\n                /// @src 17:3710:4165  \"abi.encode(...\"\n                finalize_allocation_50148(expr_mpos)\n                /// @src 17:3664:4179  \"return...\"\n                var := /** @src 17:3683:4179  \"keccak256(...\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _8, mload(/** @src 17:3683:4179  \"keccak256(...\" */ expr_mpos))\n            }\n            /// @ast-id 3941 @src 17:3542:4186  \"function hashOrder(...\"\n            function fun_hashOrder_50165(var_order_mpos) -> var\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let cleaned := and(mload(/** @src 17:3779:3791  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)\n                let cleaned_1 := and(mload(/** @src 17:3813:3829  \"order.collection\" */ add(var_order_mpos, 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)\n                let _2 := mload(/** @src 17:3851:3869  \"order.listingsRoot\" */ add(var_order_mpos, 64))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _3 := mload(/** @src 17:3891:3913  \"order.numberOfListings\" */ add(var_order_mpos, 96))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _4 := mload(/** @src 17:3935:3955  \"order.expirationTime\" */ add(var_order_mpos, 128))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _5 := mload(/** @src 17:3977:3992  \"order.assetType\" */ add(var_order_mpos, 160))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                validator_assert_enum_AssetType(_5)\n                /// @src 17:4014:4042  \"_hashFeeRate(order.makerFee)\"\n                let expr := fun_hashFeeRate(/** @src 17:4027:4041  \"order.makerFee\" */ mload(add(var_order_mpos, 192)))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _6 := mload(/** @src 17:4064:4074  \"order.salt\" */ add(var_order_mpos, 224))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _7 := sload(/** @src 17:4127:4147  \"nonces[order.trader]\" */ mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256_of_address(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 17:4134:4146  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)))\n                /// @src 17:3710:4165  \"abi.encode(...\"\n                let expr_mpos := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 17:3851:3869  \"order.listingsRoot\" */ 64)\n                /// @src 17:3710:4165  \"abi.encode(...\"\n                let _8 := add(expr_mpos, /** @src 17:3813:3829  \"order.collection\" */ 32)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(_8, /** @src 17:3742:3757  \"_ORDER_TYPEHASH\" */ loadimmutable(\"3752\"))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:3851:3869  \"order.listingsRoot\" */ 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleaned)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:3891:3913  \"order.numberOfListings\" */ 96), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleaned_1)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:3935:3955  \"order.expirationTime\" */ 128), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:3977:3992  \"order.assetType\" */ 160), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:4027:4041  \"order.makerFee\" */ 192), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _4)\n                abi_encode_enum_AssetType(_5, add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 17:4064:4074  \"order.salt\" */ 224))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 256), expr)\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 288), _6)\n                abi_encode_enum_OrderType_57301(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 320))\n                let _9 := 352\n                mstore(add(/** @src 17:3710:4165  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _9), _7)\n                /// @src 17:3710:4165  \"abi.encode(...\"\n                mstore(expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _9)\n                /// @src 17:3710:4165  \"abi.encode(...\"\n                finalize_allocation_50148(expr_mpos)\n                /// @src 17:3664:4179  \"return...\"\n                var := /** @src 17:3683:4179  \"keccak256(...\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _8, mload(/** @src 17:3683:4179  \"keccak256(...\" */ expr_mpos))\n            }\n            /// @ast-id 3986 @src 17:4193:4922  \"function hashOfferCollection(...\"\n            function fun_hashOfferCollection(var_order_mpos, var_pricePerItem) -> var\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let cleaned := and(mload(/** @src 17:4481:4493  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)\n                let cleaned_1 := and(mload(/** @src 17:4515:4531  \"order.collection\" */ add(var_order_mpos, 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)\n                let _2 := mload(/** @src 17:4553:4571  \"order.listingsRoot\" */ add(var_order_mpos, 64))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _3 := mload(/** @src 17:4593:4615  \"order.numberOfListings\" */ add(var_order_mpos, 96))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _4 := mload(/** @src 17:4637:4657  \"order.expirationTime\" */ add(var_order_mpos, 128))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _5 := mload(/** @src 17:4679:4694  \"order.assetType\" */ add(var_order_mpos, 160))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                validator_assert_enum_AssetType(_5)\n                /// @src 17:4716:4744  \"_hashFeeRate(order.makerFee)\"\n                let expr := fun_hashFeeRate(/** @src 17:4729:4743  \"order.makerFee\" */ mload(add(var_order_mpos, 192)))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _6 := mload(/** @src 17:4766:4776  \"order.salt\" */ add(var_order_mpos, 224))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _7 := sload(/** @src 17:4829:4849  \"nonces[order.trader]\" */ mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256_of_address(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 17:4836:4848  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)))\n                /// @src 17:4401:4901  \"abi.encode(...\"\n                let expr_mpos := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 17:4553:4571  \"order.listingsRoot\" */ 64)\n                /// @src 17:4401:4901  \"abi.encode(...\"\n                let _8 := add(expr_mpos, /** @src 17:4515:4531  \"order.collection\" */ 32)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(_8, /** @src 17:4433:4459  \"_OFFER_COLLECTION_TYPEHASH\" */ loadimmutable(\"3754\"))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 17:4553:4571  \"order.listingsRoot\" */ 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleaned)\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 17:4593:4615  \"order.numberOfListings\" */ 96), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleaned_1)\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 17:4637:4657  \"order.expirationTime\" */ 128), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 17:4679:4694  \"order.assetType\" */ 160), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3)\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 17:4729:4743  \"order.makerFee\" */ 192), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _4)\n                abi_encode_enum_AssetType(_5, add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 17:4766:4776  \"order.salt\" */ 224))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 256), expr)\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 288), _6)\n                abi_encode_enum_OrderType_50149(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 320))\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 352), _7)\n                let _9 := 384\n                mstore(add(/** @src 17:4401:4901  \"abi.encode(...\" */ expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _9), var_pricePerItem)\n                /// @src 17:4401:4901  \"abi.encode(...\"\n                mstore(expr_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _9)\n                /// @src 17:4401:4901  \"abi.encode(...\"\n                finalize_allocation_50147(expr_mpos)\n                /// @src 17:4355:4915  \"return...\"\n                var := /** @src 17:4374:4915  \"keccak256(...\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _8, mload(/** @src 17:4374:4915  \"keccak256(...\" */ expr_mpos))\n            }\n            /// @ast-id 4010 @src 17:5059:5382  \"function hashListing(Listing memory listing) public pure returns (bytes32) {...\"\n            function fun_hashListing(var_listing_mpos) -> var\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 17:5222:5235  \"listing.index\" */ var_listing_mpos)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _2 := mload(/** @src 17:5257:5272  \"listing.tokenId\" */ add(var_listing_mpos, 32))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _3 := mload(/** @src 17:5294:5308  \"listing.amount\" */ add(var_listing_mpos, 64))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _4 := mload(/** @src 17:5330:5343  \"listing.price\" */ add(var_listing_mpos, 96))\n                /// @src 17:5190:5361  \"abi.encode(...\"\n                let expr_4006_mpos := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 17:5294:5308  \"listing.amount\" */ 64)\n                /// @src 17:5190:5361  \"abi.encode(...\"\n                let _5 := add(expr_4006_mpos, /** @src 17:5257:5272  \"listing.tokenId\" */ 32)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(_5, _1)\n                mstore(add(/** @src 17:5190:5361  \"abi.encode(...\" */ expr_4006_mpos, /** @src 17:5294:5308  \"listing.amount\" */ 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)\n                mstore(add(/** @src 17:5190:5361  \"abi.encode(...\" */ expr_4006_mpos, /** @src 17:5330:5343  \"listing.price\" */ 96), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3)\n                mstore(add(/** @src 17:5190:5361  \"abi.encode(...\" */ expr_4006_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 128), _4)\n                /// @src 17:5190:5361  \"abi.encode(...\"\n                mstore(expr_4006_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 128)\n                /// @src 17:5190:5361  \"abi.encode(...\"\n                finalize_allocation_41604(expr_4006_mpos)\n                /// @src 17:5144:5375  \"return...\"\n                var := /** @src 17:5163:5375  \"keccak256(...\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _5, mload(/** @src 17:5163:5375  \"keccak256(...\" */ expr_4006_mpos))\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function read_from_memoryt_uint16(ptr) -> returnValue\n            {\n                returnValue := and(mload(ptr), 0xffff)\n            }\n            /// @ast-id 4041 @src 17:6029:6260  \"function _hashFeeRate(...\"\n            function fun_hashFeeRate(var_feeRate_mpos) -> var\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let cleaned := and(mload(/** @src 17:6207:6224  \"feeRate.recipient\" */ var_feeRate_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                let cleaned_1 := and(mload(/** @src 17:6226:6238  \"feeRate.rate\" */ add(var_feeRate_mpos, 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0xffff)\n                /// @src 17:6176:6239  \"abi.encode(_FEE_RATE_TYPEHASH, feeRate.recipient, feeRate.rate)\"\n                let expr_4037_mpos := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                /// @src 17:6176:6239  \"abi.encode(_FEE_RATE_TYPEHASH, feeRate.recipient, feeRate.rate)\"\n                let _1 := add(expr_4037_mpos, /** @src 17:6226:6238  \"feeRate.rate\" */ 32)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(_1, /** @src 17:6187:6205  \"_FEE_RATE_TYPEHASH\" */ loadimmutable(\"3750\"))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(/** @src 17:6176:6239  \"abi.encode(_FEE_RATE_TYPEHASH, feeRate.recipient, feeRate.rate)\" */ expr_4037_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 64), cleaned)\n                mstore(add(/** @src 17:6176:6239  \"abi.encode(_FEE_RATE_TYPEHASH, feeRate.recipient, feeRate.rate)\" */ expr_4037_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 96), cleaned_1)\n                /// @src 17:6176:6239  \"abi.encode(_FEE_RATE_TYPEHASH, feeRate.recipient, feeRate.rate)\"\n                mstore(expr_4037_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 96)\n                /// @src 17:6176:6239  \"abi.encode(_FEE_RATE_TYPEHASH, feeRate.recipient, feeRate.rate)\"\n                finalize_allocation_17655(expr_4037_mpos)\n                /// @src 17:6130:6253  \"return...\"\n                var := /** @src 17:6149:6253  \"keccak256(...\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1, mload(/** @src 17:6149:6253  \"keccak256(...\" */ expr_4037_mpos))\n            }\n            /// @ast-id 4063 @src 17:6400:6553  \"function _hashToSign(bytes32 hash) public view returns (bytes32) {...\"\n            function fun_hashToSign(var_hash) -> var\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let outPtr := mload(64)\n                let _1 := add(outPtr, 0x20)\n                mstore(_1, shl(240, 6401))\n                mstore(add(outPtr, 34), /** @src 17:6521:6538  \"_DOMAIN_SEPARATOR\" */ loadimmutable(\"3756\"))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(outPtr, 66), var_hash)\n                mstore(outPtr, 66)\n                finalize_allocation_17655(outPtr)\n                /// @src 17:6475:6546  \"return keccak256(bytes.concat(bytes2(0x1901), _DOMAIN_SEPARATOR, hash))\"\n                var := /** @src 17:6482:6546  \"keccak256(bytes.concat(bytes2(0x1901), _DOMAIN_SEPARATOR, hash))\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1, mload(/** @src 17:6482:6546  \"keccak256(bytes.concat(bytes2(0x1901), _DOMAIN_SEPARATOR, hash))\" */ outPtr))\n            }\n            /// @ast-id 4195 @src 17:9013:9459  \"function _hashDomain(...\"\n            function fun_hashDomain(var_eip712DomainTypehash, var_nameHash, var_versionHash, var_proxy) -> var\n            {\n                /// @src 17:9243:9438  \"abi.encode(...\"\n                let expr_4191_mpos := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                /// @src 17:9243:9438  \"abi.encode(...\"\n                let _1 := add(expr_4191_mpos, 0x20)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(_1, var_eip712DomainTypehash)\n                mstore(add(/** @src 17:9243:9438  \"abi.encode(...\" */ expr_4191_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 64), var_nameHash)\n                mstore(add(/** @src 17:9243:9438  \"abi.encode(...\" */ expr_4191_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 96), var_versionHash)\n                mstore(add(/** @src 17:9243:9438  \"abi.encode(...\" */ expr_4191_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 128), /** @src 17:9380:9393  \"block.chainid\" */ chainid())\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(/** @src 17:9243:9438  \"abi.encode(...\" */ expr_4191_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 160), and(var_proxy, sub(shl(160, 1), 1)))\n                /// @src 17:9243:9438  \"abi.encode(...\"\n                mstore(expr_4191_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 160)\n                let newFreePtr := add(expr_4191_mpos, 192)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_4191_mpos)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                /// @src 17:9197:9452  \"return...\"\n                var := /** @src 17:9216:9452  \"keccak256(...\" */ keccak256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1, mload(/** @src 17:9216:9452  \"keccak256(...\" */ expr_4191_mpos))\n            }\n            /// @ast-id 4379 @src 17:12937:13276  \"function _verify(...\"\n            function fun_verify(var_signer, var_digest, var_v, var_r, var_s) -> var_valid\n            {\n                /// @src 17:13085:13095  \"bool valid\"\n                var_valid := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0\n                /// @src 17:13133:13159  \"ecrecover(digest, v, r, s)\"\n                let _1 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                mstore(_1, var_digest)\n                mstore(add(_1, 32), and(var_v, 0xff))\n                mstore(add(_1, 64), var_r)\n                mstore(add(_1, 96), var_s)\n                /// @src 17:13133:13159  \"ecrecover(digest, v, r, s)\"\n                mstore(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0, 0)\n                /// @src 17:13133:13159  \"ecrecover(digest, v, r, s)\"\n                if iszero(staticcall(gas(), 1, _1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 128, 0, 32))\n                /// @src 17:13133:13159  \"ecrecover(digest, v, r, s)\"\n                {\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, 0, returndatasize())\n                    revert(pos, returndatasize())\n                }\n                let _2 := sub(shl(160, 1), 1)\n                /// @src 17:13173:13202  \"recoveredSigner != address(0)\"\n                let _3 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(/** @src 17:13133:13159  \"ecrecover(digest, v, r, s)\" */ mload(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0), _2)\n                /// @src 17:13173:13231  \"recoveredSigner != address(0) && recoveredSigner == signer\"\n                let expr := /** @src 17:13173:13202  \"recoveredSigner != address(0)\" */ iszero(iszero(_3))\n                /// @src 17:13173:13231  \"recoveredSigner != address(0) && recoveredSigner == signer\"\n                if expr\n                {\n                    expr := /** @src 17:13206:13231  \"recoveredSigner == signer\" */ eq(_3, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(/** @src 17:13206:13231  \"recoveredSigner == signer\" */ var_signer, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2))\n                }\n                /// @src 17:13169:13270  \"if (recoveredSigner != address(0) && recoveredSigner == signer) {...\"\n                if expr\n                {\n                    /// @src 17:13247:13259  \"valid = true\"\n                    var_valid := /** @src 17:13133:13159  \"ecrecover(digest, v, r, s)\" */ 1\n                }\n            }\n            /// @src 18:529:532  \"500\"\n            function write_to_memory_address(memPtr, value)\n            {\n                mstore(memPtr, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(/** @src 18:529:532  \"500\" */ value, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))\n            }\n            /// @src 18:529:532  \"500\"\n            function write_to_memory_uint16(memPtr, value)\n            {\n                mstore(memPtr, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(/** @src 18:529:532  \"500\" */ value, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0xffff))\n            }\n            /// @src 18:529:532  \"500\"\n            function update_storage_value_offsett_address_to_address(value)\n            {\n                sstore(/** @src 19:1921:1959  \"protocolFee = FeeRate(recipient, rate)\" */ 0x32, /** @src 18:529:532  \"500\" */ or(and(sload(/** @src 19:1921:1959  \"protocolFee = FeeRate(recipient, rate)\" */ 0x32), /** @src 18:529:532  \"500\" */ shl(160, 0xffffffffffffffffffffffff)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(/** @src 18:529:532  \"500\" */ value, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))))\n            }\n            function panic_error_0x32()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function memory_array_index_access_struct_Cancel_dyn_17485(baseRef) -> addr\n            {\n                if iszero(mload(baseRef)) { panic_error_0x32() }\n                addr := add(baseRef, 32)\n            }\n            function memory_array_index_access_struct_Cancel_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef))) { panic_error_0x32() }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_add_uint256_17670(x) -> sum\n            {\n                sum := add(x, /** @src 16:18223:18224  \"1\" */ 0x01)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256_17688(x) -> sum\n            {\n                sum := add(x, /** @src 25:200:204  \"0x20\" */ 0x20)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256_17689(y) -> sum\n            {\n                sum := add(/** @src 25:4229:4233  \"0xa0\" */ 0xa0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ y)\n                if gt(/** @src 25:4229:4233  \"0xa0\" */ 0xa0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function abi_encode_bytes32_uint256_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 5138 @src 19:3358:3875  \"function cancelTrades(Cancel[] memory cancels) external {...\"\n            function fun_cancelTrades(var_cancels_mpos)\n            {\n                /// @src 19:3448:3462  \"cancels.length\"\n                let expr := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:3448:3462  \"cancels.length\" */ var_cancels_mpos)\n                /// @src 19:3477:3486  \"uint256 i\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 19:3472:3869  \"for (uint256 i; i < cancelsLength; ) {...\"\n                for { }\n                /** @src 19:3488:3505  \"i < cancelsLength\" */ lt(var_i, expr)\n                /// @src 19:3477:3486  \"uint256 i\"\n                { }\n                {\n                    /// @src 19:3546:3556  \"cancels[i]\"\n                    let _181_mpos := mload(memory_array_index_access_struct_Cancel_dyn(var_cancels_mpos, var_i))\n                    /// @src 19:3624:3637  \"cancel.amount\"\n                    let _1 := 64\n                    let _2 := add(_181_mpos, _1)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _3 := mload(/** @src 19:3624:3637  \"cancel.amount\" */ _2)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:3582:3592  \"msg.sender\" */ caller())\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _4 := 0x20\n                    mstore(_4, /** @src 19:3570:3581  \"amountTaken\" */ 0x33)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 19:3624:3637  \"cancel.amount\" */ _1)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:3594:3605  \"cancel.hash\" */ _181_mpos))\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(_4, dataSlot)\n                    let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 19:3624:3637  \"cancel.amount\" */ _1)\n                    /// @src 19:3607:3619  \"cancel.index\"\n                    let _5 := add(_181_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _4)\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:3607:3619  \"cancel.index\" */ _5))\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(_4, dataSlot_1)\n                    let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 19:3624:3637  \"cancel.amount\" */ _1)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _6 := sload(/** @src 19:3570:3637  \"amountTaken[msg.sender][cancel.hash][cancel.index] += cancel.amount\" */ dataSlot_2)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let sum := add(_6, _3)\n                    if gt(_6, sum) { panic_error_0x11() }\n                    sstore(dataSlot_2, /** @src 19:3570:3637  \"amountTaken[msg.sender][cancel.hash][cancel.index] += cancel.amount\" */ sum)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _7 := mload(/** @src 19:3713:3724  \"cancel.hash\" */ _181_mpos)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _8 := mload(/** @src 19:3742:3754  \"cancel.index\" */ _5)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _9 := mload(/** @src 19:3772:3785  \"cancel.amount\" */ _2)\n                    /// @src 19:3656:3799  \"CancelTrade(...\"\n                    let _10 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:3624:3637  \"cancel.amount\" */ _1)\n                    /// @src 19:3656:3799  \"CancelTrade(...\"\n                    log2(_10, sub(abi_encode_bytes32_uint256_uint256(_10, _7, _8, _9), _10), 0xf4092a7c54e135dc5f273d6675327b7b7838392537d2f7b63f7acbec8c7cd296, /** @src 19:3582:3592  \"msg.sender\" */ caller())\n                    /// @src 19:3841:3844  \"++i\"\n                    var_i := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 19:3841:3844  \"++i\" */ var_i, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1)\n                }\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0)) { panic_error_0x11() }\n                ret := add(value, 1)\n            }\n            /// @ast-id 1191 @src 11:2336:2623  \"function _nonReentrantBefore() private {...\"\n            function fun_nonReentrantBefore()\n            {\n                /// @src 11:1759:1760  \"2\"\n                if /** @src 11:2468:2487  \"_status != _ENTERED\" */ eq(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sload(/** @src 11:2468:2475  \"_status\" */ 0x97), /** @src 11:1759:1760  \"2\" */ 0x02)\n                {\n                    let memPtr := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 11:1759:1760  \"2\"\n                    mstore(memPtr, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ shl(229, 4594637))\n                    /// @src 11:1759:1760  \"2\"\n                    mstore(add(memPtr, 4), 32)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src 11:1759:1760  \"2\" */ add(memPtr, 36), 31)\n                    mstore(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 11:1759:1760  \"2\" */ memPtr, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 68), /** @src 11:1759:1760  \"2\" */ \"ReentrancyGuard: reentrant call\")\n                    revert(memPtr, 100)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                sstore(/** @src 11:2468:2475  \"_status\" */ 0x97, /** @src 11:1759:1760  \"2\" */ 0x02)\n            }\n            /// @ast-id 1199 @src 11:2629:2838  \"function _nonReentrantAfter() private {...\"\n            function fun_nonReentrantAfter()\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                sstore(/** @src 11:2809:2831  \"_status = _NOT_ENTERED\" */ 0x97, /** @src 11:1716:1717  \"1\" */ 0x01)\n            }\n            /// @ast-id 5195 @src 19:4836:5035  \"function takeBid(TakeBid memory inputs) public {...\"\n            function fun_takeBid(var_inputs_5180_mpos)\n            {\n                /// @src 19:4915:4928  \"inputs.orders\"\n                let _241_mpos := mload(var_inputs_5180_mpos)\n                /// @src 19:4942:4958  \"inputs.exchanges\"\n                let _1 := 32\n                let _244_mpos := mload(add(var_inputs_5180_mpos, _1))\n                /// @src 19:4972:4987  \"inputs.takerFee\"\n                let _2 := 64\n                let _247_mpos := mload(add(var_inputs_5180_mpos, _2))\n                /// @src 19:5001:5018  \"inputs.signatures\"\n                let _3 := 96\n                let _4 := mload(add(var_inputs_5180_mpos, _3))\n                /// @src 19:18923:18950  \"Fees(protocolFee, takerFee)\"\n                let expr_mpos := /** @src 18:529:532  \"500\" */ allocate_memory_17458()\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(expr_mpos, read_from_storage_reference_type_struct_FeeRate())\n                mstore(/** @src 19:18923:18950  \"Fees(protocolFee, takerFee)\" */ add(expr_mpos, /** @src 19:4942:4958  \"inputs.exchanges\" */ _1), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _247_mpos)\n                /// @src 19:19220:19276  \"_validateOrders(orders, OrderType.BID, signatures, fees)\"\n                let expr_component_mpos, expr_component_mpos_1 := fun_validateOrders(_241_mpos, _4, expr_mpos)\n                /// @src 19:19313:19329  \"exchanges.length\"\n                let expr := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:19313:19329  \"exchanges.length\" */ _244_mpos)\n                /// @src 19:19504:19564  \"_initializeBatch(exchangesLength, OrderType.BID, msg.sender)\"\n                let expr_component_mpos_2, expr_component_mpos_3 := fun_initializeBatch_17556(expr, /** @src 19:19553:19563  \"msg.sender\" */ caller())\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                pop(allocate_and_zero_memory_struct_struct_Order())\n                pop(allocate_and_zero_memory_struct_struct_Exchange())\n                /// @src 19:19643:19652  \"uint256 i\"\n                let var_i := /** @src 19:18923:18950  \"Fees(protocolFee, takerFee)\" */ 0\n                /// @src 19:19638:20733  \"for (uint256 i; i < exchangesLength; ) {...\"\n                for { }\n                /** @src 19:19654:19673  \"i < exchangesLength\" */ lt(var_i, expr)\n                /// @src 19:19643:19652  \"uint256 i\"\n                { }\n                {\n                    /// @src 19:19691:19714  \"exchange = exchanges[i]\"\n                    let var_exchange_mpos := /** @src 19:19702:19714  \"exchanges[i]\" */ mload(memory_array_index_access_struct_Cancel_dyn(_244_mpos, var_i))\n                    /// @src 19:19728:19758  \"order = orders[exchange.index]\"\n                    let var_order_mpos := /** @src 19:19736:19758  \"orders[exchange.index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(_241_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:19743:19757  \"exchange.index\" */ var_exchange_mpos)))\n                    /// @src 19:19880:20663  \"if (...\"\n                    if /** @src 19:19901:20109  \"_validateListingFromBatch(...\" */ fun_validateListingFromBatch_17557(var_order_mpos, var_exchange_mpos, expr_component_mpos, expr_component_mpos_1)\n                    /// @src 19:19880:20663  \"if (...\"\n                    {\n                        /// @src 19:20374:20378  \"fees\"\n                        fun_insertExecutionBid(expr_component_mpos_2, expr_component_mpos_3, var_order_mpos, var_exchange_mpos, expr_mpos)\n                        /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                        let _5 := mload(/** @src 19:20609:20630  \"exchange.taker.amount\" */ add(/** @src 19:20609:20623  \"exchange.taker\" */ mload(add(var_exchange_mpos, /** @src 19:5001:5018  \"inputs.signatures\" */ _3)), /** @src 19:4942:4958  \"inputs.exchanges\" */ _1))\n                        /// @src 19:20501:20535  \"pendingAmountTaken[exchange.index]\"\n                        let _mpos := mload(memory_array_index_access_struct_Cancel_dyn(expr_component_mpos_1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:20520:20534  \"exchange.index\" */ var_exchange_mpos)))\n                        /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                        let _6 := mload(/** @src 19:20561:20577  \"exchange.listing\" */ mload(add(var_exchange_mpos, /** @src 19:4972:4987  \"inputs.takerFee\" */ _2)))\n                        /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                        mstore(/** @src 19:20501:20630  \"pendingAmountTaken[exchange.index][...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos, _6), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(mload(/** @src 19:20501:20630  \"pendingAmountTaken[exchange.index][...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos, _6)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _5))\n                    }\n                    /// @src 19:20705:20708  \"++i\"\n                    var_i := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 19:20705:20708  \"++i\" */ var_i, /** @src 19:19244:19257  \"OrderType.BID\" */ 1)\n                }\n                /// @src 19:20892:20905  \"OrderType.BID\"\n                fun_executeBatchTransfer_17558(expr_component_mpos_2, expr_component_mpos_3, expr_mpos)\n            }\n            /// @ast-id 5237 @src 19:5673:5889  \"function takeBidSingle(TakeBidSingle memory inputs) external {...\"\n            function fun_takeBidSingle(var_inputs_mpos)\n            {\n                /// @src 19:5772:5784  \"inputs.order\"\n                let _268_mpos := mload(var_inputs_mpos)\n                /// @src 19:5798:5813  \"inputs.exchange\"\n                let _271_mpos := mload(add(var_inputs_mpos, 32))\n                /// @src 19:5827:5842  \"inputs.takerFee\"\n                let _274_mpos := mload(add(var_inputs_mpos, 64))\n                /// @src 19:5856:5872  \"inputs.signature\"\n                let _1 := mload(add(var_inputs_mpos, 96))\n                /// @src 19:13292:13319  \"Fees(protocolFee, takerFee)\"\n                let expr_mpos := /** @src 18:529:532  \"500\" */ allocate_memory_17458()\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(expr_mpos, read_from_storage_reference_type_struct_FeeRate())\n                /// @src 19:13292:13319  \"Fees(protocolFee, takerFee)\"\n                let _2 := add(expr_mpos, /** @src 19:5798:5813  \"inputs.exchange\" */ 32)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(_2, _274_mpos)\n                /// @src 19:13354:13370  \"exchange.listing\"\n                let _mpos := mload(add(_271_mpos, /** @src 19:5827:5842  \"inputs.takerFee\" */ 64))\n                /// @src 19:13402:13416  \"exchange.taker\"\n                let _3 := add(_271_mpos, /** @src 19:5856:5872  \"inputs.signature\" */ 96)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _4 := mload(/** @src 19:13402:13423  \"exchange.taker.amount\" */ add(/** @src 19:13402:13416  \"exchange.taker\" */ mload(_3), /** @src 19:5798:5813  \"inputs.exchange\" */ 32))\n                /// @src 19:13495:13737  \"if (...\"\n                if /** @src 19:13512:13680  \"!_validateOrderAndListing(...\" */ cleanup_bool(iszero(/** @src 19:13513:13680  \"_validateOrderAndListing(...\" */ fun_validateOrderAndListing(_268_mpos, _271_mpos, _1, expr_mpos)))\n                /// @src 19:13495:13737  \"if (...\"\n                {\n                    /// @src 19:13712:13726  \"InvalidOrder()\"\n                    let _5 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:5827:5842  \"inputs.takerFee\" */ 64)\n                    /// @src 19:13712:13726  \"InvalidOrder()\"\n                    mstore(_5, /** @src 19:10819:10833  \"InvalidOrder()\" */ shl(224, 0xaf610693))\n                    /// @src 19:13712:13726  \"InvalidOrder()\"\n                    revert(_5, 4)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _6 := mload(/** @src 19:13932:13946  \"exchange.taker\" */ mload(_3))\n                /// @src 19:13846:14013  \"_initializeSingleExecution(...\"\n                let expr_mpos_1 := fun_initializeSingleExecution_17586(_268_mpos, _6, _4, /** @src 19:13993:14003  \"msg.sender\" */ caller())\n                /// @src 19:14250:14340  \"if (!successfulTransfers[0]) {...\"\n                if /** @src 19:14254:14277  \"!successfulTransfers[0]\" */ cleanup_bool(iszero(/** @src 19:14255:14277  \"successfulTransfers[0]\" */ read_from_memoryt_bool(memory_array_index_access_struct_Cancel_dyn_17485(/** @src 19:14143:14236  \"_executeNonfungibleTransfers(...\" */ fun_executeNonfungibleTransfers_17587(expr_mpos_1)))))\n                /// @src 19:14250:14340  \"if (!successfulTransfers[0]) {...\"\n                {\n                    /// @src 19:14304:14325  \"TokenTransferFailed()\"\n                    let _7 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:5827:5842  \"inputs.takerFee\" */ 64)\n                    /// @src 19:14304:14325  \"TokenTransferFailed()\"\n                    mstore(_7, /** @src 19:11607:11628  \"TokenTransferFailed()\" */ shl(225, 0x022e2581))\n                    /// @src 19:14304:14325  \"TokenTransferFailed()\"\n                    revert(_7, 4)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _8 := mload(/** @src 19:14529:14542  \"listing.price\" */ add(_mpos, /** @src 19:5856:5872  \"inputs.signature\" */ 96))\n                /// @src 19:14557:14571  \"order.makerFee\"\n                let _9 := add(_268_mpos, 192)\n                /// @src 19:14516:14578  \"_computeFees(listing.price, takerAmount, order.makerFee, fees)\"\n                let expr_component, expr_component_1, expr_component_2, expr_component_3 := fun_computeFees(_8, _4, /** @src 19:14557:14571  \"order.makerFee\" */ mload(_9), /** @src 19:14516:14578  \"_computeFees(listing.price, takerAmount, order.makerFee, fees)\" */ expr_mpos)\n                /// @src 19:14681:14693  \"order.trader\"\n                let _10 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 19:14681:14693  \"order.trader\" */ _268_mpos))\n                /// @src 19:14751:14765  \"makerFeeAmount\"\n                fun_transferPool(_10, /** @src 19:14725:14749  \"order.makerFee.recipient\" */ read_from_memoryt_address(/** @src 19:14725:14739  \"order.makerFee\" */ mload(_9)), /** @src 19:14751:14765  \"makerFeeAmount\" */ expr_component_2)\n                /// @src 19:14823:14837  \"takerFeeAmount\"\n                fun_transferPool(_10, /** @src 19:14798:14821  \"fees.takerFee.recipient\" */ read_from_memoryt_address(/** @src 19:14798:14811  \"fees.takerFee\" */ mload(_2)), /** @src 19:14823:14837  \"takerFeeAmount\" */ expr_component_3)\n                /// @src 19:14898:14915  \"protocolFeeAmount\"\n                fun_transferPool(_10, /** @src 19:14870:14896  \"fees.protocolFee.recipient\" */ read_from_memoryt_address(/** @src 19:14870:14886  \"fees.protocolFee\" */ mload(expr_mpos)), /** @src 19:14898:14915  \"protocolFeeAmount\" */ expr_component_1)\n                /// @src 19:15033:15080  \"totalPrice - takerFeeAmount - protocolFeeAmount\"\n                fun_transferPool(_10, /** @src 19:13993:14003  \"msg.sender\" */ caller(), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(sub(/** @src 19:15033:15060  \"totalPrice - takerFeeAmount\" */ expr_component, expr_component_3), /** @src 19:15033:15080  \"totalPrice - takerFeeAmount - protocolFeeAmount\" */ expr_component_1))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _11 := mload(/** @src 19:15168:15223  \"exchange...\" */ add(/** @src 19:15168:15199  \"exchange...\" */ mload(_3), /** @src 19:5798:5813  \"inputs.exchange\" */ 32))\n                /// @src 19:15109:15128  \"amountTaken[trader]\"\n                let _12 := mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256__of_address(_10)\n                /// @src 19:15109:15149  \"amountTaken[trader][bytes32(order.salt)]\"\n                let _13 := mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(_12, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:15137:15147  \"order.salt\" */ add(_268_mpos, 224)))\n                /// @src 19:15109:15164  \"amountTaken[trader][bytes32(order.salt)][listing.index]\"\n                let _14 := mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(_13, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:15150:15163  \"listing.index\" */ _mpos))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                sstore(_14, add(sload(/** @src 19:15109:15223  \"amountTaken[trader][bytes32(order.salt)][listing.index] += exchange...\" */ _14), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _11))\n                /// @src 19:15393:15406  \"OrderType.BID\"\n                fun_emitExecutionEvent(expr_mpos_1, _268_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:15324:15337  \"listing.index\" */ _mpos), /** @src 19:15393:15406  \"OrderType.BID\" */ expr_component, expr_mpos)\n            }\n            /// @ast-id 5255 @src 19:5895:6121  \"function takeCollectionOffer(TakeCollectionOffer memory input) public {...\"\n            function fun_takeCollectionOffer(var_input_mpos)\n            {\n                /// @src 19:6009:6020  \"input.order\"\n                let _280_mpos := mload(var_input_mpos)\n                /// @src 19:6034:6047  \"input.listing\"\n                let _283_mpos := mload(add(var_input_mpos, 32))\n                /// @src 19:6061:6075  \"input.takerFee\"\n                let _286_mpos := mload(add(var_input_mpos, 64))\n                /// @src 19:6089:6104  \"input.signature\"\n                let _1 := mload(add(var_input_mpos, 96))\n                /// @src 19:7598:7625  \"Fees(protocolFee, takerFee)\"\n                let expr_mpos := /** @src 18:529:532  \"500\" */ allocate_memory_17458()\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(expr_mpos, read_from_storage_reference_type_struct_FeeRate())\n                /// @src 19:7598:7625  \"Fees(protocolFee, takerFee)\"\n                let _2 := add(expr_mpos, /** @src 19:6034:6047  \"input.listing\" */ 32)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(_2, _286_mpos)\n                let _3 := mload(/** @src 19:7657:7671  \"listing.amount\" */ add(_283_mpos, /** @src 19:6061:6075  \"input.takerFee\" */ 64))\n                /// @src 19:7870:7883  \"listing.price\"\n                let _4 := add(_283_mpos, /** @src 19:6089:6104  \"input.signature\" */ 96)\n                /// @src 19:7743:8028  \"if (...\"\n                if /** @src 19:7760:7971  \"!_validateOfferCollection(...\" */ cleanup_bool(iszero(/** @src 19:7761:7971  \"_validateOfferCollection(...\" */ fun_validateOfferCollection(_280_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:7870:7883  \"listing.price\" */ _4), /** @src 19:7761:7971  \"_validateOfferCollection(...\" */ _283_mpos, _1, expr_mpos)))\n                /// @src 19:7743:8028  \"if (...\"\n                {\n                    /// @src 19:8003:8017  \"InvalidOrder()\"\n                    let _5 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:6061:6075  \"input.takerFee\" */ 64)\n                    /// @src 19:8003:8017  \"InvalidOrder()\"\n                    mstore(_5, /** @src 19:10819:10833  \"InvalidOrder()\" */ shl(224, 0xaf610693))\n                    /// @src 19:8003:8017  \"InvalidOrder()\"\n                    revert(_5, 4)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _6 := mload(/** @src 19:8223:8238  \"listing.tokenId\" */ add(_283_mpos, /** @src 19:6034:6047  \"input.listing\" */ 32))\n                /// @src 19:8534:8624  \"if (!successfulTransfers[0]) {...\"\n                if /** @src 19:8538:8561  \"!successfulTransfers[0]\" */ cleanup_bool(iszero(/** @src 19:8539:8561  \"successfulTransfers[0]\" */ read_from_memoryt_bool(memory_array_index_access_struct_Cancel_dyn_17485(/** @src 19:8427:8520  \"_executeNonfungibleTransfers(...\" */ fun_executeNonfungibleTransfers_17587(/** @src 19:8137:8297  \"_initializeSingleExecution(...\" */ fun_initializeSingleExecution_17586(_280_mpos, _6, _3, /** @src 19:8277:8287  \"msg.sender\" */ caller()))))))\n                /// @src 19:8534:8624  \"if (!successfulTransfers[0]) {...\"\n                {\n                    /// @src 19:8588:8609  \"TokenTransferFailed()\"\n                    let _7 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:6061:6075  \"input.takerFee\" */ 64)\n                    /// @src 19:8588:8609  \"TokenTransferFailed()\"\n                    mstore(_7, /** @src 19:11607:11628  \"TokenTransferFailed()\" */ shl(225, 0x022e2581))\n                    /// @src 19:8588:8609  \"TokenTransferFailed()\"\n                    revert(_7, 4)\n                }\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _8 := mload(/** @src 19:8813:8826  \"listing.price\" */ _4)\n                /// @src 19:8841:8855  \"order.makerFee\"\n                let _9 := add(_280_mpos, 192)\n                /// @src 19:8800:8862  \"_computeFees(listing.price, takerAmount, order.makerFee, fees)\"\n                let expr_component, expr_component_1, expr_component_2, expr_component_3 := fun_computeFees(_8, _3, /** @src 19:8841:8855  \"order.makerFee\" */ mload(_9), /** @src 19:8800:8862  \"_computeFees(listing.price, takerAmount, order.makerFee, fees)\" */ expr_mpos)\n                /// @src 19:8965:8977  \"order.trader\"\n                let _10 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 19:8965:8977  \"order.trader\" */ _280_mpos))\n                /// @src 19:9035:9049  \"makerFeeAmount\"\n                fun_transferPool(_10, /** @src 19:9009:9033  \"order.makerFee.recipient\" */ read_from_memoryt_address(/** @src 19:9009:9023  \"order.makerFee\" */ mload(_9)), /** @src 19:9035:9049  \"makerFeeAmount\" */ expr_component_2)\n                /// @src 19:9107:9121  \"takerFeeAmount\"\n                fun_transferPool(_10, /** @src 19:9082:9105  \"fees.takerFee.recipient\" */ read_from_memoryt_address(/** @src 19:9082:9095  \"fees.takerFee\" */ mload(_2)), /** @src 19:9107:9121  \"takerFeeAmount\" */ expr_component_3)\n                /// @src 19:9182:9199  \"protocolFeeAmount\"\n                fun_transferPool(_10, /** @src 19:9154:9180  \"fees.protocolFee.recipient\" */ read_from_memoryt_address(/** @src 19:9154:9170  \"fees.protocolFee\" */ mload(expr_mpos)), /** @src 19:9182:9199  \"protocolFeeAmount\" */ expr_component_1)\n                /// @src 19:9350:9397  \"totalPrice - takerFeeAmount - protocolFeeAmount\"\n                fun_transferPool(_10, /** @src 19:8277:8287  \"msg.sender\" */ caller(), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(sub(/** @src 19:9350:9377  \"totalPrice - takerFeeAmount\" */ expr_component, expr_component_3), /** @src 19:9350:9397  \"totalPrice - takerFeeAmount - protocolFeeAmount\" */ expr_component_1))\n                /// @src 19:9426:9445  \"amountTaken[trader]\"\n                let _11 := mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256__of_address(_10)\n                /// @src 19:9454:9464  \"order.salt\"\n                let _12 := add(_280_mpos, 224)\n                /// @src 19:9426:9469  \"amountTaken[trader][bytes32(order.salt)][0]\"\n                let _13 := mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32_17598(/** @src 19:9426:9466  \"amountTaken[trader][bytes32(order.salt)]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(_11, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:9454:9464  \"order.salt\" */ _12)))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                sstore(_13, add(sload(/** @src 19:9426:9484  \"amountTaken[trader][bytes32(order.salt)][0] += takerAmount\" */ _13), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3))\n                let _14 := mload(/** @src 19:9527:9549  \"order.numberOfListings\" */ add(_280_mpos, /** @src 19:6089:6104  \"input.signature\" */ 96))\n                /// @src 19:9568:9587  \"amountTaken[trader]\"\n                let _15 := mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256__of_address(_10)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let diff := sub(_14, sload(/** @src 19:9568:9611  \"amountTaken[trader][bytes32(order.salt)][0]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32_17598(/** @src 19:9568:9608  \"amountTaken[trader][bytes32(order.salt)]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(_15, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 19:9596:9606  \"order.salt\" */ _12)))))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _16 := mload(/** @src 19:9689:9699  \"order.salt\" */ _12)\n                /// @src 19:9785:9794  \"remaining\"\n                fun_emitExecutionAcceptCollectionOffer(_16, /** @src 19:8277:8287  \"msg.sender\" */ caller(), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 19:9738:9750  \"order.trader\" */ _280_mpos)), /** @src 19:9785:9794  \"remaining\" */ _283_mpos, diff)\n            }\n            /// @ast-id 3355 @src 16:23996:24598  \"function _withdrawFromPool(address from, uint256 amount) internal {...\"\n            function fun_withdrawFromPool(var_from, var_amount)\n            {\n                /// @src 16:24124:24513  \"assembly {...\"\n                let usr$x := mload(64)\n                mstore(usr$x, shl(225, 0x4aaad4a1))\n                mstore(add(usr$x, 4), var_from)\n                mstore(add(usr$x, 36), address())\n                mstore(add(usr$x, 68), var_amount)\n                /// @src 16:24522:24592  \"if (!success) {...\"\n                if /** @src 16:24526:24534  \"!success\" */ iszero(/** @src 16:24124:24513  \"assembly {...\" */ call(gas(), /** @src 16:24109:24114  \"_POOL\" */ loadimmutable(\"2231\"), /** @src -1:-1:-1 */ 0, /** @src 16:24124:24513  \"assembly {...\" */ usr$x, 100, /** @src -1:-1:-1 */ 0, 0))\n                /// @src 16:24522:24592  \"if (!success) {...\"\n                {\n                    /// @src 16:24557:24581  \"PoolWithdrawFromFailed()\"\n                    let _1 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:24124:24513  \"assembly {...\" */ 64)\n                    /// @src 16:24557:24581  \"PoolWithdrawFromFailed()\"\n                    mstore(_1, shl(224, 0xbcfdca59))\n                    revert(_1, /** @src 16:24124:24513  \"assembly {...\" */ 4)\n                }\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function read_from_storage_reference_type_struct_FeeRate() -> value\n            {\n                let memPtr := mload(/** @src 18:529:532  \"500\" */ 64)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                finalize_allocation_17467(memPtr)\n                value := memPtr\n                let _1 := sload(/** @src 19:16104:16115  \"protocolFee\" */ 0x32)\n                /// @src 18:529:532  \"500\"\n                mstore(memPtr, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(_1, sub(shl(160, 1), 1)))\n                /// @src 18:529:532  \"500\"\n                mstore(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(memPtr, 32), and(shr(160, _1), 0xffff))\n            }\n            function read_from_memoryt_bool(ptr) -> returnValue\n            {\n                returnValue := iszero(iszero(mload(ptr)))\n            }\n            function checked_mul_uint256_17687(y) -> product\n            {\n                product := mul(/** @src 25:4229:4233  \"0xa0\" */ 0xa0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ y)\n                if iszero(eq(y, div(product, /** @src 25:4229:4233  \"0xa0\" */ 0xa0)))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                { panic_error_0x11() }\n            }\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n            }\n            /// @src 18:466:472  \"10_000\"\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    /// @src 18:466:472  \"10_000\"\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            /// @ast-id 2777 @src 16:10749:11410  \"function _computeFees(...\"\n            function fun_computeFees(var_pricePerToken, var_takerAmount, var_makerFee_mpos, var_fees_2727_mpos) -> var_totalPrice, var_protocolFeeAmount, var_makerFeeAmount, var_takerFeeAmount\n            {\n                /// @src 16:11110:11150  \"totalPrice = pricePerToken * takerAmount\"\n                var_totalPrice := /** @src 16:11123:11150  \"pricePerToken * takerAmount\" */ checked_mul_uint256(var_pricePerToken, var_takerAmount)\n                /// @src 18:466:472  \"10_000\"\n                let _1 := 0x2710\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _2 := 0xffff\n                /// @src 16:11160:11221  \"makerFeeAmount = (totalPrice * makerFee.rate) / _BASIS_POINTS\"\n                var_makerFeeAmount := /** @src 18:466:472  \"10_000\" */ div(/** @src 16:11178:11204  \"totalPrice * makerFee.rate\" */ checked_mul_uint256(var_totalPrice, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 16:11191:11204  \"makerFee.rate\" */ add(var_makerFee_mpos, 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)), /** @src 18:466:472  \"10_000\" */ _1)\n                /// @src 16:11231:11297  \"takerFeeAmount = (totalPrice * fees.takerFee.rate) / _BASIS_POINTS\"\n                var_takerFeeAmount := /** @src 18:466:472  \"10_000\" */ div(/** @src 16:11249:11280  \"totalPrice * fees.takerFee.rate\" */ checked_mul_uint256(var_totalPrice, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 16:11262:11280  \"fees.takerFee.rate\" */ add(/** @src 16:11262:11275  \"fees.takerFee\" */ mload(add(var_fees_2727_mpos, /** @src 16:11191:11204  \"makerFee.rate\" */ 32)), 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)), /** @src 18:466:472  \"10_000\" */ _1)\n                /// @src 16:11307:11403  \"protocolFeeAmount =...\"\n                var_protocolFeeAmount := /** @src 18:466:472  \"10_000\" */ div(/** @src 16:11340:11374  \"totalPrice * fees.protocolFee.rate\" */ checked_mul_uint256(var_totalPrice, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 16:11353:11374  \"fees.protocolFee.rate\" */ add(/** @src 16:11353:11369  \"fees.protocolFee\" */ mload(var_fees_2727_mpos), /** @src 16:11191:11204  \"makerFee.rate\" */ 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)), /** @src 18:466:472  \"10_000\" */ _1)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function allocate_and_zero_memory_array_array_bool_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_bytes32_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_bytes32_dyn(length), not(31)))\n            }\n            /// @ast-id 3251 @src 16:20152:21582  \"function _executeNonfungibleTransfers(...\"\n            function fun_executeNonfungibleTransfers_17484(var_executionBatch_mpos) -> var_mpos\n            {\n                /// @src 16:20497:20787  \"assembly {...\"\n                let var_successfulTransfersPointer := mload(64)\n                let _1 := add(var_successfulTransfersPointer, 32)\n                mstore(64, _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                finalize_allocation_17467(_1)\n                mstore(_1, /** @src 19:11524:11525  \"1\" */ 0x01)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                calldatacopy(add(/** @src 16:20497:20787  \"assembly {...\" */ var_successfulTransfersPointer, 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ calldatasize(), /** @src 16:20497:20787  \"assembly {...\" */ 32)\n                /// @src 16:20865:21540  \"assembly {...\"\n                let usr$size := mload(var_executionBatch_mpos)\n                mstore(add(var_executionBatch_mpos, /** @src 16:20497:20787  \"assembly {...\" */ 32), /** @src 16:20865:21540  \"assembly {...\" */ 0xa1ccb98e)\n                pop(call(gas(), /** @src 16:20323:20332  \"_DELEGATE\" */ loadimmutable(\"2229\"), /** @src -1:-1:-1 */ 0, /** @src 16:20865:21540  \"assembly {...\" */ add(var_executionBatch_mpos, 60), add(usr$size, not(27)), var_successfulTransfersPointer, 96))\n                /// @src 16:21549:21575  \"return successfulTransfers\"\n                var_mpos := _1\n            }\n            /// @ast-id 3251 @src 16:20152:21582  \"function _executeNonfungibleTransfers(...\"\n            function fun_executeNonfungibleTransfers_17587(var_executionBatch_mpos) -> var_mpos\n            {\n                /// @src 16:20497:20787  \"assembly {...\"\n                let var_successfulTransfersPointer := mload(64)\n                let _1 := add(var_successfulTransfersPointer, 32)\n                mstore(64, _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                finalize_allocation_17467(_1)\n                mstore(_1, /** @src 19:13578:13591  \"OrderType.BID\" */ 1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                calldatacopy(add(/** @src 16:20497:20787  \"assembly {...\" */ var_successfulTransfersPointer, 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ calldatasize(), /** @src 16:20497:20787  \"assembly {...\" */ 32)\n                /// @src 16:20865:21540  \"assembly {...\"\n                let usr$size := mload(var_executionBatch_mpos)\n                mstore(add(var_executionBatch_mpos, /** @src 16:20497:20787  \"assembly {...\" */ 32), /** @src 16:20865:21540  \"assembly {...\" */ 0xa1ccb98e)\n                pop(call(gas(), /** @src 16:20323:20332  \"_DELEGATE\" */ loadimmutable(\"2229\"), /** @src -1:-1:-1 */ 0, /** @src 16:20865:21540  \"assembly {...\" */ add(var_executionBatch_mpos, 60), add(usr$size, not(27)), var_successfulTransfersPointer, 96))\n                /// @src 16:21549:21575  \"return successfulTransfers\"\n                var_mpos := _1\n            }\n            /// @ast-id 3251 @src 16:20152:21582  \"function _executeNonfungibleTransfers(...\"\n            function fun_executeNonfungibleTransfers(var_executionBatch_3220_mpos, var_batchIndex) -> var_mpos\n            {\n                /// @src 16:20497:20787  \"assembly {...\"\n                let var_successfulTransfersPointer := mload(64)\n                mstore(64, add(var_successfulTransfersPointer, 32))\n                /// @src 16:20833:20855  \"new bool[](batchIndex)\"\n                let expr_3245_mpos := allocate_and_zero_memory_array_array_bool_dyn(var_batchIndex)\n                /// @src 16:20865:21540  \"assembly {...\"\n                let usr$size := mload(var_executionBatch_3220_mpos)\n                mstore(add(var_executionBatch_3220_mpos, /** @src 16:20497:20787  \"assembly {...\" */ 32), /** @src 16:20865:21540  \"assembly {...\" */ 0xa1ccb98e)\n                pop(call(gas(), /** @src 16:20323:20332  \"_DELEGATE\" */ loadimmutable(\"2229\"), /** @src -1:-1:-1 */ 0, /** @src 16:20865:21540  \"assembly {...\" */ add(var_executionBatch_3220_mpos, 60), add(usr$size, not(27)), var_successfulTransfersPointer, add(/** @src 16:20497:20787  \"assembly {...\" */ 64, /** @src 16:20865:21540  \"assembly {...\" */ shl(5, var_batchIndex))))\n                /// @src 16:21549:21575  \"return successfulTransfers\"\n                var_mpos := expr_3245_mpos\n            }\n            /// @ast-id 3307 @src 16:22388:23238  \"function _transferPool(address from, address to, uint256 amount) internal {...\"\n            function fun_transferPool(var_from, var_to, var_amount)\n            {\n                /// @src 16:22472:23232  \"if (amount > 0) {...\"\n                if /** @src 16:22476:22486  \"amount > 0\" */ iszero(iszero(var_amount))\n                /// @src 16:22472:23232  \"if (amount > 0) {...\"\n                {\n                    /// @src 16:22562:23135  \"assembly {...\"\n                    let usr$x := mload(64)\n                    mstore(usr$x, shl(224, 0x23b872dd))\n                    mstore(add(usr$x, 4), var_from)\n                    mstore(add(usr$x, 36), var_to)\n                    mstore(add(usr$x, 68), var_amount)\n                    /// @src 16:23148:23222  \"if (!success) {...\"\n                    if /** @src 16:23152:23160  \"!success\" */ iszero(/** @src 16:22562:23135  \"assembly {...\" */ call(gas(), /** @src 16:22543:22548  \"_POOL\" */ loadimmutable(\"2231\"), /** @src 16:22485:22486  \"0\" */ 0x00, /** @src 16:22562:23135  \"assembly {...\" */ usr$x, 100, /** @src 16:22485:22486  \"0\" */ 0x00, 0x00))\n                    /// @src 16:23148:23222  \"if (!success) {...\"\n                    {\n                        /// @src 16:23187:23207  \"PoolTransferFailed()\"\n                        let _1 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:22562:23135  \"assembly {...\" */ 64)\n                        /// @src 16:23187:23207  \"PoolTransferFailed()\"\n                        mstore(_1, shl(224, 0xebf03b83))\n                        revert(_1, /** @src 16:22562:23135  \"assembly {...\" */ 4)\n                    }\n                }\n            }\n            /// @ast-id 3720 @src 16:31266:31716  \"function _emitExecutionAcceptCollectionOffer(...\"\n            function fun_emitExecutionAcceptCollectionOffer(var_offerCollectionHash, var_accepter, var_bidder, var_listing_3701_mpos, var_remaining)\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 16:31606:31621  \"listing.tokenId\" */ add(var_listing_3701_mpos, 32))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _2 := mload(/** @src 16:31635:31649  \"listing.amount\" */ add(var_listing_3701_mpos, 64))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _3 := mload(/** @src 16:31663:31676  \"listing.price\" */ add(var_listing_3701_mpos, 96))\n                /// @src 16:31487:31709  \"ExecutionAcceptCollectionOffer(...\"\n                let _4 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:31635:31649  \"listing.amount\" */ 64)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(_4, var_offerCollectionHash)\n                let _5 := sub(shl(160, 1), 1)\n                mstore(add(_4, /** @src 16:31606:31621  \"listing.tokenId\" */ 32), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(var_accepter, _5))\n                mstore(add(_4, /** @src 16:31635:31649  \"listing.amount\" */ 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(var_bidder, _5))\n                mstore(add(_4, /** @src 16:31663:31676  \"listing.price\" */ 96), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)\n                mstore(add(_4, 128), _2)\n                mstore(add(_4, 160), _3)\n                mstore(add(_4, 192), var_remaining)\n                /// @src 16:31487:31709  \"ExecutionAcceptCollectionOffer(...\"\n                log1(_4, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 224, /** @src 16:31487:31709  \"ExecutionAcceptCollectionOffer(...\" */ 0x0de8ec6f3c5ad776bdb633c254951684876acf499858b05f68028e0622571367)\n            }\n            /// @ast-id 4686 @src 18:3406:4219  \"function _validateOfferCollection(...\"\n            function fun_validateOfferCollection(var_order_mpos, var_pricePerItem, var_listing_mpos, var_signatures_mpos, var_fees_mpos) -> var\n            {\n                /// @src 18:3683:3734  \"hashOfferCollection(order, orderType, pricePerItem)\"\n                let expr := fun_hashOfferCollection(var_order_mpos, var_pricePerItem)\n                /// @src 18:3840:3850  \"order.salt\"\n                let _1 := add(var_order_mpos, 224)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(_1, expr)\n                let _2 := sub(shl(160, 1), 1)\n                let _3 := and(mload(/** @src 18:3923:3935  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)\n                /// @src 17:10719:10736  \"_hashToSign(hash)\"\n                let expr_1 := fun_hashToSign(expr)\n                /// @src 17:10801:11199  \"assembly {...\"\n                let var_r := mload(add(var_signatures_mpos, 32))\n                /// @src 18:3889:4044  \"_verifyAuthorization(...\"\n                let expr_2 := /** @src 17:11221:11257  \"_verify(signer, hashToSign, v, r, s)\" */ fun_verify(_3, expr_1, /** @src 17:10801:11199  \"assembly {...\" */ shr(248, mload(add(var_signatures_mpos, 96))), /** @src 17:11221:11257  \"_verify(signer, hashToSign, v, r, s)\" */ var_r, /** @src 17:10801:11199  \"assembly {...\" */ mload(add(var_signatures_mpos, 64)))\n                /// @src 18:3889:4044  \"_verifyAuthorization(...\"\n                if expr_2\n                {\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _4 := mload(/** @src 18:977:997  \"order.expirationTime\" */ add(var_order_mpos, 128))\n                    /// @src 18:3889:4044  \"_verifyAuthorization(...\"\n                    expr_2 := /** @src 18:977:1015  \"order.expirationTime > block.timestamp\" */ gt(_4, /** @src 18:1000:1015  \"block.timestamp\" */ timestamp())\n                }\n                /// @src 18:3889:4091  \"_verifyAuthorization(...\"\n                let expr_3 := expr_2\n                if expr_2\n                {\n                    expr_3 := /** @src 18:4060:4091  \"_checkFee(order.makerFee, fees)\" */ fun_checkFee(/** @src 18:4070:4084  \"order.makerFee\" */ mload(add(var_order_mpos, 192)), /** @src 18:4060:4091  \"_checkFee(order.makerFee, fees)\" */ var_fees_mpos)\n                }\n                /// @src 18:3889:4212  \"_verifyAuthorization(...\"\n                let expr_4 := expr_3\n                if expr_3\n                {\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 18:4120:4132  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2))\n                    mstore(/** @src 17:10801:11199  \"assembly {...\" */ 32, /** @src 18:4108:4119  \"amountTaken\" */ 0x33)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:10801:11199  \"assembly {...\" */ 64)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _5 := sload(/** @src 18:4108:4157  \"amountTaken[order.trader][bytes32(order.salt)][0]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32_17598(/** @src 18:4108:4154  \"amountTaken[order.trader][bytes32(order.salt)]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(dataSlot, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:4142:4152  \"order.salt\" */ _1))))\n                    /// @src 18:4108:4174  \"amountTaken[order.trader][bytes32(order.salt)][0] + listing.amount\"\n                    let expr_5 := checked_add_uint256(_5, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:4160:4174  \"listing.amount\" */ add(var_listing_mpos, /** @src 17:10801:11199  \"assembly {...\" */ 64)))\n                    /// @src 18:3889:4212  \"_verifyAuthorization(...\"\n                    expr_4 := /** @src 18:4108:4212  \"amountTaken[order.trader][bytes32(order.salt)][0] + listing.amount <=...\" */ iszero(gt(expr_5, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:4190:4212  \"order.numberOfListings\" */ add(var_order_mpos, /** @src 17:10801:11199  \"assembly {...\" */ 96))))\n                }\n                /// @src 18:3882:4212  \"return _verifyAuthorization(...\"\n                var := expr_4\n            }\n            /// @ast-id 4273 @src 17:10510:11264  \"function _verifyAuthorization(...\"\n            function fun_verifyAuthorization_41636(var_signer, var_hash, var_signatures_mpos) -> var_authorized\n            {\n                /// @src 17:10719:10736  \"_hashToSign(hash)\"\n                let expr := fun_hashToSign(var_hash)\n                /// @src 17:10801:11199  \"assembly {...\"\n                let var_r := mload(add(var_signatures_mpos, 32))\n                /// @src 17:11208:11257  \"authorized = _verify(signer, hashToSign, v, r, s)\"\n                var_authorized := /** @src 17:11221:11257  \"_verify(signer, hashToSign, v, r, s)\" */ fun_verify(var_signer, expr, /** @src 17:10801:11199  \"assembly {...\" */ shr(248, mload(add(var_signatures_mpos, 96))), /** @src 17:11221:11257  \"_verify(signer, hashToSign, v, r, s)\" */ var_r, /** @src 17:10801:11199  \"assembly {...\" */ mload(add(var_signatures_mpos, 64)))\n            }\n            /// @ast-id 4273 @src 17:10510:11264  \"function _verifyAuthorization(...\"\n            function fun_verifyAuthorization(var_signer, var_hash, var_signatures_mpos, var_index) -> var_authorized\n            {\n                /// @src 17:10719:10736  \"_hashToSign(hash)\"\n                let expr := fun_hashToSign(var_hash)\n                /// @src 17:10801:11199  \"assembly {...\"\n                let _1 := add(var_signatures_mpos, mul(65, var_index))\n                let var_r := mload(add(_1, 32))\n                /// @src 17:11208:11257  \"authorized = _verify(signer, hashToSign, v, r, s)\"\n                var_authorized := /** @src 17:11221:11257  \"_verify(signer, hashToSign, v, r, s)\" */ fun_verify(var_signer, expr, /** @src 17:10801:11199  \"assembly {...\" */ shr(248, mload(add(_1, 96))), /** @src 17:11221:11257  \"_verify(signer, hashToSign, v, r, s)\" */ var_r, /** @src 17:10801:11199  \"assembly {...\" */ mload(add(_1, 64)))\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function checked_add_uint16(x, y) -> sum\n            {\n                let _1 := 0xffff\n                sum := add(and(x, _1), and(y, _1))\n                if gt(sum, _1) { panic_error_0x11() }\n            }\n            /// @ast-id 4471 @src 18:1247:1436  \"function _checkFee(FeeRate memory makerFee, Fees memory fees) private pure returns (bool) {...\"\n            function fun_checkFee(var_makerFee_4449_mpos, var_fees_mpos) -> var\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := 0xffff\n                let cleaned := and(mload(/** @src 18:1354:1367  \"makerFee.rate\" */ add(var_makerFee_4449_mpos, 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)\n                /// @src 18:1354:1388  \"makerFee.rate + fees.takerFee.rate\"\n                let expr := checked_add_uint16(cleaned, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 18:1370:1388  \"fees.takerFee.rate\" */ add(/** @src 18:1370:1383  \"fees.takerFee\" */ mload(add(var_fees_mpos, /** @src 18:1354:1367  \"makerFee.rate\" */ 32)), 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1))\n                /// @src 18:1347:1429  \"return makerFee.rate + fees.takerFee.rate + fees.protocolFee.rate <= _BASIS_POINTS\"\n                var := /** @src 18:1354:1429  \"makerFee.rate + fees.takerFee.rate + fees.protocolFee.rate <= _BASIS_POINTS\" */ iszero(gt(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(/** @src 18:1354:1412  \"makerFee.rate + fees.takerFee.rate + fees.protocolFee.rate\" */ checked_add_uint16(expr, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 18:1391:1412  \"fees.protocolFee.rate\" */ add(/** @src 18:1391:1407  \"fees.protocolFee\" */ mload(var_fees_mpos), /** @src 18:1354:1367  \"makerFee.rate\" */ 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)), _1), /** @src 18:466:472  \"10_000\" */ 0x2710))\n            }\n            /// @ast-id 3276 @src 16:21892:22206  \"function _transferETH(address to, uint256 amount) internal {...\"\n            function fun_transferETH(var_to, var_amount)\n            {\n                /// @src 16:21961:22200  \"if (amount > 0) {...\"\n                if /** @src 16:21965:21975  \"amount > 0\" */ iszero(iszero(var_amount))\n                /// @src 16:21961:22200  \"if (amount > 0) {...\"\n                {\n                    /// @src 16:22117:22190  \"if (!success) {...\"\n                    if /** @src 16:22121:22129  \"!success\" */ iszero(/** @src 16:22017:22104  \"assembly {...\" */ call(gas(), var_to, var_amount, /** @src 16:21974:21975  \"0\" */ 0x00, 0x00, 0x00, 0x00))\n                    /// @src 16:22117:22190  \"if (!success) {...\"\n                    {\n                        /// @src 16:22156:22175  \"ETHTransferFailed()\"\n                        let _1 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 16:22156:22175  \"ETHTransferFailed()\"\n                        mstore(_1, shl(224, 0xb12d13eb))\n                        revert(_1, 4)\n                    }\n                }\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function allocate_and_zero_memory_struct_struct_Transfer() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 64), /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 96), /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 128), /** @src -1:-1:-1 */ 0)\n            }\n            /// @ast-id 3595 @src 16:29678:30525  \"function _emitExecutionEvent(...\"\n            function fun_emitExecutionEvent_17486(var_executionBatch_mpos, var_order_mpos, var_listingIndex, var_price, var_fees_mpos)\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                pop(allocate_and_zero_memory_struct_struct_Transfer())\n                /// @src 16:29939:30303  \"assembly {...\"\n                let var_transfer_mpos := add(add(var_executionBatch_mpos, mload(add(var_executionBatch_mpos, 128))), 96)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 16:30383:30393  \"order.salt\" */ add(var_order_mpos, 224))\n                /// @src 16:30499:30508  \"orderType\"\n                fun_emitOptimalExecutionEvent(var_transfer_mpos, _1, var_listingIndex, var_price, /** @src 16:30453:30467  \"order.makerFee\" */ mload(add(var_order_mpos, 192)), /** @src 16:30499:30508  \"orderType\" */ var_fees_mpos)\n            }\n            /// @ast-id 3595 @src 16:29678:30525  \"function _emitExecutionEvent(...\"\n            function fun_emitExecutionEvent(var_executionBatch_mpos, var_order_mpos, var_listingIndex, var_price, var_fees_mpos)\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                pop(allocate_and_zero_memory_struct_struct_Transfer())\n                /// @src 16:29939:30303  \"assembly {...\"\n                let var_transfer_mpos := add(add(var_executionBatch_mpos, mload(add(var_executionBatch_mpos, 128))), 96)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 16:30383:30393  \"order.salt\" */ add(var_order_mpos, 224))\n                /// @src 16:30499:30508  \"orderType\"\n                fun_emitOptimalExecutionEvent_41629(var_transfer_mpos, _1, var_listingIndex, var_price, /** @src 16:30453:30467  \"order.makerFee\" */ mload(add(var_order_mpos, 192)), /** @src 16:30499:30508  \"orderType\" */ var_fees_mpos)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function abi_encode_bytes32_uint256_uint256_uint256(headStart, value0, value1, value2, value3) -> tail\n            {\n                tail := add(headStart, 128)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), value3)\n            }\n            function abi_encode_struct_FeeRate(value, pos)\n            {\n                mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n                mstore(add(pos, 0x20), and(mload(add(value, 0x20)), 0xffff))\n            }\n            function abi_encode_struct_Transfer_bytes32_uint256_uint256_struct_FeeRate_struct_Fees_enum_OrderType_50159(headStart, value0, value1, value2, value3, value4, value5) -> tail\n            {\n                tail := add(headStart, 480)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(mload(value0), _1))\n                mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n                mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n                mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n                let memberValue0 := mload(add(value0, 0x80))\n                abi_encode_enum_AssetType(memberValue0, add(headStart, 0x80))\n                mstore(add(headStart, 160), value1)\n                mstore(add(headStart, 192), value2)\n                mstore(add(headStart, 224), value3)\n                abi_encode_struct_FeeRate(value4, add(headStart, 256))\n                abi_encode_struct_FeeRate(mload(value5), add(headStart, 320))\n                let memberValue0_1 := mload(add(value5, 0x20))\n                abi_encode_struct_FeeRate(memberValue0_1, add(headStart, 384))\n                mstore(add(headStart, 448), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function abi_encode_struct_Transfer_bytes32_uint256_uint256_struct_FeeRate_struct_Fees_enum_OrderType(headStart, value0, value1, value2, value3, value4, value5) -> tail\n            {\n                tail := add(headStart, 480)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(mload(value0), _1))\n                mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n                mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n                mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n                let memberValue0 := mload(add(value0, 0x80))\n                abi_encode_enum_AssetType(memberValue0, add(headStart, 0x80))\n                mstore(add(headStart, 160), value1)\n                mstore(add(headStart, 192), value2)\n                mstore(add(headStart, 224), value3)\n                abi_encode_struct_FeeRate(value4, add(headStart, 256))\n                abi_encode_struct_FeeRate(mload(value5), add(headStart, 320))\n                let memberValue0_1 := mload(add(value5, 0x20))\n                abi_encode_struct_FeeRate(memberValue0_1, add(headStart, 384))\n                abi_encode_enum_OrderType_57301(add(headStart, 448))\n            }\n            /// @ast-id 3555 @src 16:26637:29287  \"function _emitOptimalExecutionEvent(...\"\n            function fun_emitOptimalExecutionEvent(var_transfer_mpos, var_orderHash, var_listingIndex, var_price, var_makerFee_mpos, var_fees_mpos)\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 16:27081:27099  \"transfer.assetType\" */ add(var_transfer_mpos, 128))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                validator_assert_enum_AssetType(_1)\n                validator_assert_enum_AssetType(_1)\n                /// @src 16:27081:27161  \"transfer.assetType == AssetType.ERC721 &&...\"\n                let expr := /** @src 16:27081:27119  \"transfer.assetType == AssetType.ERC721\" */ iszero(_1)\n                /// @src 16:27081:27161  \"transfer.assetType == AssetType.ERC721 &&...\"\n                if expr\n                {\n                    expr := /** @src 16:27135:27161  \"fees.protocolFee.rate == 0\" */ iszero(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(/** @src 16:27135:27156  \"fees.protocolFee.rate\" */ read_from_memoryt_uint16(add(/** @src 16:27135:27151  \"fees.protocolFee\" */ mload(var_fees_mpos), /** @src 16:27135:27156  \"fees.protocolFee.rate\" */ 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0xffff))\n                }\n                /// @src 16:27081:27204  \"transfer.assetType == AssetType.ERC721 &&...\"\n                let expr_1 := expr\n                if expr\n                {\n                    expr_1 := /** @src 16:27177:27204  \"transfer.id < 1 << (11 * 8)\" */ lt(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:27177:27188  \"transfer.id\" */ add(var_transfer_mpos, 32)), /** @src 16:27191:27204  \"1 << (11 * 8)\" */ shl(88, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1))\n                }\n                /// @src 16:27081:27247  \"transfer.assetType == AssetType.ERC721 &&...\"\n                let expr_2 := expr_1\n                if expr_1\n                {\n                    expr_2 := /** @src 16:27220:27247  \"listingIndex < 1 << (1 * 8)\" */ lt(var_listingIndex, /** @src 16:27235:27247  \"1 << (1 * 8)\" */ 0x0100)\n                }\n                /// @src 16:27081:27284  \"transfer.assetType == AssetType.ERC721 &&...\"\n                let expr_3 := expr_2\n                if expr_2\n                {\n                    expr_3 := /** @src 16:27263:27284  \"price < 1 << (11 * 8)\" */ lt(var_price, /** @src 16:27191:27204  \"1 << (11 * 8)\" */ shl(88, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1))\n                }\n                /// @src 16:26900:29022  \"if (...\"\n                if expr_3\n                {\n                    /// @src 16:27313:27326  \"makerFee.rate\"\n                    let _2 := 32\n                    /// @src 16:27313:27358  \"makerFee.rate == 0 && fees.takerFee.rate == 0\"\n                    let expr_4 := /** @src 16:27313:27331  \"makerFee.rate == 0\" */ iszero(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(cleanup_uint16(mload(/** @src 16:27313:27326  \"makerFee.rate\" */ add(var_makerFee_mpos, _2))), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0xffff))\n                    /// @src 16:27313:27358  \"makerFee.rate == 0 && fees.takerFee.rate == 0\"\n                    let expr_5 := expr_4\n                    if expr_4\n                    {\n                        expr_4 := /** @src 16:27335:27358  \"fees.takerFee.rate == 0\" */ iszero(cleanup_uint16(/** @src 16:27335:27353  \"fees.takerFee.rate\" */ read_from_memoryt_uint16(add(/** @src 16:27335:27348  \"fees.takerFee\" */ mload(add(var_fees_mpos, /** @src 16:27313:27326  \"makerFee.rate\" */ _2)), _2))))\n                    }\n                    /// @src 16:27309:29012  \"if (makerFee.rate == 0 && fees.takerFee.rate == 0) {...\"\n                    switch expr_4\n                    case 0 {\n                        /// @src 16:27862:29012  \"if (makerFee.rate == 0) {...\"\n                        switch /** @src 16:27866:27884  \"makerFee.rate == 0\" */ expr_5\n                        case /** @src 16:27862:29012  \"if (makerFee.rate == 0) {...\" */ 0 {\n                            /// @src 16:28440:29012  \"if (fees.takerFee.rate == 0) {...\"\n                            if /** @src 16:28444:28467  \"fees.takerFee.rate == 0\" */ iszero(cleanup_uint16(/** @src 16:28444:28462  \"fees.takerFee.rate\" */ read_from_memoryt_uint16(add(/** @src 16:28444:28457  \"fees.takerFee\" */ mload(add(var_fees_mpos, /** @src 16:27313:27326  \"makerFee.rate\" */ _2)), _2))))\n                            /// @src 16:28440:29012  \"if (fees.takerFee.rate == 0) {...\"\n                            {\n                                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                                let _3 := mload(/** @src 16:28626:28637  \"transfer.id\" */ add(var_transfer_mpos, /** @src 16:27313:27326  \"makerFee.rate\" */ _2))\n                                /// @src 16:28571:28738  \"packTokenIdListingIndexTrader(...\"\n                                let expr_6 := fun_packTokenIdListingIndexTrader(_3, var_listingIndex, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:28701:28716  \"transfer.trader\" */ var_transfer_mpos)))\n                                /// @src 16:28760:28916  \"packTypePriceCollection(...\"\n                                let expr_7 := fun_packTypePriceCollection_50156(var_price, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:28875:28894  \"transfer.collection\" */ add(var_transfer_mpos, 96))))\n                                /// @src 16:28938:28955  \"packFee(makerFee)\"\n                                let expr_8 := fun_packFee(var_makerFee_mpos)\n                                /// @src 16:28492:28973  \"Execution721MakerFeePacked(...\"\n                                let _4 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 16:28492:28973  \"Execution721MakerFeePacked(...\"\n                                log1(_4, sub(abi_encode_bytes32_uint256_uint256_uint256(_4, var_orderHash, expr_6, expr_7, expr_8), _4), 0x7dc5c0699ac8dd5250cbe368a2fc3b4a2daadb120ad07f6cccea29f83482686e)\n                                /// @src 16:28991:28998  \"return;\"\n                                leave\n                            }\n                        }\n                        default /// @src 16:27862:29012  \"if (makerFee.rate == 0) {...\"\n                        {\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _5 := mload(/** @src 16:28043:28054  \"transfer.id\" */ add(var_transfer_mpos, /** @src 16:27313:27326  \"makerFee.rate\" */ _2))\n                            /// @src 16:27988:28155  \"packTokenIdListingIndexTrader(...\"\n                            let expr_9 := fun_packTokenIdListingIndexTrader(_5, var_listingIndex, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:28118:28133  \"transfer.trader\" */ var_transfer_mpos)))\n                            /// @src 16:28177:28333  \"packTypePriceCollection(...\"\n                            let expr_10 := fun_packTypePriceCollection_50156(var_price, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:28292:28311  \"transfer.collection\" */ add(var_transfer_mpos, 96))))\n                            /// @src 16:28355:28377  \"packFee(fees.takerFee)\"\n                            let expr_11 := fun_packFee(/** @src 16:28363:28376  \"fees.takerFee\" */ mload(add(var_fees_mpos, /** @src 16:27313:27326  \"makerFee.rate\" */ _2)))\n                            /// @src 16:27909:28395  \"Execution721TakerFeePacked(...\"\n                            let _6 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 16:27909:28395  \"Execution721TakerFeePacked(...\"\n                            log1(_6, sub(abi_encode_bytes32_uint256_uint256_uint256(_6, var_orderHash, expr_9, expr_10, expr_11), _6), 0x0fcf17fac114131b10f37b183c6a60f905911e52802caeeb3e6ea210398b81ab)\n                            /// @src 16:28413:28420  \"return;\"\n                            leave\n                        }\n                    }\n                    default /// @src 16:27309:29012  \"if (makerFee.rate == 0 && fees.takerFee.rate == 0) {...\"\n                    {\n                        /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                        let _7 := mload(/** @src 16:27509:27520  \"transfer.id\" */ add(var_transfer_mpos, /** @src 16:27313:27326  \"makerFee.rate\" */ _2))\n                        /// @src 16:27454:27621  \"packTokenIdListingIndexTrader(...\"\n                        let expr_12 := fun_packTokenIdListingIndexTrader(_7, var_listingIndex, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:27584:27599  \"transfer.trader\" */ var_transfer_mpos)))\n                        /// @src 16:27643:27799  \"packTypePriceCollection(...\"\n                        let expr_13 := fun_packTypePriceCollection_50156(var_price, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:27758:27777  \"transfer.collection\" */ add(var_transfer_mpos, 96))))\n                        /// @src 16:27383:27817  \"Execution721Packed(...\"\n                        let _8 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 16:27383:27817  \"Execution721Packed(...\"\n                        log1(_8, sub(abi_encode_bytes32_uint256_uint256(_8, var_orderHash, expr_12, expr_13), _8), 0x1d5e12b51dee5e4d34434576c3fb99714a85f57b0fd546ada4b0bddd736d12b2)\n                        /// @src 16:27835:27842  \"return;\"\n                        leave\n                    }\n                }\n                /// @src 16:29037:29280  \"Execution({...\"\n                let _9 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                /// @src 16:29037:29280  \"Execution({...\"\n                log1(_9, sub(abi_encode_struct_Transfer_bytes32_uint256_uint256_struct_FeeRate_struct_Fees_enum_OrderType_50159(_9, var_transfer_mpos, var_orderHash, var_listingIndex, var_price, var_makerFee_mpos, var_fees_mpos), _9), 0xf2f66294df6fae7ac681cbe2f6d91c6904485929679dce263e8f6539b7d5c559)\n            }\n            /// @ast-id 3555 @src 16:26637:29287  \"function _emitOptimalExecutionEvent(...\"\n            function fun_emitOptimalExecutionEvent_41629(var_transfer_mpos, var_orderHash, var_listingIndex, var_price, var_makerFee_mpos, var_fees_mpos)\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 16:27081:27099  \"transfer.assetType\" */ add(var_transfer_mpos, 128))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                validator_assert_enum_AssetType(_1)\n                validator_assert_enum_AssetType(_1)\n                /// @src 16:27081:27161  \"transfer.assetType == AssetType.ERC721 &&...\"\n                let expr := /** @src 16:27081:27119  \"transfer.assetType == AssetType.ERC721\" */ iszero(_1)\n                /// @src 16:27081:27161  \"transfer.assetType == AssetType.ERC721 &&...\"\n                if expr\n                {\n                    expr := /** @src 16:27135:27161  \"fees.protocolFee.rate == 0\" */ iszero(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(/** @src 16:27135:27156  \"fees.protocolFee.rate\" */ read_from_memoryt_uint16(add(/** @src 16:27135:27151  \"fees.protocolFee\" */ mload(var_fees_mpos), /** @src 16:27135:27156  \"fees.protocolFee.rate\" */ 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0xffff))\n                }\n                /// @src 16:27081:27204  \"transfer.assetType == AssetType.ERC721 &&...\"\n                let expr_1 := expr\n                if expr\n                {\n                    expr_1 := /** @src 16:27177:27204  \"transfer.id < 1 << (11 * 8)\" */ lt(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:27177:27188  \"transfer.id\" */ add(var_transfer_mpos, 32)), /** @src 16:27191:27204  \"1 << (11 * 8)\" */ shl(88, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1))\n                }\n                /// @src 16:27081:27247  \"transfer.assetType == AssetType.ERC721 &&...\"\n                let expr_2 := expr_1\n                if expr_1\n                {\n                    expr_2 := /** @src 16:27220:27247  \"listingIndex < 1 << (1 * 8)\" */ lt(var_listingIndex, /** @src 16:27235:27247  \"1 << (1 * 8)\" */ 0x0100)\n                }\n                /// @src 16:27081:27284  \"transfer.assetType == AssetType.ERC721 &&...\"\n                let expr_3 := expr_2\n                if expr_2\n                {\n                    expr_3 := /** @src 16:27263:27284  \"price < 1 << (11 * 8)\" */ lt(var_price, /** @src 16:27191:27204  \"1 << (11 * 8)\" */ shl(88, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1))\n                }\n                /// @src 16:26900:29022  \"if (...\"\n                if expr_3\n                {\n                    /// @src 16:27313:27326  \"makerFee.rate\"\n                    let _2 := 32\n                    /// @src 16:27313:27358  \"makerFee.rate == 0 && fees.takerFee.rate == 0\"\n                    let expr_4 := /** @src 16:27313:27331  \"makerFee.rate == 0\" */ iszero(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(cleanup_uint16(mload(/** @src 16:27313:27326  \"makerFee.rate\" */ add(var_makerFee_mpos, _2))), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0xffff))\n                    /// @src 16:27313:27358  \"makerFee.rate == 0 && fees.takerFee.rate == 0\"\n                    let expr_5 := expr_4\n                    if expr_4\n                    {\n                        expr_4 := /** @src 16:27335:27358  \"fees.takerFee.rate == 0\" */ iszero(cleanup_uint16(/** @src 16:27335:27353  \"fees.takerFee.rate\" */ read_from_memoryt_uint16(add(/** @src 16:27335:27348  \"fees.takerFee\" */ mload(add(var_fees_mpos, /** @src 16:27313:27326  \"makerFee.rate\" */ _2)), _2))))\n                    }\n                    /// @src 16:27309:29012  \"if (makerFee.rate == 0 && fees.takerFee.rate == 0) {...\"\n                    switch expr_4\n                    case 0 {\n                        /// @src 16:27862:29012  \"if (makerFee.rate == 0) {...\"\n                        switch /** @src 16:27866:27884  \"makerFee.rate == 0\" */ expr_5\n                        case /** @src 16:27862:29012  \"if (makerFee.rate == 0) {...\" */ 0 {\n                            /// @src 16:28440:29012  \"if (fees.takerFee.rate == 0) {...\"\n                            if /** @src 16:28444:28467  \"fees.takerFee.rate == 0\" */ iszero(cleanup_uint16(/** @src 16:28444:28462  \"fees.takerFee.rate\" */ read_from_memoryt_uint16(add(/** @src 16:28444:28457  \"fees.takerFee\" */ mload(add(var_fees_mpos, /** @src 16:27313:27326  \"makerFee.rate\" */ _2)), _2))))\n                            /// @src 16:28440:29012  \"if (fees.takerFee.rate == 0) {...\"\n                            {\n                                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                                let _3 := mload(/** @src 16:28626:28637  \"transfer.id\" */ add(var_transfer_mpos, /** @src 16:27313:27326  \"makerFee.rate\" */ _2))\n                                /// @src 16:28571:28738  \"packTokenIdListingIndexTrader(...\"\n                                let expr_6 := fun_packTokenIdListingIndexTrader(_3, var_listingIndex, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:28701:28716  \"transfer.trader\" */ var_transfer_mpos)))\n                                /// @src 16:28760:28916  \"packTypePriceCollection(...\"\n                                let expr_7 := fun_packTypePriceCollection(var_price, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:28875:28894  \"transfer.collection\" */ add(var_transfer_mpos, 96))))\n                                /// @src 16:28938:28955  \"packFee(makerFee)\"\n                                let expr_8 := fun_packFee(var_makerFee_mpos)\n                                /// @src 16:28492:28973  \"Execution721MakerFeePacked(...\"\n                                let _4 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 16:28492:28973  \"Execution721MakerFeePacked(...\"\n                                log1(_4, sub(abi_encode_bytes32_uint256_uint256_uint256(_4, var_orderHash, expr_6, expr_7, expr_8), _4), 0x7dc5c0699ac8dd5250cbe368a2fc3b4a2daadb120ad07f6cccea29f83482686e)\n                                /// @src 16:28991:28998  \"return;\"\n                                leave\n                            }\n                        }\n                        default /// @src 16:27862:29012  \"if (makerFee.rate == 0) {...\"\n                        {\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _5 := mload(/** @src 16:28043:28054  \"transfer.id\" */ add(var_transfer_mpos, /** @src 16:27313:27326  \"makerFee.rate\" */ _2))\n                            /// @src 16:27988:28155  \"packTokenIdListingIndexTrader(...\"\n                            let expr_9 := fun_packTokenIdListingIndexTrader(_5, var_listingIndex, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:28118:28133  \"transfer.trader\" */ var_transfer_mpos)))\n                            /// @src 16:28177:28333  \"packTypePriceCollection(...\"\n                            let expr_10 := fun_packTypePriceCollection(var_price, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:28292:28311  \"transfer.collection\" */ add(var_transfer_mpos, 96))))\n                            /// @src 16:28355:28377  \"packFee(fees.takerFee)\"\n                            let expr_11 := fun_packFee(/** @src 16:28363:28376  \"fees.takerFee\" */ mload(add(var_fees_mpos, /** @src 16:27313:27326  \"makerFee.rate\" */ _2)))\n                            /// @src 16:27909:28395  \"Execution721TakerFeePacked(...\"\n                            let _6 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 16:27909:28395  \"Execution721TakerFeePacked(...\"\n                            log1(_6, sub(abi_encode_bytes32_uint256_uint256_uint256(_6, var_orderHash, expr_9, expr_10, expr_11), _6), 0x0fcf17fac114131b10f37b183c6a60f905911e52802caeeb3e6ea210398b81ab)\n                            /// @src 16:28413:28420  \"return;\"\n                            leave\n                        }\n                    }\n                    default /// @src 16:27309:29012  \"if (makerFee.rate == 0 && fees.takerFee.rate == 0) {...\"\n                    {\n                        /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                        let _7 := mload(/** @src 16:27509:27520  \"transfer.id\" */ add(var_transfer_mpos, /** @src 16:27313:27326  \"makerFee.rate\" */ _2))\n                        /// @src 16:27454:27621  \"packTokenIdListingIndexTrader(...\"\n                        let expr_12 := fun_packTokenIdListingIndexTrader(_7, var_listingIndex, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:27584:27599  \"transfer.trader\" */ var_transfer_mpos)))\n                        /// @src 16:27643:27799  \"packTypePriceCollection(...\"\n                        let expr_13 := fun_packTypePriceCollection(var_price, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:27758:27777  \"transfer.collection\" */ add(var_transfer_mpos, 96))))\n                        /// @src 16:27383:27817  \"Execution721Packed(...\"\n                        let _8 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 16:27383:27817  \"Execution721Packed(...\"\n                        log1(_8, sub(abi_encode_bytes32_uint256_uint256(_8, var_orderHash, expr_12, expr_13), _8), 0x1d5e12b51dee5e4d34434576c3fb99714a85f57b0fd546ada4b0bddd736d12b2)\n                        /// @src 16:27835:27842  \"return;\"\n                        leave\n                    }\n                }\n                /// @src 16:29037:29280  \"Execution({...\"\n                let _9 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(64)\n                /// @src 16:29037:29280  \"Execution({...\"\n                log1(_9, sub(abi_encode_struct_Transfer_bytes32_uint256_uint256_struct_FeeRate_struct_Fees_enum_OrderType(_9, var_transfer_mpos, var_orderHash, var_listingIndex, var_price, var_makerFee_mpos, var_fees_mpos), _9), 0xf2f66294df6fae7ac681cbe2f6d91c6904485929679dce263e8f6539b7d5c559)\n            }\n            /// @ast-id 3628 @src 16:30531:30814  \"function packTokenIdListingIndexTrader(...\"\n            function fun_packTokenIdListingIndexTrader(var_tokenId, var_listingIndex, var_trader) -> var\n            {\n                /// @src 16:30696:30807  \"return...\"\n                var := /** @src 16:30715:30807  \"(tokenId << (21 * 8)) |...\" */ or(/** @src 16:30715:30777  \"(tokenId << (21 * 8)) |...\" */ or(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ shl(/** @src 16:30728:30734  \"21 * 8\" */ 0xa8, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ var_tokenId), shl(/** @src 16:30769:30775  \"20 * 8\" */ 0xa0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ var_listingIndex)), and(/** @src 16:30792:30807  \"uint160(trader)\" */ var_trader, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))\n            }\n            /// @ast-id 3665 @src 16:30820:31106  \"function packTypePriceCollection(...\"\n            function fun_packTypePriceCollection_50156(var_price, var_collection) -> var\n            {\n                /// @src 16:30980:31099  \"return...\"\n                var := /** @src 16:30999:31099  \"(uint256(orderType) << (31 * 8)) |...\" */ or(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ shl(/** @src 16:31057:31063  \"20 * 8\" */ 0xa0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ var_price), and(/** @src 16:31080:31099  \"uint160(collection)\" */ var_collection, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))\n            }\n            /// @ast-id 3665 @src 16:30820:31106  \"function packTypePriceCollection(...\"\n            function fun_packTypePriceCollection(var_price, var_collection) -> var\n            {\n                /// @src 16:30980:31099  \"return...\"\n                var := /** @src 16:30999:31099  \"(uint256(orderType) << (31 * 8)) |...\" */ or(or(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ shl(/** @src 16:31057:31063  \"20 * 8\" */ 0xa0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ var_price), and(/** @src 16:31080:31099  \"uint160(collection)\" */ var_collection, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))), shl(248, 1))\n            }\n            /// @ast-id 3692 @src 16:31112:31260  \"function packFee(FeeRate memory fee) private pure returns (uint256) {...\"\n            function fun_packFee(var_fee_mpos) -> var\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let result := and(shl(/** @src 16:31220:31226  \"20 * 8\" */ 0xa0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:31206:31214  \"fee.rate\" */ add(var_fee_mpos, 32))), /** @src 18:529:532  \"500\" */ shl(160, 65535))\n                /// @src 16:31190:31253  \"return (uint256(fee.rate) << (20 * 8)) | uint160(fee.recipient)\"\n                var := /** @src 16:31197:31253  \"(uint256(fee.rate) << (20 * 8)) | uint160(fee.recipient)\" */ or(result, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 16:31239:31252  \"fee.recipient\" */ var_fee_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))\n            }\n            /// @ast-id 4957 @src 18:7461:8054  \"function _validateOrderAndListing(...\"\n            function fun_validateOrderAndListing_17481(var_order_mpos, var_exchange_mpos, var_signature_mpos, var_fees_mpos) -> var\n            {\n                /// @src 18:7714:7730  \"exchange.listing\"\n                let _mpos := mload(add(var_exchange_mpos, 64))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 18:7763:7776  \"listing.index\" */ _mpos)\n                /// @src 18:2995:3022  \"hashOrder(order, orderType)\"\n                let expr := fun_hashOrder(var_order_mpos)\n                /// @src 18:3128:3138  \"order.salt\"\n                let _2 := add(var_order_mpos, 224)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 18:3128:3138  \"order.salt\" */ _2, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr)\n                let _3 := sub(shl(160, 1), 1)\n                /// @src 18:3177:3345  \"_verifyAuthorization(...\"\n                let expr_1 := /** @src 18:3177:3308  \"_verifyAuthorization(...\" */ fun_verifyAuthorization_41636(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 18:3211:3223  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3), /** @src 18:3177:3308  \"_verifyAuthorization(...\" */ expr, var_signature_mpos)\n                /// @src 18:3177:3345  \"_verifyAuthorization(...\"\n                if expr_1\n                {\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _4 := mload(/** @src 18:977:997  \"order.expirationTime\" */ add(var_order_mpos, 128))\n                    /// @src 18:3177:3345  \"_verifyAuthorization(...\"\n                    expr_1 := /** @src 18:977:1015  \"order.expirationTime > block.timestamp\" */ gt(_4, /** @src 18:1000:1015  \"block.timestamp\" */ timestamp())\n                }\n                /// @src 18:3177:3392  \"_verifyAuthorization(...\"\n                let expr_2 := expr_1\n                if expr_1\n                {\n                    expr_2 := /** @src 18:3361:3392  \"_checkFee(order.makerFee, fees)\" */ fun_checkFee(/** @src 18:3371:3385  \"order.makerFee\" */ mload(add(var_order_mpos, 192)), /** @src 18:3361:3392  \"_checkFee(order.makerFee, fees)\" */ var_fees_mpos)\n                }\n                /// @src 18:7805:7917  \"_validateOrder(order, orderType, signature, fees, 0) &&...\"\n                let expr_3 := expr_2\n                if expr_2\n                {\n                    expr_3 := /** @src 18:7873:7917  \"_validateListing(order, orderType, exchange)\" */ fun_validateListing(var_order_mpos, var_exchange_mpos)\n                }\n                /// @src 18:7805:8047  \"_validateOrder(order, orderType, signature, fees, 0) &&...\"\n                let expr_4 := expr_3\n                if expr_3\n                {\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _5 := and(mload(/** @src 18:7945:7957  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3)\n                    /// @src -1:-1:-1\n                    let _6 := 0\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src -1:-1:-1 */ _6, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _5)\n                    mstore(0x20, /** @src 18:7933:7944  \"amountTaken\" */ 0x33)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let dataSlot := keccak256(/** @src -1:-1:-1 */ _6, /** @src 18:7714:7730  \"exchange.listing\" */ 64)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src -1:-1:-1 */ _6, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:7967:7977  \"order.salt\" */ _2))\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(0x20, dataSlot)\n                    let _7 := keccak256(/** @src -1:-1:-1 */ _6, /** @src 18:7714:7730  \"exchange.listing\" */ 64)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src -1:-1:-1 */ _6, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)\n                    mstore(0x20, _7)\n                    let _8 := sload(keccak256(/** @src -1:-1:-1 */ _6, /** @src 18:7714:7730  \"exchange.listing\" */ 64))\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let sum := add(_8, mload(/** @src 18:7996:8017  \"exchange.taker.amount\" */ add(/** @src 18:7996:8010  \"exchange.taker\" */ mload(add(var_exchange_mpos, 96)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0x20)))\n                    if gt(_8, sum) { panic_error_0x11() }\n                    /// @src 18:7805:8047  \"_validateOrder(order, orderType, signature, fees, 0) &&...\"\n                    expr_4 := /** @src 18:7933:8047  \"amountTaken[order.trader][bytes32(order.salt)][listingIndex] + exchange.taker.amount <=...\" */ iszero(gt(sum, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:8033:8047  \"listing.amount\" */ add(_mpos, /** @src 18:7714:7730  \"exchange.listing\" */ 64))))\n                }\n                /// @src 18:7786:8047  \"return...\"\n                var := expr_4\n            }\n            /// @ast-id 4957 @src 18:7461:8054  \"function _validateOrderAndListing(...\"\n            function fun_validateOrderAndListing(var_order_mpos, var_exchange_mpos, var_signature_mpos, var_fees_mpos) -> var\n            {\n                /// @src 18:7714:7730  \"exchange.listing\"\n                let _mpos := mload(add(var_exchange_mpos, 64))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 18:7763:7776  \"listing.index\" */ _mpos)\n                /// @src 18:2995:3022  \"hashOrder(order, orderType)\"\n                let expr := fun_hashOrder_50165(var_order_mpos)\n                /// @src 18:3128:3138  \"order.salt\"\n                let _2 := add(var_order_mpos, 224)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 18:3128:3138  \"order.salt\" */ _2, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr)\n                let _3 := sub(shl(160, 1), 1)\n                /// @src 18:3177:3345  \"_verifyAuthorization(...\"\n                let expr_1 := /** @src 18:3177:3308  \"_verifyAuthorization(...\" */ fun_verifyAuthorization_41636(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 18:3211:3223  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3), /** @src 18:3177:3308  \"_verifyAuthorization(...\" */ expr, var_signature_mpos)\n                /// @src 18:3177:3345  \"_verifyAuthorization(...\"\n                if expr_1\n                {\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _4 := mload(/** @src 18:977:997  \"order.expirationTime\" */ add(var_order_mpos, 128))\n                    /// @src 18:3177:3345  \"_verifyAuthorization(...\"\n                    expr_1 := /** @src 18:977:1015  \"order.expirationTime > block.timestamp\" */ gt(_4, /** @src 18:1000:1015  \"block.timestamp\" */ timestamp())\n                }\n                /// @src 18:3177:3392  \"_verifyAuthorization(...\"\n                let expr_2 := expr_1\n                if expr_1\n                {\n                    expr_2 := /** @src 18:3361:3392  \"_checkFee(order.makerFee, fees)\" */ fun_checkFee(/** @src 18:3371:3385  \"order.makerFee\" */ mload(add(var_order_mpos, 192)), /** @src 18:3361:3392  \"_checkFee(order.makerFee, fees)\" */ var_fees_mpos)\n                }\n                /// @src 18:7805:7917  \"_validateOrder(order, orderType, signature, fees, 0) &&...\"\n                let expr_3 := expr_2\n                if expr_2\n                {\n                    expr_3 := /** @src 18:7873:7917  \"_validateListing(order, orderType, exchange)\" */ fun_validateListing_41635(var_order_mpos, var_exchange_mpos)\n                }\n                /// @src 18:7805:8047  \"_validateOrder(order, orderType, signature, fees, 0) &&...\"\n                let expr_4 := expr_3\n                if expr_3\n                {\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _5 := and(mload(/** @src 18:7945:7957  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _3)\n                    /// @src -1:-1:-1\n                    let _6 := 0\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src -1:-1:-1 */ _6, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _5)\n                    mstore(0x20, /** @src 18:7933:7944  \"amountTaken\" */ 0x33)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let dataSlot := keccak256(/** @src -1:-1:-1 */ _6, /** @src 18:7714:7730  \"exchange.listing\" */ 64)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src -1:-1:-1 */ _6, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:7967:7977  \"order.salt\" */ _2))\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(0x20, dataSlot)\n                    let _7 := keccak256(/** @src -1:-1:-1 */ _6, /** @src 18:7714:7730  \"exchange.listing\" */ 64)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src -1:-1:-1 */ _6, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)\n                    mstore(0x20, _7)\n                    let _8 := sload(keccak256(/** @src -1:-1:-1 */ _6, /** @src 18:7714:7730  \"exchange.listing\" */ 64))\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let sum := add(_8, mload(/** @src 18:7996:8017  \"exchange.taker.amount\" */ add(/** @src 18:7996:8010  \"exchange.taker\" */ mload(add(var_exchange_mpos, 96)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0x20)))\n                    if gt(_8, sum) { panic_error_0x11() }\n                    /// @src 18:7805:8047  \"_validateOrder(order, orderType, signature, fees, 0) &&...\"\n                    expr_4 := /** @src 18:7933:8047  \"amountTaken[order.trader][bytes32(order.salt)][listingIndex] + exchange.taker.amount <=...\" */ iszero(gt(sum, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:8033:8047  \"listing.amount\" */ add(_mpos, /** @src 18:7714:7730  \"exchange.listing\" */ 64))))\n                }\n                /// @src 18:7786:8047  \"return...\"\n                var := expr_4\n            }\n            /// @ast-id 4610 @src 18:2758:3399  \"function _validateOrder(...\"\n            function fun_validateOrder_41646(var_order_mpos, var_signatures_mpos, var_fees_mpos, var_signatureIndex) -> var\n            {\n                /// @src 18:2995:3022  \"hashOrder(order, orderType)\"\n                let expr := fun_hashOrder(var_order_mpos)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 18:3128:3138  \"order.salt\" */ add(var_order_mpos, 224), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr)\n                /// @src 18:3177:3345  \"_verifyAuthorization(...\"\n                let expr_1 := /** @src 18:3177:3308  \"_verifyAuthorization(...\" */ fun_verifyAuthorization(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 18:3211:3223  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)), /** @src 18:3177:3308  \"_verifyAuthorization(...\" */ expr, var_signatures_mpos, var_signatureIndex)\n                /// @src 18:3177:3345  \"_verifyAuthorization(...\"\n                if expr_1\n                {\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _1 := mload(/** @src 18:977:997  \"order.expirationTime\" */ add(var_order_mpos, 128))\n                    /// @src 18:3177:3345  \"_verifyAuthorization(...\"\n                    expr_1 := /** @src 18:977:1015  \"order.expirationTime > block.timestamp\" */ gt(_1, /** @src 18:1000:1015  \"block.timestamp\" */ timestamp())\n                }\n                /// @src 18:3177:3392  \"_verifyAuthorization(...\"\n                let expr_2 := expr_1\n                if expr_1\n                {\n                    expr_2 := /** @src 18:3361:3392  \"_checkFee(order.makerFee, fees)\" */ fun_checkFee(/** @src 18:3371:3385  \"order.makerFee\" */ mload(add(var_order_mpos, 192)), /** @src 18:3361:3392  \"_checkFee(order.makerFee, fees)\" */ var_fees_mpos)\n                }\n                /// @src 18:3170:3392  \"return _verifyAuthorization(...\"\n                var := expr_2\n            }\n            /// @ast-id 4610 @src 18:2758:3399  \"function _validateOrder(...\"\n            function fun_validateOrder(var_order_mpos, var_signatures_mpos, var_fees_mpos, var_signatureIndex) -> var\n            {\n                /// @src 18:2995:3022  \"hashOrder(order, orderType)\"\n                let expr := fun_hashOrder_50165(var_order_mpos)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 18:3128:3138  \"order.salt\" */ add(var_order_mpos, 224), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr)\n                /// @src 18:3177:3345  \"_verifyAuthorization(...\"\n                let expr_1 := /** @src 18:3177:3308  \"_verifyAuthorization(...\" */ fun_verifyAuthorization(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 18:3211:3223  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)), /** @src 18:3177:3308  \"_verifyAuthorization(...\" */ expr, var_signatures_mpos, var_signatureIndex)\n                /// @src 18:3177:3345  \"_verifyAuthorization(...\"\n                if expr_1\n                {\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _1 := mload(/** @src 18:977:997  \"order.expirationTime\" */ add(var_order_mpos, 128))\n                    /// @src 18:3177:3345  \"_verifyAuthorization(...\"\n                    expr_1 := /** @src 18:977:1015  \"order.expirationTime > block.timestamp\" */ gt(_1, /** @src 18:1000:1015  \"block.timestamp\" */ timestamp())\n                }\n                /// @src 18:3177:3392  \"_verifyAuthorization(...\"\n                let expr_2 := expr_1\n                if expr_1\n                {\n                    expr_2 := /** @src 18:3361:3392  \"_checkFee(order.makerFee, fees)\" */ fun_checkFee(/** @src 18:3371:3385  \"order.makerFee\" */ mload(add(var_order_mpos, 192)), /** @src 18:3361:3392  \"_checkFee(order.makerFee, fees)\" */ var_fees_mpos)\n                }\n                /// @src 18:3170:3392  \"return _verifyAuthorization(...\"\n                var := expr_2\n            }\n            /// @ast-id 4891 @src 18:6164:7073  \"function _validateListing(...\"\n            function fun_validateListing(var_order_mpos, var_exchange_mpos) -> var_validListing\n            {\n                /// @src 18:6363:6379  \"exchange.listing\"\n                let _mpos := mload(add(var_exchange_mpos, 64))\n                /// @src 18:6423:6437  \"exchange.proof\"\n                let _mpos_1 := mload(add(var_exchange_mpos, 32))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 18:6439:6457  \"order.listingsRoot\" */ add(var_order_mpos, /** @src 18:6363:6379  \"exchange.listing\" */ 64))\n                /// @src 18:6389:6480  \"validListing = MerkleProof.verify(exchange.proof, order.listingsRoot, hashListing(listing))\"\n                var_validListing := /** @src 18:6404:6480  \"MerkleProof.verify(exchange.proof, order.listingsRoot, hashListing(listing))\" */ fun_verify_1697(_mpos_1, _1, /** @src 18:6459:6479  \"hashListing(listing)\" */ fun_hashListing(_mpos))\n                /// @src 18:6511:6525  \"exchange.taker\"\n                let _mpos_2 := mload(add(var_exchange_mpos, 96))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _2 := mload(/** @src 18:6585:6600  \"order.assetType\" */ add(var_order_mpos, 160))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                validator_assert_enum_AssetType(_2)\n                validator_assert_enum_AssetType(_2)\n                /// @src 18:6581:6726  \"if (order.assetType == AssetType.ERC721) {...\"\n                if /** @src 18:6585:6620  \"order.assetType == AssetType.ERC721\" */ iszero(_2)\n                /// @src 18:6581:6726  \"if (order.assetType == AssetType.ERC721) {...\"\n                {\n                    /// @src 18:6655:6688  \"validListing && taker.amount == 1\"\n                    let expr := var_validListing\n                    if var_validListing\n                    {\n                        expr := /** @src 18:6671:6688  \"taker.amount == 1\" */ eq(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:6671:6683  \"taker.amount\" */ add(_mpos_2, /** @src 18:6423:6437  \"exchange.proof\" */ 32)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1)\n                    }\n                    /// @src 18:6655:6711  \"validListing && taker.amount == 1 && listing.amount == 1\"\n                    let expr_1 := expr\n                    if expr\n                    {\n                        expr_1 := /** @src 18:6692:6711  \"listing.amount == 1\" */ eq(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:6692:6706  \"listing.amount\" */ add(_mpos, /** @src 18:6363:6379  \"exchange.listing\" */ 64)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1)\n                    }\n                    /// @src 18:6640:6711  \"validListing = validListing && taker.amount == 1 && listing.amount == 1\"\n                    var_validListing := expr_1\n                }\n                /// @src 18:6754:6802  \"validListing && listing.tokenId == taker.tokenId\"\n                let expr_2 := var_validListing\n                if var_validListing\n                {\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _3 := mload(/** @src 18:6770:6785  \"listing.tokenId\" */ add(_mpos, /** @src 18:6423:6437  \"exchange.proof\" */ 32))\n                    /// @src 18:6754:6802  \"validListing && listing.tokenId == taker.tokenId\"\n                    expr_2 := /** @src 18:6770:6802  \"listing.tokenId == taker.tokenId\" */ eq(_3, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:6789:6802  \"taker.tokenId\" */ _mpos_2))\n                }\n                /// @src 18:6739:6802  \"validListing = validListing && listing.tokenId == taker.tokenId\"\n                var_validListing := expr_2\n            }\n            /// @ast-id 4891 @src 18:6164:7073  \"function _validateListing(...\"\n            function fun_validateListing_41635(var_order_mpos, var_exchange_mpos) -> var_validListing\n            {\n                /// @src 18:6363:6379  \"exchange.listing\"\n                let _mpos := mload(add(var_exchange_mpos, 64))\n                /// @src 18:6423:6437  \"exchange.proof\"\n                let _mpos_1 := mload(add(var_exchange_mpos, 32))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 18:6439:6457  \"order.listingsRoot\" */ add(var_order_mpos, /** @src 18:6363:6379  \"exchange.listing\" */ 64))\n                /// @src 18:6389:6480  \"validListing = MerkleProof.verify(exchange.proof, order.listingsRoot, hashListing(listing))\"\n                var_validListing := /** @src 18:6404:6480  \"MerkleProof.verify(exchange.proof, order.listingsRoot, hashListing(listing))\" */ fun_verify_1697(_mpos_1, _1, /** @src 18:6459:6479  \"hashListing(listing)\" */ fun_hashListing(_mpos))\n                /// @src 18:6511:6525  \"exchange.taker\"\n                let _mpos_2 := mload(add(var_exchange_mpos, 96))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _2 := mload(/** @src 18:6837:6852  \"order.assetType\" */ add(var_order_mpos, 160))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                validator_assert_enum_AssetType(_2)\n                validator_assert_enum_AssetType(_2)\n                /// @src 18:6833:7057  \"if (order.assetType == AssetType.ERC721) {...\"\n                switch /** @src 18:6837:6872  \"order.assetType == AssetType.ERC721\" */ iszero(_2)\n                case /** @src 18:6833:7057  \"if (order.assetType == AssetType.ERC721) {...\" */ 0 {\n                    /// @src 18:6994:7042  \"validListing && listing.tokenId == taker.tokenId\"\n                    let expr := var_validListing\n                    if var_validListing\n                    {\n                        /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                        let _3 := mload(/** @src 18:7010:7025  \"listing.tokenId\" */ add(_mpos, /** @src 18:6423:6437  \"exchange.proof\" */ 32))\n                        /// @src 18:6994:7042  \"validListing && listing.tokenId == taker.tokenId\"\n                        expr := /** @src 18:7010:7042  \"listing.tokenId == taker.tokenId\" */ eq(_3, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:7029:7042  \"taker.tokenId\" */ _mpos_2))\n                    }\n                    /// @src 18:6979:7042  \"validListing = validListing && listing.tokenId == taker.tokenId\"\n                    var_validListing := expr\n                }\n                default /// @src 18:6833:7057  \"if (order.assetType == AssetType.ERC721) {...\"\n                {\n                    /// @src 18:6907:6940  \"validListing && taker.amount == 1\"\n                    let expr_1 := var_validListing\n                    if var_validListing\n                    {\n                        expr_1 := /** @src 18:6923:6940  \"taker.amount == 1\" */ eq(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:6923:6935  \"taker.amount\" */ add(_mpos_2, /** @src 18:6423:6437  \"exchange.proof\" */ 32)), /** @src 19:13578:13591  \"OrderType.BID\" */ 1)\n                    }\n                    /// @src 18:6892:6940  \"validListing = validListing && taker.amount == 1\"\n                    var_validListing := expr_1\n                }\n            }\n            /// @ast-id 1697 @src 15:1156:1310  \"function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {...\"\n            function fun_verify_1697(var_proof_mpos, var_root, var_leaf) -> var\n            {\n                /// @src 15:2036:2063  \"bytes32 computedHash = leaf\"\n                let var_computedHash := var_leaf\n                /// @src 15:2078:2091  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 15:2073:2189  \"for (uint256 i = 0; i < proof.length; i++) {...\"\n                for { }\n                /** @src 15:2078:2091  \"uint256 i = 0\" */ 1\n                {\n                    /// @src 15:2111:2114  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 15:2093:2109  \"i < proof.length\"\n                    if iszero(lt(var_i, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 15:2097:2109  \"proof.length\" */ var_proof_mpos)))\n                    /// @src 15:2093:2109  \"i < proof.length\"\n                    { break }\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _1 := mload(/** @src 15:2169:2177  \"proof[i]\" */ memory_array_index_access_struct_Cancel_dyn(var_proof_mpos, var_i))\n                    /// @src 15:9294:9345  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 15:9294:9345  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                    switch /** @src 15:9294:9299  \"a < b\" */ lt(var_computedHash, _1)\n                    case /** @src 15:9294:9345  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\" */ 0 {\n                        /// @src 15:9494:9613  \"assembly {...\"\n                        mstore(/** @src -1:-1:-1 */ expr, /** @src 15:9494:9613  \"assembly {...\" */ _1)\n                        mstore(0x20, var_computedHash)\n                        /// @src 15:9294:9345  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                        expr := /** @src 15:9494:9613  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ expr, /** @src 15:9494:9613  \"assembly {...\" */ 0x40)\n                    }\n                    default /// @src 15:9294:9345  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                    {\n                        /// @src 15:9494:9613  \"assembly {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 15:9494:9613  \"assembly {...\" */ var_computedHash)\n                        mstore(0x20, _1)\n                        /// @src 15:9294:9345  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                        expr := /** @src 15:9494:9613  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 15:9494:9613  \"assembly {...\" */ 0x40)\n                    }\n                    /// @src 15:2130:2178  \"computedHash = _hashPair(computedHash, proof[i])\"\n                    var_computedHash := expr\n                }\n                /// @src 15:1263:1303  \"return processProof(proof, leaf) == root\"\n                var := /** @src 15:1270:1303  \"processProof(proof, leaf) == root\" */ eq(var_computedHash, var_root)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function allocate_and_zero_memory_struct_struct_FeeRate() -> memPtr\n            {\n                let memPtr_1 := mload(/** @src 18:529:532  \"500\" */ 64)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                finalize_allocation_17467(memPtr_1)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function allocate_and_zero_memory_struct_struct_Order() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 256)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                memPtr := memPtr_1\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(memPtr_1, /** @src -1:-1:-1 */ _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 64), /** @src -1:-1:-1 */ _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 96), /** @src -1:-1:-1 */ _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 128), /** @src -1:-1:-1 */ _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 160), /** @src -1:-1:-1 */ _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 192), allocate_and_zero_memory_struct_struct_FeeRate())\n                mstore(add(memPtr_1, 224), /** @src -1:-1:-1 */ _1)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function allocate_and_zero_memory_struct_struct_Exchange() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_17655(memPtr_1)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 32), 96)\n                let memPtr_2 := mload(64)\n                finalize_allocation_17655(memPtr_2)\n                mstore(memPtr_2, /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_2, 32), /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_2, 64), /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_2, 96), /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 64), memPtr_2)\n                mstore(add(memPtr_1, 96), allocate_and_zero_memory_struct_struct_FeeRate())\n            }\n            /// @ast-id 2370 @src 16:1359:2993  \"function _insertExecutionAsk(...\"\n            function fun_insertExecutionAsk(var_executionBatch_2265_mpos, var_fungibleTransfers_2268_mpos, var_order_2271_mpos, var_exchange_2274_mpos, var_fees_2277_mpos, var_remainingETH) -> var_, var\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 16:1671:1692  \"exchange.taker.amount\" */ add(/** @src 16:1671:1685  \"exchange.taker\" */ mload(add(var_exchange_2274_mpos, 96)), /** @src 16:1671:1692  \"exchange.taker.amount\" */ 32))\n                /// @src 16:1889:1905  \"exchange.listing\"\n                let _2 := add(var_exchange_2274_mpos, 64)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _3 := mload(/** @src 16:1889:1911  \"exchange.listing.price\" */ add(/** @src 16:1889:1905  \"exchange.listing\" */ mload(_2), /** @src 16:1671:1685  \"exchange.taker\" */ 96))\n                /// @src 16:1859:2008  \"_computeFees(...\"\n                let expr_2308_component, expr_2308_component_1, expr_2308_component_2, expr_2308_component_3 := fun_computeFees(_3, _1, /** @src 16:1958:1972  \"order.makerFee\" */ mload(add(var_order_2271_mpos, 192)), /** @src 16:1859:2008  \"_computeFees(...\" */ var_fees_2277_mpos)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let sum := add(expr_2308_component, expr_2308_component_3)\n                if gt(expr_2308_component, sum) { panic_error_0x11() }\n                /// @src 16:2102:2987  \"if (remainingETH >= totalPrice + takerFeeAmount) {...\"\n                switch /** @src 16:2106:2149  \"remainingETH >= totalPrice + takerFeeAmount\" */ iszero(lt(var_remainingETH, sum))\n                case /** @src 16:2102:2987  \"if (remainingETH >= totalPrice + takerFeeAmount) {...\" */ 0 {\n                    /// @src 16:2948:2976  \"return (remainingETH, false)\"\n                    var_ := var_remainingETH\n                    var := /** @src -1:-1:-1 */ 0\n                    /// @src 16:2948:2976  \"return (remainingETH, false)\"\n                    leave\n                }\n                default /// @src 16:2102:2987  \"if (remainingETH >= totalPrice + takerFeeAmount) {...\"\n                {\n                    /// @src 16:2312:2317  \"order\"\n                    fun_setAddresses(var_fungibleTransfers_2268_mpos, var_order_2271_mpos)\n                    /// @src 16:2349:2515  \"_insertNonfungibleTransfer(...\"\n                    let expr := fun_insertNonfungibleTransfer(var_executionBatch_2265_mpos, var_order_2271_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:2448:2472  \"exchange.listing.tokenId\" */ add(/** @src 16:2448:2464  \"exchange.listing\" */ mload(_2), /** @src 16:1671:1692  \"exchange.taker.amount\" */ 32)), /** @src 16:2349:2515  \"_insertNonfungibleTransfer(...\" */ _1)\n                    /// @src 16:2636:2652  \"exchange.listing\"\n                    let _1040_mpos := mload(_2)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _4 := mload(/** @src 16:2678:2688  \"order.salt\" */ add(var_order_2271_mpos, 224))\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _5 := mload(/** @src 16:7602:7627  \"fungibleTransfers.makerId\" */ add(var_fungibleTransfers_2268_mpos, 128))\n                    /// @src 16:7637:7665  \"fungibleTransfers.executions\"\n                    let _6 := add(var_fungibleTransfers_2268_mpos, 288)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src 16:7637:7672  \"fungibleTransfers.executions[index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:7637:7665  \"fungibleTransfers.executions\" */ mload(_6), /** @src 16:7637:7672  \"fungibleTransfers.executions[index]\" */ expr)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _5)\n                    mstore(/** @src 16:7700:7781  \"fungibleTransfers...\" */ add(/** @src 16:7700:7748  \"fungibleTransfers...\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:7700:7741  \"fungibleTransfers...\" */ mload(_6), /** @src 16:7700:7748  \"fungibleTransfers...\" */ expr)), /** @src 16:1889:1905  \"exchange.listing\" */ 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:7784:7816  \"fungibleTransfers.feeRecipientId\" */ add(var_fungibleTransfers_2268_mpos, /** @src 16:1671:1685  \"exchange.taker\" */ 96)))\n                    /// @src 16:7910:7943  \"fungibleTransfers.makers[makerId]\"\n                    let _7 := read_from_memoryt_address(memory_array_index_access_struct_Cancel_dyn(/** @src 16:7910:7934  \"fungibleTransfers.makers\" */ mload(add(var_fungibleTransfers_2268_mpos, /** @src 16:1958:1972  \"order.makerFee\" */ 192)), /** @src 16:7910:7943  \"fungibleTransfers.makers[makerId]\" */ _5))\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _8 := mload(/** @src 16:7993:8006  \"listing.index\" */ _1040_mpos)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let _9 := mload(/** @src 16:8063:8077  \"listing.amount\" */ add(_1040_mpos, /** @src 16:1889:1905  \"exchange.listing\" */ 64))\n                    /// @src 16:7876:8088  \"StateUpdate({...\"\n                    let expr_mpos := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ allocate_memory_17664()\n                    /// @src 16:7876:8088  \"StateUpdate({...\"\n                    write_to_memory_address(expr_mpos, _7)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src 16:7876:8088  \"StateUpdate({...\" */ add(expr_mpos, /** @src 16:1671:1692  \"exchange.taker.amount\" */ 32), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _4)\n                    mstore(/** @src 16:7876:8088  \"StateUpdate({...\" */ add(expr_mpos, /** @src 16:1889:1905  \"exchange.listing\" */ 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _8)\n                    mstore(/** @src 16:7876:8088  \"StateUpdate({...\" */ add(expr_mpos, /** @src 16:1671:1685  \"exchange.taker\" */ 96), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _1)\n                    mstore(/** @src 16:7876:8088  \"StateUpdate({...\" */ add(expr_mpos, /** @src 16:7602:7627  \"fungibleTransfers.makerId\" */ 128), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _9)\n                    /// @src 16:7826:8088  \"fungibleTransfers.executions[index].stateUpdate = StateUpdate({...\"\n                    mstore(/** @src 16:7826:7873  \"fungibleTransfers.executions[index].stateUpdate\" */ add(/** @src 16:7826:7861  \"fungibleTransfers.executions[index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:7826:7854  \"fungibleTransfers.executions\" */ mload(_6), /** @src 16:7826:7861  \"fungibleTransfers.executions[index]\" */ expr)), /** @src 16:1958:1972  \"order.makerFee\" */ 192), /** @src 16:7826:8088  \"fungibleTransfers.executions[index].stateUpdate = StateUpdate({...\" */ expr_mpos)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src 16:8159:8207  \"fungibleTransfers.executions[index].sellerAmount\" */ add(/** @src 16:8159:8194  \"fungibleTransfers.executions[index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:8159:8187  \"fungibleTransfers.executions\" */ mload(_6), /** @src 16:8159:8194  \"fungibleTransfers.executions[index]\" */ expr)), /** @src 16:1671:1692  \"exchange.taker.amount\" */ 32), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(sub(/** @src 16:8230:8280  \"totalPrice -...\" */ expr_2308_component, expr_2308_component_1), /** @src 16:8230:8317  \"totalPrice -...\" */ expr_2308_component_2))\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    mstore(/** @src 16:8582:8632  \"fungibleTransfers.executions[index].makerFeeAmount\" */ add(/** @src 16:8582:8617  \"fungibleTransfers.executions[index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:8582:8610  \"fungibleTransfers.executions\" */ mload(_6), /** @src 16:8582:8617  \"fungibleTransfers.executions[index]\" */ expr)), /** @src 16:1671:1685  \"exchange.taker\" */ 96), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_2308_component_2)\n                    mstore(/** @src 16:8659:8709  \"fungibleTransfers.executions[index].takerFeeAmount\" */ add(/** @src 16:8659:8694  \"fungibleTransfers.executions[index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:8659:8687  \"fungibleTransfers.executions\" */ mload(_6), /** @src 16:8659:8694  \"fungibleTransfers.executions[index]\" */ expr)), /** @src 16:7602:7627  \"fungibleTransfers.makerId\" */ 128), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_2308_component_3)\n                    mstore(/** @src 16:8736:8815  \"fungibleTransfers...\" */ add(/** @src 16:8736:8784  \"fungibleTransfers...\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:8736:8777  \"fungibleTransfers...\" */ mload(_6), /** @src 16:8736:8784  \"fungibleTransfers...\" */ expr)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 160), expr_2308_component_1)\n                    /// @src 16:2890:2917  \"return (remainingETH, true)\"\n                    var_ := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(sub(/** @src 16:2208:2233  \"remainingETH - totalPrice\" */ var_remainingETH, expr_2308_component), /** @src 16:2208:2250  \"remainingETH - totalPrice - takerFeeAmount\" */ expr_2308_component_3)\n                    /// @src 16:2890:2917  \"return (remainingETH, true)\"\n                    var := /** @src 16:2857:2861  \"true\" */ 0x01\n                    /// @src 16:2890:2917  \"return (remainingETH, true)\"\n                    leave\n                }\n            }\n            /// @ast-id 2464 @src 16:4743:6600  \"function _insertNonfungibleTransfer(...\"\n            function fun_insertNonfungibleTransfer(var_executionBatch_2450_mpos, var_order_2453_mpos, var_tokenId, var_amount) -> var_transferIndex\n            {\n                /// @src 16:4955:6594  \"assembly {...\"\n                let _1 := add(var_executionBatch_2450_mpos, 160)\n                var_transferIndex := mload(_1)\n                let usr$transfersOffset := mload(add(var_executionBatch_2450_mpos, 128))\n                let _2 := add(add(var_executionBatch_2450_mpos, usr$transfersOffset), mul(var_transferIndex, 160))\n                mstore(add(_2, 96), mload(var_order_2453_mpos))\n                mstore(add(_2, 128), var_tokenId)\n                mstore(add(_2, 192), mload(add(var_order_2453_mpos, 32)))\n                let _3 := add(var_order_2453_mpos, 160)\n                mstore(add(_2, 224), mload(_3))\n                mstore(_1, add(var_transferIndex, 1))\n                if eq(mload(_3), 1)\n                {\n                    mstore(add(_2, 160), var_amount)\n                }\n            }\n            /// @ast-id 2716 @src 16:9109:10461  \"function _setAddresses(...\"\n            function fun_setAddresses(var_fungibleTransfers_mpos, var_order_2601_mpos)\n            {\n                /// @src 16:9265:9289  \"order.makerFee.recipient\"\n                let _1 := read_from_memoryt_address(/** @src 16:9265:9279  \"order.makerFee\" */ mload(add(var_order_2601_mpos, 192)))\n                /// @src 16:9324:9356  \"fungibleTransfers.feeRecipientId\"\n                let _2 := add(var_fungibleTransfers_mpos, 96)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _3 := mload(/** @src 16:9324:9356  \"fungibleTransfers.feeRecipientId\" */ _2)\n                /// @src 16:9396:9427  \"fungibleTransfers.feeRecipients\"\n                let _4 := add(var_fungibleTransfers_mpos, 160)\n                /// @src 16:9479:9514  \"feeRecipient != currentFeeRecipient\"\n                let _5 := cleanup_address(/** @src 16:9396:9465  \"fungibleTransfers.feeRecipients[...\" */ read_from_memoryt_address(memory_array_index_access_struct_Cancel_dyn(/** @src 16:9396:9427  \"fungibleTransfers.feeRecipients\" */ mload(_4), /** @src 16:9396:9465  \"fungibleTransfers.feeRecipients[...\" */ _3)))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _6 := sub(shl(160, 1), 1)\n                /// @src 16:9475:9940  \"if (feeRecipient != currentFeeRecipient) {...\"\n                if /** @src 16:9479:9514  \"feeRecipient != currentFeeRecipient\" */ iszero(eq(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(/** @src 16:9479:9514  \"feeRecipient != currentFeeRecipient\" */ _1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _6), /** @src 16:9479:9514  \"feeRecipient != currentFeeRecipient\" */ _5))\n                /// @src 16:9475:9940  \"if (feeRecipient != currentFeeRecipient) {...\"\n                {\n                    /// @src 16:9530:9930  \"if (currentFeeRecipient == address(0)) {...\"\n                    switch /** @src 16:9534:9567  \"currentFeeRecipient == address(0)\" */ iszero(_5)\n                    case /** @src 16:9530:9930  \"if (currentFeeRecipient == address(0)) {...\" */ 0 {\n                        /// @src 16:9720:9751  \"fungibleTransfers.feeRecipients\"\n                        let _1156_mpos := mload(_4)\n                        /// @src 16:9777:9793  \"++feeRecipientId\"\n                        let var_feeRecipientId := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 16:9777:9793  \"++feeRecipientId\" */ _3, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1)\n                        /// @src 16:9720:9830  \"fungibleTransfers.feeRecipients[...\"\n                        write_to_memory_address(memory_array_index_access_struct_Cancel_dyn(_1156_mpos, var_feeRecipientId), _1)\n                        /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                        mstore(_2, var_feeRecipientId)\n                    }\n                    default /// @src 16:9530:9930  \"if (currentFeeRecipient == address(0)) {...\"\n                    {\n                        /// @src 16:9587:9649  \"fungibleTransfers.feeRecipients[feeRecipientId] = feeRecipient\"\n                        write_to_memory_address(memory_array_index_access_struct_Cancel_dyn(/** @src 16:9587:9618  \"fungibleTransfers.feeRecipients\" */ mload(_4), /** @src 16:9587:9649  \"fungibleTransfers.feeRecipients[feeRecipientId] = feeRecipient\" */ _3), _1)\n                    }\n                }\n                /// @src 16:9966:9978  \"order.trader\"\n                let _7 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:9966:9978  \"order.trader\" */ var_order_2601_mpos))\n                /// @src 16:10006:10031  \"fungibleTransfers.makerId\"\n                let _8 := add(var_fungibleTransfers_mpos, 128)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _9 := mload(/** @src 16:10006:10031  \"fungibleTransfers.makerId\" */ _8)\n                /// @src 16:10065:10089  \"fungibleTransfers.makers\"\n                let _10 := add(var_fungibleTransfers_mpos, /** @src 16:9265:9279  \"order.makerFee\" */ 192)\n                /// @src 16:10112:10135  \"trader != currentTrader\"\n                let _11 := cleanup_address(/** @src 16:10065:10098  \"fungibleTransfers.makers[makerId]\" */ read_from_memoryt_address(memory_array_index_access_struct_Cancel_dyn(/** @src 16:10065:10089  \"fungibleTransfers.makers\" */ mload(_10), /** @src 16:10065:10098  \"fungibleTransfers.makers[makerId]\" */ _9)))\n                /// @src 16:10108:10455  \"if (trader != currentTrader) {...\"\n                if /** @src 16:10112:10135  \"trader != currentTrader\" */ iszero(eq(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(/** @src 16:10112:10135  \"trader != currentTrader\" */ _7, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _6), /** @src 16:10112:10135  \"trader != currentTrader\" */ _11))\n                /// @src 16:10108:10455  \"if (trader != currentTrader) {...\"\n                {\n                    /// @src 16:10151:10445  \"if (currentTrader == address(0)) {...\"\n                    switch /** @src 16:10155:10182  \"currentTrader == address(0)\" */ iszero(_11)\n                    case /** @src 16:10151:10445  \"if (currentTrader == address(0)) {...\" */ 0 {\n                        /// @src 16:10315:10339  \"fungibleTransfers.makers\"\n                        let _1187_mpos := mload(_10)\n                        /// @src 16:10340:10349  \"++makerId\"\n                        let _12 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 16:10340:10349  \"++makerId\" */ _9, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1)\n                        /// @src 16:10315:10359  \"fungibleTransfers.makers[++makerId] = trader\"\n                        write_to_memory_address(memory_array_index_access_struct_Cancel_dyn(_1187_mpos, _12), _7)\n                        /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                        mstore(_8, _12)\n                    }\n                    default /// @src 16:10151:10445  \"if (currentTrader == address(0)) {...\"\n                    {\n                        /// @src 16:10202:10244  \"fungibleTransfers.makers[makerId] = trader\"\n                        write_to_memory_address(memory_array_index_access_struct_Cancel_dyn(/** @src 16:10202:10226  \"fungibleTransfers.makers\" */ mload(_10), /** @src 16:10202:10244  \"fungibleTransfers.makers[makerId] = trader\" */ _9), _7)\n                    }\n                }\n            }\n            /// @ast-id 3217 @src 16:12040:19830  \"function _executeBatchTransfer(...\"\n            function fun_executeBatchTransfer(var_executionBatch_mpos, var_fungibleTransfers_mpos, var_fees_mpos)\n            {\n                /// @src 16:12269:12537  \"assembly {...\"\n                let _1 := 160\n                let var_batchLength := mload(add(var_executionBatch_mpos, _1))\n                /// @src 16:12546:19824  \"if (batchLength > 0) {...\"\n                if /** @src 16:12550:12565  \"batchLength > 0\" */ iszero(iszero(var_batchLength))\n                /// @src 16:12546:19824  \"if (batchLength > 0) {...\"\n                {\n                    /// @src 16:12617:12720  \"_executeNonfungibleTransfers(...\"\n                    let expr_mpos := fun_executeNonfungibleTransfers(var_executionBatch_mpos, var_batchLength)\n                    /// @src 16:12761:12787  \"successfulTransfers.length\"\n                    let expr := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:12761:12787  \"successfulTransfers.length\" */ expr_mpos)\n                    /// @src 16:12806:12815  \"uint256 i\"\n                    let var_i := /** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ 0\n                    /// @src 16:12801:16709  \"for (uint256 i; i < transfersLength; ) {...\"\n                    for { }\n                    /** @src 16:12817:12836  \"i < transfersLength\" */ lt(var_i, expr)\n                    /// @src 16:12806:12815  \"uint256 i\"\n                    { }\n                    {\n                        /// @src 16:12858:16623  \"if (successfulTransfers[i]) {...\"\n                        if /** @src 16:12862:12884  \"successfulTransfers[i]\" */ read_from_memoryt_bool(memory_array_index_access_struct_Cancel_dyn(expr_mpos, var_i))\n                        /// @src 16:12858:16623  \"if (successfulTransfers[i]) {...\"\n                        {\n                            /// @src 16:12943:12996  \"fungibleTransfers...\"\n                            let _2 := add(var_fungibleTransfers_mpos, 288)\n                            /// @src 16:12943:12999  \"fungibleTransfers...\"\n                            let _mpos := mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:12943:12996  \"fungibleTransfers...\" */ mload(_2), /** @src 16:12943:12999  \"fungibleTransfers...\" */ var_i))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            pop(allocate_and_zero_memory_struct_struct_FeeRate())\n                            /// @src 16:13316:13338  \"execution.sellerAmount\"\n                            let _3 := 32\n                            let _4 := add(_mpos, _3)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _5 := mload(/** @src 16:13316:13338  \"execution.sellerAmount\" */ _4)\n                            /// @src 16:13199:13231  \"fungibleTransfers.makerTransfers\"\n                            let _mpos_1 := mload(add(var_fungibleTransfers_mpos, 224))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _6 := mload(/** @src 16:13265:13282  \"execution.makerId\" */ _mpos)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            mstore(/** @src 16:13199:13338  \"fungibleTransfers.makerTransfers[...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos_1, _6), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(mload(/** @src 16:13199:13338  \"fungibleTransfers.makerTransfers[...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos_1, _6)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _5))\n                            let _7 := mload(/** @src 16:13461:13483  \"execution.sellerAmount\" */ _4)\n                            /// @src 16:13518:13545  \"execution.protocolFeeAmount\"\n                            let _8 := add(_mpos, /** @src 16:12269:12537  \"assembly {...\" */ _1)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let sum := add(_7, mload(/** @src 16:13518:13545  \"execution.protocolFeeAmount\" */ _8))\n                            /// @src 16:12269:12537  \"assembly {...\"\n                            let _9 := 96\n                            /// @src 16:13580:13604  \"execution.makerFeeAmount\"\n                            let _10 := add(_mpos, /** @src 16:12269:12537  \"assembly {...\" */ _9)\n                            /// @src 16:13421:13604  \"price =...\"\n                            let var_price := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(sum, mload(/** @src 16:13580:13604  \"execution.makerFeeAmount\" */ _10))\n                            /// @src 16:14339:14376  \"fungibleTransfers.totalSellerTransfer\"\n                            let _11 := add(var_fungibleTransfers_mpos, /** @src 16:13316:13338  \"execution.sellerAmount\" */ _3)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            mstore(_11, add(mload(/** @src 16:14339:14431  \"fungibleTransfers.totalSellerTransfer += execution...\" */ _11), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _7))\n                            mstore(var_fungibleTransfers_mpos, add(mload(/** @src 16:14474:14568  \"fungibleTransfers.totalProtocolFee += execution...\" */ var_fungibleTransfers_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:14512:14568  \"execution...\" */ _8)))\n                            /// @src 16:14629:14682  \"execution...\"\n                            let _12 := 128\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _13 := mload(/** @src 16:14629:14682  \"execution...\" */ add(_mpos, _12))\n                            /// @src 16:12269:12537  \"assembly {...\"\n                            let _14 := 64\n                            /// @src 16:14594:14625  \"fungibleTransfers.totalTakerFee\"\n                            let _15 := add(var_fungibleTransfers_mpos, /** @src 16:12269:12537  \"assembly {...\" */ _14)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            mstore(_15, add(mload(/** @src 16:14594:14682  \"fungibleTransfers.totalTakerFee += execution...\" */ _15), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _13))\n                            let _16 := mload(/** @src 16:14827:14851  \"execution.makerFeeAmount\" */ _10)\n                            /// @src 16:14708:14738  \"fungibleTransfers.feeTransfers\"\n                            let _mpos_2 := mload(add(var_fungibleTransfers_mpos, 256))\n                            /// @src 16:14768:14797  \"execution.makerFeeRecipientId\"\n                            let _17 := add(_mpos, /** @src 16:12269:12537  \"assembly {...\" */ _14)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _18 := mload(/** @src 16:14768:14797  \"execution.makerFeeRecipientId\" */ _17)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            mstore(/** @src 16:14708:14851  \"fungibleTransfers.feeTransfers[...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos_2, _18), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(mload(/** @src 16:14708:14851  \"fungibleTransfers.feeTransfers[...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos_2, _18)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _16))\n                            /// @src 16:14925:14956  \"fungibleTransfers.feeRecipients\"\n                            let _mpos_3 := mload(add(var_fungibleTransfers_mpos, /** @src 16:12269:12537  \"assembly {...\" */ _1))\n                            /// @src 16:14925:15049  \"fungibleTransfers.feeRecipients[...\"\n                            let _19 := read_from_memoryt_address(memory_array_index_access_struct_Cancel_dyn(_mpos_3, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:14990:15019  \"execution.makerFeeRecipientId\" */ _17)))\n                            /// @src 16:15079:15235  \"uint16(...\"\n                            let expr_1 := cleanup_uint16(/** @src 16:15119:15205  \"(execution.makerFeeAmount * _BASIS_POINTS) /...\" */ checked_div_uint256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mul(mload(/** @src 16:15120:15144  \"execution.makerFeeAmount\" */ _10), /** @src 18:466:472  \"10_000\" */ 0x2710), /** @src 16:15119:15205  \"(execution.makerFeeAmount * _BASIS_POINTS) /...\" */ var_price))\n                            /// @src 16:14888:15261  \"FeeRate(...\"\n                            let expr_mpos_1 := /** @src 18:529:532  \"500\" */ allocate_memory_17458()\n                            /// @src 16:14888:15261  \"FeeRate(...\"\n                            write_to_memory_address(expr_mpos_1, _19)\n                            write_to_memory_uint16(add(expr_mpos_1, /** @src 16:13316:13338  \"execution.sellerAmount\" */ _3), /** @src 16:14888:15261  \"FeeRate(...\" */ expr_1)\n                            /// @src 16:15387:15480  \"fungibleTransfers...\"\n                            let _mpos_4 := mload(add(/** @src 16:15387:15443  \"fungibleTransfers...\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:15387:15440  \"fungibleTransfers...\" */ mload(_2), /** @src 16:15387:15443  \"fungibleTransfers...\" */ var_i)), /** @src 16:15387:15480  \"fungibleTransfers...\" */ 192))\n                            /// @src 16:15545:15563  \"stateUpdate.trader\"\n                            let _20 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:15545:15563  \"stateUpdate.trader\" */ _mpos_4))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _21 := mload(/** @src 16:15604:15620  \"stateUpdate.hash\" */ add(_mpos_4, /** @src 16:13316:13338  \"execution.sellerAmount\" */ _3))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _22 := mload(/** @src 16:15662:15679  \"stateUpdate.index\" */ add(_mpos_4, /** @src 16:12269:12537  \"assembly {...\" */ _14))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _23 := sload(/** @src 16:15728:15760  \"amountTaken[trader][hash][index]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(/** @src 16:15728:15753  \"amountTaken[trader][hash]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(/** @src 16:15728:15747  \"amountTaken[trader]\" */ mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256__of_address(_20), /** @src 16:15728:15753  \"amountTaken[trader][hash]\" */ _21), /** @src 16:15728:15760  \"amountTaken[trader][hash][index]\" */ _22))\n                            /// @src 16:15811:15871  \"_amountTaken +...\"\n                            let expr_2 := checked_add_uint256(_23, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:15854:15871  \"stateUpdate.value\" */ add(_mpos_4, /** @src 16:12269:12537  \"assembly {...\" */ _9)))\n                            /// @src 16:16039:16276  \"if (newAmountTaken <= stateUpdate.maxAmount) {...\"\n                            switch /** @src 16:16043:16082  \"newAmountTaken <= stateUpdate.maxAmount\" */ iszero(gt(expr_2, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:16061:16082  \"stateUpdate.maxAmount\" */ add(_mpos_4, /** @src 16:14629:14682  \"execution...\" */ _12))))\n                            case /** @src 16:16039:16276  \"if (newAmountTaken <= stateUpdate.maxAmount) {...\" */ 0 {\n                                /// @src 16:16233:16249  \"OrderFulfilled()\"\n                                let _24 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:12269:12537  \"assembly {...\" */ _14)\n                                /// @src 16:16233:16249  \"OrderFulfilled()\"\n                                mstore(_24, shl(224, 0x56f1733f))\n                                revert(_24, 4)\n                            }\n                            default /// @src 16:16039:16276  \"if (newAmountTaken <= stateUpdate.maxAmount) {...\"\n                            {\n                                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                                sstore(/** @src 16:16114:16146  \"amountTaken[trader][hash][index]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(/** @src 16:16114:16139  \"amountTaken[trader][hash]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(/** @src 16:16114:16133  \"amountTaken[trader]\" */ mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256__of_address(_20), /** @src 16:16114:16139  \"amountTaken[trader][hash]\" */ _21), /** @src 16:16114:16146  \"amountTaken[trader][hash][index]\" */ _22), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_2)\n                            }\n                            /// @src 16:16581:16582  \"i\"\n                            fun_emitExecutionEventFromBatch_41638(var_executionBatch_mpos, var_price, expr_mpos_1, var_fees_mpos, _mpos_4, var_i)\n                        }\n                        /// @src 16:16673:16676  \"++i\"\n                        var_i := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 16:16673:16676  \"++i\" */ var_i, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1)\n                    }\n                    /// @src 16:16856:16885  \"fungibleTransfers.makerId + 1\"\n                    let expr_3 := checked_add_uint256_17670(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:16856:16881  \"fungibleTransfers.makerId\" */ add(var_fungibleTransfers_mpos, 128)))\n                    /// @src 16:16908:16917  \"uint256 i\"\n                    let var_i_1 := /** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ 0\n                    /// @src 16:16903:17211  \"for (uint256 i; i < makersLength; ) {...\"\n                    for { }\n                    /** @src 16:16919:16935  \"i < makersLength\" */ lt(var_i_1, expr_3)\n                    /// @src 16:16908:16917  \"uint256 i\"\n                    { }\n                    {\n                        /// @src 16:16999:17026  \"fungibleTransfers.makers[i]\"\n                        let _25 := read_from_memoryt_address(memory_array_index_access_struct_Cancel_dyn(/** @src 16:16999:17023  \"fungibleTransfers.makers\" */ mload(add(var_fungibleTransfers_mpos, 192)), /** @src 16:16999:17026  \"fungibleTransfers.makers[i]\" */ var_i_1))\n                        /// @src 16:17052:17087  \"fungibleTransfers.makerTransfers[i]\"\n                        fun_transferETH(_25, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:17052:17087  \"fungibleTransfers.makerTransfers[i]\" */ memory_array_index_access_struct_Cancel_dyn(/** @src 16:17052:17084  \"fungibleTransfers.makerTransfers\" */ mload(add(var_fungibleTransfers_mpos, 224)), /** @src 16:17052:17087  \"fungibleTransfers.makerTransfers[i]\" */ var_i_1)))\n                        /// @src 16:17167:17170  \"++i\"\n                        var_i_1 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 16:17167:17170  \"++i\" */ var_i_1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1)\n                    }\n                    /// @src 16:17313:17349  \"fungibleTransfers.feeRecipientId + 1\"\n                    let expr_4 := checked_add_uint256_17670(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:17313:17345  \"fungibleTransfers.feeRecipientId\" */ add(var_fungibleTransfers_mpos, /** @src 16:12269:12537  \"assembly {...\" */ 96)))\n                    /// @src 16:17372:17381  \"uint256 i\"\n                    let var_i_2 := /** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ 0\n                    /// @src 16:17367:17678  \"for (uint256 i; i < feesLength; ) {...\"\n                    for { }\n                    /** @src 16:17383:17397  \"i < feesLength\" */ lt(var_i_2, expr_4)\n                    /// @src 16:17372:17381  \"uint256 i\"\n                    { }\n                    {\n                        /// @src 16:17461:17495  \"fungibleTransfers.feeRecipients[i]\"\n                        let _26 := read_from_memoryt_address(memory_array_index_access_struct_Cancel_dyn(/** @src 16:17461:17492  \"fungibleTransfers.feeRecipients\" */ mload(add(var_fungibleTransfers_mpos, /** @src 16:12269:12537  \"assembly {...\" */ _1)), /** @src 16:17461:17495  \"fungibleTransfers.feeRecipients[i]\" */ var_i_2))\n                        /// @src 16:17521:17554  \"fungibleTransfers.feeTransfers[i]\"\n                        fun_transferETH(_26, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:17521:17554  \"fungibleTransfers.feeTransfers[i]\" */ memory_array_index_access_struct_Cancel_dyn(/** @src 16:17521:17551  \"fungibleTransfers.feeTransfers\" */ mload(add(var_fungibleTransfers_mpos, 256)), /** @src 16:17521:17554  \"fungibleTransfers.feeTransfers[i]\" */ var_i_2)))\n                        /// @src 16:17634:17637  \"++i\"\n                        var_i_2 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 16:17634:17637  \"++i\" */ var_i_2, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1)\n                    }\n                    /// @src 16:17780:17806  \"fees.protocolFee.recipient\"\n                    let _27 := read_from_memoryt_address(/** @src 16:17780:17796  \"fees.protocolFee\" */ mload(var_fees_mpos))\n                    /// @src 16:17828:17862  \"fungibleTransfers.totalProtocolFee\"\n                    fun_transferETH(_27, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:17828:17862  \"fungibleTransfers.totalProtocolFee\" */ var_fungibleTransfers_mpos))\n                    /// @src 16:17980:18003  \"fees.takerFee.recipient\"\n                    let _28 := read_from_memoryt_address(/** @src 16:17980:17993  \"fees.takerFee\" */ mload(add(var_fees_mpos, 32)))\n                    /// @src 16:18025:18056  \"fungibleTransfers.totalTakerFee\"\n                    fun_transferETH(_28, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:18025:18056  \"fungibleTransfers.totalTakerFee\" */ add(var_fungibleTransfers_mpos, /** @src 16:12269:12537  \"assembly {...\" */ 64)))\n                }\n            }\n            /// @ast-id 3217 @src 16:12040:19830  \"function _executeBatchTransfer(...\"\n            function fun_executeBatchTransfer_17558(var_executionBatch_mpos, var_fungibleTransfers_mpos, var_fees_mpos)\n            {\n                /// @src 16:12269:12537  \"assembly {...\"\n                let _1 := 160\n                let var_batchLength := mload(add(var_executionBatch_mpos, _1))\n                /// @src 16:12546:19824  \"if (batchLength > 0) {...\"\n                if /** @src 16:12550:12565  \"batchLength > 0\" */ iszero(iszero(var_batchLength))\n                /// @src 16:12546:19824  \"if (batchLength > 0) {...\"\n                {\n                    /// @src 16:12617:12720  \"_executeNonfungibleTransfers(...\"\n                    let expr_mpos := fun_executeNonfungibleTransfers(var_executionBatch_mpos, var_batchLength)\n                    /// @src 16:12761:12787  \"successfulTransfers.length\"\n                    let expr := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:12761:12787  \"successfulTransfers.length\" */ expr_mpos)\n                    /// @src 16:12806:12815  \"uint256 i\"\n                    let var_i := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0\n                    /// @src 16:12801:16709  \"for (uint256 i; i < transfersLength; ) {...\"\n                    for { }\n                    /** @src 16:12817:12836  \"i < transfersLength\" */ lt(var_i, expr)\n                    /// @src 16:12806:12815  \"uint256 i\"\n                    { }\n                    {\n                        /// @src 16:12858:16623  \"if (successfulTransfers[i]) {...\"\n                        if /** @src 16:12862:12884  \"successfulTransfers[i]\" */ read_from_memoryt_bool(memory_array_index_access_struct_Cancel_dyn(expr_mpos, var_i))\n                        /// @src 16:12858:16623  \"if (successfulTransfers[i]) {...\"\n                        {\n                            /// @src 16:12943:12996  \"fungibleTransfers...\"\n                            let _2 := add(var_fungibleTransfers_mpos, 288)\n                            /// @src 16:12943:12999  \"fungibleTransfers...\"\n                            let _mpos := mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:12943:12996  \"fungibleTransfers...\" */ mload(_2), /** @src 16:12943:12999  \"fungibleTransfers...\" */ var_i))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            pop(allocate_and_zero_memory_struct_struct_FeeRate())\n                            /// @src 16:13816:13843  \"execution.protocolFeeAmount\"\n                            let _3 := add(_mpos, /** @src 16:12269:12537  \"assembly {...\" */ _1)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _4 := mload(/** @src 16:13816:13843  \"execution.protocolFeeAmount\" */ _3)\n                            /// @src 16:12269:12537  \"assembly {...\"\n                            let _5 := 96\n                            /// @src 16:13878:13902  \"execution.makerFeeAmount\"\n                            let _6 := add(_mpos, /** @src 16:12269:12537  \"assembly {...\" */ _5)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let sum := add(_4, mload(/** @src 16:13878:13902  \"execution.makerFeeAmount\" */ _6))\n                            /// @src 16:13937:13961  \"execution.takerFeeAmount\"\n                            let _7 := 128\n                            let _8 := add(_mpos, _7)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let sum_1 := add(sum, mload(/** @src 16:13937:13961  \"execution.takerFeeAmount\" */ _8))\n                            /// @src 16:13996:14018  \"execution.sellerAmount\"\n                            let _9 := 32\n                            let _10 := add(_mpos, _9)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let sum_2 := add(sum_1, mload(/** @src 16:13996:14018  \"execution.sellerAmount\" */ _10))\n                            /// @src 16:13667:13699  \"fungibleTransfers.makerTransfers\"\n                            let _mpos_1 := mload(add(var_fungibleTransfers_mpos, 224))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _11 := mload(/** @src 16:13733:13750  \"execution.makerId\" */ _mpos)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            mstore(/** @src 16:13667:14018  \"fungibleTransfers.makerTransfers[...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos_1, _11), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(mload(/** @src 16:13667:14018  \"fungibleTransfers.makerTransfers[...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos_1, _11)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sum_2))\n                            let _12 := mload(/** @src 16:14144:14166  \"execution.sellerAmount\" */ _10)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let sum_3 := add(_12, mload(/** @src 16:14201:14228  \"execution.protocolFeeAmount\" */ _3))\n                            /// @src 16:14104:14287  \"price =...\"\n                            let var_price := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(sum_3, mload(/** @src 16:14263:14287  \"execution.takerFeeAmount\" */ _8))\n                            /// @src 16:14339:14376  \"fungibleTransfers.totalSellerTransfer\"\n                            let _13 := add(var_fungibleTransfers_mpos, /** @src 16:13996:14018  \"execution.sellerAmount\" */ _9)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            mstore(_13, add(mload(/** @src 16:14339:14431  \"fungibleTransfers.totalSellerTransfer += execution...\" */ _13), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _12))\n                            mstore(var_fungibleTransfers_mpos, add(mload(/** @src 16:14474:14568  \"fungibleTransfers.totalProtocolFee += execution...\" */ var_fungibleTransfers_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:14512:14568  \"execution...\" */ _3)))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _14 := mload(/** @src 16:14629:14682  \"execution...\" */ _8)\n                            /// @src 16:12269:12537  \"assembly {...\"\n                            let _15 := 64\n                            /// @src 16:14594:14625  \"fungibleTransfers.totalTakerFee\"\n                            let _16 := add(var_fungibleTransfers_mpos, /** @src 16:12269:12537  \"assembly {...\" */ _15)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            mstore(_16, add(mload(/** @src 16:14594:14682  \"fungibleTransfers.totalTakerFee += execution...\" */ _16), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _14))\n                            let _17 := mload(/** @src 16:14827:14851  \"execution.makerFeeAmount\" */ _6)\n                            /// @src 16:14708:14738  \"fungibleTransfers.feeTransfers\"\n                            let _mpos_2 := mload(add(var_fungibleTransfers_mpos, 256))\n                            /// @src 16:14768:14797  \"execution.makerFeeRecipientId\"\n                            let _18 := add(_mpos, /** @src 16:12269:12537  \"assembly {...\" */ _15)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _19 := mload(/** @src 16:14768:14797  \"execution.makerFeeRecipientId\" */ _18)\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            mstore(/** @src 16:14708:14851  \"fungibleTransfers.feeTransfers[...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos_2, _19), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(mload(/** @src 16:14708:14851  \"fungibleTransfers.feeTransfers[...\" */ memory_array_index_access_struct_Cancel_dyn(_mpos_2, _19)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _17))\n                            /// @src 16:14925:14956  \"fungibleTransfers.feeRecipients\"\n                            let _mpos_3 := mload(add(var_fungibleTransfers_mpos, /** @src 16:12269:12537  \"assembly {...\" */ _1))\n                            /// @src 16:14925:15049  \"fungibleTransfers.feeRecipients[...\"\n                            let _20 := read_from_memoryt_address(memory_array_index_access_struct_Cancel_dyn(_mpos_3, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:14990:15019  \"execution.makerFeeRecipientId\" */ _18)))\n                            /// @src 16:15079:15235  \"uint16(...\"\n                            let expr_1 := cleanup_uint16(/** @src 16:15119:15205  \"(execution.makerFeeAmount * _BASIS_POINTS) /...\" */ checked_div_uint256(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mul(mload(/** @src 16:15120:15144  \"execution.makerFeeAmount\" */ _6), /** @src 18:466:472  \"10_000\" */ 0x2710), /** @src 16:15119:15205  \"(execution.makerFeeAmount * _BASIS_POINTS) /...\" */ var_price))\n                            /// @src 16:14888:15261  \"FeeRate(...\"\n                            let expr_mpos_1 := /** @src 18:529:532  \"500\" */ allocate_memory_17458()\n                            /// @src 16:14888:15261  \"FeeRate(...\"\n                            write_to_memory_address(expr_mpos_1, _20)\n                            write_to_memory_uint16(add(expr_mpos_1, /** @src 16:13996:14018  \"execution.sellerAmount\" */ _9), /** @src 16:14888:15261  \"FeeRate(...\" */ expr_1)\n                            /// @src 16:15387:15480  \"fungibleTransfers...\"\n                            let _mpos_4 := mload(add(/** @src 16:15387:15443  \"fungibleTransfers...\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:15387:15440  \"fungibleTransfers...\" */ mload(_2), /** @src 16:15387:15443  \"fungibleTransfers...\" */ var_i)), /** @src 16:15387:15480  \"fungibleTransfers...\" */ 192))\n                            /// @src 16:15545:15563  \"stateUpdate.trader\"\n                            let _21 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ cleanup_address(mload(/** @src 16:15545:15563  \"stateUpdate.trader\" */ _mpos_4))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _22 := mload(/** @src 16:15604:15620  \"stateUpdate.hash\" */ add(_mpos_4, /** @src 16:13996:14018  \"execution.sellerAmount\" */ _9))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _23 := mload(/** @src 16:15662:15679  \"stateUpdate.index\" */ add(_mpos_4, /** @src 16:12269:12537  \"assembly {...\" */ _15))\n                            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                            let _24 := sload(/** @src 16:15728:15760  \"amountTaken[trader][hash][index]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(/** @src 16:15728:15753  \"amountTaken[trader][hash]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(/** @src 16:15728:15747  \"amountTaken[trader]\" */ mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256__of_address(_21), /** @src 16:15728:15753  \"amountTaken[trader][hash]\" */ _22), /** @src 16:15728:15760  \"amountTaken[trader][hash][index]\" */ _23))\n                            /// @src 16:15811:15871  \"_amountTaken +...\"\n                            let expr_2 := checked_add_uint256(_24, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:15854:15871  \"stateUpdate.value\" */ add(_mpos_4, /** @src 16:12269:12537  \"assembly {...\" */ _5)))\n                            /// @src 16:16039:16276  \"if (newAmountTaken <= stateUpdate.maxAmount) {...\"\n                            switch /** @src 16:16043:16082  \"newAmountTaken <= stateUpdate.maxAmount\" */ iszero(gt(expr_2, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:16061:16082  \"stateUpdate.maxAmount\" */ add(_mpos_4, /** @src 16:13937:13961  \"execution.takerFeeAmount\" */ _7))))\n                            case /** @src 16:16039:16276  \"if (newAmountTaken <= stateUpdate.maxAmount) {...\" */ 0 {\n                                /// @src 16:16233:16249  \"OrderFulfilled()\"\n                                let _25 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:12269:12537  \"assembly {...\" */ _15)\n                                /// @src 16:16233:16249  \"OrderFulfilled()\"\n                                mstore(_25, shl(224, 0x56f1733f))\n                                revert(_25, 4)\n                            }\n                            default /// @src 16:16039:16276  \"if (newAmountTaken <= stateUpdate.maxAmount) {...\"\n                            {\n                                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                                sstore(/** @src 16:16114:16146  \"amountTaken[trader][hash][index]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(/** @src 16:16114:16139  \"amountTaken[trader][hash]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(/** @src 16:16114:16133  \"amountTaken[trader]\" */ mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256__of_address(_21), /** @src 16:16114:16139  \"amountTaken[trader][hash]\" */ _22), /** @src 16:16114:16146  \"amountTaken[trader][hash][index]\" */ _23), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_2)\n                            }\n                            /// @src 16:16581:16582  \"i\"\n                            fun_emitExecutionEventFromBatch(var_executionBatch_mpos, var_price, expr_mpos_1, var_fees_mpos, _mpos_4, var_i)\n                        }\n                        /// @src 16:16673:16676  \"++i\"\n                        var_i := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 16:16673:16676  \"++i\" */ var_i, /** @src 19:19244:19257  \"OrderType.BID\" */ 1)\n                    }\n                    /// @src 16:18195:18224  \"fungibleTransfers.makerId + 1\"\n                    let expr_3 := checked_add_uint256_17670(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:18195:18220  \"fungibleTransfers.makerId\" */ add(var_fungibleTransfers_mpos, 128)))\n                    /// @src 16:18247:18256  \"uint256 i\"\n                    let var_i_1 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0\n                    /// @src 16:18242:18590  \"for (uint256 i; i < makersLength; ) {...\"\n                    for { }\n                    /** @src 16:18258:18274  \"i < makersLength\" */ lt(var_i_1, expr_3)\n                    /// @src 16:18247:18256  \"uint256 i\"\n                    { }\n                    {\n                        /// @src 16:18339:18366  \"fungibleTransfers.makers[i]\"\n                        let _26 := read_from_memoryt_address(memory_array_index_access_struct_Cancel_dyn(/** @src 16:18339:18363  \"fungibleTransfers.makers\" */ mload(add(var_fungibleTransfers_mpos, 192)), /** @src 16:18339:18366  \"fungibleTransfers.makers[i]\" */ var_i_1))\n                        /// @src 16:18431:18466  \"fungibleTransfers.makerTransfers[i]\"\n                        fun_transferPool(_26, /** @src 16:18400:18404  \"this\" */ address(), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:18431:18466  \"fungibleTransfers.makerTransfers[i]\" */ memory_array_index_access_struct_Cancel_dyn(/** @src 16:18431:18463  \"fungibleTransfers.makerTransfers\" */ mload(add(var_fungibleTransfers_mpos, 224)), /** @src 16:18431:18466  \"fungibleTransfers.makerTransfers[i]\" */ var_i_1)))\n                        /// @src 16:18546:18549  \"++i\"\n                        var_i_1 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 16:18546:18549  \"++i\" */ var_i_1, /** @src 19:19244:19257  \"OrderType.BID\" */ 1)\n                    }\n                    /// @src 16:18768:18805  \"fungibleTransfers.totalSellerTransfer\"\n                    fun_transferPool(/** @src 16:18400:18404  \"this\" */ address(), /** @src 16:18736:18746  \"msg.sender\" */ caller(), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:18768:18805  \"fungibleTransfers.totalSellerTransfer\" */ add(var_fungibleTransfers_mpos, 32)))\n                    /// @src 16:18926:18962  \"fungibleTransfers.feeRecipientId + 1\"\n                    let expr_4 := checked_add_uint256_17670(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:18926:18958  \"fungibleTransfers.feeRecipientId\" */ add(var_fungibleTransfers_mpos, /** @src 16:12269:12537  \"assembly {...\" */ 96)))\n                    /// @src 16:18985:18994  \"uint256 i\"\n                    let var_i_2 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0\n                    /// @src 16:18980:19331  \"for (uint256 i; i < feesLength; ) {...\"\n                    for { }\n                    /** @src 16:18996:19010  \"i < feesLength\" */ lt(var_i_2, expr_4)\n                    /// @src 16:18985:18994  \"uint256 i\"\n                    { }\n                    {\n                        /// @src 16:19114:19148  \"fungibleTransfers.feeRecipients[i]\"\n                        let _27 := read_from_memoryt_address(memory_array_index_access_struct_Cancel_dyn(/** @src 16:19114:19145  \"fungibleTransfers.feeRecipients\" */ mload(add(var_fungibleTransfers_mpos, /** @src 16:12269:12537  \"assembly {...\" */ _1)), /** @src 16:19114:19148  \"fungibleTransfers.feeRecipients[i]\" */ var_i_2))\n                        /// @src 16:19174:19207  \"fungibleTransfers.feeTransfers[i]\"\n                        fun_transferPool(/** @src 16:18400:18404  \"this\" */ address(), /** @src 16:19174:19207  \"fungibleTransfers.feeTransfers[i]\" */ _27, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:19174:19207  \"fungibleTransfers.feeTransfers[i]\" */ memory_array_index_access_struct_Cancel_dyn(/** @src 16:19174:19204  \"fungibleTransfers.feeTransfers\" */ mload(add(var_fungibleTransfers_mpos, 256)), /** @src 16:19174:19207  \"fungibleTransfers.feeTransfers[i]\" */ var_i_2)))\n                        /// @src 16:19287:19290  \"++i\"\n                        var_i_2 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 16:19287:19290  \"++i\" */ var_i_2, /** @src 19:19244:19257  \"OrderType.BID\" */ 1)\n                    }\n                    /// @src 16:19469:19495  \"fees.protocolFee.recipient\"\n                    let _28 := read_from_memoryt_address(/** @src 16:19469:19485  \"fees.protocolFee\" */ mload(var_fees_mpos))\n                    /// @src 16:19517:19551  \"fungibleTransfers.totalProtocolFee\"\n                    fun_transferPool(/** @src 16:18400:18404  \"this\" */ address(), /** @src 16:19517:19551  \"fungibleTransfers.totalProtocolFee\" */ _28, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:19517:19551  \"fungibleTransfers.totalProtocolFee\" */ var_fungibleTransfers_mpos))\n                    /// @src 16:19705:19728  \"fees.takerFee.recipient\"\n                    let _29 := read_from_memoryt_address(/** @src 16:19705:19718  \"fees.takerFee\" */ mload(add(var_fees_mpos, /** @src 16:18768:18805  \"fungibleTransfers.totalSellerTransfer\" */ 32)))\n                    /// @src 16:19750:19781  \"fungibleTransfers.totalTakerFee\"\n                    fun_transferPool(/** @src 16:18400:18404  \"this\" */ address(), /** @src 16:19750:19781  \"fungibleTransfers.totalTakerFee\" */ _29, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:19750:19781  \"fungibleTransfers.totalTakerFee\" */ add(var_fungibleTransfers_mpos, /** @src 16:12269:12537  \"assembly {...\" */ 64)))\n                }\n            }\n            /// @ast-id 3395 @src 16:25215:26199  \"function _emitExecutionEventFromBatch(...\"\n            function fun_emitExecutionEventFromBatch_41638(var_executionBatch_mpos, var_price, var_makerFee_mpos, var_fees_mpos, var_stateUpdate_mpos, var_transferIndex)\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                pop(allocate_and_zero_memory_struct_struct_Transfer())\n                /// @src 16:25531:25981  \"assembly {...\"\n                let usr$transfersOffset := mload(add(var_executionBatch_mpos, 128))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 16:26053:26069  \"stateUpdate.hash\" */ add(var_stateUpdate_mpos, /** @src 16:25531:25981  \"assembly {...\" */ 32))\n                /// @src 16:26173:26182  \"orderType\"\n                fun_emitOptimalExecutionEvent(/** @src 16:25531:25981  \"assembly {...\" */ add(add(add(var_executionBatch_mpos, usr$transfersOffset), mul(var_transferIndex, 160)), 96), /** @src 16:26173:26182  \"orderType\" */ _1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:26083:26100  \"stateUpdate.index\" */ add(var_stateUpdate_mpos, /** @src 16:25531:25981  \"assembly {...\" */ 64)), /** @src 16:26173:26182  \"orderType\" */ var_price, var_makerFee_mpos, var_fees_mpos)\n            }\n            /// @ast-id 3395 @src 16:25215:26199  \"function _emitExecutionEventFromBatch(...\"\n            function fun_emitExecutionEventFromBatch(var_executionBatch_mpos, var_price, var_makerFee_mpos, var_fees_mpos, var_stateUpdate_mpos, var_transferIndex)\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                pop(allocate_and_zero_memory_struct_struct_Transfer())\n                /// @src 16:25531:25981  \"assembly {...\"\n                let usr$transfersOffset := mload(add(var_executionBatch_mpos, 128))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 16:26053:26069  \"stateUpdate.hash\" */ add(var_stateUpdate_mpos, /** @src 16:25531:25981  \"assembly {...\" */ 32))\n                /// @src 16:26173:26182  \"orderType\"\n                fun_emitOptimalExecutionEvent_41629(/** @src 16:25531:25981  \"assembly {...\" */ add(add(add(var_executionBatch_mpos, usr$transfersOffset), mul(var_transferIndex, 160)), 96), /** @src 16:26173:26182  \"orderType\" */ _1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:26083:26100  \"stateUpdate.index\" */ add(var_stateUpdate_mpos, /** @src 16:25531:25981  \"assembly {...\" */ 64)), /** @src 16:26173:26182  \"orderType\" */ var_price, var_makerFee_mpos, var_fees_mpos)\n            }\n            /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n            function write_to_memory_bool(memPtr, value)\n            {\n                mstore(memPtr, iszero(iszero(value)))\n            }\n            /// @ast-id 4556 @src 18:1748:2430  \"function _validateOrders(...\"\n            function fun_validateOrders_17460(var_orders_mpos, var_signatures_mpos, var_fees_mpos) -> var_validOrders_mpos, var_pendingAmountTaken_mpos\n            {\n                /// @src 18:2020:2033  \"orders.length\"\n                let expr := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:2020:2033  \"orders.length\" */ var_orders_mpos)\n                /// @src 18:2043:2081  \"validOrders = new bool[](ordersLength)\"\n                var_validOrders_mpos := /** @src 18:2057:2081  \"new bool[](ordersLength)\" */ allocate_and_zero_memory_array_array_bool_dyn(expr)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := array_allocation_size_array_bytes32_dyn(expr)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, expr)\n                let _2 := add(array_allocation_size_array_bytes32_dyn(expr), not(31))\n                let i := /** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ 0\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                for { } lt(i, _2) { i := add(i, 32) }\n                {\n                    mstore(add(add(memPtr, i), 32), 96)\n                }\n                /// @src 18:2091:2141  \"pendingAmountTaken = new uint256[][](ordersLength)\"\n                var_pendingAmountTaken_mpos := memPtr\n                /// @src 18:2156:2165  \"uint256 i\"\n                let var_i := /** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ 0\n                /// @src 18:2151:2424  \"for (uint256 i; i < ordersLength; ) {...\"\n                for { }\n                /** @src 18:2167:2183  \"i < ordersLength\" */ lt(var_i, expr)\n                /// @src 18:2156:2165  \"uint256 i\"\n                { }\n                {\n                    /// @src 18:2201:2266  \"pendingAmountTaken[i] = new uint256[](orders[i].numberOfListings)\"\n                    mstore(memory_array_index_access_struct_Cancel_dyn(memPtr, var_i), /** @src 18:2225:2266  \"new uint256[](orders[i].numberOfListings)\" */ allocate_and_zero_memory_array_array_bool_dyn(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:2239:2265  \"orders[i].numberOfListings\" */ add(/** @src 18:2239:2248  \"orders[i]\" */ mload(memory_array_index_access_struct_Cancel_dyn(var_orders_mpos, var_i)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 96))))\n                    /// @src 18:2201:2266  \"pendingAmountTaken[i] = new uint256[](orders[i].numberOfListings)\"\n                    pop(memory_array_index_access_struct_Cancel_dyn(memPtr, var_i))\n                    /// @src 18:2280:2354  \"validOrders[i] = _validateOrder(orders[i], orderType, signatures, fees, i)\"\n                    write_to_memory_bool(memory_array_index_access_struct_Cancel_dyn(var_validOrders_mpos, var_i), /** @src 18:2297:2354  \"_validateOrder(orders[i], orderType, signatures, fees, i)\" */ fun_validateOrder_41646(/** @src 18:2312:2321  \"orders[i]\" */ mload(memory_array_index_access_struct_Cancel_dyn(var_orders_mpos, var_i)), /** @src 18:2297:2354  \"_validateOrder(orders[i], orderType, signatures, fees, i)\" */ var_signatures_mpos, var_fees_mpos, var_i))\n                    /// @src 18:2396:2399  \"++i\"\n                    var_i := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 18:2396:2399  \"++i\" */ var_i, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 1)\n                }\n            }\n            /// @ast-id 4556 @src 18:1748:2430  \"function _validateOrders(...\"\n            function fun_validateOrders(var_orders_mpos, var_signatures_mpos, var_fees_mpos) -> var_validOrders_mpos, var_pendingAmountTaken_mpos\n            {\n                /// @src 18:2020:2033  \"orders.length\"\n                let expr := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:2020:2033  \"orders.length\" */ var_orders_mpos)\n                /// @src 18:2043:2081  \"validOrders = new bool[](ordersLength)\"\n                var_validOrders_mpos := /** @src 18:2057:2081  \"new bool[](ordersLength)\" */ allocate_and_zero_memory_array_array_bool_dyn(expr)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := array_allocation_size_array_bytes32_dyn(expr)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, expr)\n                let _2 := add(array_allocation_size_array_bytes32_dyn(expr), not(31))\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                for { } lt(i, _2) { i := add(i, 32) }\n                {\n                    mstore(add(add(memPtr, i), 32), 96)\n                }\n                /// @src 18:2091:2141  \"pendingAmountTaken = new uint256[][](ordersLength)\"\n                var_pendingAmountTaken_mpos := memPtr\n                /// @src 18:2156:2165  \"uint256 i\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 18:2151:2424  \"for (uint256 i; i < ordersLength; ) {...\"\n                for { }\n                /** @src 18:2167:2183  \"i < ordersLength\" */ lt(var_i, expr)\n                /// @src 18:2156:2165  \"uint256 i\"\n                { }\n                {\n                    /// @src 18:2201:2266  \"pendingAmountTaken[i] = new uint256[](orders[i].numberOfListings)\"\n                    mstore(memory_array_index_access_struct_Cancel_dyn(memPtr, var_i), /** @src 18:2225:2266  \"new uint256[](orders[i].numberOfListings)\" */ allocate_and_zero_memory_array_array_bool_dyn(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:2239:2265  \"orders[i].numberOfListings\" */ add(/** @src 18:2239:2248  \"orders[i]\" */ mload(memory_array_index_access_struct_Cancel_dyn(var_orders_mpos, var_i)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 96))))\n                    /// @src 18:2201:2266  \"pendingAmountTaken[i] = new uint256[](orders[i].numberOfListings)\"\n                    pop(memory_array_index_access_struct_Cancel_dyn(memPtr, var_i))\n                    /// @src 18:2280:2354  \"validOrders[i] = _validateOrder(orders[i], orderType, signatures, fees, i)\"\n                    write_to_memory_bool(memory_array_index_access_struct_Cancel_dyn(var_validOrders_mpos, var_i), /** @src 18:2297:2354  \"_validateOrder(orders[i], orderType, signatures, fees, i)\" */ fun_validateOrder(/** @src 18:2312:2321  \"orders[i]\" */ mload(memory_array_index_access_struct_Cancel_dyn(var_orders_mpos, var_i)), /** @src 18:2297:2354  \"_validateOrder(orders[i], orderType, signatures, fees, i)\" */ var_signatures_mpos, var_fees_mpos, var_i))\n                    /// @src 18:2396:2399  \"++i\"\n                    var_i := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 18:2396:2399  \"++i\" */ var_i, /** @src 19:19244:19257  \"OrderType.BID\" */ 1)\n                }\n            }\n            /// @ast-id 4785 @src 18:4944:5873  \"function _validateListingFromBatch(...\"\n            function fun_validateListingFromBatch(var_order_mpos, var_exchange_mpos, var_validOrders_mpos, var_pendingAmountTaken_mpos) -> var_validListing\n            {\n                /// @src 18:5235:5251  \"exchange.listing\"\n                let _mpos := mload(add(var_exchange_mpos, 64))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 18:5284:5297  \"listing.index\" */ _mpos)\n                /// @src 18:5329:5354  \"amountTaken[order.trader]\"\n                let _2 := mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256__of_address(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 18:5341:5353  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:5363:5373  \"order.salt\" */ add(var_order_mpos, 224)))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(0x20, _2)\n                let _3 := sload(/** @src 18:5329:5389  \"amountTaken[order.trader][bytes32(order.salt)][listingIndex]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:5235:5251  \"exchange.listing\" */ 64), /** @src 18:5329:5389  \"amountTaken[order.trader][bytes32(order.salt)][listingIndex]\" */ _1))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _4 := mload(/** @src 18:5428:5476  \"pendingAmountTaken[exchange.index][listingIndex]\" */ memory_array_index_access_struct_Cancel_dyn(/** @src 18:5428:5462  \"pendingAmountTaken[exchange.index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(var_pendingAmountTaken_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:5447:5461  \"exchange.index\" */ var_exchange_mpos))), /** @src 18:5428:5476  \"pendingAmountTaken[exchange.index][listingIndex]\" */ _1))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _5 := mload(/** @src 18:5508:5529  \"exchange.taker.amount\" */ add(/** @src 18:5508:5522  \"exchange.taker\" */ mload(add(var_exchange_mpos, 96)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0x20))\n                /// @src 18:5594:5685  \"validOrders[exchange.index] &&...\"\n                let expr := /** @src 18:5594:5621  \"validOrders[exchange.index]\" */ read_from_memoryt_bool(memory_array_index_access_struct_Cancel_dyn(var_validOrders_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:5606:5620  \"exchange.index\" */ var_exchange_mpos)))\n                /// @src 18:5594:5685  \"validOrders[exchange.index] &&...\"\n                if expr\n                {\n                    expr := /** @src 18:5641:5685  \"_validateListing(order, orderType, exchange)\" */ fun_validateListing(var_order_mpos, var_exchange_mpos)\n                }\n                /// @src 18:5594:5772  \"validOrders[exchange.index] &&...\"\n                let expr_1 := expr\n                if expr\n                {\n                    expr_1 := /** @src 18:5705:5772  \"pendingAmountTaken + takerAmount <= type(uint256).max - amountTaken\" */ iszero(gt(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 18:5705:5737  \"pendingAmountTaken + takerAmount\" */ _4, _5), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ not(/** @src 18:5741:5772  \"type(uint256).max - amountTaken\" */ _3)))\n                }\n                /// @src 18:5594:5856  \"validOrders[exchange.index] &&...\"\n                let expr_2 := expr_1\n                if expr_1\n                {\n                    expr_2 := /** @src 18:5792:5856  \"amountTaken + pendingAmountTaken + takerAmount <= listing.amount\" */ iszero(gt(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(add(/** @src 18:5792:5824  \"amountTaken + pendingAmountTaken\" */ _3, _4), /** @src 18:5792:5838  \"amountTaken + pendingAmountTaken + takerAmount\" */ _5), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:5842:5856  \"listing.amount\" */ add(_mpos, /** @src 18:5235:5251  \"exchange.listing\" */ 64))))\n                }\n                /// @src 18:5563:5856  \"validListing =...\"\n                var_validListing := expr_2\n            }\n            /// @ast-id 4785 @src 18:4944:5873  \"function _validateListingFromBatch(...\"\n            function fun_validateListingFromBatch_17557(var_order_mpos, var_exchange_mpos, var_validOrders_mpos, var_pendingAmountTaken_mpos) -> var_validListing\n            {\n                /// @src 18:5235:5251  \"exchange.listing\"\n                let _mpos := mload(add(var_exchange_mpos, 64))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := mload(/** @src 18:5284:5297  \"listing.index\" */ _mpos)\n                /// @src 18:5329:5354  \"amountTaken[order.trader]\"\n                let _2 := mapping_index_access_mapping_address_mapping_bytes32_mapping_uint256_uint256__of_address(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ and(mload(/** @src 18:5341:5353  \"order.trader\" */ var_order_mpos), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:5363:5373  \"order.salt\" */ add(var_order_mpos, 224)))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(0x20, _2)\n                let _3 := sload(/** @src 18:5329:5389  \"amountTaken[order.trader][bytes32(order.salt)][listingIndex]\" */ mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:5235:5251  \"exchange.listing\" */ 64), /** @src 18:5329:5389  \"amountTaken[order.trader][bytes32(order.salt)][listingIndex]\" */ _1))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _4 := mload(/** @src 18:5428:5476  \"pendingAmountTaken[exchange.index][listingIndex]\" */ memory_array_index_access_struct_Cancel_dyn(/** @src 18:5428:5462  \"pendingAmountTaken[exchange.index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(var_pendingAmountTaken_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:5447:5461  \"exchange.index\" */ var_exchange_mpos))), /** @src 18:5428:5476  \"pendingAmountTaken[exchange.index][listingIndex]\" */ _1))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _5 := mload(/** @src 18:5508:5529  \"exchange.taker.amount\" */ add(/** @src 18:5508:5522  \"exchange.taker\" */ mload(add(var_exchange_mpos, 96)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0x20))\n                /// @src 18:5594:5685  \"validOrders[exchange.index] &&...\"\n                let expr := /** @src 18:5594:5621  \"validOrders[exchange.index]\" */ read_from_memoryt_bool(memory_array_index_access_struct_Cancel_dyn(var_validOrders_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:5606:5620  \"exchange.index\" */ var_exchange_mpos)))\n                /// @src 18:5594:5685  \"validOrders[exchange.index] &&...\"\n                if expr\n                {\n                    expr := /** @src 18:5641:5685  \"_validateListing(order, orderType, exchange)\" */ fun_validateListing_41635(var_order_mpos, var_exchange_mpos)\n                }\n                /// @src 18:5594:5772  \"validOrders[exchange.index] &&...\"\n                let expr_1 := expr\n                if expr\n                {\n                    expr_1 := /** @src 18:5705:5772  \"pendingAmountTaken + takerAmount <= type(uint256).max - amountTaken\" */ iszero(gt(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(/** @src 18:5705:5737  \"pendingAmountTaken + takerAmount\" */ _4, _5), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ not(/** @src 18:5741:5772  \"type(uint256).max - amountTaken\" */ _3)))\n                }\n                /// @src 18:5594:5856  \"validOrders[exchange.index] &&...\"\n                let expr_2 := expr_1\n                if expr_1\n                {\n                    expr_2 := /** @src 18:5792:5856  \"amountTaken + pendingAmountTaken + takerAmount <= listing.amount\" */ iszero(gt(/** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ add(add(/** @src 18:5792:5824  \"amountTaken + pendingAmountTaken\" */ _3, _4), /** @src 18:5792:5838  \"amountTaken + pendingAmountTaken + takerAmount\" */ _5), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 18:5842:5856  \"listing.amount\" */ add(_mpos, /** @src 18:5235:5251  \"exchange.listing\" */ 64))))\n                }\n                /// @src 18:5563:5856  \"validListing =...\"\n                var_validListing := expr_2\n            }\n            /// @ast-id 2447 @src 16:3327:4463  \"function _insertExecutionBid(...\"\n            function fun_insertExecutionBid(var_executionBatch_2373_mpos, var_fungibleTransfers_2376_mpos, var_order_mpos, var_exchange_mpos, var_fees_2385_mpos)\n            {\n                /// @src 16:3585:3599  \"exchange.taker\"\n                let _1 := add(var_exchange_mpos, 96)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _2 := mload(/** @src 16:3585:3606  \"exchange.taker.amount\" */ add(/** @src 16:3585:3599  \"exchange.taker\" */ mload(_1), /** @src 16:3585:3606  \"exchange.taker.amount\" */ 32))\n                /// @src 16:3803:3819  \"exchange.listing\"\n                let _3 := add(var_exchange_mpos, 64)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _4 := mload(/** @src 16:3803:3825  \"exchange.listing.price\" */ add(/** @src 16:3803:3819  \"exchange.listing\" */ mload(_3), /** @src 16:3585:3599  \"exchange.taker\" */ 96))\n                /// @src 16:3773:3922  \"_computeFees(...\"\n                let expr_component, expr_component_1, expr_2410_component, expr_component_2 := fun_computeFees(_4, _2, /** @src 16:3872:3886  \"order.makerFee\" */ mload(add(var_order_mpos, 192)), /** @src 16:3773:3922  \"_computeFees(...\" */ var_fees_2385_mpos)\n                /// @src 16:3966:3971  \"order\"\n                fun_setAddresses(var_fungibleTransfers_2376_mpos, var_order_mpos)\n                /// @src 16:3999:4143  \"_insertNonfungibleTransfer(...\"\n                let expr := fun_insertNonfungibleTransfer(var_executionBatch_2373_mpos, var_order_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:4086:4100  \"exchange.taker\" */ mload(_1)), /** @src 16:3999:4143  \"_insertNonfungibleTransfer(...\" */ _2)\n                /// @src 16:4248:4264  \"exchange.listing\"\n                let _1651_mpos := mload(_3)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _5 := mload(/** @src 16:4286:4296  \"order.salt\" */ add(var_order_mpos, 224))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _6 := mload(/** @src 16:7602:7627  \"fungibleTransfers.makerId\" */ add(var_fungibleTransfers_2376_mpos, 128))\n                /// @src 16:7637:7665  \"fungibleTransfers.executions\"\n                let _7 := add(var_fungibleTransfers_2376_mpos, 288)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 16:7637:7672  \"fungibleTransfers.executions[index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:7637:7665  \"fungibleTransfers.executions\" */ mload(_7), /** @src 16:7637:7672  \"fungibleTransfers.executions[index]\" */ expr)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _6)\n                mstore(/** @src 16:7700:7781  \"fungibleTransfers...\" */ add(/** @src 16:7700:7748  \"fungibleTransfers...\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:7700:7741  \"fungibleTransfers...\" */ mload(_7), /** @src 16:7700:7748  \"fungibleTransfers...\" */ expr)), /** @src 16:3803:3819  \"exchange.listing\" */ 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ mload(/** @src 16:7784:7816  \"fungibleTransfers.feeRecipientId\" */ add(var_fungibleTransfers_2376_mpos, /** @src 16:3585:3599  \"exchange.taker\" */ 96)))\n                /// @src 16:7910:7943  \"fungibleTransfers.makers[makerId]\"\n                let _8 := read_from_memoryt_address(memory_array_index_access_struct_Cancel_dyn(/** @src 16:7910:7934  \"fungibleTransfers.makers\" */ mload(add(var_fungibleTransfers_2376_mpos, /** @src 16:3872:3886  \"order.makerFee\" */ 192)), /** @src 16:7910:7943  \"fungibleTransfers.makers[makerId]\" */ _6))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _9 := mload(/** @src 16:7993:8006  \"listing.index\" */ _1651_mpos)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _10 := mload(/** @src 16:8063:8077  \"listing.amount\" */ add(_1651_mpos, /** @src 16:3803:3819  \"exchange.listing\" */ 64))\n                /// @src 16:7876:8088  \"StateUpdate({...\"\n                let expr_mpos := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ allocate_memory_17664()\n                /// @src 16:7876:8088  \"StateUpdate({...\"\n                write_to_memory_address(expr_mpos, _8)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 16:7876:8088  \"StateUpdate({...\" */ add(expr_mpos, /** @src 16:3585:3606  \"exchange.taker.amount\" */ 32), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _5)\n                mstore(/** @src 16:7876:8088  \"StateUpdate({...\" */ add(expr_mpos, /** @src 16:3803:3819  \"exchange.listing\" */ 64), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _9)\n                mstore(/** @src 16:7876:8088  \"StateUpdate({...\" */ add(expr_mpos, /** @src 16:3585:3599  \"exchange.taker\" */ 96), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2)\n                mstore(/** @src 16:7876:8088  \"StateUpdate({...\" */ add(expr_mpos, /** @src 16:7602:7627  \"fungibleTransfers.makerId\" */ 128), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _10)\n                /// @src 16:7826:8088  \"fungibleTransfers.executions[index].stateUpdate = StateUpdate({...\"\n                mstore(/** @src 16:7826:7873  \"fungibleTransfers.executions[index].stateUpdate\" */ add(/** @src 16:7826:7861  \"fungibleTransfers.executions[index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:7826:7854  \"fungibleTransfers.executions\" */ mload(_7), /** @src 16:7826:7861  \"fungibleTransfers.executions[index]\" */ expr)), /** @src 16:3872:3886  \"order.makerFee\" */ 192), /** @src 16:7826:8088  \"fungibleTransfers.executions[index].stateUpdate = StateUpdate({...\" */ expr_mpos)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 16:8390:8438  \"fungibleTransfers.executions[index].sellerAmount\" */ add(/** @src 16:8390:8425  \"fungibleTransfers.executions[index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:8390:8418  \"fungibleTransfers.executions\" */ mload(_7), /** @src 16:8390:8425  \"fungibleTransfers.executions[index]\" */ expr)), /** @src 16:3585:3606  \"exchange.taker.amount\" */ 32), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ sub(sub(/** @src 16:8461:8511  \"totalPrice -...\" */ expr_component, expr_component_1), /** @src 16:8461:8548  \"totalPrice -...\" */ expr_component_2))\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 16:8582:8632  \"fungibleTransfers.executions[index].makerFeeAmount\" */ add(/** @src 16:8582:8617  \"fungibleTransfers.executions[index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:8582:8610  \"fungibleTransfers.executions\" */ mload(_7), /** @src 16:8582:8617  \"fungibleTransfers.executions[index]\" */ expr)), /** @src 16:3585:3599  \"exchange.taker\" */ 96), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_2410_component)\n                mstore(/** @src 16:8659:8709  \"fungibleTransfers.executions[index].takerFeeAmount\" */ add(/** @src 16:8659:8694  \"fungibleTransfers.executions[index]\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:8659:8687  \"fungibleTransfers.executions\" */ mload(_7), /** @src 16:8659:8694  \"fungibleTransfers.executions[index]\" */ expr)), /** @src 16:7602:7627  \"fungibleTransfers.makerId\" */ 128), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_component_2)\n                mstore(/** @src 16:8736:8815  \"fungibleTransfers...\" */ add(/** @src 16:8736:8784  \"fungibleTransfers...\" */ mload(memory_array_index_access_struct_Cancel_dyn(/** @src 16:8736:8777  \"fungibleTransfers...\" */ mload(_7), /** @src 16:8736:8784  \"fungibleTransfers...\" */ expr)), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 160), expr_component_1)\n            }\n            function allocate_and_zero_memory_struct_struct_FungibleTransfers() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 320)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 64), /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := 96\n                mstore(add(memPtr_1, _1), /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 128), /** @src -1:-1:-1 */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 160), _1)\n                mstore(add(memPtr_1, 192), _1)\n                mstore(add(memPtr_1, 224), _1)\n                mstore(add(memPtr_1, 256), _1)\n                mstore(add(memPtr_1, 288), _1)\n            }\n            /// @src 25:4635:4639  \"0xa0\"\n            function allocate_and_zero_memory_array_bytes_17691() -> memPtr\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 384)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                let _1 := 352\n                mstore(memPtr_1, _1)\n                /// @src 25:4635:4639  \"0xa0\"\n                memPtr := memPtr_1\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                calldatacopy(/** @src 25:4635:4639  \"0xa0\" */ add(memPtr_1, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 0x20), calldatasize(), _1)\n            }\n            /// @src 25:4635:4639  \"0xa0\"\n            function allocate_and_zero_memory_array_bytes(length) -> memPtr\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := array_allocation_size_bytes(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                /// @src 25:4635:4639  \"0xa0\"\n                memPtr := memPtr_1\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                calldatacopy(/** @src 25:4635:4639  \"0xa0\" */ add(memPtr_1, 32), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ calldatasize(), /** @src 25:4635:4639  \"0xa0\" */ add(array_allocation_size_bytes(length), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ not(31)))\n            }\n            /// @src 25:4635:4639  \"0xa0\"\n            function allocate_and_zero_memory_array_array_struct_AtomicExecution_dyn(length) -> memPtr\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                let _1 := array_allocation_size_array_bytes32_dyn(length)\n                let _2 := 64\n                let memPtr_1 := mload(_2)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                /// @src 25:4635:4639  \"0xa0\"\n                memPtr := memPtr_1\n                let _3 := add(array_allocation_size_array_bytes32_dyn(length), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ not(31))\n                /// @src 25:4635:4639  \"0xa0\"\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 25:4635:4639  \"0xa0\"\n                for { } lt(i, _3) { i := add(i, 32) }\n                {\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    let memPtr_2 := mload(_2)\n                    let newFreePtr := add(memPtr_2, /** @src 25:4635:4639  \"0xa0\" */ 224)\n                    /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_2)) { panic_error_0x41() }\n                    mstore(_2, newFreePtr)\n                    /// @src 25:4635:4639  \"0xa0\"\n                    mstore(memPtr_2, /** @src -1:-1:-1 */ 0)\n                    /// @src 25:4635:4639  \"0xa0\"\n                    let _4 := 32\n                    mstore(add(memPtr_2, _4), /** @src -1:-1:-1 */ 0)\n                    /// @src 25:4635:4639  \"0xa0\"\n                    mstore(add(memPtr_2, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ _2), /** @src -1:-1:-1 */ 0)\n                    /// @src 25:4635:4639  \"0xa0\"\n                    mstore(add(memPtr_2, 96), /** @src -1:-1:-1 */ 0)\n                    /// @src 25:4635:4639  \"0xa0\"\n                    mstore(add(memPtr_2, 128), /** @src -1:-1:-1 */ 0)\n                    /// @src 25:4635:4639  \"0xa0\"\n                    mstore(add(memPtr_2, 160), /** @src -1:-1:-1 */ 0)\n                    /// @src 25:4635:4639  \"0xa0\"\n                    mstore(add(memPtr_2, 192), allocate_and_zero_memory_struct_struct_Transfer())\n                    mstore(add(add(memPtr_1, i), _4), memPtr_2)\n                }\n            }\n            /// @ast-id 6243 @src 19:21346:23550  \"function _initializeBatch(...\"\n            function fun_initializeBatch(var_exchangesLength, var_taker) -> var_executionBatch_mpos, var_fungibleTransfers_mpos\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                pop(allocate_and_zero_memory_struct_struct_FungibleTransfers())\n                /// @src 19:21904:21952  \"executionBatch = new bytes(executionBatchLength)\"\n                var_executionBatch_mpos := /** @src 19:21921:21952  \"new bytes(executionBatchLength)\" */ allocate_and_zero_memory_array_bytes(/** @src 19:21856:21894  \"ExecutionBatch_base_size + arrayLength\" */ checked_add_uint256_17689(/** @src 19:21773:21815  \"Transfer_size * exchangesLength + One_word\" */ checked_add_uint256_17688(/** @src 19:21773:21804  \"Transfer_size * exchangesLength\" */ checked_mul_uint256_17687(var_exchangesLength))))\n                /// @src 19:21962:22691  \"assembly {...\"\n                mstore(add(var_executionBatch_mpos, 64), var_taker)\n                /// @src 19:16099:16126  \"Fees(protocolFee, takerFee)\"\n                let _1 := 0\n                /// @src 19:21962:22691  \"assembly {...\"\n                mstore(add(var_executionBatch_mpos, 96), /** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ _1)\n                /// @src 19:21962:22691  \"assembly {...\"\n                mstore(add(var_executionBatch_mpos, 128), 128)\n                mstore(add(var_executionBatch_mpos, 192), var_exchangesLength)\n                /// @src 19:22795:22855  \"new AtomicExecution[](...\"\n                let expr_mpos := allocate_and_zero_memory_array_array_struct_AtomicExecution_dyn(var_exchangesLength)\n                /// @src 19:22898:22928  \"new address[](exchangesLength)\"\n                let expr_mpos_1 := allocate_and_zero_memory_array_array_bool_dyn(var_exchangesLength)\n                /// @src 19:22964:22994  \"new address[](exchangesLength)\"\n                let expr_mpos_2 := allocate_and_zero_memory_array_array_bool_dyn(var_exchangesLength)\n                /// @src 19:23038:23068  \"new uint256[](exchangesLength)\"\n                let expr_mpos_3 := allocate_and_zero_memory_array_array_bool_dyn(var_exchangesLength)\n                /// @src 19:23110:23140  \"new uint256[](exchangesLength)\"\n                let expr_mpos_4 := allocate_and_zero_memory_array_array_bool_dyn(var_exchangesLength)\n                /// @src 19:23170:23543  \"FungibleTransfers({...\"\n                let expr_mpos_5 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ allocate_memory()\n                mstore(expr_mpos_5, /** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, /** @src 25:200:204  \"0x20\" */ 0x20), /** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, /** @src 19:21962:22691  \"assembly {...\" */ 64), /** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, /** @src 19:21962:22691  \"assembly {...\" */ 96), /** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, /** @src 19:21962:22691  \"assembly {...\" */ 128), /** @src 19:16099:16126  \"Fees(protocolFee, takerFee)\" */ _1)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, /** @src 25:4229:4233  \"0xa0\" */ 0xa0), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_mpos_1)\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, /** @src 19:21962:22691  \"assembly {...\" */ 192), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_mpos_2)\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, 224), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_mpos_3)\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, 256), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_mpos_4)\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, 288), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_mpos)\n                /// @src 19:23150:23543  \"fungibleTransfers = FungibleTransfers({...\"\n                var_fungibleTransfers_mpos := expr_mpos_5\n            }\n            /// @ast-id 6243 @src 19:21346:23550  \"function _initializeBatch(...\"\n            function fun_initializeBatch_17556(var_exchangesLength, var_taker) -> var_executionBatch_mpos, var_fungibleTransfers_mpos\n            {\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                pop(allocate_and_zero_memory_struct_struct_FungibleTransfers())\n                /// @src 19:21904:21952  \"executionBatch = new bytes(executionBatchLength)\"\n                var_executionBatch_mpos := /** @src 19:21921:21952  \"new bytes(executionBatchLength)\" */ allocate_and_zero_memory_array_bytes(/** @src 19:21856:21894  \"ExecutionBatch_base_size + arrayLength\" */ checked_add_uint256_17689(/** @src 19:21773:21815  \"Transfer_size * exchangesLength + One_word\" */ checked_add_uint256_17688(/** @src 19:21773:21804  \"Transfer_size * exchangesLength\" */ checked_mul_uint256_17687(var_exchangesLength))))\n                /// @src 19:21962:22691  \"assembly {...\"\n                mstore(add(var_executionBatch_mpos, 64), var_taker)\n                mstore(add(var_executionBatch_mpos, 96), /** @src 19:19244:19257  \"OrderType.BID\" */ 1)\n                /// @src 19:21962:22691  \"assembly {...\"\n                mstore(add(var_executionBatch_mpos, 128), 128)\n                mstore(add(var_executionBatch_mpos, 192), var_exchangesLength)\n                /// @src 19:22795:22855  \"new AtomicExecution[](...\"\n                let expr_mpos := allocate_and_zero_memory_array_array_struct_AtomicExecution_dyn(var_exchangesLength)\n                /// @src 19:22898:22928  \"new address[](exchangesLength)\"\n                let expr_mpos_1 := allocate_and_zero_memory_array_array_bool_dyn(var_exchangesLength)\n                /// @src 19:22964:22994  \"new address[](exchangesLength)\"\n                let expr_mpos_2 := allocate_and_zero_memory_array_array_bool_dyn(var_exchangesLength)\n                /// @src 19:23038:23068  \"new uint256[](exchangesLength)\"\n                let expr_mpos_3 := allocate_and_zero_memory_array_array_bool_dyn(var_exchangesLength)\n                /// @src 19:23110:23140  \"new uint256[](exchangesLength)\"\n                let expr_mpos_4 := allocate_and_zero_memory_array_array_bool_dyn(var_exchangesLength)\n                /// @src 19:23170:23543  \"FungibleTransfers({...\"\n                let expr_mpos_5 := /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ allocate_memory()\n                mstore(expr_mpos_5, /** @src 19:21962:22691  \"assembly {...\" */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, /** @src 25:200:204  \"0x20\" */ 0x20), /** @src 19:21962:22691  \"assembly {...\" */ 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, /** @src 19:21962:22691  \"assembly {...\" */ 64), 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, /** @src 19:21962:22691  \"assembly {...\" */ 96), 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, /** @src 19:21962:22691  \"assembly {...\" */ 128), 0)\n                /// @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\"\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, /** @src 25:4229:4233  \"0xa0\" */ 0xa0), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_mpos_1)\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, /** @src 19:21962:22691  \"assembly {...\" */ 192), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_mpos_2)\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, 224), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_mpos_3)\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, 256), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_mpos_4)\n                mstore(/** @src 19:23170:23543  \"FungibleTransfers({...\" */ add(expr_mpos_5, 288), /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ expr_mpos)\n                /// @src 19:23150:23543  \"fungibleTransfers = FungibleTransfers({...\"\n                var_fungibleTransfers_mpos := expr_mpos_5\n            }\n            /// @ast-id 6289 @src 19:23845:25193  \"function _initializeSingleExecution(...\"\n            function fun_initializeSingleExecution(var_order_mpos, var_tokenId, var_amount, var_taker) -> var_executionBatch_mpos\n            {\n                /// @src 19:24333:24381  \"executionBatch = new bytes(executionBatchLength)\"\n                var_executionBatch_mpos := /** @src 19:24350:24381  \"new bytes(executionBatchLength)\" */ allocate_and_zero_memory_array_bytes_17691()\n                /// @src 19:24391:25060  \"assembly {...\"\n                mstore(add(var_executionBatch_mpos, 64), var_taker)\n                mstore(add(var_executionBatch_mpos, 96), /** @src 19:10399:10426  \"Fees(protocolFee, takerFee)\" */ 0)\n                /// @src 19:24391:25060  \"assembly {...\"\n                mstore(add(var_executionBatch_mpos, 128), 128)\n                mstore(add(var_executionBatch_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 192), /** @src 19:24391:25060  \"assembly {...\" */ 1)\n                /// @src 19:25120:25186  \"_insertNonfungibleTransfer(executionBatch, order, tokenId, amount)\"\n                pop(fun_insertNonfungibleTransfer(var_executionBatch_mpos, var_order_mpos, var_tokenId, var_amount))\n            }\n            /// @ast-id 6289 @src 19:23845:25193  \"function _initializeSingleExecution(...\"\n            function fun_initializeSingleExecution_17586(var_order_mpos, var_tokenId, var_amount, var_taker) -> var_executionBatch_mpos\n            {\n                /// @src 19:24333:24381  \"executionBatch = new bytes(executionBatchLength)\"\n                var_executionBatch_mpos := /** @src 19:24350:24381  \"new bytes(executionBatchLength)\" */ allocate_and_zero_memory_array_bytes_17691()\n                /// @src 19:24391:25060  \"assembly {...\"\n                mstore(add(var_executionBatch_mpos, 64), var_taker)\n                mstore(add(var_executionBatch_mpos, 96), /** @src 19:13578:13591  \"OrderType.BID\" */ 1)\n                /// @src 19:24391:25060  \"assembly {...\"\n                mstore(add(var_executionBatch_mpos, 128), 128)\n                mstore(add(var_executionBatch_mpos, /** @src 19:791:25195  \"contract ZeZuExchange is IZeZuExchange, Executor, ReentrancyGuard {...\" */ 192), /** @src 19:13578:13591  \"OrderType.BID\" */ 1)\n                /// @src 19:25120:25186  \"_insertNonfungibleTransfer(executionBatch, order, tokenId, amount)\"\n                pop(fun_insertNonfungibleTransfer(var_executionBatch_mpos, var_order_mpos, var_tokenId, var_amount))\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212202af7330949854e907ffe9f3e1c460d9b988b58cfbd51f3486a856497210401bb64736f6c63430008110033\"\n    }\n}\n","hash":"0100111f7d24c58f1440098a01c36292d2bc37ae7a77dba7a4f01771b639b8d7","factoryDependencies":{}}},"contracts/interfaces/IDelegate.sol":{"IDelegate":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"enum OrderType","name":"orderType","type":"uint8"},{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"}],"internalType":"struct Transfer[]","name":"transfers","type":"tuple[]"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool[]","name":"successful","type":"bool[]"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct Transfer[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"successful\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDelegate.sol\":\"IDelegate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDelegate.sol\":{\"keccak256\":\"0x737524908a5251b02f89bc95a3778844bfddb39c508a4c53e9628516a5d9829b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bec53c8d206413ba93295dee812091dfde89e9053452e87a701a09da1f824243\",\"dweb:/ipfs/QmWw3ageFdGRahfmHLnp6tgFZweUofLzrt6DosN283CoM8\"]},\"contracts/lib/Structs.sol\":{\"keccak256\":\"0x80a811dca1b3b525d5e4ea9226085ad840edf76d9a3e10794597b447983f2097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7229f5805bca82300713d093ecb376b14bb1c1b909efd85e412c69957b616bf8\",\"dweb:/ipfs/QmcvvG32oBgk3PSCywUZgmzfKoWbzZ2r779CaSyDjCENWL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"transfer(address,uint8,(address,uint256,uint256,address,uint8)[],uint256)":"a1ccb98e"}},"irOptimized":""}},"contracts/interfaces/IExecutor.sol":{"IExecutor":{"abi":[{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"OrderFulfilled","type":"error"},{"inputs":[],"name":"PoolDepositFailed","type":"error"},{"inputs":[],"name":"PoolTransferFailed","type":"error"},{"inputs":[],"name":"PoolWithdrawFromFailed","type":"error"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"}],"indexed":false,"internalType":"struct Transfer","name":"transfer","type":"tuple"},{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"listingIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"indexed":false,"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"protocolFee","type":"tuple"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"}],"indexed":false,"internalType":"struct Fees","name":"fees","type":"tuple"},{"indexed":false,"internalType":"enum OrderType","name":"orderType","type":"uint8"}],"name":"Execution","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenIdListingIndexTrader","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collectionPriceSide","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"makerFeeRecipientRate","type":"uint256"}],"name":"Execution721MakerFeePacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenIdListingIndexTrader","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collectionPriceSide","type":"uint256"}],"name":"Execution721Packed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenIdListingIndexTrader","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collectionPriceSide","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"takerFeeRecipientRate","type":"uint256"}],"name":"Execution721TakerFeePacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"offerCollectionHash","type":"bytes32"},{"indexed":false,"internalType":"address","name":"accepter","type":"address"},{"indexed":false,"internalType":"address","name":"bidder","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"pricePerItem","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"remaining","type":"uint256"}],"name":"ExecutionAcceptCollectionOffer","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderFulfilled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolDepositFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolWithdrawFromFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"protocolFee\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct Fees\",\"name\":\"fees\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"name\":\"Execution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdListingIndexTrader\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collectionPriceSide\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"makerFeeRecipientRate\",\"type\":\"uint256\"}],\"name\":\"Execution721MakerFeePacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdListingIndexTrader\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collectionPriceSide\",\"type\":\"uint256\"}],\"name\":\"Execution721Packed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdListingIndexTrader\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collectionPriceSide\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerFeeRecipientRate\",\"type\":\"uint256\"}],\"name\":\"Execution721TakerFeePacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"offerCollectionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accepter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"name\":\"ExecutionAcceptCollectionOffer\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IExecutor.sol\":\"IExecutor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IExecutor.sol\":{\"keccak256\":\"0xdb72b1682de0245b90e2319167391cba37c60237ac76fc3a1d9f953bea4da7f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13df1fe834f353b6dbbbc4d83dc2239793d4a9ac476d40f323653ca9e380acc8\",\"dweb:/ipfs/Qmd5RRcdLPZ7YKYte1FDXdt1jB6a5biWUZUHwh9hUs7fs5\"]},\"contracts/lib/Structs.sol\":{\"keccak256\":\"0x80a811dca1b3b525d5e4ea9226085ad840edf76d9a3e10794597b447983f2097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7229f5805bca82300713d093ecb376b14bb1c1b909efd85e412c69957b616bf8\",\"dweb:/ipfs/QmcvvG32oBgk3PSCywUZgmzfKoWbzZ2r779CaSyDjCENWL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/interfaces/ISignatures.sol":{"ISignatures":{"abi":[{"inputs":[],"name":"ExpiredOracleSignature","type":"error"},{"inputs":[],"name":"InvalidDomain","type":"error"},{"inputs":[],"name":"InvalidOracleSignature","type":"error"},{"inputs":[],"name":"Unauthorized","type":"error"},{"inputs":[],"name":"UnauthorizedOracle","type":"error"},{"inputs":[],"name":"blockRange","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"}],"name":"hashListing","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"internalType":"enum OrderType","name":"orderType","type":"uint8"},{"internalType":"uint256","name":"pricePerItem","type":"uint256"}],"name":"hashOfferCollection","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"internalType":"enum OrderType","name":"orderType","type":"uint8"}],"name":"hashOrder","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"information","outputs":[{"internalType":"string","name":"version","type":"string"},{"internalType":"bytes32","name":"domainSeparator","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"oracle","type":"address"}],"name":"oracles","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"verifyDomain","outputs":[],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ExpiredOracleSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDomain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOracleSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedOracle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"blockRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"}],\"name\":\"hashListing\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"}],\"name\":\"hashOfferCollection\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"enum OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"name\":\"hashOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"information\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyDomain\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISignatures.sol\":\"ISignatures\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISignatures.sol\":{\"keccak256\":\"0x03fece8938f6df981a696b12ed380b3ba2399684eeb7b00dc4570803e30666a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d84bcfb92913b2a708495083ab478cbda79c9ebcb4863e36a5eb0131d3b1048\",\"dweb:/ipfs/QmYUYxnAAHeeV87nYKjMTxCT5vQHnmqr4gdmuHRGn23qCs\"]},\"contracts/lib/Structs.sol\":{\"keccak256\":\"0x80a811dca1b3b525d5e4ea9226085ad840edf76d9a3e10794597b447983f2097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7229f5805bca82300713d093ecb376b14bb1c1b909efd85e412c69957b616bf8\",\"dweb:/ipfs/QmcvvG32oBgk3PSCywUZgmzfKoWbzZ2r779CaSyDjCENWL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"blockRange()":"a4b2c674","hashListing((uint256,uint256,uint256,uint256))":"87cc694d","hashOfferCollection((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8,uint256)":"6bf68190","hashOrder((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),uint8)":"51114ffa","information()":"f47b7740","nonces(address)":"7ecebe00","oracles(address)":"addd5099","verifyDomain()":"708ef9aa"}},"irOptimized":""}},"contracts/interfaces/IValidation.sol":{"IValidation":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"uint256","name":"listingIndex","type":"uint256"}],"name":"amountTaken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFee","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"listingIndex\",\"type\":\"uint256\"}],\"name\":\"amountTaken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IValidation.sol\":\"IValidation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IValidation.sol\":{\"keccak256\":\"0x44116dca8e67e9d9bdefb57ed7cffea09f877a8375cb17604f9c83daa8c80756\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25cced53afd7464688c1c72d2df320f075315d1c27e0520894634bb84a36425f\",\"dweb:/ipfs/QmYhwizVB5en3TfsRhzHYBFrhQgexx4mMxTwLPAvYMxGFA\"]},\"contracts/lib/Structs.sol\":{\"keccak256\":\"0x80a811dca1b3b525d5e4ea9226085ad840edf76d9a3e10794597b447983f2097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7229f5805bca82300713d093ecb376b14bb1c1b909efd85e412c69957b616bf8\",\"dweb:/ipfs/QmcvvG32oBgk3PSCywUZgmzfKoWbzZ2r779CaSyDjCENWL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"amountTaken(address,bytes32,uint256)":"3c2ab6bf","protocolFee()":"b0e21e8a"}},"irOptimized":""}},"contracts/interfaces/IZeZuExchange.sol":{"IZeZuExchange":{"abi":[{"inputs":[],"name":"InsufficientFunds","type":"error"},{"inputs":[],"name":"InvalidOrder","type":"error"},{"inputs":[],"name":"ProtocolFeeTooHigh","type":"error"},{"inputs":[],"name":"TokenTransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bytes32","name":"hash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"CancelTrade","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"blockRange","type":"uint256"}],"name":"NewBlockRange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"governor","type":"address"}],"name":"NewGovernor","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"uint16","name":"rate","type":"uint16"}],"name":"NewProtocolFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"newNonce","type":"uint256"}],"name":"NonceIncremented","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"SetOracle","type":"event"},{"inputs":[{"components":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Cancel[]","name":"cancels","type":"tuple[]"}],"name":"cancelTrades","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_governor","type":"address"}],"name":"setGovernor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"name":"setProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order[]","name":"orders","type":"tuple[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Taker","name":"taker","type":"tuple"}],"internalType":"struct Exchange[]","name":"exchanges","type":"tuple[]"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signatures","type":"bytes"},{"internalType":"address","name":"tokenRecipient","type":"address"}],"internalType":"struct TakeAsk","name":"inputs","type":"tuple"}],"name":"takeAsk","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order[]","name":"orders","type":"tuple[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Taker","name":"taker","type":"tuple"}],"internalType":"struct Exchange[]","name":"exchanges","type":"tuple[]"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signatures","type":"bytes"},{"internalType":"address","name":"tokenRecipient","type":"address"}],"internalType":"struct TakeAsk","name":"inputs","type":"tuple"},{"internalType":"uint256","name":"amountToWithdraw","type":"uint256"}],"name":"takeAskPool","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Taker","name":"taker","type":"tuple"}],"internalType":"struct Exchange","name":"exchange","type":"tuple"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"address","name":"tokenRecipient","type":"address"}],"internalType":"struct TakeAskSingle","name":"inputs","type":"tuple"}],"name":"takeAskSingle","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Taker","name":"taker","type":"tuple"}],"internalType":"struct Exchange","name":"exchange","type":"tuple"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"address","name":"tokenRecipient","type":"address"}],"internalType":"struct TakeAskSingle","name":"inputs","type":"tuple"},{"internalType":"uint256","name":"amountToWithdraw","type":"uint256"}],"name":"takeAskSinglePool","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order[]","name":"orders","type":"tuple[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Taker","name":"taker","type":"tuple"}],"internalType":"struct Exchange[]","name":"exchanges","type":"tuple[]"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signatures","type":"bytes"}],"internalType":"struct TakeBid","name":"inputs","type":"tuple"}],"name":"takeBid","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Taker","name":"taker","type":"tuple"}],"internalType":"struct Exchange","name":"exchange","type":"tuple"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct TakeBidSingle","name":"inputs","type":"tuple"}],"name":"takeBidSingle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"listingsRoot","type":"bytes32"},{"internalType":"uint256","name":"numberOfListings","type":"uint256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"makerFee","type":"tuple"},{"internalType":"uint256","name":"salt","type":"uint256"}],"internalType":"struct Order","name":"order","type":"tuple"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"internalType":"struct Listing","name":"listing","type":"tuple"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint16","name":"rate","type":"uint16"}],"internalType":"struct FeeRate","name":"takerFee","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct TakeCollectionOffer","name":"input","type":"tuple"}],"name":"takeCollectionOffer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenTransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CancelTrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockRange\",\"type\":\"uint256\"}],\"name\":\"NewBlockRange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"}],\"name\":\"NewGovernor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"name\":\"NewProtocolFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceIncremented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"SetOracle\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Cancel[]\",\"name\":\"cancels\",\"type\":\"tuple[]\"}],\"name\":\"cancelTrades\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"setGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Taker\",\"name\":\"taker\",\"type\":\"tuple\"}],\"internalType\":\"struct Exchange[]\",\"name\":\"exchanges\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"tokenRecipient\",\"type\":\"address\"}],\"internalType\":\"struct TakeAsk\",\"name\":\"inputs\",\"type\":\"tuple\"}],\"name\":\"takeAsk\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Taker\",\"name\":\"taker\",\"type\":\"tuple\"}],\"internalType\":\"struct Exchange[]\",\"name\":\"exchanges\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"tokenRecipient\",\"type\":\"address\"}],\"internalType\":\"struct TakeAsk\",\"name\":\"inputs\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"takeAskPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Taker\",\"name\":\"taker\",\"type\":\"tuple\"}],\"internalType\":\"struct Exchange\",\"name\":\"exchange\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"tokenRecipient\",\"type\":\"address\"}],\"internalType\":\"struct TakeAskSingle\",\"name\":\"inputs\",\"type\":\"tuple\"}],\"name\":\"takeAskSingle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Taker\",\"name\":\"taker\",\"type\":\"tuple\"}],\"internalType\":\"struct Exchange\",\"name\":\"exchange\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"tokenRecipient\",\"type\":\"address\"}],\"internalType\":\"struct TakeAskSingle\",\"name\":\"inputs\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"takeAskSinglePool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Taker\",\"name\":\"taker\",\"type\":\"tuple\"}],\"internalType\":\"struct Exchange[]\",\"name\":\"exchanges\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"internalType\":\"struct TakeBid\",\"name\":\"inputs\",\"type\":\"tuple\"}],\"name\":\"takeBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Taker\",\"name\":\"taker\",\"type\":\"tuple\"}],\"internalType\":\"struct Exchange\",\"name\":\"exchange\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct TakeBidSingle\",\"name\":\"inputs\",\"type\":\"tuple\"}],\"name\":\"takeBidSingle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"listingsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"numberOfListings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"makerFee\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Listing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct FeeRate\",\"name\":\"takerFee\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct TakeCollectionOffer\",\"name\":\"input\",\"type\":\"tuple\"}],\"name\":\"takeCollectionOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IZeZuExchange.sol\":\"IZeZuExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IZeZuExchange.sol\":{\"keccak256\":\"0x700147612d41865f69241153f8c65cf8c35ea751aad7eaecae0896ba7083eb22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284ab447aaa46d163c99ad3cba5008a741fe802b719d82b9de81a8707334239f\",\"dweb:/ipfs/QmWJK4hKAsoZwP8xiT1wFL5F2DCB3ACCtkMDobvZAvcLgp\"]},\"contracts/lib/Structs.sol\":{\"keccak256\":\"0x80a811dca1b3b525d5e4ea9226085ad840edf76d9a3e10794597b447983f2097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7229f5805bca82300713d093ecb376b14bb1c1b909efd85e412c69957b616bf8\",\"dweb:/ipfs/QmcvvG32oBgk3PSCywUZgmzfKoWbzZ2r779CaSyDjCENWL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"cancelTrades((bytes32,uint256,uint256)[])":"3f8fc233","incrementNonce()":"627cdcb9","setGovernor(address)":"c42cf535","setProtocolFee(address,uint16)":"3a16b768","takeAsk(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256)[],(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256))[],(address,uint16),bytes,address))":"1ec1fd88","takeAskPool(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256)[],(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256))[],(address,uint16),bytes,address),uint256)":"46d7dd05","takeAskSingle(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256)),(address,uint16),bytes,address))":"455fce13","takeAskSinglePool(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256)),(address,uint16),bytes,address),uint256)":"bcd4f51a","takeBid(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256)[],(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256))[],(address,uint16),bytes))":"7c7c5507","takeBidSingle(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,bytes32[],(uint256,uint256,uint256,uint256),(uint256,uint256)),(address,uint16),bytes))":"069827e2","takeCollectionOffer(((address,address,bytes32,uint256,uint256,uint8,(address,uint16),uint256),(uint256,uint256,uint256,uint256),(address,uint16),bytes))":"6ee45533"}},"irOptimized":""}},"contracts/lib/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/ReentrancyGuard.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Upgradeable gas optimized reentrancy protection for smart contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xbc886dd814e99a6853ced3f4ba5f06ce6a66821730f199a1b81e3593aac6cd94\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2738fd0ed3528b0a1dbd0a2a14029a402c9e38927ed2628d00414e9341f90421\",\"dweb:/ipfs/QmWHTijj7Q4WEBKoanqu3N6AX2dDNd9aCbEtiDcoMqaipH\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":6910,"contract":"contracts/lib/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"locked","offset":0,"slot":"0","type":"t_uint256"},{"astId":6941,"contract":"contracts/lib/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}}}}}